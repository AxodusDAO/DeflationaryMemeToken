{
	"id": "698331a70160eb02d44112e3d44f1629",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.4",
	"solcLongVersion": "0.7.4+commit.3f05b770",
	"input": {
		"language": "Solidity",
		"sources": {
			"AndrewTate-testnet.sol.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.7.4;\r\n\r\nlibrary SafeMathInt {\r\n    int256 private constant MIN_INT256 = int256(1) << 255;\r\n    int256 private constant MAX_INT256 = ~(int256(1) << 255);\r\n\r\n    function mul(int256 a, int256 b) internal pure returns (int256) {\r\n        int256 c = a * b;\r\n\r\n        require(c != MIN_INT256 || (a & MIN_INT256) != (b & MIN_INT256));\r\n        require((b == 0) || (c / b == a));\r\n        return c;\r\n    }\r\n\r\n    function div(int256 a, int256 b) internal pure returns (int256) {\r\n        require(b != -1 || a != MIN_INT256);\r\n\r\n        return a / b;\r\n    }\r\n\r\n    function sub(int256 a, int256 b) internal pure returns (int256) {\r\n        int256 c = a - b;\r\n        require((b >= 0 && c <= a) || (b < 0 && c > a));\r\n        return c;\r\n    }\r\n\r\n    function add(int256 a, int256 b) internal pure returns (int256) {\r\n        int256 c = a + b;\r\n        require((b >= 0 && c >= a) || (b < 0 && c < a));\r\n        return c;\r\n    }\r\n\r\n    function abs(int256 a) internal pure returns (int256) {\r\n        require(a != MIN_INT256);\r\n        return a < 0 ? -a : a;\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address who) external view returns (uint256);\r\n\r\n    function allowance(address owner, address spender)\r\n        external\r\n        view\r\n        returns (uint256);\r\n\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) external returns (bool);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n}\r\n\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    function sub(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    function div(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n\r\n        return c;\r\n    }\r\n\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b != 0);\r\n        return a % b;\r\n    }\r\n}\r\n\r\ninterface InterfaceLP {\r\n    function sync() external;\r\n}\r\n\r\nlibrary Roles {\r\n    struct Role {\r\n        mapping (address => bool) bearer;\r\n    }\r\n\r\n    /**\r\n     * @dev Give an account access to this role.\r\n     */\r\n    function add(Role storage role, address account) internal {\r\n        require(!has(role, account), \"Roles: account already has role\");\r\n        role.bearer[account] = true;\r\n    }\r\n\r\n    /**\r\n     * @dev Remove an account's access to this role.\r\n     */\r\n    function remove(Role storage role, address account) internal {\r\n        require(has(role, account), \"Roles: account does not have role\");\r\n        role.bearer[account] = false;\r\n    }\r\n\r\n    /**\r\n     * @dev Check if an account has this role.\r\n     * @return bool\r\n     */\r\n    function has(Role storage role, address account) internal view returns (bool) {\r\n        require(account != address(0), \"Roles: account is the zero address\");\r\n        return role.bearer[account];\r\n    }\r\n}\r\n\r\ncontract MinterRole {\r\n    using Roles for Roles.Role;\r\n\r\n    event MinterAdded(address indexed account);\r\n    event MinterRemoved(address indexed account);\r\n\r\n    Roles.Role private _minters;\r\n\r\n    constructor () {\r\n        _addMinter(msg.sender);\r\n    }\r\n\r\n    modifier onlyMinter() {\r\n        require(isMinter(msg.sender), \"MinterRole: caller does not have the Minter role\");\r\n        _;\r\n    }\r\n\r\n    function isMinter(address account) public view returns (bool) {\r\n        return _minters.has(account);\r\n    }\r\n\r\n    function renounceMinter() public {\r\n        _removeMinter(msg.sender);\r\n    }\r\n\r\n    function _addMinter(address account) internal {\r\n        _minters.add(account);\r\n        emit MinterAdded(account);\r\n    }\r\n\r\n    function _removeMinter(address account) internal {\r\n        _minters.remove(account);\r\n        emit MinterRemoved(account);\r\n    }\r\n}\r\n\r\nabstract contract ERC20Detailed is IERC20 {\r\n    string private _name;\r\n    string private _symbol;\r\n    uint8 private _decimals;\r\n\r\n    constructor(\r\n        string memory _tokenName,\r\n        string memory _tokenSymbol,\r\n        uint8 _tokenDecimals\r\n    ) {\r\n        _name = _tokenName;\r\n        _symbol = _tokenSymbol;\r\n        _decimals = _tokenDecimals;\r\n    }\r\n\r\n    function name() public view returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public view returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public view returns (uint8) {\r\n        return _decimals;\r\n    }\r\n}\r\n\r\ninterface IDEXRouter {\r\n    function factory() external pure returns (address);\r\n\r\n    function WETH() external pure returns (address);\r\n\r\n    function addLiquidity(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint256 amountADesired,\r\n        uint256 amountBDesired,\r\n        uint256 amountAMin,\r\n        uint256 amountBMin,\r\n        address to,\r\n        uint256 deadline\r\n    )\r\n        external\r\n        returns (\r\n            uint256 amountA,\r\n            uint256 amountB,\r\n            uint256 liquidity\r\n        );\r\n\r\n    function addLiquidityETH(\r\n        address token,\r\n        uint256 amountTokenDesired,\r\n        uint256 amountTokenMin,\r\n        uint256 amountETHMin,\r\n        address to,\r\n        uint256 deadline\r\n    )\r\n        external\r\n        payable\r\n        returns (\r\n            uint256 amountToken,\r\n            uint256 amountETH,\r\n            uint256 liquidity\r\n        );\r\n\r\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\r\n        uint256 amountIn,\r\n        uint256 amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint256 deadline\r\n    ) external;\r\n\r\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\r\n        uint256 amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint256 deadline\r\n    ) external payable;\r\n\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint256 amountIn,\r\n        uint256 amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint256 deadline\r\n    ) external;\r\n}\r\n\r\ninterface IDEXFactory {\r\n    function createPair(address tokenA, address tokenB)\r\n        external\r\n        returns (address pair);\r\n}\r\n\r\ncontract Ownable {\r\n    address private _owner;\r\n\r\n    event OwnershipRenounced(address indexed previousOwner);\r\n\r\n    event OwnershipTransferred(\r\n        address indexed previousOwner,\r\n        address indexed newOwner\r\n    );\r\n\r\n    constructor() {\r\n        _owner = msg.sender;\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(isOwner());\r\n        _;\r\n    }\r\n\r\n    function isOwner() public view returns (bool) {\r\n        return msg.sender == _owner;\r\n    }\r\n\r\n    function renounceOwnership() public onlyOwner {\r\n        emit OwnershipRenounced(_owner);\r\n        _owner = address(0);\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    function _transferOwnership(address newOwner) internal {\r\n        require(newOwner != address(0));\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract AndrewTateToken is ERC20Detailed, Ownable, MinterRole {\r\n    using SafeMath for uint256;\r\n    using SafeMathInt for int256;\r\n\r\n    event LogRebase(uint256 indexed epoch, uint256 totalSupply);\r\n\r\n    InterfaceLP public pairContract;\r\n\r\n    bool public initialDistributionFinished;\r\n\r\n    mapping(address => bool) allowTransfer;\r\n    mapping(address => bool) _isFeeExempt;\r\n\r\n    modifier initialDistributionLock() {\r\n        require(\r\n            initialDistributionFinished ||\r\n                isOwner() ||\r\n                allowTransfer[msg.sender]\r\n        );\r\n        _;\r\n    }\r\n\r\n    modifier validRecipient(address to) {\r\n        require(to != address(0x0));\r\n        _;\r\n    }\r\n\r\n    uint256 private constant DECIMALS = 18;\r\n    uint256 private constant MAX_UINT256 = ~uint256(0);\r\n\r\n    uint256 private constant INITIAL_FRAGMENTS_SUPPLY = 4 * 10**9 * 10**DECIMALS;\r\n\r\n    uint256 public liquidityFee = 5;\r\n    uint256 public Treasury = 3;\r\n    uint256 public RiskFreeValue = 5;\r\n    uint256 public sellFee = 5;\r\n    uint256 public totalFee =\r\n        liquidityFee.add(Treasury).add(RiskFreeValue);\r\n    uint256 public feeDenominator = 100;\r\n\r\n    address DEAD = 0x000000000000000000000000000000000000dEaD;\r\n    address ZERO = 0x0000000000000000000000000000000000000000;\r\n\r\n    address public autoLiquidityReceiver;\r\n    address public TreasuryReceiver;\r\n    address public RiskFreeValueReceiver;\r\n\r\n    uint256 targetLiquidity = 50;\r\n    uint256 targetLiquidityDenominator = 100;\r\n\r\n    IDEXRouter public router;\r\n    address public pair;\r\n\r\n    bool public swapEnabled = true;\r\n    uint256 private gonSwapThreshold = (TOTAL_GONS * 10) / 10000;\r\n    bool inSwap;\r\n    modifier swapping() {\r\n        inSwap = true;\r\n        _;\r\n        inSwap = false;\r\n    }\r\n\r\n    uint256 private constant TOTAL_GONS =\r\n        MAX_UINT256 - (MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY);\r\n\r\n    uint256 private constant MAX_SUPPLY = ~uint128(0);\r\n\r\n    uint256 private _totalSupply;\r\n    uint256 private _gonsPerFragment;\r\n    mapping(address => uint256) private _gonBalances;\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowedFragments;\r\n    mapping(address => bool) public blacklist;\r\n\r\n    constructor() ERC20Detailed(\"AndrewTate Token\", \"TOPG\", uint8(DECIMALS)) {\r\n        router = IDEXRouter(0xcEEB22Faf32FF4EAd24565225503807e41E5FE87); //Sushi 0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506 // SonicSwap 0xcEEB22Faf32FF4EAd24565225503807e41E5FE87\r\n\r\n        pair = IDEXFactory(router.factory()).createPair(\r\n            router.WETH(),\r\n            address(this)\r\n        );\r\n\r\n        autoLiquidityReceiver = 0x2C604d9E15e6524F0bB2a2A22F63a7Ca041e84C3;\r\n        TreasuryReceiver = 0xcC5e043C5142033a800A72286356317dAcb57A77;\r\n        RiskFreeValueReceiver = 0x833123d7AF220758a5484887aC582d4D39e9Ede0;\r\n\r\n        _allowedFragments[address(this)][address(router)] = uint256(-1);\r\n        pairContract = InterfaceLP(pair);\r\n\r\n        _totalSupply = INITIAL_FRAGMENTS_SUPPLY;\r\n        _gonBalances[TreasuryReceiver] = TOTAL_GONS;\r\n        _gonsPerFragment = TOTAL_GONS.div(_totalSupply);\r\n\r\n        initialDistributionFinished = false;\r\n        _isFeeExempt[TreasuryReceiver] = true;\r\n        _isFeeExempt[address(this)] = true;\r\n\r\n        _transferOwnership(TreasuryReceiver);\r\n        emit Transfer(address(0x0), TreasuryReceiver, _totalSupply);\r\n    }\r\n\r\n    function updateBlacklist(address _user, bool _flag) public onlyOwner{\r\n        blacklist[_user] = _flag;\r\n    }\r\n\r\n    function rebase(uint256 epoch, int256 supplyDelta)\r\n        external\r\n        onlyOwner\r\n        returns (uint256)\r\n    {\r\n        require(!inSwap, \"Try again\");\r\n        if (supplyDelta == 0) {\r\n            emit LogRebase(epoch, _totalSupply);\r\n            return _totalSupply;\r\n        }\r\n\r\n        if (supplyDelta < 0) {\r\n            _totalSupply = _totalSupply.sub(uint256(-supplyDelta));\r\n        } else {\r\n            _totalSupply = _totalSupply.add(uint256(supplyDelta));\r\n        }\r\n\r\n        if (_totalSupply > MAX_SUPPLY) {\r\n            _totalSupply = MAX_SUPPLY;\r\n        }\r\n\r\n        _gonsPerFragment = TOTAL_GONS.div(_totalSupply);\r\n        pairContract.sync();\r\n\r\n        emit LogRebase(epoch, _totalSupply);\r\n        return _totalSupply;\r\n    }\r\n\r\n    function totalSupply() external view override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function transfer(address to, uint256 value)\r\n        external\r\n        override\r\n        validRecipient(to)\r\n        initialDistributionLock\r\n        returns (bool)\r\n    {\r\n        _transferFrom(msg.sender, to, value);\r\n        return true;\r\n    }\r\n\r\n    function setLP(address _address) external onlyOwner {\r\n        pairContract = InterfaceLP(_address);\r\n        _isFeeExempt[_address];\r\n    }\r\n\r\n    function allowance(address owner_, address spender)\r\n        external\r\n        view\r\n        override\r\n        returns (uint256)\r\n    {\r\n        return _allowedFragments[owner_][spender];\r\n    }\r\n\r\n    function balanceOf(address who) external view override returns (uint256) {\r\n        return _gonBalances[who].div(_gonsPerFragment);\r\n    }\r\n\r\n    function _basicTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal returns (bool) {\r\n        uint256 gonAmount = amount.mul(_gonsPerFragment);\r\n        _gonBalances[from] = _gonBalances[from].sub(gonAmount);\r\n        _gonBalances[to] = _gonBalances[to].add(gonAmount);\r\n        return true;\r\n    }\r\n\r\n    function _transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) internal returns (bool) {\r\n        require(!blacklist[sender] && !blacklist[recipient], 'in_blacklist');\r\n        if (inSwap) {\r\n            return _basicTransfer(sender, recipient, amount);\r\n        }\r\n\r\n        uint256 gonAmount = amount.mul(_gonsPerFragment);\r\n\r\n        if (shouldSwapBack()) {\r\n            swapBack();\r\n        }\r\n\r\n        _gonBalances[sender] = _gonBalances[sender].sub(gonAmount);\r\n\r\n        uint256 gonAmountReceived = shouldTakeFee(sender, recipient)\r\n            ? takeFee(sender, recipient, gonAmount)\r\n            : gonAmount;\r\n        _gonBalances[recipient] = _gonBalances[recipient].add(\r\n            gonAmountReceived\r\n        );\r\n\r\n        emit Transfer(\r\n            sender,\r\n            recipient,\r\n            gonAmountReceived.div(_gonsPerFragment)\r\n        );\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) external override validRecipient(to) returns (bool) {\r\n        if (_allowedFragments[from][msg.sender] != uint256(-1)) {\r\n            _allowedFragments[from][msg.sender] = _allowedFragments[from][\r\n                msg.sender\r\n            ].sub(value, \"Insufficient Allowance\");\r\n        }\r\n\r\n        _transferFrom(from, to, value);\r\n        return true;\r\n    }\r\n\r\n    function swapBack() internal swapping {\r\n        uint256 dynamicLiquidityFee = isOverLiquified(\r\n            targetLiquidity,\r\n            targetLiquidityDenominator\r\n        )\r\n            ? 0\r\n            : liquidityFee;\r\n        uint256 contractTokenBalance = _gonBalances[address(this)].div(\r\n            _gonsPerFragment\r\n        );\r\n        uint256 amountToLiquify = contractTokenBalance\r\n            .mul(dynamicLiquidityFee)\r\n            .div(totalFee)\r\n            .div(2);\r\n        uint256 amountToSwap = contractTokenBalance.sub(amountToLiquify);\r\n\r\n        address[] memory path = new address[](2);\r\n        path[0] = address(this);\r\n        path[1] = router.WETH();\r\n\r\n        uint256 balanceBefore = address(this).balance;\r\n\r\n        router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            amountToSwap,\r\n            0,\r\n            path,\r\n            address(this),\r\n            block.timestamp\r\n        );\r\n\r\n        uint256 amountETH = address(this).balance.sub(balanceBefore);\r\n\r\n        uint256 totalETHFee = totalFee.sub(dynamicLiquidityFee.div(2));\r\n\r\n        uint256 amountETHLiquidity = amountETH\r\n            .mul(dynamicLiquidityFee)\r\n            .div(totalETHFee)\r\n            .div(2);\r\n        uint256 amountETHRiskFreeValue = amountETH.mul(RiskFreeValue).div(totalETHFee);\r\n        uint256 amountETHTreasury = amountETH.mul(Treasury).div(\r\n            totalETHFee\r\n        );\r\n\r\n        (bool success, ) = payable(TreasuryReceiver).call{\r\n            value: amountETHTreasury,\r\n            gas: 30000\r\n        }(\"\");\r\n        (success, ) = payable(RiskFreeValueReceiver).call{\r\n            value: amountETHRiskFreeValue,\r\n            gas: 30000\r\n        }(\"\");\r\n\r\n        success = false;\r\n\r\n        if (amountToLiquify > 0) {\r\n            router.addLiquidityETH{value: amountETHLiquidity}(\r\n                address(this),\r\n                amountToLiquify,\r\n                0,\r\n                0,\r\n                autoLiquidityReceiver,\r\n                block.timestamp\r\n            );\r\n        }\r\n    }\r\n\r\n    function takeFee(address sender, address recipient, uint256 gonAmount)\r\n        internal\r\n        returns (uint256)\r\n    {\r\n        uint256 _totalFee = totalFee;\r\n        if(recipient == pair) _totalFee = _totalFee.add(sellFee);\r\n\r\n        uint256 feeAmount = gonAmount.mul(_totalFee).div(feeDenominator);\r\n\r\n        _gonBalances[address(this)] = _gonBalances[address(this)].add(\r\n            feeAmount\r\n        );\r\n        emit Transfer(sender, address(this), feeAmount.div(_gonsPerFragment));\r\n\r\n        return gonAmount.sub(feeAmount);\r\n    }\r\n    \r\n    function decreaseAllowance(address spender, uint256 subtractedValue)\r\n        external\r\n        initialDistributionLock\r\n        returns (bool)\r\n    {\r\n        uint256 oldValue = _allowedFragments[msg.sender][spender];\r\n        if (subtractedValue >= oldValue) {\r\n            _allowedFragments[msg.sender][spender] = 0;\r\n        } else {\r\n            _allowedFragments[msg.sender][spender] = oldValue.sub(\r\n                subtractedValue\r\n            );\r\n        }\r\n        emit Approval(\r\n            msg.sender,\r\n            spender,\r\n            _allowedFragments[msg.sender][spender]\r\n        );\r\n        return true;\r\n    }\r\n\r\n    function increaseAllowance(address spender, uint256 addedValue)\r\n        external\r\n        initialDistributionLock\r\n        returns (bool)\r\n    {\r\n        _allowedFragments[msg.sender][spender] = _allowedFragments[msg.sender][\r\n            spender\r\n        ].add(addedValue);\r\n        emit Approval(\r\n            msg.sender,\r\n            spender,\r\n            _allowedFragments[msg.sender][spender]\r\n        );\r\n        return true;\r\n    }\r\n\r\n    function approve(address spender, uint256 value)\r\n        external\r\n        override\r\n        initialDistributionLock\r\n        returns (bool)\r\n    {\r\n        _allowedFragments[msg.sender][spender] = value;\r\n        emit Approval(msg.sender, spender, value);\r\n        return true;\r\n    }\r\n\r\n    function checkFeeExempt(address _addr) external view returns (bool) {\r\n        return _isFeeExempt[_addr];\r\n    }\r\n\r\n    function setInitialDistributionFinished() external onlyOwner {\r\n        initialDistributionFinished = true;\r\n    }\r\n\r\n    function enableTransfer(address _addr) external onlyOwner {\r\n        allowTransfer[_addr] = true;\r\n    }\r\n\r\n    function setFeeExempt(address _addr) external onlyOwner {\r\n        _isFeeExempt[_addr] = true;\r\n    }\r\n\r\n    function shouldTakeFee(address from, address to) internal view returns (bool) {\r\n        return (pair == from || pair == to) && (!_isFeeExempt[from]);\r\n    }\r\n\r\n    function mint(address recipient, uint256 amount) external onlyMinter {\r\n        _totalSupply = _totalSupply.add(uint256(amount));\r\n\r\n        if (_totalSupply > MAX_SUPPLY) {\r\n            _totalSupply = MAX_SUPPLY;\r\n        }\r\n\r\n        _gonsPerFragment = TOTAL_GONS.div(_totalSupply);\r\n        pairContract.sync();\r\n\r\n        _gonBalances[recipient] = _gonBalances[recipient].add(amount);\r\n    }\r\n\r\n    function setSwapBackSettings(\r\n        bool _enabled,\r\n        uint256 _num,\r\n        uint256 _denom\r\n    ) external onlyOwner {\r\n        swapEnabled = _enabled;\r\n        gonSwapThreshold = TOTAL_GONS.div(_denom).mul(_num);\r\n    }\r\n\r\n    function shouldSwapBack() internal view returns (bool) {\r\n        return\r\n            msg.sender != pair &&\r\n            !inSwap &&\r\n            swapEnabled &&\r\n            _gonBalances[address(this)] >= gonSwapThreshold;\r\n    }\r\n\r\n    function getCirculatingSupply() public view returns (uint256) {\r\n        return\r\n            (TOTAL_GONS.sub(_gonBalances[DEAD]).sub(_gonBalances[ZERO])).div(\r\n                _gonsPerFragment\r\n            );\r\n    }\r\n\r\n    function setTargetLiquidity(uint256 target, uint256 accuracy) external onlyOwner {\r\n        targetLiquidity = target;\r\n        targetLiquidityDenominator = accuracy;\r\n    }\r\n\r\n    function addMinter(address account) public onlyOwner {\r\n        _addMinter(account);\r\n    }\r\n\r\n    function removeMinter(address account) public onlyOwner {\r\n        _removeMinter(account);\r\n    }\r\n\r\n    function isNotInSwap() external view returns (bool) {\r\n        return !inSwap;\r\n    }\r\n\r\n    function sendPresale(address[] calldata recipients, uint256[] calldata values)\r\n        external\r\n        onlyOwner\r\n    {\r\n      for (uint256 i = 0; i < recipients.length; i++) {\r\n        _transferFrom(msg.sender, recipients[i], values[i]);\r\n      }\r\n    }\r\n\r\n    function checkSwapThreshold() external view returns (uint256) {\r\n        return gonSwapThreshold.div(_gonsPerFragment);\r\n    }\r\n\r\n    function manualSync() external {\r\n        InterfaceLP(pair).sync();\r\n    }\r\n\r\n    function setFeeReceivers(\r\n        address _autoLiquidityReceiver,\r\n        address _TreasuryReceiver,\r\n        address _RiskFreeValueReceiver\r\n    ) external onlyOwner {\r\n        autoLiquidityReceiver = _autoLiquidityReceiver;\r\n        TreasuryReceiver = _TreasuryReceiver;\r\n        RiskFreeValueReceiver = _RiskFreeValueReceiver;\r\n    }\r\n\r\n    function setFees(\r\n        uint256 _liquidityFee,\r\n        uint256 _RiskFreeValue,\r\n        uint256 _Treasury,\r\n        uint256 _sellFee,\r\n        uint256 _feeDenominator\r\n    ) external onlyOwner {\r\n        liquidityFee = _liquidityFee;\r\n        RiskFreeValue = _RiskFreeValue;\r\n        Treasury = _Treasury;\r\n        sellFee = _sellFee;\r\n        totalFee = liquidityFee.add(Treasury).add(RiskFreeValue);\r\n        feeDenominator = _feeDenominator;\r\n        require(totalFee < feeDenominator / 4);\r\n    }\r\n\r\n    function clearStuckBalance(uint256 amountPercentage, address adr) external onlyOwner {\r\n        uint256 amountETH = address(this).balance;\r\n        payable(adr).transfer(\r\n            (amountETH * amountPercentage) / 100\r\n        );\r\n    }\r\n\r\n    function rescueToken(address tokenAddress, uint256 tokens)\r\n        public\r\n        onlyOwner\r\n        returns (bool success)\r\n    {\r\n        return ERC20Detailed(tokenAddress).transfer(msg.sender, tokens);\r\n    }\r\n\r\n    function transferToAddressETH(address payable recipient, uint256 amount)\r\n        private\r\n    {\r\n        recipient.transfer(amount);\r\n    }\r\n\r\n    function getLiquidityBacking(uint256 accuracy)\r\n        public\r\n        view\r\n        returns (uint256)\r\n    {\r\n        uint256 liquidityBalance = _gonBalances[pair].div(_gonsPerFragment);\r\n        return\r\n            accuracy.mul(liquidityBalance.mul(2)).div(getCirculatingSupply());\r\n    }\r\n    \r\n    function isOverLiquified(uint256 target, uint256 accuracy)\r\n        public\r\n        view\r\n        returns (bool)\r\n    {\r\n        return getLiquidityBacking(accuracy) > target;\r\n    }\r\n\r\n    receive() external payable {}\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"AndrewTate-testnet.sol.sol": {
				"AndrewTateToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "epoch",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalSupply",
									"type": "uint256"
								}
							],
							"name": "LogRebase",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "MinterAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "MinterRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								}
							],
							"name": "OwnershipRenounced",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "RiskFreeValue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RiskFreeValueReceiver",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Treasury",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TreasuryReceiver",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "addMinter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "autoLiquidityReceiver",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "blacklist",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "checkFeeExempt",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "checkSwapThreshold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountPercentage",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "adr",
									"type": "address"
								}
							],
							"name": "clearStuckBalance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "enableTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeDenominator",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCirculatingSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "accuracy",
									"type": "uint256"
								}
							],
							"name": "getLiquidityBacking",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialDistributionFinished",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isMinter",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isNotInSwap",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "target",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "accuracy",
									"type": "uint256"
								}
							],
							"name": "isOverLiquified",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidityFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "manualSync",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pair",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pairContract",
							"outputs": [
								{
									"internalType": "contract InterfaceLP",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "epoch",
									"type": "uint256"
								},
								{
									"internalType": "int256",
									"name": "supplyDelta",
									"type": "int256"
								}
							],
							"name": "rebase",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "removeMinter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceMinter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "rescueToken",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "router",
							"outputs": [
								{
									"internalType": "contract IDEXRouter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sellFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "recipients",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "sendPresale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "setFeeExempt",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_autoLiquidityReceiver",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_TreasuryReceiver",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_RiskFreeValueReceiver",
									"type": "address"
								}
							],
							"name": "setFeeReceivers",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_liquidityFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_RiskFreeValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_Treasury",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_sellFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_feeDenominator",
									"type": "uint256"
								}
							],
							"name": "setFees",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "setInitialDistributionFinished",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "setLP",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_enabled",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "_num",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_denom",
									"type": "uint256"
								}
							],
							"name": "setSwapBackSettings",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "target",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "accuracy",
									"type": "uint256"
								}
							],
							"name": "setTargetLiquidity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_flag",
									"type": "bool"
								}
							],
							"name": "updateBlacklist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"AndrewTate-testnet.sol.sol\":8436:23993  contract AndrewTateToken is ERC20Detailed, Ownable, MinterRole {\r... */\n  mstore(0x40, 0x80)\n    /* \"AndrewTate-testnet.sol.sol\":9354:9355  5 */\n  0x05\n    /* \"AndrewTate-testnet.sol.sol\":9324:9355  uint256 public liquidityFee = 5 */\n  0x07\n  sstore\n    /* \"AndrewTate-testnet.sol.sol\":9388:9389  3 */\n  0x03\n    /* \"AndrewTate-testnet.sol.sol\":9362:9389  uint256 public Treasury = 3 */\n  0x08\n  sstore\n    /* \"AndrewTate-testnet.sol.sol\":9427:9428  5 */\n  0x05\n    /* \"AndrewTate-testnet.sol.sol\":9396:9428  uint256 public RiskFreeValue = 5 */\n  0x09\n  sstore\n    /* \"AndrewTate-testnet.sol.sol\":9460:9461  5 */\n  0x05\n    /* \"AndrewTate-testnet.sol.sol\":9435:9461  uint256 public sellFee = 5 */\n  0x0a\n  sstore\n    /* \"AndrewTate-testnet.sol.sol\":9503:9548  liquidityFee.add(Treasury).add(RiskFreeValue) */\n  tag_1\n    /* \"AndrewTate-testnet.sol.sol\":9534:9547  RiskFreeValue */\n  sload(0x09)\n    /* \"AndrewTate-testnet.sol.sol\":9503:9529  liquidityFee.add(Treasury) */\n  tag_2\n    /* \"AndrewTate-testnet.sol.sol\":9520:9528  Treasury */\n  sload(0x08)\n    /* \"AndrewTate-testnet.sol.sol\":9503:9515  liquidityFee */\n  sload(0x07)\n    /* \"AndrewTate-testnet.sol.sol\":9503:9519  liquidityFee.add */\n  or(tag_0_281, shl(0x20, tag_3))\n  swap1\n    /* \"AndrewTate-testnet.sol.sol\":9503:9529  liquidityFee.add(Treasury) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_2:\n    /* \"AndrewTate-testnet.sol.sol\":9503:9533  liquidityFee.add(Treasury).add */\n  or(tag_0_281, shl(0x20, tag_3))\n  swap1\n    /* \"AndrewTate-testnet.sol.sol\":9503:9548  liquidityFee.add(Treasury).add(RiskFreeValue) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_1:\n    /* \"AndrewTate-testnet.sol.sol\":9468:9548  uint256 public totalFee =\r... */\n  0x0b\n  sstore\n    /* \"AndrewTate-testnet.sol.sol\":9587:9590  100 */\n  0x64\n    /* \"AndrewTate-testnet.sol.sol\":9555:9590  uint256 public feeDenominator = 100 */\n  0x0c\n  dup2\n  swap1\n  sstore\n    /* \"AndrewTate-testnet.sol.sol\":9599:9656  address DEAD = 0x000000000000000000000000000000000000dEaD */\n  0x0d\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n    /* \"AndrewTate-testnet.sol.sol\":9614:9656  0x000000000000000000000000000000000000dEaD */\n  0xdead\n    /* \"AndrewTate-testnet.sol.sol\":9599:9656  address DEAD = 0x000000000000000000000000000000000000dEaD */\n  or\n  swap1\n  swap2\n  sstore\n    /* \"AndrewTate-testnet.sol.sol\":9663:9720  address ZERO = 0x0000000000000000000000000000000000000000 */\n  0x0e\n  dup1\n  sload\n  swap1\n  swap2\n  and\n  swap1\n  sstore\n    /* \"AndrewTate-testnet.sol.sol\":9881:9883  50 */\n  0x32\n    /* \"AndrewTate-testnet.sol.sol\":9855:9883  uint256 targetLiquidity = 50 */\n  0x12\n  sstore\n    /* \"AndrewTate-testnet.sol.sol\":9890:9930  uint256 targetLiquidityDenominator = 100 */\n  0x13\n  sstore\n    /* \"AndrewTate-testnet.sol.sol\":9998:10028  bool public swapEnabled = true */\n  0x15\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  shl(0xa0, 0x01)\n  or\n  swap1\n  sstore\n    /* \"AndrewTate-testnet.sol.sol\":10090:10095  10000 */\n  0x2710\n  not(0x1239a002a3db32d57fffffff)\n    /* \"AndrewTate-testnet.sol.sol\":10070:10095  (TOTAL_GONS * 10) / 10000 */\n  div\n    /* \"AndrewTate-testnet.sol.sol\":10035:10095  uint256 private gonSwapThreshold = (TOTAL_GONS * 10) / 10000 */\n  0x16\n  sstore\n    /* \"AndrewTate-testnet.sol.sol\":10646:11806  constructor() ERC20Detailed(\"AndrewTate Token\", \"TOPG\", uint8(DECIMALS)) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_6\n  jumpi\n  0x00\n  dup1\n  revert\ntag_6:\n  pop\n    /* \"AndrewTate-testnet.sol.sol\":5208:5437  constructor(\r... */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  dup3\n  mstore\n  0x10\n  dup2\n  mstore\n  shl(0x81, 0x20b7323932bbaa30ba32902a37b5b2b7)\n  0x20\n  dup1\n  dup4\n  add\n  swap2\n  dup3\n  mstore\n  dup4\n  mload\n  dup1\n  dup6\n  add\n  swap1\n  swap5\n  mstore\n  0x04\n  dup5\n  mstore\n  shl(0xe0, 0x544f5047)\n  swap1\n  dup5\n  add\n  mstore\n    /* \"AndrewTate-testnet.sol.sol\":5341:5359  _name = _tokenName */\n  dup2\n  mload\n    /* \"AndrewTate-testnet.sol.sol\":5208:5437  constructor(\r... */\n  swap2\n  swap3\n  swap2\n    /* \"AndrewTate-testnet.sol.sol\":9171:9173  18 */\n  0x12\n  swap2\n    /* \"AndrewTate-testnet.sol.sol\":5341:5359  _name = _tokenName */\n  tag_12\n  swap2\n  0x00\n  swap2\n    /* \"AndrewTate-testnet.sol.sol\":5208:5437  constructor(\r... */\n  swap1\n    /* \"AndrewTate-testnet.sol.sol\":5341:5359  _name = _tokenName */\n  tag_13\n  jump\t// in\ntag_12:\n  pop\n    /* \"AndrewTate-testnet.sol.sol\":5370:5392  _symbol = _tokenSymbol */\n  dup2\n  mload\n  tag_14\n  swap1\n    /* \"AndrewTate-testnet.sol.sol\":5370:5377  _symbol */\n  0x01\n  swap1\n    /* \"AndrewTate-testnet.sol.sol\":5370:5392  _symbol = _tokenSymbol */\n  0x20\n  dup6\n  add\n  swap1\n  tag_13\n  jump\t// in\ntag_14:\n  pop\n    /* \"AndrewTate-testnet.sol.sol\":5403:5412  _decimals */\n  0x02\n    /* \"AndrewTate-testnet.sol.sol\":5403:5429  _decimals = _tokenDecimals */\n  dup1\n  sload\n    /* \"AndrewTate-testnet.sol.sol\":7700:7710  msg.sender */\n  caller\n    /* \"AndrewTate-testnet.sol.sol\":5403:5429  _decimals = _tokenDecimals */\n  0x0100\n    /* \"AndrewTate-testnet.sol.sol\":7691:7710  _owner = msg.sender */\n  dup2\n  mul\n  not(sub(shl(0xa8, 0x01), 0x0100))\n    /* \"AndrewTate-testnet.sol.sol\":5403:5429  _decimals = _tokenDecimals */\n  0xff\n  swap1\n  swap6\n  and\n  not(0xff)\n  swap1\n  swap4\n  and\n  swap3\n  swap1\n  swap3\n  or\n    /* \"AndrewTate-testnet.sol.sol\":7691:7710  _owner = msg.sender */\n  swap4\n  swap1\n  swap4\n  and\n  or\n  swap1\n  sstore\n    /* \"AndrewTate-testnet.sol.sol\":4422:4444  _addMinter(msg.sender) */\n  tag_17\n  swap3\n  pop\n    /* \"AndrewTate-testnet.sol.sol\":7700:7710  msg.sender */\n  swap1\n  pop\n    /* \"AndrewTate-testnet.sol.sol\":4422:4432  _addMinter */\n  tag_18\n    /* \"AndrewTate-testnet.sol.sol\":4422:4444  _addMinter(msg.sender) */\n  jump\t// in\ntag_17:\n    /* \"AndrewTate-testnet.sol.sol\":10730:10736  router */\n  0x14\n    /* \"AndrewTate-testnet.sol.sol\":10730:10793  router = IDEXRouter(0xcEEB22Faf32FF4EAd24565225503807e41E5FE87) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"AndrewTate-testnet.sol.sol\":10750:10792  0xcEEB22Faf32FF4EAd24565225503807e41E5FE87 */\n  0xceeb22faf32ff4ead24565225503807e41e5fe87\n    /* \"AndrewTate-testnet.sol.sol\":10730:10793  router = IDEXRouter(0xcEEB22Faf32FF4EAd24565225503807e41E5FE87) */\n  or\n  swap1\n  dup2\n  swap1\n  sstore\n    /* \"AndrewTate-testnet.sol.sol\":10932:10948  router.factory() */\n  0x40\n  dup1\n  mload\n  shl(0xe0, 0xc45a0155)\n  dup2\n  mstore\n  swap1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"AndrewTate-testnet.sol.sol\":10932:10938  router */\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n    /* \"AndrewTate-testnet.sol.sol\":10932:10946  router.factory */\n  0xc45a0155\n  swap2\n    /* \"AndrewTate-testnet.sol.sol\":10932:10948  router.factory() */\n  0x04\n  dup1\n  dup3\n  add\n  swap3\n  0x20\n  swap3\n  swap1\n  swap2\n  swap1\n  dup3\n  swap1\n  sub\n  add\n  dup2\n    /* \"AndrewTate-testnet.sol.sol\":10932:10938  router */\n  dup7\n    /* \"AndrewTate-testnet.sol.sol\":10932:10948  router.factory() */\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_20\n  jumpi\n  0x00\n  dup1\n  revert\ntag_20:\n  pop\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_22\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_22:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  0x20\n  dup2\n  lt\n  iszero\n  tag_23\n  jumpi\n  0x00\n  dup1\n  revert\ntag_23:\n  pop\n  mload\n    /* \"AndrewTate-testnet.sol.sol\":10975:10981  router */\n  sload(0x14)\n    /* \"AndrewTate-testnet.sol.sol\":10975:10988  router.WETH() */\n  0x40\n  dup1\n  mload\n  shl(0xe3, 0x15ab88c9)\n  dup2\n  mstore\n  swap1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"AndrewTate-testnet.sol.sol\":10920:10960  IDEXFactory(router.factory()).createPair */\n  swap4\n  dup5\n  and\n  swap4\n  0xc9c65396\n  swap4\n    /* \"AndrewTate-testnet.sol.sol\":10975:10981  router */\n  and\n  swap2\n    /* \"AndrewTate-testnet.sol.sol\":10975:10986  router.WETH */\n  0xad5c4648\n  swap2\n    /* \"AndrewTate-testnet.sol.sol\":10975:10988  router.WETH() */\n  0x04\n  dup1\n  dup4\n  add\n  swap3\n    /* \"AndrewTate-testnet.sol.sol\":10932:10948  router.factory() */\n  0x20\n  swap3\n    /* \"AndrewTate-testnet.sol.sol\":10975:10988  router.WETH() */\n  swap2\n  swap1\n  dup3\n  swap1\n  sub\n  add\n  dup2\n    /* \"AndrewTate-testnet.sol.sol\":10975:10981  router */\n  dup7\n    /* \"AndrewTate-testnet.sol.sol\":10975:10988  router.WETH() */\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_24\n  jumpi\n  0x00\n  dup1\n  revert\ntag_24:\n  pop\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_26\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_26:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  0x20\n  dup2\n  lt\n  iszero\n  tag_27\n  jumpi\n  0x00\n  dup1\n  revert\ntag_27:\n  pop\n  mload\n    /* \"AndrewTate-testnet.sol.sol\":10920:11027  IDEXFactory(router.factory()).createPair(\r... */\n  0x40\n  dup1\n  mload\n  not(sub(shl(0xe0, 0x01), 0x01))\n  0xe0\n  dup6\n  swap1\n  shl\n  and\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap3\n  and\n  0x04\n  dup4\n  add\n  mstore\n    /* \"AndrewTate-testnet.sol.sol\":11011:11015  this */\n  address\n    /* \"AndrewTate-testnet.sol.sol\":10920:11027  IDEXFactory(router.factory()).createPair(\r... */\n  0x24\n  dup4\n  add\n  mstore\n  mload\n  0x44\n  dup1\n  dup4\n  add\n  swap3\n    /* \"AndrewTate-testnet.sol.sol\":10975:10988  router.WETH() */\n  0x20\n  swap3\n    /* \"AndrewTate-testnet.sol.sol\":10920:11027  IDEXFactory(router.factory()).createPair(\r... */\n  swap2\n  swap1\n  dup3\n  swap1\n  sub\n  add\n  dup2\n  0x00\n  dup8\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_28\n  jumpi\n  0x00\n  dup1\n  revert\ntag_28:\n  pop\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_30\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_30:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  0x20\n  dup2\n  lt\n  iszero\n  tag_31\n  jumpi\n  0x00\n  dup1\n  revert\ntag_31:\n  pop\n  mload\n    /* \"AndrewTate-testnet.sol.sol\":10913:10917  pair */\n  0x15\n    /* \"AndrewTate-testnet.sol.sol\":10913:11027  pair = IDEXFactory(router.factory()).createPair(\r... */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  dup4\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap2\n  dup3\n  and\n  or\n  dup3\n  sstore\n    /* \"AndrewTate-testnet.sol.sol\":11040:11061  autoLiquidityReceiver */\n  0x0f\n    /* \"AndrewTate-testnet.sol.sol\":11040:11106  autoLiquidityReceiver = 0x2C604d9E15e6524F0bB2a2A22F63a7Ca041e84C3 */\n  dup1\n  sload\n  dup3\n  and\n    /* \"AndrewTate-testnet.sol.sol\":11064:11106  0x2C604d9E15e6524F0bB2a2A22F63a7Ca041e84C3 */\n  0x2c604d9e15e6524f0bb2a2a22f63a7ca041e84c3\n    /* \"AndrewTate-testnet.sol.sol\":11040:11106  autoLiquidityReceiver = 0x2C604d9E15e6524F0bB2a2A22F63a7Ca041e84C3 */\n  or\n  swap1\n  sstore\n    /* \"AndrewTate-testnet.sol.sol\":11117:11133  TreasuryReceiver */\n  0x10\n    /* \"AndrewTate-testnet.sol.sol\":11117:11178  TreasuryReceiver = 0xcC5e043C5142033a800A72286356317dAcb57A77 */\n  dup1\n  sload\n  dup3\n  and\n    /* \"AndrewTate-testnet.sol.sol\":11136:11178  0xcC5e043C5142033a800A72286356317dAcb57A77 */\n  0xcc5e043c5142033a800a72286356317dacb57a77\n    /* \"AndrewTate-testnet.sol.sol\":11117:11178  TreasuryReceiver = 0xcC5e043C5142033a800A72286356317dAcb57A77 */\n  or\n  dup2\n  sstore\n    /* \"AndrewTate-testnet.sol.sol\":11189:11210  RiskFreeValueReceiver */\n  0x11\n    /* \"AndrewTate-testnet.sol.sol\":11189:11255  RiskFreeValueReceiver = 0x833123d7AF220758a5484887aC582d4D39e9Ede0 */\n  dup1\n  sload\n  dup4\n  and\n    /* \"AndrewTate-testnet.sol.sol\":11213:11255  0x833123d7AF220758a5484887aC582d4D39e9Ede0 */\n  0x833123d7af220758a5484887ac582d4d39e9ede0\n    /* \"AndrewTate-testnet.sol.sol\":11189:11255  RiskFreeValueReceiver = 0x833123d7AF220758a5484887aC582d4D39e9Ede0 */\n  or\n  swap1\n  sstore\n    /* \"AndrewTate-testnet.sol.sol\":11294:11298  this */\n  address\n  0x00\n    /* \"AndrewTate-testnet.sol.sol\":11268:11300  _allowedFragments[address(this)] */\n  swap1\n  dup2\n  mstore\n    /* \"AndrewTate-testnet.sol.sol\":11268:11285  _allowedFragments */\n  0x1b\n    /* \"AndrewTate-testnet.sol.sol\":10920:11027  IDEXFactory(router.factory()).createPair(\r... */\n  0x20\n    /* \"AndrewTate-testnet.sol.sol\":11268:11300  _allowedFragments[address(this)] */\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"AndrewTate-testnet.sol.sol\":11309:11315  router */\n  sload(0x14)\n  dup9\n  and\n    /* \"AndrewTate-testnet.sol.sol\":11268:11317  _allowedFragments[address(this)][address(router)] */\n  dup5\n  mstore\n  dup3\n  mstore\n  dup1\n  dup4\n  keccak256\n  not(0x00)\n    /* \"AndrewTate-testnet.sol.sol\":11268:11331  _allowedFragments[address(this)][address(router)] = uint256(-1) */\n  swap1\n  sstore\n    /* \"AndrewTate-testnet.sol.sol\":11369:11373  pair */\n  swap5\n  sload\n  0x04\n    /* \"AndrewTate-testnet.sol.sol\":11342:11374  pairContract = InterfaceLP(pair) */\n  dup1\n  sload\n  swap1\n  swap6\n  and\n    /* \"AndrewTate-testnet.sol.sol\":11369:11373  pair */\n  swap1\n  dup8\n  and\n    /* \"AndrewTate-testnet.sol.sol\":11342:11374  pairContract = InterfaceLP(pair) */\n  or\n  swap1\n  swap4\n  sstore\n    /* \"AndrewTate-testnet.sol.sol\":9291:9315  4 * 10**9 * 10**DECIMALS */\n  0x0cecb8f27f4200f3a0000000\n    /* \"AndrewTate-testnet.sol.sol\":11387:11399  _totalSupply */\n  0x18\n    /* \"AndrewTate-testnet.sol.sol\":11387:11426  _totalSupply = INITIAL_FRAGMENTS_SUPPLY */\n  swap1\n  dup2\n  sstore\n    /* \"AndrewTate-testnet.sol.sol\":11450:11466  TreasuryReceiver */\n  swap2\n  sload\n  swap1\n  swap5\n  and\n    /* \"AndrewTate-testnet.sol.sol\":11437:11467  _gonBalances[TreasuryReceiver] */\n  dup5\n  mstore\n    /* \"AndrewTate-testnet.sol.sol\":11437:11449  _gonBalances */\n  0x1a\n    /* \"AndrewTate-testnet.sol.sol\":11437:11467  _gonBalances[TreasuryReceiver] */\n  dup3\n  mstore\n  swap2\n  swap1\n  swap3\n  keccak256\n  not(0x01d290004395eb7bbfffffff)\n    /* \"AndrewTate-testnet.sol.sol\":11437:11480  _gonBalances[TreasuryReceiver] = TOTAL_GONS */\n  swap1\n  dup2\n  swap1\n  sstore\n    /* \"AndrewTate-testnet.sol.sol\":11525:11537  _totalSupply */\n  swap1\n  sload\n    /* \"AndrewTate-testnet.sol.sol\":11510:11538  TOTAL_GONS.div(_totalSupply) */\n  tag_33\n  swap3\n    /* \"AndrewTate-testnet.sol.sol\":11510:11524  TOTAL_GONS.div */\n  tag_35\n  dup2\n  shl\n  tag_0_282\n  or\n    /* \"AndrewTate-testnet.sol.sol\":11510:11538  TOTAL_GONS.div(_totalSupply) */\n  swap1\n  shr\n  jump\t// in\ntag_33:\n    /* \"AndrewTate-testnet.sol.sol\":11491:11507  _gonsPerFragment */\n  0x19\n    /* \"AndrewTate-testnet.sol.sol\":11491:11538  _gonsPerFragment = TOTAL_GONS.div(_totalSupply) */\n  sstore\n    /* \"AndrewTate-testnet.sol.sol\":11551:11578  initialDistributionFinished */\n  0x04\n    /* \"AndrewTate-testnet.sol.sol\":11551:11586  initialDistributionFinished = false */\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  swap1\n  sstore\n    /* \"AndrewTate-testnet.sol.sol\":11610:11626  TreasuryReceiver */\n  0x10\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  dup2\n  and\n    /* \"AndrewTate-testnet.sol.sol\":11581:11586  false */\n  0x00\n    /* \"AndrewTate-testnet.sol.sol\":11597:11627  _isFeeExempt[TreasuryReceiver] */\n  swap1\n  dup2\n  mstore\n    /* \"AndrewTate-testnet.sol.sol\":11597:11609  _isFeeExempt */\n  0x06\n    /* \"AndrewTate-testnet.sol.sol\":11597:11627  _isFeeExempt[TreasuryReceiver] */\n  0x20\n  mstore\n  0x40\n  dup1\n  dup3\n  keccak256\n    /* \"AndrewTate-testnet.sol.sol\":11597:11634  _isFeeExempt[TreasuryReceiver] = true */\n  dup1\n  sload\n  not(0xff)\n  swap1\n  dup2\n  and\n    /* \"AndrewTate-testnet.sol.sol\":11551:11586  initialDistributionFinished = false */\n  0x01\n    /* \"AndrewTate-testnet.sol.sol\":11597:11634  _isFeeExempt[TreasuryReceiver] = true */\n  swap1\n  dup2\n  or\n  swap1\n  swap3\n  sstore\n    /* \"AndrewTate-testnet.sol.sol\":11666:11670  this */\n  address\n    /* \"AndrewTate-testnet.sol.sol\":11645:11672  _isFeeExempt[address(this)] */\n  dup5\n  mstore\n  swap2\n  swap1\n  swap3\n  keccak256\n    /* \"AndrewTate-testnet.sol.sol\":11645:11679  _isFeeExempt[address(this)] = true */\n  dup1\n  sload\n  swap1\n  swap2\n  and\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"AndrewTate-testnet.sol.sol\":11711:11727  TreasuryReceiver */\n  swap1\n  sload\n    /* \"AndrewTate-testnet.sol.sol\":11692:11728  _transferOwnership(TreasuryReceiver) */\n  tag_36\n  swap2\n    /* \"AndrewTate-testnet.sol.sol\":11711:11727  TreasuryReceiver */\n  and\n    /* \"AndrewTate-testnet.sol.sol\":11692:11710  _transferOwnership */\n  tag_37\n    /* \"AndrewTate-testnet.sol.sol\":11692:11728  _transferOwnership(TreasuryReceiver) */\n  jump\t// in\ntag_36:\n    /* \"AndrewTate-testnet.sol.sol\":11767:11783  TreasuryReceiver */\n  sload(0x10)\n    /* \"AndrewTate-testnet.sol.sol\":11785:11797  _totalSupply */\n  sload(0x18)\n    /* \"AndrewTate-testnet.sol.sol\":11744:11798  Transfer(address(0x0), TreasuryReceiver, _totalSupply) */\n  0x40\n  dup1\n  mload\n  swap2\n  dup3\n  mstore\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"AndrewTate-testnet.sol.sol\":11767:11783  TreasuryReceiver */\n  swap1\n  swap3\n  and\n  swap2\n  0x00\n  swap2\n    /* \"AndrewTate-testnet.sol.sol\":11744:11798  Transfer(address(0x0), TreasuryReceiver, _totalSupply) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap2\n  swap1\n  dup2\n  swap1\n  sub\n  0x20\n  add\n  swap1\n  log3\n    /* \"AndrewTate-testnet.sol.sol\":8436:23993  contract AndrewTateToken is ERC20Detailed, Ownable, MinterRole {\r... */\n  jump(tag_38)\n    /* \"AndrewTate-testnet.sol.sol\":1900:2081  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\ntag_3:\n    /* \"AndrewTate-testnet.sol.sol\":1958:1965  uint256 */\n  0x00\n    /* \"AndrewTate-testnet.sol.sol\":1990:1995  a + b */\n  dup3\n  dup3\n  add\n    /* \"AndrewTate-testnet.sol.sol\":2014:2020  c >= a */\n  dup4\n  dup2\n  lt\n  iszero\n    /* \"AndrewTate-testnet.sol.sol\":2006:2052  require(c >= a, \"SafeMath: addition overflow\") */\n  tag_40\n  jumpi\n  0x40\n  dup1\n  mload\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x1b\n  0x24\n  dup3\n  add\n  mstore\n  0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n  0x44\n  dup3\n  add\n  mstore\n  swap1\n  mload\n  swap1\n  dup2\n  swap1\n  sub\n  0x64\n  add\n  swap1\n  revert\ntag_40:\n    /* \"AndrewTate-testnet.sol.sol\":2072:2073  c */\n  swap4\n    /* \"AndrewTate-testnet.sol.sol\":1900:2081  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"AndrewTate-testnet.sol.sol\":4804:4926  function _addMinter(address account) internal {\r... */\ntag_18:\n    /* \"AndrewTate-testnet.sol.sol\":4861:4882  _minters.add(account) */\n  tag_42\n    /* \"AndrewTate-testnet.sol.sol\":4874:4881  account */\n  dup2\n    /* \"AndrewTate-testnet.sol.sol\":4861:4869  _minters */\n  0x03\n    /* \"AndrewTate-testnet.sol.sol\":4861:4873  _minters.add */\n  or(tag_0_283, shl(0x20, tag_43))\n  swap1\n    /* \"AndrewTate-testnet.sol.sol\":4861:4882  _minters.add(account) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_42:\n    /* \"AndrewTate-testnet.sol.sol\":4898:4918  MinterAdded(account) */\n  mload(0x40)\n  sub(shl(0xa0, 0x01), 0x01)\n  dup3\n  and\n  swap1\n  0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6\n  swap1\n  0x00\n  swap1\n  log2\n    /* \"AndrewTate-testnet.sol.sol\":4804:4926  function _addMinter(address account) internal {\r... */\n  pop\n  jump\t// out\n    /* \"AndrewTate-testnet.sol.sol\":2725:2857  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\ntag_35:\n    /* \"AndrewTate-testnet.sol.sol\":2783:2790  uint256 */\n  0x00\n    /* \"AndrewTate-testnet.sol.sol\":2810:2849  div(a, b, \"SafeMath: division by zero\") */\n  tag_40\n    /* \"AndrewTate-testnet.sol.sol\":2814:2815  a */\n  dup4\n    /* \"AndrewTate-testnet.sol.sol\":2817:2818  b */\n  dup4\n    /* \"AndrewTate-testnet.sol.sol\":2810:2849  div(a, b, \"SafeMath: division by zero\") */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x1a\n  dup2\n  mstore\n  0x20\n  add\n  0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n  dup2\n  mstore\n  pop\n    /* \"AndrewTate-testnet.sol.sol\":2810:2813  div */\n  shl(0x20, tag_46)\n    /* \"AndrewTate-testnet.sol.sol\":2810:2849  div(a, b, \"SafeMath: division by zero\") */\n  0x20\n  shr\n  jump\t// in\n    /* \"AndrewTate-testnet.sol.sol\":8242:8429  function _transferOwnership(address newOwner) internal {\r... */\ntag_37:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"AndrewTate-testnet.sol.sol\":8316:8338  newOwner != address(0) */\n  dup2\n  and\n    /* \"AndrewTate-testnet.sol.sol\":8308:8339  require(newOwner != address(0)) */\n  tag_48\n  jumpi\n  0x00\n  dup1\n  revert\ntag_48:\n    /* \"AndrewTate-testnet.sol.sol\":8376:8382  _owner */\n  sload(0x02)\n    /* \"AndrewTate-testnet.sol.sol\":8355:8393  OwnershipTransferred(_owner, newOwner) */\n  mload(0x40)\n  sub(shl(0xa0, 0x01), 0x01)\n  dup1\n  dup5\n  and\n  swap3\n    /* \"AndrewTate-testnet.sol.sol\":8376:8382  _owner */\n  0x0100\n  swap1\n  div\n  and\n  swap1\n    /* \"AndrewTate-testnet.sol.sol\":8355:8393  OwnershipTransferred(_owner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n  0x00\n  swap1\n  log3\n    /* \"AndrewTate-testnet.sol.sol\":8404:8410  _owner */\n  0x02\n    /* \"AndrewTate-testnet.sol.sol\":8404:8421  _owner = newOwner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap3\n  and\n  0x0100\n  mul\n  not(sub(shl(0xa8, 0x01), 0x0100))\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"AndrewTate-testnet.sol.sol\":8242:8429  function _transferOwnership(address newOwner) internal {\r... */\n  jump\t// out\n    /* \"AndrewTate-testnet.sol.sol\":3450:3628  function add(Role storage role, address account) internal {\r... */\ntag_43:\n    /* \"AndrewTate-testnet.sol.sol\":3528:3546  has(role, account) */\n  tag_50\n    /* \"AndrewTate-testnet.sol.sol\":3532:3536  role */\n  dup3\n    /* \"AndrewTate-testnet.sol.sol\":3538:3545  account */\n  dup3\n    /* \"AndrewTate-testnet.sol.sol\":3528:3531  has */\n  tag_51\n    /* \"AndrewTate-testnet.sol.sol\":3528:3546  has(role, account) */\n  jump\t// in\ntag_50:\n    /* \"AndrewTate-testnet.sol.sol\":3527:3546  !has(role, account) */\n  iszero\n    /* \"AndrewTate-testnet.sol.sol\":3519:3582  require(!has(role, account), \"Roles: account already has role\") */\n  tag_52\n  jumpi\n  0x40\n  dup1\n  mload\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x1f\n  0x24\n  dup3\n  add\n  mstore\n  0x526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500\n  0x44\n  dup3\n  add\n  mstore\n  swap1\n  mload\n  swap1\n  dup2\n  swap1\n  sub\n  0x64\n  add\n  swap1\n  revert\ntag_52:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"AndrewTate-testnet.sol.sol\":3593:3613  role.bearer[account] */\n  and\n    /* \"AndrewTate-testnet.sol.sol\":3593:3604  role.bearer */\n  0x00\n    /* \"AndrewTate-testnet.sol.sol\":3593:3613  role.bearer[account] */\n  swap1\n  dup2\n  mstore\n  0x20\n  swap2\n  swap1\n  swap2\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"AndrewTate-testnet.sol.sol\":3593:3620  role.bearer[account] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"AndrewTate-testnet.sol.sol\":3616:3620  true */\n  0x01\n    /* \"AndrewTate-testnet.sol.sol\":3593:3620  role.bearer[account] = true */\n  or\n  swap1\n  sstore\n    /* \"AndrewTate-testnet.sol.sol\":3450:3628  function add(Role storage role, address account) internal {\r... */\n  jump\t// out\n    /* \"AndrewTate-testnet.sol.sol\":2865:3090  function div(\r... */\ntag_46:\n    /* \"AndrewTate-testnet.sol.sol\":2985:2992  uint256 */\n  0x00\n    /* \"AndrewTate-testnet.sol.sol\":3020:3032  errorMessage */\n  dup2\n    /* \"AndrewTate-testnet.sol.sol\":3013:3018  b > 0 */\n  dup4\n    /* \"AndrewTate-testnet.sol.sol\":3005:3033  require(b > 0, errorMessage) */\n  tag_54\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  dup4\n  dup2\n  dup2\n  mload\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_55:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_57\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_55)\ntag_57:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_58\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_58:\n  pop\n  swap3\n  pop\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_54:\n  pop\n    /* \"AndrewTate-testnet.sol.sol\":3044:3053  uint256 c */\n  0x00\n    /* \"AndrewTate-testnet.sol.sol\":3060:3061  b */\n  dup4\n    /* \"AndrewTate-testnet.sol.sol\":3056:3057  a */\n  dup6\n    /* \"AndrewTate-testnet.sol.sol\":3056:3061  a / b */\n  dup2\n  tag_59\n  jumpi\n  invalid\ntag_59:\n  div\n  swap6\n    /* \"AndrewTate-testnet.sol.sol\":2865:3090  function div(\r... */\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"AndrewTate-testnet.sol.sol\":3986:4189  function has(Role storage role, address account) internal view returns (bool) {\r... */\ntag_51:\n    /* \"AndrewTate-testnet.sol.sol\":4058:4062  bool */\n  0x00\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"AndrewTate-testnet.sol.sol\":4083:4104  account != address(0) */\n  dup3\n  and\n    /* \"AndrewTate-testnet.sol.sol\":4075:4143  require(account != address(0), \"Roles: account is the zero address\") */\n  tag_61\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x22\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f\n  0x22\n  swap2\n  codecopy\n  0x40\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_61:\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"AndrewTate-testnet.sol.sol\":4161:4181  role.bearer[account] */\n  and\n    /* \"AndrewTate-testnet.sol.sol\":4161:4172  role.bearer */\n  0x00\n    /* \"AndrewTate-testnet.sol.sol\":4161:4181  role.bearer[account] */\n  swap1\n  dup2\n  mstore\n  0x20\n  swap2\n  swap1\n  swap2\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n  swap1\n    /* \"AndrewTate-testnet.sol.sol\":3986:4189  function has(Role storage role, address account) internal view returns (bool) {\r... */\n  jump\t// out\n    /* \"AndrewTate-testnet.sol.sol\":8436:23993  contract AndrewTateToken is ERC20Detailed, Ownable, MinterRole {\r... */\ntag_13:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_63\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_66)\ntag_63:\n  dup3\n  0x1f\n  lt\n  tag_64\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_66)\ntag_64:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_66\n  jumpi\n  swap2\n  dup3\n  add\ntag_65:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_66\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_65)\ntag_66:\n  pop\n  tag_67\n  swap3\n  swap2\n  pop\n  tag_68\n  jump\t// in\ntag_67:\n  pop\n  swap1\n  jump\t// out\ntag_68:\ntag_69:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_67\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_69)\ntag_38:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f 526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373\n\nsub_0: assembly {\n        /* \"AndrewTate-testnet.sol.sol\":8436:23993  contract AndrewTateToken is ERC20Detailed, Ownable, MinterRole {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7a43e23f\n      gt\n      tag_58\n      jumpi\n      dup1\n      0xbda5c8bb\n      gt\n      tag_59\n      jumpi\n      dup1\n      0xd5938aac\n      gt\n      tag_60\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_61\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_54\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_55\n      jumpi\n      dup1\n      0xf887ea40\n      eq\n      tag_56\n      jumpi\n      dup1\n      0xf9f92be4\n      eq\n      tag_57\n      jumpi\n      jump(tag_2)\n    tag_61:\n      dup1\n      0xd5938aac\n      eq\n      tag_51\n      jumpi\n      dup1\n      0xd7ac6585\n      eq\n      tag_52\n      jumpi\n      dup1\n      0xd7c01032\n      eq\n      tag_53\n      jumpi\n      jump(tag_2)\n    tag_60:\n      dup1\n      0xd1fce264\n      gt\n      tag_62\n      jumpi\n      dup1\n      0xd1fce264\n      eq\n      tag_47\n      jumpi\n      dup1\n      0xd37e219d\n      eq\n      tag_48\n      jumpi\n      dup1\n      0xd4399790\n      eq\n      tag_49\n      jumpi\n      dup1\n      0xd51ed1c8\n      eq\n      tag_50\n      jumpi\n      jump(tag_2)\n    tag_62:\n      dup1\n      0xbda5c8bb\n      eq\n      tag_44\n      jumpi\n      dup1\n      0xca33e64c\n      eq\n      tag_45\n      jumpi\n      dup1\n      0xd0889358\n      eq\n      tag_46\n      jumpi\n      jump(tag_2)\n    tag_59:\n      dup1\n      0x98118cb4\n      gt\n      tag_63\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_64\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_40\n      jumpi\n      dup1\n      0xa8aa1b31\n      eq\n      tag_41\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_42\n      jumpi\n      dup1\n      0xaa271e1a\n      eq\n      tag_43\n      jumpi\n      jump(tag_2)\n    tag_64:\n      dup1\n      0x98118cb4\n      eq\n      tag_37\n      jumpi\n      dup1\n      0x983b2d56\n      eq\n      tag_38\n      jumpi\n      dup1\n      0x98650275\n      eq\n      tag_39\n      jumpi\n      jump(tag_2)\n    tag_63:\n      dup1\n      0x8da5cb5b\n      gt\n      tag_65\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_33\n      jumpi\n      dup1\n      0x8f32d59b\n      eq\n      tag_34\n      jumpi\n      dup1\n      0x9155e083\n      eq\n      tag_35\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_36\n      jumpi\n      jump(tag_2)\n    tag_65:\n      dup1\n      0x7a43e23f\n      eq\n      tag_30\n      jumpi\n      dup1\n      0x800cee51\n      eq\n      tag_31\n      jumpi\n      dup1\n      0x83b4ac68\n      eq\n      tag_32\n      jumpi\n      jump(tag_2)\n    tag_58:\n      dup1\n      0x3092afd5\n      gt\n      tag_66\n      jumpi\n      dup1\n      0x56a227f2\n      gt\n      tag_67\n      jumpi\n      dup1\n      0x70a08231\n      gt\n      tag_68\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x749796a5\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x753d02a1\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_68:\n      dup1\n      0x56a227f2\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x6d351d1a\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x6ddd1713\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_67:\n      dup1\n      0x39509351\n      gt\n      tag_69\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x4d709adf\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x563df32f\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_69:\n      dup1\n      0x3092afd5\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x33f3d628\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_66:\n      dup1\n      0x1df4ccfc\n      gt\n      tag_70\n      jumpi\n      dup1\n      0x2b112e49\n      gt\n      tag_71\n      jumpi\n      dup1\n      0x2b112e49\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x2b14ca56\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x2be6937d\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x2f34d282\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_71:\n      dup1\n      0x1df4ccfc\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x201e7991\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_70:\n      dup1\n      0x04a66b48\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1161ae39\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x180b0d7e\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_8\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"AndrewTate-testnet.sol.sol\":22340:22844  function setFees(\r... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      0xa0\n      dup2\n      lt\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      0x40\n      dup2\n      add\n      calldataload\n      swap1\n      0x60\n      dup2\n      add\n      calldataload\n      swap1\n      0x80\n      add\n      calldataload\n      tag_77\n      jump\t// in\n    tag_75:\n      stop\n        /* \"AndrewTate-testnet.sol.sol\":5445:5528  function name() public view returns (string memory) {\r... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_81:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_83\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_81)\n    tag_83:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_84\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_84:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AndrewTate-testnet.sol.sol\":19013:19299  function approve(address spender, uint256 value)\r... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_88\n      jump\t// in\n    tag_86:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"AndrewTate-testnet.sol.sol\":23771:23953  function isOverLiquified(uint256 target, uint256 accuracy)\r... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      calldataload\n      tag_92\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":9555:9590  uint256 public feeDenominator = 100 */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      tag_94\n      tag_95\n      jump\t// in\n    tag_94:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"AndrewTate-testnet.sol.sol\":12700:12802  function totalSupply() external view override returns (uint256) {\r... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      tag_94\n      tag_98\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":9468:9548  uint256 public totalFee =\r... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      tag_94\n      tag_101\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":21036:21208  function setTargetLiquidity(uint256 target, uint256 accuracy) external onlyOwner {\r... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      calldataload\n      tag_105\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":14852:15309  function transferFrom(\r... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_109\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":20813:21028  function getCirculatingSupply() public view returns (uint256) {\r... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      tag_94\n      tag_112\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":9435:9461  uint256 public sellFee = 5 */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n      pop\n      tag_94\n      tag_115\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":19428:19542  function setInitialDistributionFinished() external onlyOwner {\r... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n      pop\n      tag_75\n      tag_118\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":13066:13206  function setLP(address _address) external onlyOwner {\r... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_122\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":21315:21412  function removeMinter(address account) public onlyOwner {\r... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_125\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_125:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_126\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":5631:5714  function decimals() public view returns (uint8) {\r... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_127\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_127:\n      pop\n      tag_128\n      tag_129\n      jump\t// in\n    tag_128:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"AndrewTate-testnet.sol.sol\":23099:23312  function rescueToken(address tokenAddress, uint256 tokens)\r... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      pop\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_132\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_132:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_133\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":18566:19005  function increaseAllowance(address spender, uint256 addedValue)\r... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_134\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_134:\n      pop\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_136\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_136:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_137\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":19936:20331  function mint(address recipient, uint256 amount) external onlyMinter {\r... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_138\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_138:\n      pop\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_140\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_140:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_141\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":8644:8675  InterfaceLP public pairContract */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_142\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_142:\n      pop\n      tag_143\n      tag_144\n      jump\t// in\n    tag_143:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"AndrewTate-testnet.sol.sol\":9362:9389  uint256 public Treasury = 3 */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_145\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_145:\n      pop\n      tag_94\n      tag_147\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":22852:23091  function clearStuckBalance(uint256 amountPercentage, address adr) external onlyOwner {\r... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_148\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_148:\n      pop\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_150\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_150:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_151\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":21778:21904  function checkSwapThreshold() external view returns (uint256) {\r... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_152\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_152:\n      pop\n      tag_94\n      tag_154\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":9998:10028  bool public swapEnabled = true */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_155\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_155:\n      pop\n      tag_86\n      tag_157\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":13416:13554  function balanceOf(address who) external view override returns (uint256) {\r... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_158\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_158:\n      pop\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_160\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_160:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_161\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":7991:8117  function renounceOwnership() public onlyOwner {\r... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_162\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_162:\n      pop\n      tag_75\n      tag_164\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":19662:19763  function setFeeExempt(address _addr) external onlyOwner {\r... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_165\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_165:\n      pop\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_167\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_167:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_168\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":21912:21986  function manualSync() external {\r... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_169\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_169:\n      pop\n      tag_75\n      tag_171\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":11933:12692  function rebase(uint256 epoch, int256 supplyDelta)\r... */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_172\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_172:\n      pop\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_174\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_174:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      calldataload\n      tag_175\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":9772:9803  address public TreasuryReceiver */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_176\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_176:\n      pop\n      tag_143\n      tag_178\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":21420:21505  function isNotInSwap() external view returns (bool) {\r... */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_179\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_179:\n      pop\n      tag_86\n      tag_181\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":7726:7805  function owner() public view returns (address) {\r... */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_182\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_182:\n      pop\n      tag_143\n      tag_184\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":7891:7983  function isOwner() public view returns (bool) {\r... */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_185\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_185:\n      pop\n      tag_86\n      tag_187\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":11814:11925  function updateBlacklist(address _user, bool _flag) public onlyOwner{\r... */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_188\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_188:\n      pop\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_190\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_190:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      iszero\n      iszero\n      tag_191\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":5536:5623  function symbol() public view returns (string memory) {\r... */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_192\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_192:\n      pop\n      tag_79\n      tag_194\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":9324:9355  uint256 public liquidityFee = 5 */\n    tag_37:\n      callvalue\n      dup1\n      iszero\n      tag_199\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_199:\n      pop\n      tag_94\n      tag_201\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":21216:21307  function addMinter(address account) public onlyOwner {\r... */\n    tag_38:\n      callvalue\n      dup1\n      iszero\n      tag_202\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_202:\n      pop\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_204\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_204:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_205\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":4719:4796  function renounceMinter() public {\r... */\n    tag_39:\n      callvalue\n      dup1\n      iszero\n      tag_206\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_206:\n      pop\n      tag_75\n      tag_208\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":17929:18558  function decreaseAllowance(address spender, uint256 subtractedValue)\r... */\n    tag_40:\n      callvalue\n      dup1\n      iszero\n      tag_209\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_209:\n      pop\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_211\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_211:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_212\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":9970:9989  address public pair */\n    tag_41:\n      callvalue\n      dup1\n      iszero\n      tag_213\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_213:\n      pop\n      tag_143\n      tag_215\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":12810:13058  function transfer(address to, uint256 value)\r... */\n    tag_42:\n      callvalue\n      dup1\n      iszero\n      tag_216\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_216:\n      pop\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_218\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_218:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_219\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":4602:4711  function isMinter(address account) public view returns (bool) {\r... */\n    tag_43:\n      callvalue\n      dup1\n      iszero\n      tag_220\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_220:\n      pop\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_222\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_222:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_223\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":9396:9428  uint256 public RiskFreeValue = 5 */\n    tag_44:\n      callvalue\n      dup1\n      iszero\n      tag_224\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_224:\n      pop\n      tag_94\n      tag_226\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":9729:9765  address public autoLiquidityReceiver */\n    tag_45:\n      callvalue\n      dup1\n      iszero\n      tag_227\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_227:\n      pop\n      tag_143\n      tag_229\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":20339:20569  function setSwapBackSettings(\r... */\n    tag_46:\n      callvalue\n      dup1\n      iszero\n      tag_230\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_230:\n      pop\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_232\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_232:\n      pop\n      dup1\n      calldataload\n      iszero\n      iszero\n      swap1\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      0x40\n      add\n      calldataload\n      tag_233\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":8684:8723  bool public initialDistributionFinished */\n    tag_47:\n      callvalue\n      dup1\n      iszero\n      tag_234\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_234:\n      pop\n      tag_86\n      tag_236\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":21513:21770  function sendPresale(address[] calldata recipients, uint256[] calldata values)\r... */\n    tag_48:\n      callvalue\n      dup1\n      iszero\n      tag_237\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_237:\n      pop\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_239\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_239:\n      dup2\n      add\n      swap1\n      0x20\n      dup2\n      add\n      dup2\n      calldataload\n      0x0100000000\n      dup2\n      gt\n      iszero\n      tag_240\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_240:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_241\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_241:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      0x0100000000\n      dup4\n      gt\n      or\n      iszero\n      tag_242\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_242:\n      swap2\n      swap4\n      swap1\n      swap3\n      swap1\n      swap2\n      0x20\n      dup2\n      add\n      swap1\n      calldataload\n      0x0100000000\n      dup2\n      gt\n      iszero\n      tag_243\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_243:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_244\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_244:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      0x0100000000\n      dup4\n      gt\n      or\n      iszero\n      tag_245\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_245:\n      pop\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      tag_246\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":19307:19420  function checkFeeExempt(address _addr) external view returns (bool) {\r... */\n    tag_49:\n      callvalue\n      dup1\n      iszero\n      tag_247\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_247:\n      pop\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_249\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_249:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_250\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":23468:23759  function getLiquidityBacking(uint256 accuracy)\r... */\n    tag_50:\n      callvalue\n      dup1\n      iszero\n      tag_251\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_251:\n      pop\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_253\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_253:\n      pop\n      calldataload\n      tag_254\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":19550:19654  function enableTransfer(address _addr) external onlyOwner {\r... */\n    tag_51:\n      callvalue\n      dup1\n      iszero\n      tag_255\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_255:\n      pop\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_257\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_257:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_258\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":9810:9846  address public RiskFreeValueReceiver */\n    tag_52:\n      callvalue\n      dup1\n      iszero\n      tag_259\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_259:\n      pop\n      tag_143\n      tag_261\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":21994:22332  function setFeeReceivers(\r... */\n    tag_53:\n      callvalue\n      dup1\n      iszero\n      tag_262\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_262:\n      pop\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_264\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_264:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      dup3\n      and\n      swap2\n      0x40\n      swap1\n      swap2\n      add\n      calldataload\n      and\n      tag_265\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":13214:13408  function allowance(address owner_, address spender)\r... */\n    tag_54:\n      callvalue\n      dup1\n      iszero\n      tag_266\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_266:\n      pop\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_268\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_268:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_269\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":8125:8234  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_55:\n      callvalue\n      dup1\n      iszero\n      tag_270\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_270:\n      pop\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_272\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_272:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_273\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":9939:9963  IDEXRouter public router */\n    tag_56:\n      callvalue\n      dup1\n      iszero\n      tag_274\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_274:\n      pop\n      tag_143\n      tag_276\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":10596:10637  mapping(address => bool) public blacklist */\n    tag_57:\n      callvalue\n      dup1\n      iszero\n      tag_277\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_277:\n      pop\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_279\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_279:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_280\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":22340:22844  function setFees(\r... */\n    tag_77:\n        /* \"AndrewTate-testnet.sol.sol\":7853:7862  isOwner() */\n      tag_285\n        /* \"AndrewTate-testnet.sol.sol\":7853:7860  isOwner */\n      tag_187\n        /* \"AndrewTate-testnet.sol.sol\":7853:7862  isOwner() */\n      jump\t// in\n    tag_285:\n        /* \"AndrewTate-testnet.sol.sol\":7845:7863  require(isOwner()) */\n      tag_286\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_286:\n        /* \"AndrewTate-testnet.sol.sol\":22548:22560  liquidityFee */\n      0x07\n        /* \"AndrewTate-testnet.sol.sol\":22548:22576  liquidityFee = _liquidityFee */\n      dup6\n      swap1\n      sstore\n        /* \"AndrewTate-testnet.sol.sol\":22587:22600  RiskFreeValue */\n      0x09\n        /* \"AndrewTate-testnet.sol.sol\":22587:22617  RiskFreeValue = _RiskFreeValue */\n      dup5\n      swap1\n      sstore\n        /* \"AndrewTate-testnet.sol.sol\":22628:22636  Treasury */\n      0x08\n        /* \"AndrewTate-testnet.sol.sol\":22628:22648  Treasury = _Treasury */\n      dup4\n      swap1\n      sstore\n        /* \"AndrewTate-testnet.sol.sol\":22659:22666  sellFee */\n      0x0a\n        /* \"AndrewTate-testnet.sol.sol\":22659:22677  sellFee = _sellFee */\n      dup3\n      swap1\n      sstore\n        /* \"AndrewTate-testnet.sol.sol\":22699:22744  liquidityFee.add(Treasury).add(RiskFreeValue) */\n      tag_288\n        /* \"AndrewTate-testnet.sol.sol\":22603:22617  _RiskFreeValue */\n      dup5\n        /* \"AndrewTate-testnet.sol.sol\":22699:22725  liquidityFee.add(Treasury) */\n      tag_289\n        /* \"AndrewTate-testnet.sol.sol\":22563:22576  _liquidityFee */\n      dup8\n        /* \"AndrewTate-testnet.sol.sol\":22639:22648  _Treasury */\n      dup7\n        /* \"AndrewTate-testnet.sol.sol\":22699:22715  liquidityFee.add */\n      tag_281\n        /* \"AndrewTate-testnet.sol.sol\":22699:22725  liquidityFee.add(Treasury) */\n      jump\t// in\n    tag_289:\n        /* \"AndrewTate-testnet.sol.sol\":22699:22729  liquidityFee.add(Treasury).add */\n      swap1\n      tag_281\n        /* \"AndrewTate-testnet.sol.sol\":22699:22744  liquidityFee.add(Treasury).add(RiskFreeValue) */\n      jump\t// in\n    tag_288:\n        /* \"AndrewTate-testnet.sol.sol\":22688:22696  totalFee */\n      0x0b\n        /* \"AndrewTate-testnet.sol.sol\":22688:22744  totalFee = liquidityFee.add(Treasury).add(RiskFreeValue) */\n      sstore\n        /* \"AndrewTate-testnet.sol.sol\":22755:22769  feeDenominator */\n      0x0c\n        /* \"AndrewTate-testnet.sol.sol\":22755:22787  feeDenominator = _feeDenominator */\n      dup2\n      swap1\n      sstore\n        /* \"AndrewTate-testnet.sol.sol\":22834:22835  4 */\n      0x04\n        /* \"AndrewTate-testnet.sol.sol\":22772:22787  _feeDenominator */\n      dup2\n        /* \"AndrewTate-testnet.sol.sol\":22817:22835  feeDenominator / 4 */\n      div\n        /* \"AndrewTate-testnet.sol.sol\":22806:22814  totalFee */\n      sload(0x0b)\n        /* \"AndrewTate-testnet.sol.sol\":22806:22835  totalFee < feeDenominator / 4 */\n      lt\n        /* \"AndrewTate-testnet.sol.sol\":22798:22836  require(totalFee < feeDenominator / 4) */\n      tag_291\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_291:\n        /* \"AndrewTate-testnet.sol.sol\":22340:22844  function setFees(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":5445:5528  function name() public view returns (string memory) {\r... */\n    tag_80:\n        /* \"AndrewTate-testnet.sol.sol\":5515:5520  _name */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":5508:5520  return _name */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":5482:5495  string memory */\n      0x60\n      swap4\n        /* \"AndrewTate-testnet.sol.sol\":5508:5520  return _name */\n      swap1\n      swap3\n        /* \"AndrewTate-testnet.sol.sol\":5515:5520  _name */\n      swap1\n      swap2\n        /* \"AndrewTate-testnet.sol.sol\":5508:5520  return _name */\n      dup4\n      add\n        /* \"AndrewTate-testnet.sol.sol\":5515:5520  _name */\n      dup3\n        /* \"AndrewTate-testnet.sol.sol\":5508:5520  return _name */\n      dup3\n      dup1\n      iszero\n      tag_293\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_294\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_293)\n    tag_294:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_295:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_295\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_293:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":5445:5528  function name() public view returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":19013:19299  function approve(address spender, uint256 value)\r... */\n    tag_88:\n        /* \"AndrewTate-testnet.sol.sol\":8891:8918  initialDistributionFinished */\n      sload(0x04)\n        /* \"AndrewTate-testnet.sol.sol\":19149:19153  bool */\n      0x00\n      swap1\n      shl(0xa0, 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":8891:8918  initialDistributionFinished */\n      swap1\n      div\n      0xff\n      and\n      dup1\n        /* \"AndrewTate-testnet.sol.sol\":8891:8948  initialDistributionFinished ||\r... */\n      tag_298\n      jumpi\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":8939:8948  isOwner() */\n      tag_298\n        /* \"AndrewTate-testnet.sol.sol\":8939:8946  isOwner */\n      tag_187\n        /* \"AndrewTate-testnet.sol.sol\":8939:8948  isOwner() */\n      jump\t// in\n    tag_298:\n        /* \"AndrewTate-testnet.sol.sol\":8891:8994  initialDistributionFinished ||\r... */\n      dup1\n      tag_299\n      jumpi\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":8983:8993  msg.sender */\n      caller\n        /* \"AndrewTate-testnet.sol.sol\":8969:8994  allowTransfer[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":8969:8982  allowTransfer */\n      0x05\n        /* \"AndrewTate-testnet.sol.sol\":8969:8994  allowTransfer[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"AndrewTate-testnet.sol.sol\":8891:8994  initialDistributionFinished ||\r... */\n    tag_299:\n        /* \"AndrewTate-testnet.sol.sol\":8869:9005  require(\r... */\n      tag_300\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_300:\n        /* \"AndrewTate-testnet.sol.sol\":19189:19199  msg.sender */\n      caller\n        /* \"AndrewTate-testnet.sol.sol\":19171:19200  _allowedFragments[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":19171:19188  _allowedFragments */\n      0x1b\n        /* \"AndrewTate-testnet.sol.sol\":19171:19200  _allowedFragments[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":19171:19209  _allowedFragments[msg.sender][spender] */\n      dup9\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"AndrewTate-testnet.sol.sol\":19171:19217  _allowedFragments[msg.sender][spender] = value */\n      dup7\n      swap1\n      sstore\n        /* \"AndrewTate-testnet.sol.sol\":19233:19269  Approval(msg.sender, spender, value) */\n      dup1\n      mload\n      dup7\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"AndrewTate-testnet.sol.sol\":19171:19209  _allowedFragments[msg.sender][spender] */\n      swap3\n      swap4\n        /* \"AndrewTate-testnet.sol.sol\":19189:19199  msg.sender */\n      swap3\n        /* \"AndrewTate-testnet.sol.sol\":19233:19269  Approval(msg.sender, spender, value) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      swap2\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":19287:19291  true */\n      0x01\n        /* \"AndrewTate-testnet.sol.sol\":9016:9017  _ */\n    tag_301:\n        /* \"AndrewTate-testnet.sol.sol\":19013:19299  function approve(address spender, uint256 value)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":23771:23953  function isOverLiquified(uint256 target, uint256 accuracy)\r... */\n    tag_92:\n        /* \"AndrewTate-testnet.sol.sol\":23878:23882  bool */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":23939:23945  target */\n      dup3\n        /* \"AndrewTate-testnet.sol.sol\":23907:23936  getLiquidityBacking(accuracy) */\n      tag_303\n        /* \"AndrewTate-testnet.sol.sol\":23927:23935  accuracy */\n      dup4\n        /* \"AndrewTate-testnet.sol.sol\":23907:23926  getLiquidityBacking */\n      tag_254\n        /* \"AndrewTate-testnet.sol.sol\":23907:23936  getLiquidityBacking(accuracy) */\n      jump\t// in\n    tag_303:\n        /* \"AndrewTate-testnet.sol.sol\":23907:23945  getLiquidityBacking(accuracy) > target */\n      gt\n      swap4\n        /* \"AndrewTate-testnet.sol.sol\":23771:23953  function isOverLiquified(uint256 target, uint256 accuracy)\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":9555:9590  uint256 public feeDenominator = 100 */\n    tag_95:\n      sload(0x0c)\n      dup2\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":12700:12802  function totalSupply() external view override returns (uint256) {\r... */\n    tag_98:\n        /* \"AndrewTate-testnet.sol.sol\":12782:12794  _totalSupply */\n      sload(0x18)\n        /* \"AndrewTate-testnet.sol.sol\":12700:12802  function totalSupply() external view override returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":9468:9548  uint256 public totalFee =\r... */\n    tag_101:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":21036:21208  function setTargetLiquidity(uint256 target, uint256 accuracy) external onlyOwner {\r... */\n    tag_105:\n        /* \"AndrewTate-testnet.sol.sol\":7853:7862  isOwner() */\n      tag_306\n        /* \"AndrewTate-testnet.sol.sol\":7853:7860  isOwner */\n      tag_187\n        /* \"AndrewTate-testnet.sol.sol\":7853:7862  isOwner() */\n      jump\t// in\n    tag_306:\n        /* \"AndrewTate-testnet.sol.sol\":7845:7863  require(isOwner()) */\n      tag_307\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_307:\n        /* \"AndrewTate-testnet.sol.sol\":21128:21143  targetLiquidity */\n      0x12\n        /* \"AndrewTate-testnet.sol.sol\":21128:21152  targetLiquidity = target */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"AndrewTate-testnet.sol.sol\":21163:21189  targetLiquidityDenominator */\n      0x13\n        /* \"AndrewTate-testnet.sol.sol\":21163:21200  targetLiquidityDenominator = accuracy */\n      sstore\n        /* \"AndrewTate-testnet.sol.sol\":21036:21208  function setTargetLiquidity(uint256 target, uint256 accuracy) external onlyOwner {\r... */\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":14852:15309  function transferFrom(\r... */\n    tag_109:\n        /* \"AndrewTate-testnet.sol.sol\":14995:14999  bool */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":14982:14984  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":9088:9106  to != address(0x0) */\n      dup2\n      and\n        /* \"AndrewTate-testnet.sol.sol\":9080:9107  require(to != address(0x0)) */\n      tag_310\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_310:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":15016:15039  _allowedFragments[from] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":15016:15033  _allowedFragments */\n      0x1b\n        /* \"AndrewTate-testnet.sol.sol\":15016:15039  _allowedFragments[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"AndrewTate-testnet.sol.sol\":15040:15050  msg.sender */\n      caller\n        /* \"AndrewTate-testnet.sol.sol\":15016:15051  _allowedFragments[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      not(0x00)\n        /* \"AndrewTate-testnet.sol.sol\":15016:15066  _allowedFragments[from][msg.sender] != uint256(-1) */\n      eq\n        /* \"AndrewTate-testnet.sol.sol\":15012:15237  if (_allowedFragments[from][msg.sender] != uint256(-1)) {\r... */\n      tag_312\n      jumpi\n        /* \"AndrewTate-testnet.sol.sol\":15121:15225  _allowedFragments[from][\r... */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      0x16\n      dup2\n      mstore\n      shl(0x50, 0x496e73756666696369656e7420416c6c6f77616e6365)\n      0x20\n      dup1\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":15121:15144  _allowedFragments[from] */\n      dup9\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":15121:15138  _allowedFragments */\n      0x1b\n        /* \"AndrewTate-testnet.sol.sol\":15121:15144  _allowedFragments[from] */\n      dup3\n      mstore\n      dup4\n      dup2\n      keccak256\n        /* \"AndrewTate-testnet.sol.sol\":15163:15173  msg.sender */\n      caller\n        /* \"AndrewTate-testnet.sol.sol\":15121:15188  _allowedFragments[from][\r... */\n      dup3\n      mstore\n      swap1\n      swap2\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"AndrewTate-testnet.sol.sol\":15121:15225  _allowedFragments[from][\r... */\n      tag_313\n      swap2\n        /* \"AndrewTate-testnet.sol.sol\":15193:15198  value */\n      dup6\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":15121:15192  _allowedFragments[from][\r... */\n      tag_314\n        /* \"AndrewTate-testnet.sol.sol\":15121:15225  _allowedFragments[from][\r... */\n      jump\t// in\n    tag_313:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":15083:15106  _allowedFragments[from] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":15083:15100  _allowedFragments */\n      0x1b\n        /* \"AndrewTate-testnet.sol.sol\":15083:15106  _allowedFragments[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"AndrewTate-testnet.sol.sol\":15107:15117  msg.sender */\n      caller\n        /* \"AndrewTate-testnet.sol.sol\":15083:15118  _allowedFragments[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"AndrewTate-testnet.sol.sol\":15083:15225  _allowedFragments[from][msg.sender] = _allowedFragments[from][\r... */\n      sstore\n        /* \"AndrewTate-testnet.sol.sol\":15012:15237  if (_allowedFragments[from][msg.sender] != uint256(-1)) {\r... */\n    tag_312:\n        /* \"AndrewTate-testnet.sol.sol\":15249:15279  _transferFrom(from, to, value) */\n      tag_315\n        /* \"AndrewTate-testnet.sol.sol\":15263:15267  from */\n      dup6\n        /* \"AndrewTate-testnet.sol.sol\":15269:15271  to */\n      dup6\n        /* \"AndrewTate-testnet.sol.sol\":15273:15278  value */\n      dup6\n        /* \"AndrewTate-testnet.sol.sol\":15249:15262  _transferFrom */\n      tag_316\n        /* \"AndrewTate-testnet.sol.sol\":15249:15279  _transferFrom(from, to, value) */\n      jump\t// in\n    tag_315:\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":15297:15301  true */\n      0x01\n      swap6\n        /* \"AndrewTate-testnet.sol.sol\":14852:15309  function transferFrom(\r... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":20813:21028  function getCirculatingSupply() public view returns (uint256) {\r... */\n    tag_112:\n        /* \"AndrewTate-testnet.sol.sol\":20989:21005  _gonsPerFragment */\n      sload(0x19)\n        /* \"AndrewTate-testnet.sol.sol\":20959:20963  ZERO */\n      sload(0x0e)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"AndrewTate-testnet.sol.sol\":20866:20873  uint256 */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":20946:20964  _gonBalances[ZERO] */\n      swap1\n      dup2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":20946:20958  _gonBalances */\n      0x1a\n        /* \"AndrewTate-testnet.sol.sol\":20946:20964  _gonBalances[ZERO] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sload\n        /* \"AndrewTate-testnet.sol.sol\":20935:20939  DEAD */\n      sload(0x0d)\n      swap1\n      swap4\n      and\n        /* \"AndrewTate-testnet.sol.sol\":20922:20940  _gonBalances[DEAD] */\n      dup3\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"AndrewTate-testnet.sol.sol\":20866:20873  uint256 */\n      swap1\n      swap3\n        /* \"AndrewTate-testnet.sol.sol\":20906:21020  (TOTAL_GONS.sub(_gonBalances[DEAD]).sub(_gonBalances[ZERO])).div(\r... */\n      tag_318\n      swap3\n        /* \"AndrewTate-testnet.sol.sol\":20989:21005  _gonsPerFragment */\n      swap1\n      swap2\n        /* \"AndrewTate-testnet.sol.sol\":20907:20965  TOTAL_GONS.sub(_gonBalances[DEAD]).sub(_gonBalances[ZERO]) */\n      tag_319\n      swap2\n        /* \"AndrewTate-testnet.sol.sol\":20946:20964  _gonBalances[ZERO] */\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":20907:20941  TOTAL_GONS.sub(_gonBalances[DEAD]) */\n      tag_320\n      swap1\n      not(0x01d290004395eb7bbfffffff)\n        /* \"AndrewTate-testnet.sol.sol\":10264:10318  MAX_UINT256 - (MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY) */\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":20907:20921  TOTAL_GONS.sub */\n      tag_322\n        /* \"AndrewTate-testnet.sol.sol\":20907:20941  TOTAL_GONS.sub(_gonBalances[DEAD]) */\n      jump\t// in\n    tag_320:\n        /* \"AndrewTate-testnet.sol.sol\":20907:20945  TOTAL_GONS.sub(_gonBalances[DEAD]).sub */\n      swap1\n      tag_322\n        /* \"AndrewTate-testnet.sol.sol\":20907:20965  TOTAL_GONS.sub(_gonBalances[DEAD]).sub(_gonBalances[ZERO]) */\n      jump\t// in\n    tag_319:\n        /* \"AndrewTate-testnet.sol.sol\":20906:20970  (TOTAL_GONS.sub(_gonBalances[DEAD]).sub(_gonBalances[ZERO])).div */\n      swap1\n      tag_282\n        /* \"AndrewTate-testnet.sol.sol\":20906:21020  (TOTAL_GONS.sub(_gonBalances[DEAD]).sub(_gonBalances[ZERO])).div(\r... */\n      jump\t// in\n    tag_318:\n        /* \"AndrewTate-testnet.sol.sol\":20886:21020  return\r... */\n      swap1\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":20813:21028  function getCirculatingSupply() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":9435:9461  uint256 public sellFee = 5 */\n    tag_115:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":19428:19542  function setInitialDistributionFinished() external onlyOwner {\r... */\n    tag_118:\n        /* \"AndrewTate-testnet.sol.sol\":7853:7862  isOwner() */\n      tag_324\n        /* \"AndrewTate-testnet.sol.sol\":7853:7860  isOwner */\n      tag_187\n        /* \"AndrewTate-testnet.sol.sol\":7853:7862  isOwner() */\n      jump\t// in\n    tag_324:\n        /* \"AndrewTate-testnet.sol.sol\":7845:7863  require(isOwner()) */\n      tag_325\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_325:\n        /* \"AndrewTate-testnet.sol.sol\":19500:19527  initialDistributionFinished */\n      0x04\n        /* \"AndrewTate-testnet.sol.sol\":19500:19534  initialDistributionFinished = true */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      swap1\n      sstore\n        /* \"AndrewTate-testnet.sol.sol\":19428:19542  function setInitialDistributionFinished() external onlyOwner {\r... */\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":13066:13206  function setLP(address _address) external onlyOwner {\r... */\n    tag_122:\n        /* \"AndrewTate-testnet.sol.sol\":7853:7862  isOwner() */\n      tag_328\n        /* \"AndrewTate-testnet.sol.sol\":7853:7860  isOwner */\n      tag_187\n        /* \"AndrewTate-testnet.sol.sol\":7853:7862  isOwner() */\n      jump\t// in\n    tag_328:\n        /* \"AndrewTate-testnet.sol.sol\":7845:7863  require(isOwner()) */\n      tag_329\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_329:\n        /* \"AndrewTate-testnet.sol.sol\":13129:13141  pairContract */\n      0x04\n        /* \"AndrewTate-testnet.sol.sol\":13129:13165  pairContract = InterfaceLP(_address) */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      swap3\n      and\n      dup3\n      or\n      swap1\n      sstore\n        /* \"AndrewTate-testnet.sol.sol\":13129:13141  pairContract */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":13176:13198  _isFeeExempt[_address] */\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":13176:13188  _isFeeExempt */\n      0x06\n        /* \"AndrewTate-testnet.sol.sol\":13176:13198  _isFeeExempt[_address] */\n      0x20\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":13066:13206  function setLP(address _address) external onlyOwner {\r... */\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":21315:21412  function removeMinter(address account) public onlyOwner {\r... */\n    tag_126:\n        /* \"AndrewTate-testnet.sol.sol\":7853:7862  isOwner() */\n      tag_332\n        /* \"AndrewTate-testnet.sol.sol\":7853:7860  isOwner */\n      tag_187\n        /* \"AndrewTate-testnet.sol.sol\":7853:7862  isOwner() */\n      jump\t// in\n    tag_332:\n        /* \"AndrewTate-testnet.sol.sol\":7845:7863  require(isOwner()) */\n      tag_333\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_333:\n        /* \"AndrewTate-testnet.sol.sol\":21382:21404  _removeMinter(account) */\n      tag_335\n        /* \"AndrewTate-testnet.sol.sol\":21396:21403  account */\n      dup2\n        /* \"AndrewTate-testnet.sol.sol\":21382:21395  _removeMinter */\n      tag_336\n        /* \"AndrewTate-testnet.sol.sol\":21382:21404  _removeMinter(account) */\n      jump\t// in\n    tag_335:\n        /* \"AndrewTate-testnet.sol.sol\":21315:21412  function removeMinter(address account) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":5631:5714  function decimals() public view returns (uint8) {\r... */\n    tag_129:\n        /* \"AndrewTate-testnet.sol.sol\":5697:5706  _decimals */\n      and(0xff, sload(0x02))\n        /* \"AndrewTate-testnet.sol.sol\":5631:5714  function decimals() public view returns (uint8) {\r... */\n      swap1\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":23099:23312  function rescueToken(address tokenAddress, uint256 tokens)\r... */\n    tag_133:\n        /* \"AndrewTate-testnet.sol.sol\":23211:23223  bool success */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":7853:7862  isOwner() */\n      tag_339\n        /* \"AndrewTate-testnet.sol.sol\":7853:7860  isOwner */\n      tag_187\n        /* \"AndrewTate-testnet.sol.sol\":7853:7862  isOwner() */\n      jump\t// in\n    tag_339:\n        /* \"AndrewTate-testnet.sol.sol\":7845:7863  require(isOwner()) */\n      tag_340\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_340:\n        /* \"AndrewTate-testnet.sol.sol\":23248:23304  ERC20Detailed(tokenAddress).transfer(msg.sender, tokens) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":23285:23295  msg.sender */\n      caller\n        /* \"AndrewTate-testnet.sol.sol\":23248:23304  ERC20Detailed(tokenAddress).transfer(msg.sender, tokens) */\n      0x04\n      dup3\n      add\n      mstore\n      0x24\n      dup2\n      add\n      dup5\n      swap1\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":23248:23284  ERC20Detailed(tokenAddress).transfer */\n      dup6\n      and\n      swap2\n      0xa9059cbb\n      swap2\n        /* \"AndrewTate-testnet.sol.sol\":23248:23304  ERC20Detailed(tokenAddress).transfer(msg.sender, tokens) */\n      0x44\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":23248:23284  ERC20Detailed(tokenAddress).transfer */\n      dup8\n        /* \"AndrewTate-testnet.sol.sol\":23248:23304  ERC20Detailed(tokenAddress).transfer(msg.sender, tokens) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_342\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_342:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_344\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_344:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_345\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_345:\n      pop\n      mload\n      swap4\n        /* \"AndrewTate-testnet.sol.sol\":23099:23312  function rescueToken(address tokenAddress, uint256 tokens)\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":18566:19005  function increaseAllowance(address spender, uint256 addedValue)\r... */\n    tag_137:\n        /* \"AndrewTate-testnet.sol.sol\":8891:8918  initialDistributionFinished */\n      sload(0x04)\n        /* \"AndrewTate-testnet.sol.sol\":18699:18703  bool */\n      0x00\n      swap1\n      shl(0xa0, 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":8891:8918  initialDistributionFinished */\n      swap1\n      div\n      0xff\n      and\n      dup1\n        /* \"AndrewTate-testnet.sol.sol\":8891:8948  initialDistributionFinished ||\r... */\n      tag_348\n      jumpi\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":8939:8948  isOwner() */\n      tag_348\n        /* \"AndrewTate-testnet.sol.sol\":8939:8946  isOwner */\n      tag_187\n        /* \"AndrewTate-testnet.sol.sol\":8939:8948  isOwner() */\n      jump\t// in\n    tag_348:\n        /* \"AndrewTate-testnet.sol.sol\":8891:8994  initialDistributionFinished ||\r... */\n      dup1\n      tag_349\n      jumpi\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":8983:8993  msg.sender */\n      caller\n        /* \"AndrewTate-testnet.sol.sol\":8969:8994  allowTransfer[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":8969:8982  allowTransfer */\n      0x05\n        /* \"AndrewTate-testnet.sol.sol\":8969:8994  allowTransfer[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"AndrewTate-testnet.sol.sol\":8891:8994  initialDistributionFinished ||\r... */\n    tag_349:\n        /* \"AndrewTate-testnet.sol.sol\":8869:9005  require(\r... */\n      tag_350\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_350:\n        /* \"AndrewTate-testnet.sol.sol\":18780:18790  msg.sender */\n      caller\n        /* \"AndrewTate-testnet.sol.sol\":18762:18791  _allowedFragments[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":18762:18779  _allowedFragments */\n      0x1b\n        /* \"AndrewTate-testnet.sol.sol\":18762:18791  _allowedFragments[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":18762:18824  _allowedFragments[msg.sender][\r... */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"AndrewTate-testnet.sol.sol\":18762:18840  _allowedFragments[msg.sender][\r... */\n      tag_352\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":18829:18839  addedValue */\n      dup4\n        /* \"AndrewTate-testnet.sol.sol\":18762:18828  _allowedFragments[msg.sender][\r... */\n      tag_281\n        /* \"AndrewTate-testnet.sol.sol\":18762:18840  _allowedFragments[msg.sender][\r... */\n      jump\t// in\n    tag_352:\n        /* \"AndrewTate-testnet.sol.sol\":18739:18749  msg.sender */\n      caller\n        /* \"AndrewTate-testnet.sol.sol\":18721:18750  _allowedFragments[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":18721:18738  _allowedFragments */\n      0x1b\n        /* \"AndrewTate-testnet.sol.sol\":18721:18750  _allowedFragments[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":18721:18759  _allowedFragments[msg.sender][spender] */\n      dup10\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"AndrewTate-testnet.sol.sol\":18721:18840  _allowedFragments[msg.sender][spender] = _allowedFragments[msg.sender][\r... */\n      dup6\n      swap1\n      sstore\n        /* \"AndrewTate-testnet.sol.sol\":18856:18975  Approval(\r... */\n      dup1\n      mload\n      swap5\n      dup6\n      mstore\n      mload\n        /* \"AndrewTate-testnet.sol.sol\":18721:18759  _allowedFragments[msg.sender][spender] */\n      swap2\n      swap4\n        /* \"AndrewTate-testnet.sol.sol\":18856:18975  Approval(\r... */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      swap1\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":18993:18997  true */\n      0x01\n        /* \"AndrewTate-testnet.sol.sol\":18566:19005  function increaseAllowance(address spender, uint256 addedValue)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":19936:20331  function mint(address recipient, uint256 amount) external onlyMinter {\r... */\n    tag_141:\n        /* \"AndrewTate-testnet.sol.sol\":4501:4521  isMinter(msg.sender) */\n      tag_354\n        /* \"AndrewTate-testnet.sol.sol\":4510:4520  msg.sender */\n      caller\n        /* \"AndrewTate-testnet.sol.sol\":4501:4509  isMinter */\n      tag_223\n        /* \"AndrewTate-testnet.sol.sol\":4501:4521  isMinter(msg.sender) */\n      jump\t// in\n    tag_354:\n        /* \"AndrewTate-testnet.sol.sol\":4493:4574  require(isMinter(msg.sender), \"MinterRole: caller does not have the Minter role\") */\n      tag_355\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x30\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_79ecb50133735b20228dea9d08fe36a462bbc1350f591a146908848db91104cd\n      0x30\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_355:\n        /* \"AndrewTate-testnet.sol.sol\":20031:20043  _totalSupply */\n      sload(0x18)\n        /* \"AndrewTate-testnet.sol.sol\":20031:20064  _totalSupply.add(uint256(amount)) */\n      tag_357\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":20056:20062  amount */\n      dup3\n        /* \"AndrewTate-testnet.sol.sol\":20031:20047  _totalSupply.add */\n      tag_281\n        /* \"AndrewTate-testnet.sol.sol\":20031:20064  _totalSupply.add(uint256(amount)) */\n      jump\t// in\n    tag_357:\n        /* \"AndrewTate-testnet.sol.sol\":20016:20028  _totalSupply */\n      0x18\n        /* \"AndrewTate-testnet.sol.sol\":20016:20064  _totalSupply = _totalSupply.add(uint256(amount)) */\n      dup2\n      swap1\n      sstore\n      sub(shl(0x80, 0x01), 0x01)\n      lt\n        /* \"AndrewTate-testnet.sol.sol\":20077:20160  if (_totalSupply > MAX_SUPPLY) {\r... */\n      iszero\n      tag_358\n      jumpi\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":20123:20135  _totalSupply */\n      0x18\n        /* \"AndrewTate-testnet.sol.sol\":20123:20148  _totalSupply = MAX_SUPPLY */\n      sstore\n        /* \"AndrewTate-testnet.sol.sol\":20077:20160  if (_totalSupply > MAX_SUPPLY) {\r... */\n    tag_358:\n        /* \"AndrewTate-testnet.sol.sol\":20206:20218  _totalSupply */\n      sload(0x18)\n        /* \"AndrewTate-testnet.sol.sol\":20191:20219  TOTAL_GONS.div(_totalSupply) */\n      tag_359\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":9291:9315  4 * 10**9 * 10**DECIMALS */\n      0x0cecb8f27f4200f3a0000000\n      not(0x00)\n        /* \"AndrewTate-testnet.sol.sol\":10279:10317  MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY */\n    tag_360:\n      mod\n        /* \"AndrewTate-testnet.sol.sol\":10264:10318  MAX_UINT256 - (MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY) */\n      not\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":20191:20205  TOTAL_GONS.div */\n      tag_282\n        /* \"AndrewTate-testnet.sol.sol\":20191:20219  TOTAL_GONS.div(_totalSupply) */\n      jump\t// in\n    tag_359:\n        /* \"AndrewTate-testnet.sol.sol\":20172:20188  _gonsPerFragment */\n      0x19\n        /* \"AndrewTate-testnet.sol.sol\":20172:20219  _gonsPerFragment = TOTAL_GONS.div(_totalSupply) */\n      sstore\n        /* \"AndrewTate-testnet.sol.sol\":20230:20242  pairContract */\n      0x04\n      dup1\n      sload\n        /* \"AndrewTate-testnet.sol.sol\":20230:20249  pairContract.sync() */\n      0x40\n      dup1\n      mload\n      not(sub(shl(0xe0, 0x093517), 0x01))\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":20230:20242  pairContract */\n      swap1\n      swap3\n      and\n      swap3\n        /* \"AndrewTate-testnet.sol.sol\":20230:20247  pairContract.sync */\n      0xfff6cae9\n      swap3\n        /* \"AndrewTate-testnet.sol.sol\":20230:20249  pairContract.sync() */\n      dup3\n      dup3\n      add\n      swap3\n        /* \"AndrewTate-testnet.sol.sol\":20230:20242  pairContract */\n      0x00\n      swap3\n        /* \"AndrewTate-testnet.sol.sol\":20230:20249  pairContract.sync() */\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"AndrewTate-testnet.sol.sol\":20230:20242  pairContract */\n      dup4\n      dup8\n        /* \"AndrewTate-testnet.sol.sol\":20230:20249  pairContract.sync() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_361\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_361:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_363\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_363:\n      pop\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":20288:20311  _gonBalances[recipient] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":20288:20300  _gonBalances */\n      0x1a\n        /* \"AndrewTate-testnet.sol.sol\":20288:20311  _gonBalances[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"AndrewTate-testnet.sol.sol\":20288:20323  _gonBalances[recipient].add(amount) */\n      tag_364\n      swap2\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":20316:20322  amount */\n      dup3\n        /* \"AndrewTate-testnet.sol.sol\":20288:20315  _gonBalances[recipient].add */\n      tag_281\n        /* \"AndrewTate-testnet.sol.sol\":20288:20323  _gonBalances[recipient].add(amount) */\n      jump\t// in\n    tag_364:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":20262:20285  _gonBalances[recipient] */\n      swap1\n      swap3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":20262:20274  _gonBalances */\n      0x1a\n        /* \"AndrewTate-testnet.sol.sol\":20262:20285  _gonBalances[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"AndrewTate-testnet.sol.sol\":20262:20323  _gonBalances[recipient] = _gonBalances[recipient].add(amount) */\n      swap2\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":19936:20331  function mint(address recipient, uint256 amount) external onlyMinter {\r... */\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":8644:8675  InterfaceLP public pairContract */\n    tag_144:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x04))\n      dup2\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":9362:9389  uint256 public Treasury = 3 */\n    tag_147:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":22852:23091  function clearStuckBalance(uint256 amountPercentage, address adr) external onlyOwner {\r... */\n    tag_151:\n        /* \"AndrewTate-testnet.sol.sol\":7853:7862  isOwner() */\n      tag_366\n        /* \"AndrewTate-testnet.sol.sol\":7853:7860  isOwner */\n      tag_187\n        /* \"AndrewTate-testnet.sol.sol\":7853:7862  isOwner() */\n      jump\t// in\n    tag_366:\n        /* \"AndrewTate-testnet.sol.sol\":7845:7863  require(isOwner()) */\n      tag_367\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_367:\n        /* \"AndrewTate-testnet.sol.sol\":23000:23083  payable(adr).transfer(\r... */\n      mload(0x40)\n        /* \"AndrewTate-testnet.sol.sol\":22968:22989  address(this).balance */\n      selfbalance\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":23000:23021  payable(adr).transfer */\n      dup4\n      and\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":23069:23072  100 */\n      0x64\n        /* \"AndrewTate-testnet.sol.sol\":23037:23065  amountETH * amountPercentage */\n      dup6\n      dup5\n      mul\n        /* \"AndrewTate-testnet.sol.sol\":23036:23072  (amountETH * amountPercentage) / 100 */\n      div\n        /* \"AndrewTate-testnet.sol.sol\":23000:23083  payable(adr).transfer(\r... */\n      dup1\n      iszero\n      0x08fc\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"AndrewTate-testnet.sol.sol\":23036:23072  (amountETH * amountPercentage) / 100 */\n      dup6\n        /* \"AndrewTate-testnet.sol.sol\":23000:23021  payable(adr).transfer */\n      dup9\n        /* \"AndrewTate-testnet.sol.sol\":23000:23083  payable(adr).transfer(\r... */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_371\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_371:\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":7874:7875  _ */\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":22852:23091  function clearStuckBalance(uint256 amountPercentage, address adr) external onlyOwner {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":21778:21904  function checkSwapThreshold() external view returns (uint256) {\r... */\n    tag_154:\n        /* \"AndrewTate-testnet.sol.sol\":21831:21838  uint256 */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":21858:21896  gonSwapThreshold.div(_gonsPerFragment) */\n      tag_318\n        /* \"AndrewTate-testnet.sol.sol\":21879:21895  _gonsPerFragment */\n      sload(0x19)\n        /* \"AndrewTate-testnet.sol.sol\":21858:21874  gonSwapThreshold */\n      sload(0x16)\n        /* \"AndrewTate-testnet.sol.sol\":21858:21878  gonSwapThreshold.div */\n      tag_282\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":21858:21896  gonSwapThreshold.div(_gonsPerFragment) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":9998:10028  bool public swapEnabled = true */\n    tag_157:\n      sload(0x15)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":13416:13554  function balanceOf(address who) external view override returns (uint256) {\r... */\n    tag_161:\n        /* \"AndrewTate-testnet.sol.sol\":13529:13545  _gonsPerFragment */\n      sload(0x19)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":13507:13524  _gonBalances[who] */\n      dup3\n      and\n        /* \"AndrewTate-testnet.sol.sol\":13480:13487  uint256 */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":13507:13524  _gonBalances[who] */\n      swap1\n      dup2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":13507:13519  _gonBalances */\n      0x1a\n        /* \"AndrewTate-testnet.sol.sol\":13507:13524  _gonBalances[who] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"AndrewTate-testnet.sol.sol\":13480:13487  uint256 */\n      swap1\n      swap2\n        /* \"AndrewTate-testnet.sol.sol\":13507:13546  _gonBalances[who].div(_gonsPerFragment) */\n      tag_301\n      swap2\n        /* \"AndrewTate-testnet.sol.sol\":13507:13524  _gonBalances[who] */\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":13507:13528  _gonBalances[who].div */\n      tag_282\n        /* \"AndrewTate-testnet.sol.sol\":13507:13546  _gonBalances[who].div(_gonsPerFragment) */\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":7991:8117  function renounceOwnership() public onlyOwner {\r... */\n    tag_164:\n        /* \"AndrewTate-testnet.sol.sol\":7853:7862  isOwner() */\n      tag_377\n        /* \"AndrewTate-testnet.sol.sol\":7853:7860  isOwner */\n      tag_187\n        /* \"AndrewTate-testnet.sol.sol\":7853:7862  isOwner() */\n      jump\t// in\n    tag_377:\n        /* \"AndrewTate-testnet.sol.sol\":7845:7863  require(isOwner()) */\n      tag_378\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_378:\n        /* \"AndrewTate-testnet.sol.sol\":8072:8078  _owner */\n      sload(0x02)\n        /* \"AndrewTate-testnet.sol.sol\":8053:8079  OwnershipRenounced(_owner) */\n      mload(0x40)\n        /* \"AndrewTate-testnet.sol.sol\":8072:8078  _owner */\n      0x0100\n      swap1\n      swap2\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":8053:8079  OwnershipRenounced(_owner) */\n      0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"AndrewTate-testnet.sol.sol\":8090:8096  _owner */\n      0x02\n        /* \"AndrewTate-testnet.sol.sol\":8090:8109  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa8, 0x01), 0x0100))\n      and\n      swap1\n      sstore\n        /* \"AndrewTate-testnet.sol.sol\":7991:8117  function renounceOwnership() public onlyOwner {\r... */\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":19662:19763  function setFeeExempt(address _addr) external onlyOwner {\r... */\n    tag_168:\n        /* \"AndrewTate-testnet.sol.sol\":7853:7862  isOwner() */\n      tag_381\n        /* \"AndrewTate-testnet.sol.sol\":7853:7860  isOwner */\n      tag_187\n        /* \"AndrewTate-testnet.sol.sol\":7853:7862  isOwner() */\n      jump\t// in\n    tag_381:\n        /* \"AndrewTate-testnet.sol.sol\":7845:7863  require(isOwner()) */\n      tag_382\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_382:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":19729:19748  _isFeeExempt[_addr] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":19729:19741  _isFeeExempt */\n      0x06\n        /* \"AndrewTate-testnet.sol.sol\":19729:19748  _isFeeExempt[_addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"AndrewTate-testnet.sol.sol\":19729:19755  _isFeeExempt[_addr] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"AndrewTate-testnet.sol.sol\":19751:19755  true */\n      0x01\n        /* \"AndrewTate-testnet.sol.sol\":19729:19755  _isFeeExempt[_addr] = true */\n      or\n      swap1\n      sstore\n        /* \"AndrewTate-testnet.sol.sol\":19662:19763  function setFeeExempt(address _addr) external onlyOwner {\r... */\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":21912:21986  function manualSync() external {\r... */\n    tag_171:\n        /* \"AndrewTate-testnet.sol.sol\":21966:21970  pair */\n      0x15\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":21954:21976  InterfaceLP(pair).sync */\n      and\n      0xfff6cae9\n        /* \"AndrewTate-testnet.sol.sol\":21954:21978  InterfaceLP(pair).sync() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_385\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_385:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_371\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n        /* \"AndrewTate-testnet.sol.sol\":11933:12692  function rebase(uint256 epoch, int256 supplyDelta)\r... */\n    tag_175:\n        /* \"AndrewTate-testnet.sol.sol\":12039:12046  uint256 */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":7853:7862  isOwner() */\n      tag_389\n        /* \"AndrewTate-testnet.sol.sol\":7853:7860  isOwner */\n      tag_187\n        /* \"AndrewTate-testnet.sol.sol\":7853:7862  isOwner() */\n      jump\t// in\n    tag_389:\n        /* \"AndrewTate-testnet.sol.sol\":7845:7863  require(isOwner()) */\n      tag_390\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_390:\n        /* \"AndrewTate-testnet.sol.sol\":12073:12079  inSwap */\n      and(0xff, sload(0x17))\n        /* \"AndrewTate-testnet.sol.sol\":12072:12079  !inSwap */\n      iszero\n        /* \"AndrewTate-testnet.sol.sol\":12064:12093  require(!inSwap, \"Try again\") */\n      tag_392\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x09\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xb9, 0x2a393c9030b3b0b4b7)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_392:\n        /* \"AndrewTate-testnet.sol.sol\":12108:12124  supplyDelta == 0 */\n      dup2\n        /* \"AndrewTate-testnet.sol.sol\":12104:12222  if (supplyDelta == 0) {\r... */\n      tag_393\n      jumpi\n        /* \"AndrewTate-testnet.sol.sol\":12163:12175  _totalSupply */\n      sload(0x18)\n        /* \"AndrewTate-testnet.sol.sol\":12146:12176  LogRebase(epoch, _totalSupply) */\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n        /* \"AndrewTate-testnet.sol.sol\":12156:12161  epoch */\n      dup5\n      swap2\n        /* \"AndrewTate-testnet.sol.sol\":12146:12176  LogRebase(epoch, _totalSupply) */\n      0x72725a3b1e5bd622d6bcd1339bb31279c351abe8f541ac7fd320f24e1b1641f2\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log2\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":12198:12210  _totalSupply */\n      sload(0x18)\n        /* \"AndrewTate-testnet.sol.sol\":12191:12210  return _totalSupply */\n      jump(tag_301)\n        /* \"AndrewTate-testnet.sol.sol\":12104:12222  if (supplyDelta == 0) {\r... */\n    tag_393:\n        /* \"AndrewTate-testnet.sol.sol\":12252:12253  0 */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":12238:12249  supplyDelta */\n      dup3\n        /* \"AndrewTate-testnet.sol.sol\":12238:12253  supplyDelta < 0 */\n      slt\n        /* \"AndrewTate-testnet.sol.sol\":12234:12422  if (supplyDelta < 0) {\r... */\n      iszero\n      tag_394\n      jumpi\n        /* \"AndrewTate-testnet.sol.sol\":12285:12297  _totalSupply */\n      sload(0x18)\n        /* \"AndrewTate-testnet.sol.sol\":12285:12324  _totalSupply.sub(uint256(-supplyDelta)) */\n      tag_395\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":12310:12322  -supplyDelta */\n      0x00\n      dup5\n      swap1\n      sub\n        /* \"AndrewTate-testnet.sol.sol\":12285:12301  _totalSupply.sub */\n      tag_322\n        /* \"AndrewTate-testnet.sol.sol\":12285:12324  _totalSupply.sub(uint256(-supplyDelta)) */\n      jump\t// in\n    tag_395:\n        /* \"AndrewTate-testnet.sol.sol\":12270:12282  _totalSupply */\n      0x18\n        /* \"AndrewTate-testnet.sol.sol\":12270:12324  _totalSupply = _totalSupply.sub(uint256(-supplyDelta)) */\n      sstore\n        /* \"AndrewTate-testnet.sol.sol\":12234:12422  if (supplyDelta < 0) {\r... */\n      jump(tag_396)\n    tag_394:\n        /* \"AndrewTate-testnet.sol.sol\":12372:12384  _totalSupply */\n      sload(0x18)\n        /* \"AndrewTate-testnet.sol.sol\":12372:12410  _totalSupply.add(uint256(supplyDelta)) */\n      tag_397\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":12397:12408  supplyDelta */\n      dup4\n        /* \"AndrewTate-testnet.sol.sol\":12372:12388  _totalSupply.add */\n      tag_281\n        /* \"AndrewTate-testnet.sol.sol\":12372:12410  _totalSupply.add(uint256(supplyDelta)) */\n      jump\t// in\n    tag_397:\n        /* \"AndrewTate-testnet.sol.sol\":12357:12369  _totalSupply */\n      0x18\n        /* \"AndrewTate-testnet.sol.sol\":12357:12410  _totalSupply = _totalSupply.add(uint256(supplyDelta)) */\n      sstore\n        /* \"AndrewTate-testnet.sol.sol\":12234:12422  if (supplyDelta < 0) {\r... */\n    tag_396:\n        /* \"AndrewTate-testnet.sol.sol\":12438:12450  _totalSupply */\n      lt(sub(shl(0x80, 0x01), 0x01), sload(0x18))\n        /* \"AndrewTate-testnet.sol.sol\":12434:12517  if (_totalSupply > MAX_SUPPLY) {\r... */\n      iszero\n      tag_398\n      jumpi\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":12480:12492  _totalSupply */\n      0x18\n        /* \"AndrewTate-testnet.sol.sol\":12480:12505  _totalSupply = MAX_SUPPLY */\n      sstore\n        /* \"AndrewTate-testnet.sol.sol\":12434:12517  if (_totalSupply > MAX_SUPPLY) {\r... */\n    tag_398:\n        /* \"AndrewTate-testnet.sol.sol\":12563:12575  _totalSupply */\n      sload(0x18)\n        /* \"AndrewTate-testnet.sol.sol\":12548:12576  TOTAL_GONS.div(_totalSupply) */\n      tag_399\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":9291:9315  4 * 10**9 * 10**DECIMALS */\n      0x0cecb8f27f4200f3a0000000\n      not(0x00)\n        /* \"AndrewTate-testnet.sol.sol\":10279:10317  MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY */\n      jump(tag_360)\n        /* \"AndrewTate-testnet.sol.sol\":12548:12576  TOTAL_GONS.div(_totalSupply) */\n    tag_399:\n        /* \"AndrewTate-testnet.sol.sol\":12529:12545  _gonsPerFragment */\n      0x19\n        /* \"AndrewTate-testnet.sol.sol\":12529:12576  _gonsPerFragment = TOTAL_GONS.div(_totalSupply) */\n      sstore\n        /* \"AndrewTate-testnet.sol.sol\":12587:12599  pairContract */\n      0x04\n      dup1\n      sload\n        /* \"AndrewTate-testnet.sol.sol\":12587:12606  pairContract.sync() */\n      0x40\n      dup1\n      mload\n      not(sub(shl(0xe0, 0x093517), 0x01))\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":12587:12599  pairContract */\n      swap1\n      swap3\n      and\n      swap3\n        /* \"AndrewTate-testnet.sol.sol\":12587:12604  pairContract.sync */\n      0xfff6cae9\n      swap3\n        /* \"AndrewTate-testnet.sol.sol\":12587:12606  pairContract.sync() */\n      dup3\n      dup3\n      add\n      swap3\n        /* \"AndrewTate-testnet.sol.sol\":12587:12599  pairContract */\n      0x00\n      swap3\n        /* \"AndrewTate-testnet.sol.sol\":12587:12606  pairContract.sync() */\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"AndrewTate-testnet.sol.sol\":12587:12599  pairContract */\n      dup4\n      dup8\n        /* \"AndrewTate-testnet.sol.sol\":12587:12606  pairContract.sync() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_401\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_401:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_403\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_403:\n      pop\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":12641:12653  _totalSupply */\n      sload(0x18)\n        /* \"AndrewTate-testnet.sol.sol\":12624:12654  LogRebase(epoch, _totalSupply) */\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n        /* \"AndrewTate-testnet.sol.sol\":12634:12639  epoch */\n      dup7\n      swap4\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":12624:12654  LogRebase(epoch, _totalSupply) */\n      0x72725a3b1e5bd622d6bcd1339bb31279c351abe8f541ac7fd320f24e1b1641f2\n      swap3\n      pop\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log2\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":12672:12684  _totalSupply */\n      sload(0x18)\n        /* \"AndrewTate-testnet.sol.sol\":11933:12692  function rebase(uint256 epoch, int256 supplyDelta)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":9772:9803  address public TreasuryReceiver */\n    tag_178:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x10))\n      dup2\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":21420:21505  function isNotInSwap() external view returns (bool) {\r... */\n    tag_181:\n        /* \"AndrewTate-testnet.sol.sol\":21491:21497  inSwap */\n      and(0xff, sload(0x17))\n        /* \"AndrewTate-testnet.sol.sol\":21490:21497  !inSwap */\n      iszero\n        /* \"AndrewTate-testnet.sol.sol\":21420:21505  function isNotInSwap() external view returns (bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":7726:7805  function owner() public view returns (address) {\r... */\n    tag_184:\n        /* \"AndrewTate-testnet.sol.sol\":7791:7797  _owner */\n      sload(0x02)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":7726:7805  function owner() public view returns (address) {\r... */\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":7891:7983  function isOwner() public view returns (bool) {\r... */\n    tag_187:\n        /* \"AndrewTate-testnet.sol.sol\":7969:7975  _owner */\n      sload(0x02)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"AndrewTate-testnet.sol.sol\":7955:7965  msg.sender */\n      caller\n        /* \"AndrewTate-testnet.sol.sol\":7955:7975  msg.sender == _owner */\n      eq\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":7891:7983  function isOwner() public view returns (bool) {\r... */\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":11814:11925  function updateBlacklist(address _user, bool _flag) public onlyOwner{\r... */\n    tag_191:\n        /* \"AndrewTate-testnet.sol.sol\":7853:7862  isOwner() */\n      tag_408\n        /* \"AndrewTate-testnet.sol.sol\":7853:7860  isOwner */\n      tag_187\n        /* \"AndrewTate-testnet.sol.sol\":7853:7862  isOwner() */\n      jump\t// in\n    tag_408:\n        /* \"AndrewTate-testnet.sol.sol\":7845:7863  require(isOwner()) */\n      tag_409\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_409:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":11893:11909  blacklist[_user] */\n      swap2\n      swap1\n      swap2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":11893:11902  blacklist */\n      0x1c\n        /* \"AndrewTate-testnet.sol.sol\":11893:11909  blacklist[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"AndrewTate-testnet.sol.sol\":11893:11917  blacklist[_user] = _flag */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"AndrewTate-testnet.sol.sol\":11814:11925  function updateBlacklist(address _user, bool _flag) public onlyOwner{\r... */\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":5536:5623  function symbol() public view returns (string memory) {\r... */\n    tag_194:\n        /* \"AndrewTate-testnet.sol.sol\":5608:5615  _symbol */\n      0x01\n        /* \"AndrewTate-testnet.sol.sol\":5601:5615  return _symbol */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      dup8\n      dup10\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":5575:5588  string memory */\n      0x60\n      swap4\n        /* \"AndrewTate-testnet.sol.sol\":5601:5615  return _symbol */\n      swap1\n      swap3\n        /* \"AndrewTate-testnet.sol.sol\":5608:5615  _symbol */\n      swap1\n      swap2\n        /* \"AndrewTate-testnet.sol.sol\":5601:5615  return _symbol */\n      dup4\n      add\n        /* \"AndrewTate-testnet.sol.sol\":5608:5615  _symbol */\n      dup3\n        /* \"AndrewTate-testnet.sol.sol\":5601:5615  return _symbol */\n      dup3\n      dup1\n      iszero\n      tag_293\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_294\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_293)\n        /* \"AndrewTate-testnet.sol.sol\":9324:9355  uint256 public liquidityFee = 5 */\n    tag_201:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":21216:21307  function addMinter(address account) public onlyOwner {\r... */\n    tag_205:\n        /* \"AndrewTate-testnet.sol.sol\":7853:7862  isOwner() */\n      tag_416\n        /* \"AndrewTate-testnet.sol.sol\":7853:7860  isOwner */\n      tag_187\n        /* \"AndrewTate-testnet.sol.sol\":7853:7862  isOwner() */\n      jump\t// in\n    tag_416:\n        /* \"AndrewTate-testnet.sol.sol\":7845:7863  require(isOwner()) */\n      tag_417\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_417:\n        /* \"AndrewTate-testnet.sol.sol\":21280:21299  _addMinter(account) */\n      tag_335\n        /* \"AndrewTate-testnet.sol.sol\":21291:21298  account */\n      dup2\n        /* \"AndrewTate-testnet.sol.sol\":21280:21290  _addMinter */\n      tag_420\n        /* \"AndrewTate-testnet.sol.sol\":21280:21299  _addMinter(account) */\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":4719:4796  function renounceMinter() public {\r... */\n    tag_208:\n        /* \"AndrewTate-testnet.sol.sol\":4763:4788  _removeMinter(msg.sender) */\n      tag_422\n        /* \"AndrewTate-testnet.sol.sol\":4777:4787  msg.sender */\n      caller\n        /* \"AndrewTate-testnet.sol.sol\":4763:4776  _removeMinter */\n      tag_336\n        /* \"AndrewTate-testnet.sol.sol\":4763:4788  _removeMinter(msg.sender) */\n      jump\t// in\n    tag_422:\n        /* \"AndrewTate-testnet.sol.sol\":4719:4796  function renounceMinter() public {\r... */\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":17929:18558  function decreaseAllowance(address spender, uint256 subtractedValue)\r... */\n    tag_212:\n        /* \"AndrewTate-testnet.sol.sol\":8891:8918  initialDistributionFinished */\n      sload(0x04)\n        /* \"AndrewTate-testnet.sol.sol\":18067:18071  bool */\n      0x00\n      swap1\n      shl(0xa0, 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":8891:8918  initialDistributionFinished */\n      swap1\n      div\n      0xff\n      and\n      dup1\n        /* \"AndrewTate-testnet.sol.sol\":8891:8948  initialDistributionFinished ||\r... */\n      tag_425\n      jumpi\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":8939:8948  isOwner() */\n      tag_425\n        /* \"AndrewTate-testnet.sol.sol\":8939:8946  isOwner */\n      tag_187\n        /* \"AndrewTate-testnet.sol.sol\":8939:8948  isOwner() */\n      jump\t// in\n    tag_425:\n        /* \"AndrewTate-testnet.sol.sol\":8891:8994  initialDistributionFinished ||\r... */\n      dup1\n      tag_426\n      jumpi\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":8983:8993  msg.sender */\n      caller\n        /* \"AndrewTate-testnet.sol.sol\":8969:8994  allowTransfer[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":8969:8982  allowTransfer */\n      0x05\n        /* \"AndrewTate-testnet.sol.sol\":8969:8994  allowTransfer[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"AndrewTate-testnet.sol.sol\":8891:8994  initialDistributionFinished ||\r... */\n    tag_426:\n        /* \"AndrewTate-testnet.sol.sol\":8869:9005  require(\r... */\n      tag_427\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_427:\n        /* \"AndrewTate-testnet.sol.sol\":18126:18136  msg.sender */\n      caller\n        /* \"AndrewTate-testnet.sol.sol\":18089:18105  uint256 oldValue */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":18108:18137  _allowedFragments[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":18108:18125  _allowedFragments */\n      0x1b\n        /* \"AndrewTate-testnet.sol.sol\":18108:18137  _allowedFragments[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":18108:18146  _allowedFragments[msg.sender][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"AndrewTate-testnet.sol.sol\":18161:18188  subtractedValue >= oldValue */\n      dup1\n      dup4\n      lt\n        /* \"AndrewTate-testnet.sol.sol\":18157:18394  if (subtractedValue >= oldValue) {\r... */\n      tag_429\n      jumpi\n        /* \"AndrewTate-testnet.sol.sol\":18223:18233  msg.sender */\n      caller\n        /* \"AndrewTate-testnet.sol.sol\":18246:18247  0 */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":18205:18234  _allowedFragments[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":18205:18222  _allowedFragments */\n      0x1b\n        /* \"AndrewTate-testnet.sol.sol\":18205:18234  _allowedFragments[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":18205:18243  _allowedFragments[msg.sender][spender] */\n      dup9\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"AndrewTate-testnet.sol.sol\":18205:18247  _allowedFragments[msg.sender][spender] = 0 */\n      sstore\n        /* \"AndrewTate-testnet.sol.sol\":18157:18394  if (subtractedValue >= oldValue) {\r... */\n      jump(tag_430)\n    tag_429:\n        /* \"AndrewTate-testnet.sol.sol\":18321:18382  oldValue.sub(\r... */\n      tag_431\n        /* \"AndrewTate-testnet.sol.sol\":18321:18329  oldValue */\n      dup2\n        /* \"AndrewTate-testnet.sol.sol\":18352:18367  subtractedValue */\n      dup5\n        /* \"AndrewTate-testnet.sol.sol\":18321:18333  oldValue.sub */\n      tag_322\n        /* \"AndrewTate-testnet.sol.sol\":18321:18382  oldValue.sub(\r... */\n      jump\t// in\n    tag_431:\n        /* \"AndrewTate-testnet.sol.sol\":18298:18308  msg.sender */\n      caller\n        /* \"AndrewTate-testnet.sol.sol\":18280:18309  _allowedFragments[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":18280:18297  _allowedFragments */\n      0x1b\n        /* \"AndrewTate-testnet.sol.sol\":18280:18309  _allowedFragments[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":18280:18318  _allowedFragments[msg.sender][spender] */\n      dup10\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"AndrewTate-testnet.sol.sol\":18280:18382  _allowedFragments[msg.sender][spender] = oldValue.sub(\r... */\n      sstore\n        /* \"AndrewTate-testnet.sol.sol\":18157:18394  if (subtractedValue >= oldValue) {\r... */\n    tag_430:\n        /* \"AndrewTate-testnet.sol.sol\":18432:18442  msg.sender */\n      caller\n        /* \"AndrewTate-testnet.sol.sol\":18479:18508  _allowedFragments[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":18479:18496  _allowedFragments */\n      0x1b\n        /* \"AndrewTate-testnet.sol.sol\":18479:18508  _allowedFragments[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":18409:18528  Approval(\r... */\n      dup10\n      and\n        /* \"AndrewTate-testnet.sol.sol\":18479:18517  _allowedFragments[msg.sender][spender] */\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n      sload\n        /* \"AndrewTate-testnet.sol.sol\":18409:18528  Approval(\r... */\n      dup2\n      mload\n      swap1\n      dup2\n      mstore\n      swap1\n      mload\n      swap3\n      swap4\n        /* \"AndrewTate-testnet.sol.sol\":18432:18442  msg.sender */\n      swap3\n        /* \"AndrewTate-testnet.sol.sol\":18409:18528  Approval(\r... */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      swap2\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":18546:18550  true */\n      0x01\n      swap4\n        /* \"AndrewTate-testnet.sol.sol\":17929:18558  function decreaseAllowance(address spender, uint256 subtractedValue)\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":9970:9989  address public pair */\n    tag_215:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x15))\n      dup2\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":12810:13058  function transfer(address to, uint256 value)\r... */\n    tag_219:\n        /* \"AndrewTate-testnet.sol.sol\":12970:12974  bool */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":12915:12917  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":9088:9106  to != address(0x0) */\n      dup2\n      and\n        /* \"AndrewTate-testnet.sol.sol\":9080:9107  require(to != address(0x0)) */\n      tag_433\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_433:\n        /* \"AndrewTate-testnet.sol.sol\":8891:8918  initialDistributionFinished */\n      sload(0x04)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup1\n        /* \"AndrewTate-testnet.sol.sol\":8891:8948  initialDistributionFinished ||\r... */\n      tag_436\n      jumpi\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":8939:8948  isOwner() */\n      tag_436\n        /* \"AndrewTate-testnet.sol.sol\":8939:8946  isOwner */\n      tag_187\n        /* \"AndrewTate-testnet.sol.sol\":8939:8948  isOwner() */\n      jump\t// in\n    tag_436:\n        /* \"AndrewTate-testnet.sol.sol\":8891:8994  initialDistributionFinished ||\r... */\n      dup1\n      tag_437\n      jumpi\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":8983:8993  msg.sender */\n      caller\n        /* \"AndrewTate-testnet.sol.sol\":8969:8994  allowTransfer[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":8969:8982  allowTransfer */\n      0x05\n        /* \"AndrewTate-testnet.sol.sol\":8969:8994  allowTransfer[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"AndrewTate-testnet.sol.sol\":8891:8994  initialDistributionFinished ||\r... */\n    tag_437:\n        /* \"AndrewTate-testnet.sol.sol\":8869:9005  require(\r... */\n      tag_438\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_438:\n        /* \"AndrewTate-testnet.sol.sol\":12992:13028  _transferFrom(msg.sender, to, value) */\n      tag_440\n        /* \"AndrewTate-testnet.sol.sol\":13006:13016  msg.sender */\n      caller\n        /* \"AndrewTate-testnet.sol.sol\":13018:13020  to */\n      dup6\n        /* \"AndrewTate-testnet.sol.sol\":13022:13027  value */\n      dup6\n        /* \"AndrewTate-testnet.sol.sol\":12992:13005  _transferFrom */\n      tag_316\n        /* \"AndrewTate-testnet.sol.sol\":12992:13028  _transferFrom(msg.sender, to, value) */\n      jump\t// in\n    tag_440:\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":13046:13050  true */\n      0x01\n      swap5\n        /* \"AndrewTate-testnet.sol.sol\":12810:13058  function transfer(address to, uint256 value)\r... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":4602:4711  function isMinter(address account) public view returns (bool) {\r... */\n    tag_223:\n        /* \"AndrewTate-testnet.sol.sol\":4658:4662  bool */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":4682:4703  _minters.has(account) */\n      tag_301\n        /* \"AndrewTate-testnet.sol.sol\":4682:4690  _minters */\n      0x03\n        /* \"AndrewTate-testnet.sol.sol\":4695:4702  account */\n      dup4\n        /* \"AndrewTate-testnet.sol.sol\":4682:4694  _minters.has */\n      tag_443\n        /* \"AndrewTate-testnet.sol.sol\":4682:4703  _minters.has(account) */\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":9396:9428  uint256 public RiskFreeValue = 5 */\n    tag_226:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":9729:9765  address public autoLiquidityReceiver */\n    tag_229:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0f))\n      dup2\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":20339:20569  function setSwapBackSettings(\r... */\n    tag_233:\n        /* \"AndrewTate-testnet.sol.sol\":7853:7862  isOwner() */\n      tag_445\n        /* \"AndrewTate-testnet.sol.sol\":7853:7860  isOwner */\n      tag_187\n        /* \"AndrewTate-testnet.sol.sol\":7853:7862  isOwner() */\n      jump\t// in\n    tag_445:\n        /* \"AndrewTate-testnet.sol.sol\":7845:7863  require(isOwner()) */\n      tag_446\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_446:\n        /* \"AndrewTate-testnet.sol.sol\":20477:20488  swapEnabled */\n      0x15\n        /* \"AndrewTate-testnet.sol.sol\":20477:20499  swapEnabled = _enabled */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      dup6\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n        /* \"AndrewTate-testnet.sol.sol\":20529:20561  TOTAL_GONS.div(_denom).mul(_num) */\n      tag_448\n        /* \"AndrewTate-testnet.sol.sol\":20556:20560  _num */\n      dup3\n        /* \"AndrewTate-testnet.sol.sol\":20529:20551  TOTAL_GONS.div(_denom) */\n      tag_449\n        /* \"AndrewTate-testnet.sol.sol\":20544:20550  _denom */\n      dup4\n        /* \"AndrewTate-testnet.sol.sol\":9291:9315  4 * 10**9 * 10**DECIMALS */\n      0x0cecb8f27f4200f3a0000000\n      not(0x00)\n        /* \"AndrewTate-testnet.sol.sol\":10279:10317  MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY */\n      jump(tag_360)\n        /* \"AndrewTate-testnet.sol.sol\":20529:20551  TOTAL_GONS.div(_denom) */\n    tag_449:\n        /* \"AndrewTate-testnet.sol.sol\":20529:20555  TOTAL_GONS.div(_denom).mul */\n      swap1\n      tag_451\n        /* \"AndrewTate-testnet.sol.sol\":20529:20561  TOTAL_GONS.div(_denom).mul(_num) */\n      jump\t// in\n    tag_448:\n        /* \"AndrewTate-testnet.sol.sol\":20510:20526  gonSwapThreshold */\n      0x16\n        /* \"AndrewTate-testnet.sol.sol\":20510:20561  gonSwapThreshold = TOTAL_GONS.div(_denom).mul(_num) */\n      sstore\n      pop\n      pop\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":20339:20569  function setSwapBackSettings(\r... */\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":8684:8723  bool public initialDistributionFinished */\n    tag_236:\n      sload(0x04)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":21513:21770  function sendPresale(address[] calldata recipients, uint256[] calldata values)\r... */\n    tag_246:\n        /* \"AndrewTate-testnet.sol.sol\":7853:7862  isOwner() */\n      tag_453\n        /* \"AndrewTate-testnet.sol.sol\":7853:7860  isOwner */\n      tag_187\n        /* \"AndrewTate-testnet.sol.sol\":7853:7862  isOwner() */\n      jump\t// in\n    tag_453:\n        /* \"AndrewTate-testnet.sol.sol\":7845:7863  require(isOwner()) */\n      tag_454\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_454:\n        /* \"AndrewTate-testnet.sol.sol\":21648:21657  uint256 i */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":21643:21763  for (uint256 i = 0; i < recipients.length; i++) {\r... */\n    tag_456:\n        /* \"AndrewTate-testnet.sol.sol\":21663:21684  i < recipients.length */\n      dup4\n      dup2\n      lt\n        /* \"AndrewTate-testnet.sol.sol\":21643:21763  for (uint256 i = 0; i < recipients.length; i++) {\r... */\n      iszero\n      tag_291\n      jumpi\n        /* \"AndrewTate-testnet.sol.sol\":21702:21753  _transferFrom(msg.sender, recipients[i], values[i]) */\n      tag_459\n        /* \"AndrewTate-testnet.sol.sol\":21716:21726  msg.sender */\n      caller\n        /* \"AndrewTate-testnet.sol.sol\":21728:21738  recipients */\n      dup7\n      dup7\n        /* \"AndrewTate-testnet.sol.sol\":21739:21740  i */\n      dup5\n        /* \"AndrewTate-testnet.sol.sol\":21728:21741  recipients[i] */\n      dup2\n      dup2\n      lt\n      tag_460\n      jumpi\n      invalid\n    tag_460:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"AndrewTate-testnet.sol.sol\":21743:21749  values */\n      dup6\n      dup6\n        /* \"AndrewTate-testnet.sol.sol\":21750:21751  i */\n      dup6\n        /* \"AndrewTate-testnet.sol.sol\":21743:21752  values[i] */\n      dup2\n      dup2\n      lt\n      tag_461\n      jumpi\n      invalid\n    tag_461:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"AndrewTate-testnet.sol.sol\":21702:21715  _transferFrom */\n      tag_316\n        /* \"AndrewTate-testnet.sol.sol\":21702:21753  _transferFrom(msg.sender, recipients[i], values[i]) */\n      jump\t// in\n    tag_459:\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":21686:21689  i++ */\n      0x01\n      add\n        /* \"AndrewTate-testnet.sol.sol\":21643:21763  for (uint256 i = 0; i < recipients.length; i++) {\r... */\n      jump(tag_456)\n        /* \"AndrewTate-testnet.sol.sol\":19307:19420  function checkFeeExempt(address _addr) external view returns (bool) {\r... */\n    tag_250:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":19393:19412  _isFeeExempt[_addr] */\n      and\n        /* \"AndrewTate-testnet.sol.sol\":19369:19373  bool */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":19393:19412  _isFeeExempt[_addr] */\n      swap1\n      dup2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":19393:19405  _isFeeExempt */\n      0x06\n        /* \"AndrewTate-testnet.sol.sol\":19393:19412  _isFeeExempt[_addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":19307:19420  function checkFeeExempt(address _addr) external view returns (bool) {\r... */\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":23468:23759  function getLiquidityBacking(uint256 accuracy)\r... */\n    tag_254:\n        /* \"AndrewTate-testnet.sol.sol\":23638:23654  _gonsPerFragment */\n      sload(0x19)\n        /* \"AndrewTate-testnet.sol.sol\":23628:23632  pair */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x15))\n        /* \"AndrewTate-testnet.sol.sol\":23563:23570  uint256 */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":23615:23633  _gonBalances[pair] */\n      swap1\n      dup2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":23615:23627  _gonBalances */\n      0x1a\n        /* \"AndrewTate-testnet.sol.sol\":23615:23633  _gonBalances[pair] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"AndrewTate-testnet.sol.sol\":23563:23570  uint256 */\n      swap1\n      swap2\n      dup3\n      swap2\n        /* \"AndrewTate-testnet.sol.sol\":23615:23655  _gonBalances[pair].div(_gonsPerFragment) */\n      tag_464\n      swap2\n        /* \"AndrewTate-testnet.sol.sol\":23615:23637  _gonBalances[pair].div */\n      tag_282\n        /* \"AndrewTate-testnet.sol.sol\":23615:23655  _gonBalances[pair].div(_gonsPerFragment) */\n      jump\t// in\n    tag_464:\n        /* \"AndrewTate-testnet.sol.sol\":23588:23655  uint256 liquidityBalance = _gonBalances[pair].div(_gonsPerFragment) */\n      swap1\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":23686:23751  accuracy.mul(liquidityBalance.mul(2)).div(getCirculatingSupply()) */\n      tag_465\n        /* \"AndrewTate-testnet.sol.sol\":23728:23750  getCirculatingSupply() */\n      tag_466\n        /* \"AndrewTate-testnet.sol.sol\":23728:23748  getCirculatingSupply */\n      tag_112\n        /* \"AndrewTate-testnet.sol.sol\":23728:23750  getCirculatingSupply() */\n      jump\t// in\n    tag_466:\n        /* \"AndrewTate-testnet.sol.sol\":23686:23723  accuracy.mul(liquidityBalance.mul(2)) */\n      tag_319\n        /* \"AndrewTate-testnet.sol.sol\":23699:23722  liquidityBalance.mul(2) */\n      tag_468\n        /* \"AndrewTate-testnet.sol.sol\":23699:23715  liquidityBalance */\n      dup5\n        /* \"AndrewTate-testnet.sol.sol\":23720:23721  2 */\n      0x02\n        /* \"AndrewTate-testnet.sol.sol\":23699:23719  liquidityBalance.mul */\n      tag_451\n        /* \"AndrewTate-testnet.sol.sol\":23699:23722  liquidityBalance.mul(2) */\n      jump\t// in\n    tag_468:\n        /* \"AndrewTate-testnet.sol.sol\":23686:23694  accuracy */\n      dup7\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":23686:23698  accuracy.mul */\n      tag_451\n        /* \"AndrewTate-testnet.sol.sol\":23686:23723  accuracy.mul(liquidityBalance.mul(2)) */\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":23686:23751  accuracy.mul(liquidityBalance.mul(2)).div(getCirculatingSupply()) */\n    tag_465:\n        /* \"AndrewTate-testnet.sol.sol\":23666:23751  return\r... */\n      swap4\n        /* \"AndrewTate-testnet.sol.sol\":23468:23759  function getLiquidityBacking(uint256 accuracy)\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":19550:19654  function enableTransfer(address _addr) external onlyOwner {\r... */\n    tag_258:\n        /* \"AndrewTate-testnet.sol.sol\":7853:7862  isOwner() */\n      tag_470\n        /* \"AndrewTate-testnet.sol.sol\":7853:7860  isOwner */\n      tag_187\n        /* \"AndrewTate-testnet.sol.sol\":7853:7862  isOwner() */\n      jump\t// in\n    tag_470:\n        /* \"AndrewTate-testnet.sol.sol\":7845:7863  require(isOwner()) */\n      tag_471\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_471:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":19619:19639  allowTransfer[_addr] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":19619:19632  allowTransfer */\n      0x05\n        /* \"AndrewTate-testnet.sol.sol\":19619:19639  allowTransfer[_addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"AndrewTate-testnet.sol.sol\":19619:19646  allowTransfer[_addr] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"AndrewTate-testnet.sol.sol\":19642:19646  true */\n      0x01\n        /* \"AndrewTate-testnet.sol.sol\":19619:19646  allowTransfer[_addr] = true */\n      or\n      swap1\n      sstore\n        /* \"AndrewTate-testnet.sol.sol\":19550:19654  function enableTransfer(address _addr) external onlyOwner {\r... */\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":9810:9846  address public RiskFreeValueReceiver */\n    tag_261:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x11))\n      dup2\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":21994:22332  function setFeeReceivers(\r... */\n    tag_265:\n        /* \"AndrewTate-testnet.sol.sol\":7853:7862  isOwner() */\n      tag_474\n        /* \"AndrewTate-testnet.sol.sol\":7853:7860  isOwner */\n      tag_187\n        /* \"AndrewTate-testnet.sol.sol\":7853:7862  isOwner() */\n      jump\t// in\n    tag_474:\n        /* \"AndrewTate-testnet.sol.sol\":7845:7863  require(isOwner()) */\n      tag_475\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_475:\n        /* \"AndrewTate-testnet.sol.sol\":22174:22195  autoLiquidityReceiver */\n      0x0f\n        /* \"AndrewTate-testnet.sol.sol\":22174:22220  autoLiquidityReceiver = _autoLiquidityReceiver */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap5\n      dup6\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap2\n      dup3\n      and\n      or\n      swap1\n      swap2\n      sstore\n        /* \"AndrewTate-testnet.sol.sol\":22231:22247  TreasuryReceiver */\n      0x10\n        /* \"AndrewTate-testnet.sol.sol\":22231:22267  TreasuryReceiver = _TreasuryReceiver */\n      dup1\n      sload\n      swap4\n      dup6\n      and\n      swap4\n      dup3\n      and\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap3\n      sstore\n        /* \"AndrewTate-testnet.sol.sol\":22278:22299  RiskFreeValueReceiver */\n      0x11\n        /* \"AndrewTate-testnet.sol.sol\":22278:22324  RiskFreeValueReceiver = _RiskFreeValueReceiver */\n      dup1\n      sload\n      swap2\n      swap1\n      swap4\n      and\n      swap2\n      and\n      or\n      swap1\n      sstore\n        /* \"AndrewTate-testnet.sol.sol\":21994:22332  function setFeeReceivers(\r... */\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":13214:13408  function allowance(address owner_, address spender)\r... */\n    tag_269:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":13366:13391  _allowedFragments[owner_] */\n      swap2\n      dup3\n      and\n        /* \"AndrewTate-testnet.sol.sol\":13334:13341  uint256 */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":13366:13391  _allowedFragments[owner_] */\n      swap1\n      dup2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":13366:13383  _allowedFragments */\n      0x1b\n        /* \"AndrewTate-testnet.sol.sol\":13366:13391  _allowedFragments[owner_] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"AndrewTate-testnet.sol.sol\":13366:13400  _allowedFragments[owner_][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":13214:13408  function allowance(address owner_, address spender)\r... */\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":8125:8234  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_273:\n        /* \"AndrewTate-testnet.sol.sol\":7853:7862  isOwner() */\n      tag_479\n        /* \"AndrewTate-testnet.sol.sol\":7853:7860  isOwner */\n      tag_187\n        /* \"AndrewTate-testnet.sol.sol\":7853:7862  isOwner() */\n      jump\t// in\n    tag_479:\n        /* \"AndrewTate-testnet.sol.sol\":7845:7863  require(isOwner()) */\n      tag_480\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_480:\n        /* \"AndrewTate-testnet.sol.sol\":8198:8226  _transferOwnership(newOwner) */\n      tag_335\n        /* \"AndrewTate-testnet.sol.sol\":8217:8225  newOwner */\n      dup2\n        /* \"AndrewTate-testnet.sol.sol\":8198:8216  _transferOwnership */\n      tag_483\n        /* \"AndrewTate-testnet.sol.sol\":8198:8226  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":9939:9963  IDEXRouter public router */\n    tag_276:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x14))\n      dup2\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":10596:10637  mapping(address => bool) public blacklist */\n    tag_280:\n      mstore(0x20, 0x1c)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":1900:2081  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_281:\n        /* \"AndrewTate-testnet.sol.sol\":1958:1965  uint256 */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":1990:1995  a + b */\n      dup3\n      dup3\n      add\n        /* \"AndrewTate-testnet.sol.sol\":2014:2020  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"AndrewTate-testnet.sol.sol\":2006:2052  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_465\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"AndrewTate-testnet.sol.sol\":2725:2857  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_282:\n        /* \"AndrewTate-testnet.sol.sol\":2783:2790  uint256 */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":2810:2849  div(a, b, \"SafeMath: division by zero\") */\n      tag_465\n        /* \"AndrewTate-testnet.sol.sol\":2814:2815  a */\n      dup4\n        /* \"AndrewTate-testnet.sol.sol\":2817:2818  b */\n      dup4\n        /* \"AndrewTate-testnet.sol.sol\":2810:2849  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":2810:2813  div */\n      tag_488\n        /* \"AndrewTate-testnet.sol.sol\":2810:2849  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":3450:3628  function add(Role storage role, address account) internal {\r... */\n    tag_283:\n        /* \"AndrewTate-testnet.sol.sol\":3528:3546  has(role, account) */\n      tag_490\n        /* \"AndrewTate-testnet.sol.sol\":3532:3536  role */\n      dup3\n        /* \"AndrewTate-testnet.sol.sol\":3538:3545  account */\n      dup3\n        /* \"AndrewTate-testnet.sol.sol\":3528:3531  has */\n      tag_443\n        /* \"AndrewTate-testnet.sol.sol\":3528:3546  has(role, account) */\n      jump\t// in\n    tag_490:\n        /* \"AndrewTate-testnet.sol.sol\":3527:3546  !has(role, account) */\n      iszero\n        /* \"AndrewTate-testnet.sol.sol\":3519:3582  require(!has(role, account), \"Roles: account already has role\") */\n      tag_491\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_491:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":3593:3613  role.bearer[account] */\n      and\n        /* \"AndrewTate-testnet.sol.sol\":3593:3604  role.bearer */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":3593:3613  role.bearer[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"AndrewTate-testnet.sol.sol\":3593:3620  role.bearer[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"AndrewTate-testnet.sol.sol\":3616:3620  true */\n      0x01\n        /* \"AndrewTate-testnet.sol.sol\":3593:3620  role.bearer[account] = true */\n      or\n      swap1\n      sstore\n        /* \"AndrewTate-testnet.sol.sol\":3450:3628  function add(Role storage role, address account) internal {\r... */\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":2233:2459  function sub(\r... */\n    tag_314:\n        /* \"AndrewTate-testnet.sol.sol\":2353:2360  uint256 */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":2389:2401  errorMessage */\n      dup2\n        /* \"AndrewTate-testnet.sol.sol\":2381:2387  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"AndrewTate-testnet.sol.sol\":2373:2402  require(b <= a, errorMessage) */\n      tag_493\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_494:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_496\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_494)\n    tag_496:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_497\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_497:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_493:\n      pop\n      pop\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":2425:2430  a - b */\n      swap1\n      sub\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":2233:2459  function sub(\r... */\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":13909:14844  function _transferFrom(\r... */\n    tag_316:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":14061:14078  blacklist[sender] */\n      dup4\n      and\n        /* \"AndrewTate-testnet.sol.sol\":14035:14039  bool */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":14061:14078  blacklist[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":14061:14070  blacklist */\n      0x1c\n        /* \"AndrewTate-testnet.sol.sol\":14061:14078  blacklist[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"AndrewTate-testnet.sol.sol\":14060:14078  !blacklist[sender] */\n      iszero\n        /* \"AndrewTate-testnet.sol.sol\":14060:14103  !blacklist[sender] && !blacklist[recipient] */\n      dup1\n      iszero\n      tag_499\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":14083:14103  blacklist[recipient] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":14083:14092  blacklist */\n      0x1c\n        /* \"AndrewTate-testnet.sol.sol\":14083:14103  blacklist[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"AndrewTate-testnet.sol.sol\":14082:14103  !blacklist[recipient] */\n      iszero\n        /* \"AndrewTate-testnet.sol.sol\":14060:14103  !blacklist[sender] && !blacklist[recipient] */\n    tag_499:\n        /* \"AndrewTate-testnet.sol.sol\":14052:14120  require(!blacklist[sender] && !blacklist[recipient], 'in_blacklist') */\n      tag_500\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa2, 0x1a5b97d89b1858dadb1a5cdd)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_500:\n        /* \"AndrewTate-testnet.sol.sol\":14135:14141  inSwap */\n      and(0xff, sload(0x17))\n        /* \"AndrewTate-testnet.sol.sol\":14131:14218  if (inSwap) {\r... */\n      iszero\n      tag_501\n      jumpi\n        /* \"AndrewTate-testnet.sol.sol\":14165:14206  _basicTransfer(sender, recipient, amount) */\n      tag_502\n        /* \"AndrewTate-testnet.sol.sol\":14180:14186  sender */\n      dup5\n        /* \"AndrewTate-testnet.sol.sol\":14188:14197  recipient */\n      dup5\n        /* \"AndrewTate-testnet.sol.sol\":14199:14205  amount */\n      dup5\n        /* \"AndrewTate-testnet.sol.sol\":14165:14179  _basicTransfer */\n      tag_503\n        /* \"AndrewTate-testnet.sol.sol\":14165:14206  _basicTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_502:\n        /* \"AndrewTate-testnet.sol.sol\":14158:14206  return _basicTransfer(sender, recipient, amount) */\n      swap1\n      pop\n      jump(tag_465)\n        /* \"AndrewTate-testnet.sol.sol\":14131:14218  if (inSwap) {\r... */\n    tag_501:\n        /* \"AndrewTate-testnet.sol.sol\":14230:14247  uint256 gonAmount */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":14250:14278  amount.mul(_gonsPerFragment) */\n      tag_504\n        /* \"AndrewTate-testnet.sol.sol\":14261:14277  _gonsPerFragment */\n      sload(0x19)\n        /* \"AndrewTate-testnet.sol.sol\":14250:14256  amount */\n      dup5\n        /* \"AndrewTate-testnet.sol.sol\":14250:14260  amount.mul */\n      tag_451\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":14250:14278  amount.mul(_gonsPerFragment) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_504:\n        /* \"AndrewTate-testnet.sol.sol\":14230:14278  uint256 gonAmount = amount.mul(_gonsPerFragment) */\n      swap1\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":14295:14311  shouldSwapBack() */\n      tag_505\n        /* \"AndrewTate-testnet.sol.sol\":14295:14309  shouldSwapBack */\n      tag_506\n        /* \"AndrewTate-testnet.sol.sol\":14295:14311  shouldSwapBack() */\n      jump\t// in\n    tag_505:\n        /* \"AndrewTate-testnet.sol.sol\":14291:14350  if (shouldSwapBack()) {\r... */\n      iszero\n      tag_508\n      jumpi\n        /* \"AndrewTate-testnet.sol.sol\":14328:14338  swapBack() */\n      tag_508\n        /* \"AndrewTate-testnet.sol.sol\":14328:14336  swapBack */\n      tag_509\n        /* \"AndrewTate-testnet.sol.sol\":14328:14338  swapBack() */\n      jump\t// in\n    tag_508:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":14385:14405  _gonBalances[sender] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":14385:14397  _gonBalances */\n      0x1a\n        /* \"AndrewTate-testnet.sol.sol\":14385:14405  _gonBalances[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"AndrewTate-testnet.sol.sol\":14385:14420  _gonBalances[sender].sub(gonAmount) */\n      tag_510\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":14410:14419  gonAmount */\n      dup3\n        /* \"AndrewTate-testnet.sol.sol\":14385:14409  _gonBalances[sender].sub */\n      tag_322\n        /* \"AndrewTate-testnet.sol.sol\":14385:14420  _gonBalances[sender].sub(gonAmount) */\n      jump\t// in\n    tag_510:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":14362:14382  _gonBalances[sender] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":14362:14374  _gonBalances */\n      0x1a\n        /* \"AndrewTate-testnet.sol.sol\":14362:14382  _gonBalances[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"AndrewTate-testnet.sol.sol\":14362:14420  _gonBalances[sender] = _gonBalances[sender].sub(gonAmount) */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"AndrewTate-testnet.sol.sol\":14461:14493  shouldTakeFee(sender, recipient) */\n      tag_511\n        /* \"AndrewTate-testnet.sol.sol\":14375:14381  sender */\n      dup7\n        /* \"AndrewTate-testnet.sol.sol\":14483:14492  recipient */\n      dup7\n        /* \"AndrewTate-testnet.sol.sol\":14461:14474  shouldTakeFee */\n      tag_512\n        /* \"AndrewTate-testnet.sol.sol\":14461:14493  shouldTakeFee(sender, recipient) */\n      jump\t// in\n    tag_511:\n        /* \"AndrewTate-testnet.sol.sol\":14461:14571  shouldTakeFee(sender, recipient)\r... */\n      tag_513\n      jumpi\n        /* \"AndrewTate-testnet.sol.sol\":14562:14571  gonAmount */\n      dup2\n        /* \"AndrewTate-testnet.sol.sol\":14461:14571  shouldTakeFee(sender, recipient)\r... */\n      jump(tag_515)\n    tag_513:\n        /* \"AndrewTate-testnet.sol.sol\":14509:14546  takeFee(sender, recipient, gonAmount) */\n      tag_515\n        /* \"AndrewTate-testnet.sol.sol\":14517:14523  sender */\n      dup7\n        /* \"AndrewTate-testnet.sol.sol\":14525:14534  recipient */\n      dup7\n        /* \"AndrewTate-testnet.sol.sol\":14536:14545  gonAmount */\n      dup5\n        /* \"AndrewTate-testnet.sol.sol\":14509:14516  takeFee */\n      tag_516\n        /* \"AndrewTate-testnet.sol.sol\":14509:14546  takeFee(sender, recipient, gonAmount) */\n      jump\t// in\n    tag_515:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":14608:14631  _gonBalances[recipient] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":14608:14620  _gonBalances */\n      0x1a\n        /* \"AndrewTate-testnet.sol.sol\":14608:14631  _gonBalances[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"AndrewTate-testnet.sol.sol\":14433:14571  uint256 gonAmountReceived = shouldTakeFee(sender, recipient)\r... */\n      swap1\n      swap2\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":14608:14678  _gonBalances[recipient].add(\r... */\n      tag_517\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":14433:14571  uint256 gonAmountReceived = shouldTakeFee(sender, recipient)\r... */\n      dup3\n        /* \"AndrewTate-testnet.sol.sol\":14608:14635  _gonBalances[recipient].add */\n      tag_281\n        /* \"AndrewTate-testnet.sol.sol\":14608:14678  _gonBalances[recipient].add(\r... */\n      jump\t// in\n    tag_517:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":14582:14605  _gonBalances[recipient] */\n      dup1\n      dup8\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":14582:14594  _gonBalances */\n      0x1a\n        /* \"AndrewTate-testnet.sol.sol\":14582:14605  _gonBalances[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"AndrewTate-testnet.sol.sol\":14582:14678  _gonBalances[recipient] = _gonBalances[recipient].add(\r... */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"AndrewTate-testnet.sol.sol\":14786:14802  _gonsPerFragment */\n      sload(0x19)\n        /* \"AndrewTate-testnet.sol.sol\":14696:14814  Transfer(\r... */\n      swap1\n      dup9\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":14764:14803  gonAmountReceived.div(_gonsPerFragment) */\n      tag_518\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":14764:14781  gonAmountReceived */\n      dup6\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":14764:14785  gonAmountReceived.div */\n      tag_282\n        /* \"AndrewTate-testnet.sol.sol\":14764:14803  gonAmountReceived.div(_gonsPerFragment) */\n      jump\t// in\n    tag_518:\n        /* \"AndrewTate-testnet.sol.sol\":14696:14814  Transfer(\r... */\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log3\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":14832:14836  true */\n      0x01\n      swap6\n        /* \"AndrewTate-testnet.sol.sol\":13909:14844  function _transferFrom(\r... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":2089:2225  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_322:\n        /* \"AndrewTate-testnet.sol.sol\":2147:2154  uint256 */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":2174:2217  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_465\n        /* \"AndrewTate-testnet.sol.sol\":2178:2179  a */\n      dup4\n        /* \"AndrewTate-testnet.sol.sol\":2181:2182  b */\n      dup4\n        /* \"AndrewTate-testnet.sol.sol\":2174:2217  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":2174:2177  sub */\n      tag_314\n        /* \"AndrewTate-testnet.sol.sol\":2174:2217  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":4934:5064  function _removeMinter(address account) internal {\r... */\n    tag_336:\n        /* \"AndrewTate-testnet.sol.sol\":4994:5018  _minters.remove(account) */\n      tag_522\n        /* \"AndrewTate-testnet.sol.sol\":4994:5002  _minters */\n      0x03\n        /* \"AndrewTate-testnet.sol.sol\":5010:5017  account */\n      dup3\n        /* \"AndrewTate-testnet.sol.sol\":4994:5009  _minters.remove */\n      tag_523\n        /* \"AndrewTate-testnet.sol.sol\":4994:5018  _minters.remove(account) */\n      jump\t// in\n    tag_522:\n        /* \"AndrewTate-testnet.sol.sol\":5034:5056  MinterRemoved(account) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n      0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"AndrewTate-testnet.sol.sol\":4934:5064  function _removeMinter(address account) internal {\r... */\n      pop\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":4804:4926  function _addMinter(address account) internal {\r... */\n    tag_420:\n        /* \"AndrewTate-testnet.sol.sol\":4861:4882  _minters.add(account) */\n      tag_525\n        /* \"AndrewTate-testnet.sol.sol\":4861:4869  _minters */\n      0x03\n        /* \"AndrewTate-testnet.sol.sol\":4874:4881  account */\n      dup3\n        /* \"AndrewTate-testnet.sol.sol\":4861:4873  _minters.add */\n      tag_283\n        /* \"AndrewTate-testnet.sol.sol\":4861:4882  _minters.add(account) */\n      jump\t// in\n    tag_525:\n        /* \"AndrewTate-testnet.sol.sol\":4898:4918  MinterAdded(account) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n      0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"AndrewTate-testnet.sol.sol\":4804:4926  function _addMinter(address account) internal {\r... */\n      pop\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":3986:4189  function has(Role storage role, address account) internal view returns (bool) {\r... */\n    tag_443:\n        /* \"AndrewTate-testnet.sol.sol\":4058:4062  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":4083:4104  account != address(0) */\n      dup3\n      and\n        /* \"AndrewTate-testnet.sol.sol\":4075:4143  require(account != address(0), \"Roles: account is the zero address\") */\n      tag_527\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_527:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":4161:4181  role.bearer[account] */\n      and\n        /* \"AndrewTate-testnet.sol.sol\":4161:4172  role.bearer */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":4161:4181  role.bearer[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":3986:4189  function has(Role storage role, address account) internal view returns (bool) {\r... */\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":2467:2717  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_451:\n        /* \"AndrewTate-testnet.sol.sol\":2525:2532  uint256 */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":2549:2555  a == 0 */\n      dup3\n        /* \"AndrewTate-testnet.sol.sol\":2545:2592  if (a == 0) {\r... */\n      tag_529\n      jumpi\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":2579:2580  0 */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":2572:2580  return 0 */\n      jump(tag_301)\n        /* \"AndrewTate-testnet.sol.sol\":2545:2592  if (a == 0) {\r... */\n    tag_529:\n        /* \"AndrewTate-testnet.sol.sol\":2616:2621  a * b */\n      dup3\n      dup3\n      mul\n        /* \"AndrewTate-testnet.sol.sol\":2620:2621  b */\n      dup3\n        /* \"AndrewTate-testnet.sol.sol\":2616:2617  a */\n      dup5\n        /* \"AndrewTate-testnet.sol.sol\":2616:2621  a * b */\n      dup3\n        /* \"AndrewTate-testnet.sol.sol\":2616:2617  a */\n      dup2\n        /* \"AndrewTate-testnet.sol.sol\":2640:2645  c / a */\n      tag_530\n      jumpi\n      invalid\n    tag_530:\n      div\n        /* \"AndrewTate-testnet.sol.sol\":2640:2650  c / a == b */\n      eq\n        /* \"AndrewTate-testnet.sol.sol\":2632:2688  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_465\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"AndrewTate-testnet.sol.sol\":8242:8429  function _transferOwnership(address newOwner) internal {\r... */\n    tag_483:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":8316:8338  newOwner != address(0) */\n      dup2\n      and\n        /* \"AndrewTate-testnet.sol.sol\":8308:8339  require(newOwner != address(0)) */\n      tag_533\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_533:\n        /* \"AndrewTate-testnet.sol.sol\":8376:8382  _owner */\n      sload(0x02)\n        /* \"AndrewTate-testnet.sol.sol\":8355:8393  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup5\n      and\n      swap3\n        /* \"AndrewTate-testnet.sol.sol\":8376:8382  _owner */\n      0x0100\n      swap1\n      div\n      and\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":8355:8393  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"AndrewTate-testnet.sol.sol\":8404:8410  _owner */\n      0x02\n        /* \"AndrewTate-testnet.sol.sol\":8404:8421  _owner = newOwner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      0x0100\n      mul\n      not(sub(shl(0xa8, 0x01), 0x0100))\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"AndrewTate-testnet.sol.sol\":8242:8429  function _transferOwnership(address newOwner) internal {\r... */\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":2865:3090  function div(\r... */\n    tag_488:\n        /* \"AndrewTate-testnet.sol.sol\":2985:2992  uint256 */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":3020:3032  errorMessage */\n      dup2\n        /* \"AndrewTate-testnet.sol.sol\":3013:3018  b > 0 */\n      dup4\n        /* \"AndrewTate-testnet.sol.sol\":3005:3033  require(b > 0, errorMessage) */\n      tag_535\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      dup2\n      mstore\n      dup4\n      mload\n      0x24\n      dup5\n      add\n      mstore\n      dup4\n      mload\n      swap1\n      swap3\n      dup4\n      swap3\n      0x44\n      swap1\n      swap2\n      add\n      swap2\n      swap1\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n      dup4\n      iszero\n      tag_496\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_494)\n    tag_535:\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":3044:3053  uint256 c */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":3060:3061  b */\n      dup4\n        /* \"AndrewTate-testnet.sol.sol\":3056:3057  a */\n      dup6\n        /* \"AndrewTate-testnet.sol.sol\":3056:3061  a / b */\n      dup2\n      tag_540\n      jumpi\n      invalid\n    tag_540:\n      div\n      swap6\n        /* \"AndrewTate-testnet.sol.sol\":2865:3090  function div(\r... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":13562:13901  function _basicTransfer(\r... */\n    tag_503:\n        /* \"AndrewTate-testnet.sol.sol\":13680:13684  bool */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":13697:13714  uint256 gonAmount */\n      dup1\n        /* \"AndrewTate-testnet.sol.sol\":13717:13745  amount.mul(_gonsPerFragment) */\n      tag_542\n        /* \"AndrewTate-testnet.sol.sol\":13728:13744  _gonsPerFragment */\n      sload(0x19)\n        /* \"AndrewTate-testnet.sol.sol\":13717:13723  amount */\n      dup5\n        /* \"AndrewTate-testnet.sol.sol\":13717:13727  amount.mul */\n      tag_451\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":13717:13745  amount.mul(_gonsPerFragment) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_542:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":13777:13795  _gonBalances[from] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":13777:13789  _gonBalances */\n      0x1a\n        /* \"AndrewTate-testnet.sol.sol\":13777:13795  _gonBalances[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"AndrewTate-testnet.sol.sol\":13697:13745  uint256 gonAmount = amount.mul(_gonsPerFragment) */\n      swap1\n      swap2\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":13777:13810  _gonBalances[from].sub(gonAmount) */\n      tag_543\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":13697:13745  uint256 gonAmount = amount.mul(_gonsPerFragment) */\n      dup3\n        /* \"AndrewTate-testnet.sol.sol\":13777:13799  _gonBalances[from].sub */\n      tag_322\n        /* \"AndrewTate-testnet.sol.sol\":13777:13810  _gonBalances[from].sub(gonAmount) */\n      jump\t// in\n    tag_543:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":13756:13774  _gonBalances[from] */\n      dup1\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":13756:13768  _gonBalances */\n      0x1a\n        /* \"AndrewTate-testnet.sol.sol\":13756:13774  _gonBalances[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"AndrewTate-testnet.sol.sol\":13756:13810  _gonBalances[from] = _gonBalances[from].sub(gonAmount) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"AndrewTate-testnet.sol.sol\":13840:13856  _gonBalances[to] */\n      swap1\n      dup7\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"AndrewTate-testnet.sol.sol\":13840:13871  _gonBalances[to].add(gonAmount) */\n      tag_544\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":13861:13870  gonAmount */\n      dup3\n        /* \"AndrewTate-testnet.sol.sol\":13840:13860  _gonBalances[to].add */\n      tag_281\n        /* \"AndrewTate-testnet.sol.sol\":13840:13871  _gonBalances[to].add(gonAmount) */\n      jump\t// in\n    tag_544:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":13821:13837  _gonBalances[to] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":13821:13833  _gonBalances */\n      0x1a\n        /* \"AndrewTate-testnet.sol.sol\":13821:13837  _gonBalances[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"AndrewTate-testnet.sol.sol\":13821:13871  _gonBalances[to] = _gonBalances[to].add(gonAmount) */\n      sstore\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":13889:13893  true */\n      0x01\n      swap1\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":13562:13901  function _basicTransfer(\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":20577:20805  function shouldSwapBack() internal view returns (bool) {\r... */\n    tag_506:\n        /* \"AndrewTate-testnet.sol.sol\":20677:20681  pair */\n      sload(0x15)\n        /* \"AndrewTate-testnet.sol.sol\":20626:20630  bool */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":20677:20681  pair */\n      and\n        /* \"AndrewTate-testnet.sol.sol\":20663:20673  msg.sender */\n      caller\n        /* \"AndrewTate-testnet.sol.sol\":20663:20681  msg.sender != pair */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":20663:20705  msg.sender != pair &&\r... */\n      tag_546\n      jumpi\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":20699:20705  inSwap */\n      and(0xff, sload(0x17))\n        /* \"AndrewTate-testnet.sol.sol\":20698:20705  !inSwap */\n      iszero\n        /* \"AndrewTate-testnet.sol.sol\":20663:20705  msg.sender != pair &&\r... */\n    tag_546:\n        /* \"AndrewTate-testnet.sol.sol\":20663:20733  msg.sender != pair &&\r... */\n      dup1\n      iszero\n      tag_547\n      jumpi\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":20722:20733  swapEnabled */\n      sload(0x15)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"AndrewTate-testnet.sol.sol\":20663:20733  msg.sender != pair &&\r... */\n    tag_547:\n        /* \"AndrewTate-testnet.sol.sol\":20663:20797  msg.sender != pair &&\r... */\n      dup1\n      iszero\n      tag_318\n      jumpi\n      pop\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":20781:20797  gonSwapThreshold */\n      sload(0x16)\n        /* \"AndrewTate-testnet.sol.sol\":20771:20775  this */\n      address\n        /* \"AndrewTate-testnet.sol.sol\":20750:20777  _gonBalances[address(this)] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":20750:20762  _gonBalances */\n      0x1a\n        /* \"AndrewTate-testnet.sol.sol\":20750:20777  _gonBalances[address(this)] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"AndrewTate-testnet.sol.sol\":20750:20797  _gonBalances[address(this)] >= gonSwapThreshold */\n      lt\n      iszero\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":20577:20805  function shouldSwapBack() internal view returns (bool) {\r... */\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":15317:17364  function swapBack() internal swapping {\r... */\n    tag_509:\n        /* \"AndrewTate-testnet.sol.sol\":10151:10157  inSwap */\n      0x17\n        /* \"AndrewTate-testnet.sol.sol\":10151:10164  inSwap = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"AndrewTate-testnet.sol.sol\":10160:10164  true */\n      0x01\n        /* \"AndrewTate-testnet.sol.sol\":10151:10164  inSwap = true */\n      or\n      swap1\n      sstore\n        /* \"AndrewTate-testnet.sol.sol\":15426:15441  targetLiquidity */\n      sload(0x12)\n        /* \"AndrewTate-testnet.sol.sol\":15456:15482  targetLiquidityDenominator */\n      sload(0x13)\n        /* \"AndrewTate-testnet.sol.sol\":10151:10157  inSwap */\n      0x00\n      swap2\n        /* \"AndrewTate-testnet.sol.sol\":15396:15493  isOverLiquified(\r... */\n      tag_551\n      swap2\n        /* \"AndrewTate-testnet.sol.sol\":15396:15411  isOverLiquified */\n      tag_92\n        /* \"AndrewTate-testnet.sol.sol\":15396:15493  isOverLiquified(\r... */\n      jump\t// in\n    tag_551:\n        /* \"AndrewTate-testnet.sol.sol\":15396:15538  isOverLiquified(\r... */\n      tag_552\n      jumpi\n        /* \"AndrewTate-testnet.sol.sol\":15526:15538  liquidityFee */\n      sload(0x07)\n        /* \"AndrewTate-testnet.sol.sol\":15396:15538  isOverLiquified(\r... */\n      jump(tag_553)\n    tag_552:\n        /* \"AndrewTate-testnet.sol.sol\":15509:15510  0 */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":15396:15538  isOverLiquified(\r... */\n    tag_553:\n        /* \"AndrewTate-testnet.sol.sol\":15626:15642  _gonsPerFragment */\n      sload(0x19)\n        /* \"AndrewTate-testnet.sol.sol\":15601:15605  this */\n      address\n        /* \"AndrewTate-testnet.sol.sol\":15549:15577  uint256 contractTokenBalance */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":15580:15607  _gonBalances[address(this)] */\n      swap1\n      dup2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":15580:15592  _gonBalances */\n      0x1a\n        /* \"AndrewTate-testnet.sol.sol\":15580:15607  _gonBalances[address(this)] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"AndrewTate-testnet.sol.sol\":15366:15538  uint256 dynamicLiquidityFee = isOverLiquified(\r... */\n      swap3\n      swap4\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":15549:15577  uint256 contractTokenBalance */\n      swap2\n        /* \"AndrewTate-testnet.sol.sol\":15580:15653  _gonBalances[address(this)].div(\r... */\n      tag_554\n      swap2\n        /* \"AndrewTate-testnet.sol.sol\":15580:15611  _gonBalances[address(this)].div */\n      tag_282\n        /* \"AndrewTate-testnet.sol.sol\":15580:15653  _gonBalances[address(this)].div(\r... */\n      jump\t// in\n    tag_554:\n        /* \"AndrewTate-testnet.sol.sol\":15549:15653  uint256 contractTokenBalance = _gonBalances[address(this)].div(\r... */\n      swap1\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":15664:15687  uint256 amountToLiquify */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":15690:15798  contractTokenBalance\r... */\n      tag_555\n        /* \"AndrewTate-testnet.sol.sol\":15796:15797  2 */\n      0x02\n        /* \"AndrewTate-testnet.sol.sol\":15690:15777  contractTokenBalance\r... */\n      tag_319\n        /* \"AndrewTate-testnet.sol.sol\":15768:15776  totalFee */\n      sload(0x0b)\n        /* \"AndrewTate-testnet.sol.sol\":15690:15749  contractTokenBalance\r... */\n      tag_319\n        /* \"AndrewTate-testnet.sol.sol\":15729:15748  dynamicLiquidityFee */\n      dup8\n        /* \"AndrewTate-testnet.sol.sol\":15690:15710  contractTokenBalance */\n      dup8\n        /* \"AndrewTate-testnet.sol.sol\":15690:15728  contractTokenBalance\r... */\n      tag_451\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":15690:15749  contractTokenBalance\r... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":15690:15798  contractTokenBalance\r... */\n    tag_555:\n        /* \"AndrewTate-testnet.sol.sol\":15664:15798  uint256 amountToLiquify = contractTokenBalance\r... */\n      swap1\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":15809:15829  uint256 amountToSwap */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":15832:15873  contractTokenBalance.sub(amountToLiquify) */\n      tag_558\n        /* \"AndrewTate-testnet.sol.sol\":15832:15852  contractTokenBalance */\n      dup4\n        /* \"AndrewTate-testnet.sol.sol\":15664:15798  uint256 amountToLiquify = contractTokenBalance\r... */\n      dup4\n        /* \"AndrewTate-testnet.sol.sol\":15832:15856  contractTokenBalance.sub */\n      tag_322\n        /* \"AndrewTate-testnet.sol.sol\":15832:15873  contractTokenBalance.sub(amountToLiquify) */\n      jump\t// in\n    tag_558:\n        /* \"AndrewTate-testnet.sol.sol\":15910:15926  new address[](2) */\n      0x40\n      dup1\n      mload\n        /* \"AndrewTate-testnet.sol.sol\":15924:15925  2 */\n      0x02\n        /* \"AndrewTate-testnet.sol.sol\":15910:15926  new address[](2) */\n      dup1\n      dup3\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":15886:15907  address[] memory path */\n      0x60\n        /* \"AndrewTate-testnet.sol.sol\":15910:15926  new address[](2) */\n      dup1\n      dup4\n      add\n      dup5\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":15809:15873  uint256 amountToSwap = contractTokenBalance.sub(amountToLiquify) */\n      swap4\n      swap5\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":15910:15926  new address[](2) */\n      swap1\n      swap2\n      0x20\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":15886:15926  address[] memory path = new address[](2) */\n      swap1\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":15955:15959  this */\n      address\n        /* \"AndrewTate-testnet.sol.sol\":15937:15941  path */\n      dup2\n        /* \"AndrewTate-testnet.sol.sol\":15942:15943  0 */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":15937:15944  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_561\n      jumpi\n      invalid\n    tag_561:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":15937:15960  path[0] = address(this) */\n      swap3\n      dup4\n      and\n        /* \"AndrewTate-testnet.sol.sol\":15937:15944  path[0] */\n      0x20\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      dup2\n      add\n        /* \"AndrewTate-testnet.sol.sol\":15937:15960  path[0] = address(this) */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":15981:15987  router */\n      sload(0x14)\n        /* \"AndrewTate-testnet.sol.sol\":15981:15994  router.WETH() */\n      0x40\n      dup1\n      mload\n      shl(0xe3, 0x15ab88c9)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"AndrewTate-testnet.sol.sol\":15981:15987  router */\n      swap2\n      swap1\n      swap4\n      and\n      swap3\n        /* \"AndrewTate-testnet.sol.sol\":15981:15992  router.WETH */\n      0xad5c4648\n      swap3\n        /* \"AndrewTate-testnet.sol.sol\":15981:15994  router.WETH() */\n      0x04\n      dup1\n      dup4\n      add\n      swap4\n        /* \"AndrewTate-testnet.sol.sol\":15937:15944  path[0] */\n      swap2\n      swap3\n        /* \"AndrewTate-testnet.sol.sol\":15981:15994  router.WETH() */\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"AndrewTate-testnet.sol.sol\":15981:15987  router */\n      dup7\n        /* \"AndrewTate-testnet.sol.sol\":15981:15994  router.WETH() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_562\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_562:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_564\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_564:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_565\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_565:\n      pop\n      mload\n        /* \"AndrewTate-testnet.sol.sol\":15971:15978  path[1] */\n      dup2\n      mload\n        /* \"AndrewTate-testnet.sol.sol\":15971:15975  path */\n      dup3\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":15976:15977  1 */\n      0x01\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":15971:15978  path[1] */\n      dup2\n      lt\n      tag_566\n      jumpi\n      invalid\n    tag_566:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":15971:15994  path[1] = router.WETH() */\n      swap3\n      dup4\n      and\n        /* \"AndrewTate-testnet.sol.sol\":15971:15978  path[1] */\n      0x20\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      dup2\n      add\n        /* \"AndrewTate-testnet.sol.sol\":15971:15994  path[1] = router.WETH() */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":16065:16071  router */\n      sload(0x14)\n        /* \"AndrewTate-testnet.sol.sol\":16065:16253  router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r... */\n      mload(0x40)\n      shl(0xe0, 0x791ac947)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n      dup7\n      dup2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":16007:16028  uint256 balanceBefore */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":16065:16253  router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r... */\n      0x24\n      dup4\n      add\n      dup2\n      swap1\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":16207:16211  this */\n      address\n        /* \"AndrewTate-testnet.sol.sol\":16065:16253  router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r... */\n      0x64\n      dup5\n      add\n      dup2\n      swap1\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":16227:16242  block.timestamp */\n      timestamp\n        /* \"AndrewTate-testnet.sol.sol\":16065:16253  router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r... */\n      0x84\n      dup6\n      add\n      dup2\n      swap1\n      mstore\n      0xa0\n      0x44\n      dup7\n      add\n      swap1\n      dup2\n      mstore\n      dup10\n      mload\n      0xa4\n      dup8\n      add\n      mstore\n      dup10\n      mload\n        /* \"AndrewTate-testnet.sol.sol\":16031:16052  address(this).balance */\n      selfbalance\n      swap10\n        /* \"AndrewTate-testnet.sol.sol\":16065:16071  router */\n      swap8\n      swap1\n      swap8\n      and\n      swap8\n        /* \"AndrewTate-testnet.sol.sol\":16065:16122  router.swapExactTokensForETHSupportingFeeOnTransferTokens */\n      0x791ac947\n      swap8\n        /* \"AndrewTate-testnet.sol.sol\":16137:16149  amountToSwap */\n      dup13\n      swap8\n        /* \"AndrewTate-testnet.sol.sol\":16007:16028  uint256 balanceBefore */\n      swap6\n      swap7\n        /* \"AndrewTate-testnet.sol.sol\":16180:16184  path */\n      dup13\n      swap7\n        /* \"AndrewTate-testnet.sol.sol\":16065:16253  router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r... */\n      swap1\n      swap4\n      swap3\n      0xc4\n      swap1\n      swap2\n      add\n      swap2\n      dup8\n      dup3\n      add\n      swap2\n      mul\n      dup1\n      dup4\n      dup4\n        /* \"AndrewTate-testnet.sol.sol\":16007:16028  uint256 balanceBefore */\n      dup12\n        /* \"AndrewTate-testnet.sol.sol\":16065:16253  router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r... */\n    tag_567:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_569\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_567)\n    tag_569:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_570\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_570:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_572\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_572:\n      pop\n      pop\n      pop\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":16266:16283  uint256 amountETH */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":16286:16326  address(this).balance.sub(balanceBefore) */\n      tag_573\n        /* \"AndrewTate-testnet.sol.sol\":16312:16325  balanceBefore */\n      dup3\n        /* \"AndrewTate-testnet.sol.sol\":16286:16307  address(this).balance */\n      selfbalance\n        /* \"AndrewTate-testnet.sol.sol\":16286:16311  address(this).balance.sub */\n      tag_322\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":16286:16326  address(this).balance.sub(balanceBefore) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_573:\n        /* \"AndrewTate-testnet.sol.sol\":16266:16326  uint256 amountETH = address(this).balance.sub(balanceBefore) */\n      swap1\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":16339:16358  uint256 totalETHFee */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":16361:16401  totalFee.sub(dynamicLiquidityFee.div(2)) */\n      tag_574\n        /* \"AndrewTate-testnet.sol.sol\":16374:16400  dynamicLiquidityFee.div(2) */\n      tag_575\n        /* \"AndrewTate-testnet.sol.sol\":16374:16393  dynamicLiquidityFee */\n      dup10\n        /* \"AndrewTate-testnet.sol.sol\":16398:16399  2 */\n      0x02\n        /* \"AndrewTate-testnet.sol.sol\":16374:16397  dynamicLiquidityFee.div */\n      tag_282\n        /* \"AndrewTate-testnet.sol.sol\":16374:16400  dynamicLiquidityFee.div(2) */\n      jump\t// in\n    tag_575:\n        /* \"AndrewTate-testnet.sol.sol\":16361:16369  totalFee */\n      sload(0x0b)\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":16361:16373  totalFee.sub */\n      tag_322\n        /* \"AndrewTate-testnet.sol.sol\":16361:16401  totalFee.sub(dynamicLiquidityFee.div(2)) */\n      jump\t// in\n    tag_574:\n        /* \"AndrewTate-testnet.sol.sol\":16339:16401  uint256 totalETHFee = totalFee.sub(dynamicLiquidityFee.div(2)) */\n      swap1\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":16414:16440  uint256 amountETHLiquidity */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":16443:16543  amountETH\r... */\n      tag_576\n        /* \"AndrewTate-testnet.sol.sol\":16541:16542  2 */\n      0x02\n        /* \"AndrewTate-testnet.sol.sol\":16443:16522  amountETH\r... */\n      tag_319\n        /* \"AndrewTate-testnet.sol.sol\":16339:16401  uint256 totalETHFee = totalFee.sub(dynamicLiquidityFee.div(2)) */\n      dup5\n        /* \"AndrewTate-testnet.sol.sol\":16443:16522  amountETH\r... */\n      dup2\n        /* \"AndrewTate-testnet.sol.sol\":16443:16452  amountETH */\n      dup8\n        /* \"AndrewTate-testnet.sol.sol\":16471:16490  dynamicLiquidityFee */\n      dup15\n        /* \"AndrewTate-testnet.sol.sol\":16443:16470  amountETH\r... */\n      tag_451\n        /* \"AndrewTate-testnet.sol.sol\":16443:16491  amountETH\r... */\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":16443:16543  amountETH\r... */\n    tag_576:\n        /* \"AndrewTate-testnet.sol.sol\":16414:16543  uint256 amountETHLiquidity = amountETH\r... */\n      swap1\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":16554:16584  uint256 amountETHRiskFreeValue */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":16587:16632  amountETH.mul(RiskFreeValue).div(totalETHFee) */\n      tag_579\n        /* \"AndrewTate-testnet.sol.sol\":16620:16631  totalETHFee */\n      dup4\n        /* \"AndrewTate-testnet.sol.sol\":16587:16615  amountETH.mul(RiskFreeValue) */\n      tag_319\n        /* \"AndrewTate-testnet.sol.sol\":16601:16614  RiskFreeValue */\n      sload(0x09)\n        /* \"AndrewTate-testnet.sol.sol\":16587:16596  amountETH */\n      dup8\n        /* \"AndrewTate-testnet.sol.sol\":16587:16600  amountETH.mul */\n      tag_451\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":16587:16615  amountETH.mul(RiskFreeValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":16587:16632  amountETH.mul(RiskFreeValue).div(totalETHFee) */\n    tag_579:\n        /* \"AndrewTate-testnet.sol.sol\":16554:16632  uint256 amountETHRiskFreeValue = amountETH.mul(RiskFreeValue).div(totalETHFee) */\n      swap1\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":16643:16668  uint256 amountETHTreasury */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":16671:16735  amountETH.mul(Treasury).div(\r... */\n      tag_581\n        /* \"AndrewTate-testnet.sol.sol\":16713:16724  totalETHFee */\n      dup5\n        /* \"AndrewTate-testnet.sol.sol\":16671:16694  amountETH.mul(Treasury) */\n      tag_319\n        /* \"AndrewTate-testnet.sol.sol\":16685:16693  Treasury */\n      sload(0x08)\n        /* \"AndrewTate-testnet.sol.sol\":16671:16680  amountETH */\n      dup9\n        /* \"AndrewTate-testnet.sol.sol\":16671:16684  amountETH.mul */\n      tag_451\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":16671:16694  amountETH.mul(Treasury) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":16671:16735  amountETH.mul(Treasury).div(\r... */\n    tag_581:\n        /* \"AndrewTate-testnet.sol.sol\":16775:16791  TreasuryReceiver */\n      sload(0x10)\n        /* \"AndrewTate-testnet.sol.sol\":16767:16876  payable(TreasuryReceiver).call{\r... */\n      mload(0x40)\n        /* \"AndrewTate-testnet.sol.sol\":16643:16735  uint256 amountETHTreasury = amountETH.mul(Treasury).div(\r... */\n      swap2\n      swap3\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":16749:16761  bool success */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":16775:16791  TreasuryReceiver */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":16856:16861  30000 */\n      0x7530\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":16643:16735  uint256 amountETHTreasury = amountETH.mul(Treasury).div(\r... */\n      dup5\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":16749:16761  bool success */\n      dup5\n        /* \"AndrewTate-testnet.sol.sol\":16767:16876  payable(TreasuryReceiver).call{\r... */\n      dup2\n        /* \"AndrewTate-testnet.sol.sol\":16749:16761  bool success */\n      dup2\n        /* \"AndrewTate-testnet.sol.sol\":16767:16876  payable(TreasuryReceiver).call{\r... */\n      dup2\n        /* \"AndrewTate-testnet.sol.sol\":16643:16735  uint256 amountETHTreasury = amountETH.mul(Treasury).div(\r... */\n      dup6\n        /* \"AndrewTate-testnet.sol.sol\":16775:16791  TreasuryReceiver */\n      dup9\n        /* \"AndrewTate-testnet.sol.sol\":16856:16861  30000 */\n      dup9\n        /* \"AndrewTate-testnet.sol.sol\":16767:16876  payable(TreasuryReceiver).call{\r... */\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_585\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_584)\n    tag_585:\n      0x60\n      swap2\n      pop\n    tag_584:\n      pop\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":16909:16930  RiskFreeValueReceiver */\n      sload(0x11)\n        /* \"AndrewTate-testnet.sol.sol\":16901:17020  payable(RiskFreeValueReceiver).call{\r... */\n      mload(0x40)\n        /* \"AndrewTate-testnet.sol.sol\":16748:16876  (bool success, ) = payable(TreasuryReceiver).call{\r... */\n      swap2\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":16909:16930  RiskFreeValueReceiver */\n      and\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":17000:17005  30000 */\n      0x7530\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":16958:16980  amountETHRiskFreeValue */\n      dup6\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":16909:16930  RiskFreeValueReceiver */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":16901:17020  payable(RiskFreeValueReceiver).call{\r... */\n      dup2\n        /* \"AndrewTate-testnet.sol.sol\":16909:16930  RiskFreeValueReceiver */\n      dup2\n        /* \"AndrewTate-testnet.sol.sol\":16901:17020  payable(RiskFreeValueReceiver).call{\r... */\n      dup2\n        /* \"AndrewTate-testnet.sol.sol\":16958:16980  amountETHRiskFreeValue */\n      dup6\n        /* \"AndrewTate-testnet.sol.sol\":16909:16930  RiskFreeValueReceiver */\n      dup9\n        /* \"AndrewTate-testnet.sol.sol\":17000:17005  30000 */\n      dup9\n        /* \"AndrewTate-testnet.sol.sol\":16901:17020  payable(RiskFreeValueReceiver).call{\r... */\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_588\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_587)\n    tag_588:\n      0x60\n      swap2\n      pop\n    tag_587:\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":17043:17048  false */\n      0x00\n      swap3\n      pop\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":17065:17084  amountToLiquify > 0 */\n      dup11\n      iszero\n      swap1\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":17061:17357  if (amountToLiquify > 0) {\r... */\n      tag_589\n      jumpi\n        /* \"AndrewTate-testnet.sol.sol\":17101:17107  router */\n      sload(0x14)\n        /* \"AndrewTate-testnet.sol.sol\":17275:17296  autoLiquidityReceiver */\n      sload(0x0f)\n        /* \"AndrewTate-testnet.sol.sol\":17101:17345  router.addLiquidityETH{value: amountETHLiquidity}(\r... */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0xf305d719)\n      dup2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":17177:17181  this */\n      address\n        /* \"AndrewTate-testnet.sol.sol\":17101:17345  router.addLiquidityETH{value: amountETHLiquidity}(\r... */\n      0x04\n      dup3\n      add\n      mstore\n      0x24\n      dup2\n      add\n      dup15\n      swap1\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":17101:17107  router */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":17101:17345  router.addLiquidityETH{value: amountETHLiquidity}(\r... */\n      0x44\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x64\n      dup3\n      add\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":17275:17296  autoLiquidityReceiver */\n      swap3\n      dup4\n      and\n        /* \"AndrewTate-testnet.sol.sol\":17101:17345  router.addLiquidityETH{value: amountETHLiquidity}(\r... */\n      0x84\n      dup3\n      add\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":17315:17330  block.timestamp */\n      timestamp\n        /* \"AndrewTate-testnet.sol.sol\":17101:17345  router.addLiquidityETH{value: amountETHLiquidity}(\r... */\n      0xa4\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"AndrewTate-testnet.sol.sol\":17101:17107  router */\n      swap2\n      swap1\n      swap3\n      and\n      swap2\n        /* \"AndrewTate-testnet.sol.sol\":17101:17123  router.addLiquidityETH */\n      0xf305d719\n      swap2\n        /* \"AndrewTate-testnet.sol.sol\":17131:17149  amountETHLiquidity */\n      dup8\n      swap2\n        /* \"AndrewTate-testnet.sol.sol\":17101:17345  router.addLiquidityETH{value: amountETHLiquidity}(\r... */\n      0xc4\n      dup1\n      dup3\n      add\n      swap3\n      0x60\n      swap3\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"AndrewTate-testnet.sol.sol\":17131:17149  amountETHLiquidity */\n      dup6\n        /* \"AndrewTate-testnet.sol.sol\":17101:17107  router */\n      dup9\n        /* \"AndrewTate-testnet.sol.sol\":17101:17345  router.addLiquidityETH{value: amountETHLiquidity}(\r... */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_590\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_590:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_592\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_592:\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x60\n      dup2\n      lt\n      iszero\n      tag_593\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_593:\n      pop\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":17061:17357  if (amountToLiquify > 0) {\r... */\n    tag_589:\n      pop\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":10187:10193  inSwap */\n      0x17\n        /* \"AndrewTate-testnet.sol.sol\":10187:10201  inSwap = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":15317:17364  function swapBack() internal swapping {\r... */\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":19771:19928  function shouldTakeFee(address from, address to) internal view returns (bool) {\r... */\n    tag_512:\n        /* \"AndrewTate-testnet.sol.sol\":19868:19872  pair */\n      sload(0x15)\n        /* \"AndrewTate-testnet.sol.sol\":19843:19847  bool */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":19868:19880  pair == from */\n      dup5\n      dup2\n      and\n        /* \"AndrewTate-testnet.sol.sol\":19868:19872  pair */\n      swap2\n      and\n        /* \"AndrewTate-testnet.sol.sol\":19868:19880  pair == from */\n      eq\n      dup1\n        /* \"AndrewTate-testnet.sol.sol\":19868:19894  pair == from || pair == to */\n      tag_595\n      jumpi\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":19884:19888  pair */\n      sload(0x15)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":19884:19894  pair == to */\n      dup4\n      dup2\n      and\n        /* \"AndrewTate-testnet.sol.sol\":19884:19888  pair */\n      swap2\n      and\n        /* \"AndrewTate-testnet.sol.sol\":19884:19894  pair == to */\n      eq\n        /* \"AndrewTate-testnet.sol.sol\":19868:19894  pair == from || pair == to */\n    tag_595:\n        /* \"AndrewTate-testnet.sol.sol\":19867:19920  (pair == from || pair == to) && (!_isFeeExempt[from]) */\n      dup1\n      iszero\n      tag_465\n      jumpi\n      pop\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":19901:19919  _isFeeExempt[from] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":19901:19913  _isFeeExempt */\n      0x06\n        /* \"AndrewTate-testnet.sol.sol\":19901:19919  _isFeeExempt[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"AndrewTate-testnet.sol.sol\":19900:19919  !_isFeeExempt[from] */\n      iszero\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":19771:19928  function shouldTakeFee(address from, address to) internal view returns (bool) {\r... */\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":17372:17917  function takeFee(address sender, address recipient, uint256 gonAmount)\r... */\n    tag_516:\n        /* \"AndrewTate-testnet.sol.sol\":17524:17532  totalFee */\n      sload(0x0b)\n        /* \"AndrewTate-testnet.sol.sol\":17559:17563  pair */\n      sload(0x15)\n        /* \"AndrewTate-testnet.sol.sol\":17479:17486  uint256 */\n      0x00\n      swap2\n        /* \"AndrewTate-testnet.sol.sol\":17524:17532  totalFee */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":17546:17563  recipient == pair */\n      dup6\n      dup2\n      and\n        /* \"AndrewTate-testnet.sol.sol\":17559:17563  pair */\n      swap2\n      and\n        /* \"AndrewTate-testnet.sol.sol\":17546:17563  recipient == pair */\n      eq\n        /* \"AndrewTate-testnet.sol.sol\":17543:17599  if(recipient == pair) _totalFee = _totalFee.add(sellFee) */\n      iszero\n      tag_598\n      jumpi\n        /* \"AndrewTate-testnet.sol.sol\":17591:17598  sellFee */\n      sload(0x0a)\n        /* \"AndrewTate-testnet.sol.sol\":17577:17599  _totalFee.add(sellFee) */\n      tag_599\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":17577:17586  _totalFee */\n      dup3\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":17577:17590  _totalFee.add */\n      tag_281\n        /* \"AndrewTate-testnet.sol.sol\":17577:17599  _totalFee.add(sellFee) */\n      jump\t// in\n    tag_599:\n        /* \"AndrewTate-testnet.sol.sol\":17565:17599  _totalFee = _totalFee.add(sellFee) */\n      swap1\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":17543:17599  if(recipient == pair) _totalFee = _totalFee.add(sellFee) */\n    tag_598:\n        /* \"AndrewTate-testnet.sol.sol\":17661:17675  feeDenominator */\n      sload(0x0c)\n        /* \"AndrewTate-testnet.sol.sol\":17612:17629  uint256 feeAmount */\n      0x00\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":17632:17676  gonAmount.mul(_totalFee).div(feeDenominator) */\n      tag_600\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":17632:17656  gonAmount.mul(_totalFee) */\n      tag_319\n        /* \"AndrewTate-testnet.sol.sol\":17632:17641  gonAmount */\n      dup7\n        /* \"AndrewTate-testnet.sol.sol\":17646:17655  _totalFee */\n      dup6\n        /* \"AndrewTate-testnet.sol.sol\":17632:17645  gonAmount.mul */\n      tag_451\n        /* \"AndrewTate-testnet.sol.sol\":17632:17656  gonAmount.mul(_totalFee) */\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":17632:17676  gonAmount.mul(_totalFee).div(feeDenominator) */\n    tag_600:\n        /* \"AndrewTate-testnet.sol.sol\":17740:17744  this */\n      address\n        /* \"AndrewTate-testnet.sol.sol\":17719:17746  _gonBalances[address(this)] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":17719:17731  _gonBalances */\n      0x1a\n        /* \"AndrewTate-testnet.sol.sol\":17719:17746  _gonBalances[address(this)] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"AndrewTate-testnet.sol.sol\":17612:17676  uint256 feeAmount = gonAmount.mul(_totalFee).div(feeDenominator) */\n      swap1\n      swap2\n      pop\n        /* \"AndrewTate-testnet.sol.sol\":17719:17785  _gonBalances[address(this)].add(\r... */\n      tag_602\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":17612:17676  uint256 feeAmount = gonAmount.mul(_totalFee).div(feeDenominator) */\n      dup3\n        /* \"AndrewTate-testnet.sol.sol\":17719:17750  _gonBalances[address(this)].add */\n      tag_281\n        /* \"AndrewTate-testnet.sol.sol\":17719:17785  _gonBalances[address(this)].add(\r... */\n      jump\t// in\n    tag_602:\n        /* \"AndrewTate-testnet.sol.sol\":17710:17714  this */\n      address\n        /* \"AndrewTate-testnet.sol.sol\":17689:17716  _gonBalances[address(this)] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"AndrewTate-testnet.sol.sol\":17689:17701  _gonBalances */\n      0x1a\n        /* \"AndrewTate-testnet.sol.sol\":17689:17716  _gonBalances[address(this)] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"AndrewTate-testnet.sol.sol\":17689:17785  _gonBalances[address(this)] = _gonBalances[address(this)].add(\r... */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"AndrewTate-testnet.sol.sol\":17847:17863  _gonsPerFragment */\n      sload(0x19)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":17801:17865  Transfer(sender, address(this), feeAmount.div(_gonsPerFragment)) */\n      dup9\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":17833:17864  feeAmount.div(_gonsPerFragment) */\n      tag_603\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":17833:17842  feeAmount */\n      dup6\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":17833:17846  feeAmount.div */\n      tag_282\n        /* \"AndrewTate-testnet.sol.sol\":17833:17864  feeAmount.div(_gonsPerFragment) */\n      jump\t// in\n    tag_603:\n        /* \"AndrewTate-testnet.sol.sol\":17801:17865  Transfer(sender, address(this), feeAmount.div(_gonsPerFragment)) */\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log3\n        /* \"AndrewTate-testnet.sol.sol\":17885:17909  gonAmount.sub(feeAmount) */\n      tag_604\n        /* \"AndrewTate-testnet.sol.sol\":17885:17894  gonAmount */\n      dup5\n        /* \"AndrewTate-testnet.sol.sol\":17899:17908  feeAmount */\n      dup3\n        /* \"AndrewTate-testnet.sol.sol\":17885:17898  gonAmount.sub */\n      tag_322\n        /* \"AndrewTate-testnet.sol.sol\":17885:17909  gonAmount.sub(feeAmount) */\n      jump\t// in\n    tag_604:\n        /* \"AndrewTate-testnet.sol.sol\":17878:17909  return gonAmount.sub(feeAmount) */\n      swap7\n        /* \"AndrewTate-testnet.sol.sol\":17372:17917  function takeFee(address sender, address recipient, uint256 gonAmount)\r... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":3708:3891  function remove(Role storage role, address account) internal {\r... */\n    tag_523:\n        /* \"AndrewTate-testnet.sol.sol\":3788:3806  has(role, account) */\n      tag_606\n        /* \"AndrewTate-testnet.sol.sol\":3792:3796  role */\n      dup3\n        /* \"AndrewTate-testnet.sol.sol\":3798:3805  account */\n      dup3\n        /* \"AndrewTate-testnet.sol.sol\":3788:3791  has */\n      tag_443\n        /* \"AndrewTate-testnet.sol.sol\":3788:3806  has(role, account) */\n      jump\t// in\n    tag_606:\n        /* \"AndrewTate-testnet.sol.sol\":3780:3844  require(has(role, account), \"Roles: account does not have role\") */\n      tag_607\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_607:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":3855:3875  role.bearer[account] */\n      and\n        /* \"AndrewTate-testnet.sol.sol\":3878:3883  false */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":3855:3875  role.bearer[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"AndrewTate-testnet.sol.sol\":3855:3883  role.bearer[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"AndrewTate-testnet.sol.sol\":3708:3891  function remove(Role storage role, address account) internal {\r... */\n      jump\t// out\n    stop\n    data_79ecb50133735b20228dea9d08fe36a462bbc1350f591a146908848db91104cd 4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65\n    data_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257 526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n    data_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f 526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373\n\n    auxdata: 0xa2646970667358221220baa1c6c1681b846fe2fa110a4564947a67973ddf4695e023bfa53eb30ae007e664736f6c63430007040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526005600755600360085560056009556005600a55620000516009546200003d6008546007546200049060201b62001b8f1790919060201c565b6200049060201b62001b8f1790919060201c565b600b556064600c819055600d80546001600160a01b031990811661dead17909155600e8054909116905560326012556013556015805460ff60a01b1916600160a01b1790556127106b1239a002a3db32d57fffffff1904601655348015620000b857600080fd5b50604080518082018252601081526f20b7323932bbaa30ba32902a37b5b2b760811b602080830191825283518085019094526004845263544f504760e01b9084015281519192916012916200011191600091906200079d565b508151620001279060019060208501906200079d565b5060028054336101008102610100600160a81b031960ff90951660ff1990931692909217939093161790556200016092509050620004f2565b601480546001600160a01b03191673ceeb22faf32ff4ead24565225503807e41e5fe8717908190556040805163c45a015560e01b815290516001600160a01b03929092169163c45a015591600480820192602092909190829003018186803b158015620001cc57600080fd5b505afa158015620001e1573d6000803e3d6000fd5b505050506040513d6020811015620001f857600080fd5b5051601454604080516315ab88c960e31b815290516001600160a01b039384169363c9c6539693169163ad5c4648916004808301926020929190829003018186803b1580156200024757600080fd5b505afa1580156200025c573d6000803e3d6000fd5b505050506040513d60208110156200027357600080fd5b5051604080516001600160e01b031960e085901b1681526001600160a01b0390921660048301523060248301525160448083019260209291908290030181600087803b158015620002c357600080fd5b505af1158015620002d8573d6000803e3d6000fd5b505050506040513d6020811015620002ef57600080fd5b5051601580546001600160a01b039283166001600160a01b0319918216178255600f80548216732c604d9e15e6524f0bb2a2a22f63a7ca041e84c317905560108054821673cc5e043c5142033a800a72286356317dacb57a7717815560118054831673833123d7af220758a5484887ac582d4d39e9ede0179055306000908152601b602090815260408083206014548816845282528083206000199055945460048054909516908716179093556b0cecb8f27f4200f3a0000000601890815591549094168452601a8252919092206b01d290004395eb7bbfffffff19908190559054620003e59262000544811b62001be917901c565b6019556004805460ff60a01b19169055601080546001600160a01b03908116600090815260066020526040808220805460ff199081166001908117909255308452919092208054909116909117905590546200044291166200058e565b60105460185460408051918252516001600160a01b03909216916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef919081900360200190a362000849565b600082820183811015620004eb576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6200050d8160036200060960201b62001c2b1790919060201c565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6000620004eb83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506200068d60201b60201c565b6001600160a01b038116620005a257600080fd5b6002546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600280546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b62000615828262000734565b1562000668576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b600081836200071d5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015620006e1578181015183820152602001620006c7565b50505050905090810190601f1680156200070f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816200072a57fe5b0495945050505050565b60006001600160a01b0382166200077d5760405162461bcd60e51b8152600401808060200182810382526022815260200180620031176022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620007d5576000855562000820565b82601f10620007f057805160ff191683800117855562000820565b8280016001018555821562000820579182015b828111156200082057825182559160200191906001019062000803565b506200082e92915062000832565b5090565b5b808211156200082e576000815560010162000833565b6128be80620008596000396000f3fe6080604052600436106103545760003560e01c80637a43e23f116101c6578063bda5c8bb116100f7578063d5938aac11610095578063dd62ed3e1161006f578063dd62ed3e14610c3e578063f2fde38b14610c79578063f887ea4014610cac578063f9f92be414610cc15761035b565b8063d5938aac14610bb1578063d7ac658514610be4578063d7c0103214610bf95761035b565b8063d1fce264116100d1578063d1fce26414610a70578063d37e219d14610a85578063d439979014610b54578063d51ed1c814610b875761035b565b8063bda5c8bb14610a0e578063ca33e64c14610a23578063d088935814610a385761035b565b806398118cb411610164578063a457c2d71161013e578063a457c2d714610954578063a8aa1b311461098d578063a9059cbb146109a2578063aa271e1a146109db5761035b565b806398118cb4146108f7578063983b2d561461090c578063986502751461093f5761035b565b80638da5cb5b116101a05780638da5cb5b1461087d5780638f32d59b146108925780639155e083146108a757806395d89b41146108e25761035b565b80637a43e23f14610823578063800cee511461085357806383b4ac68146108685761035b565b80633092afd5116102a057806356a227f21161023e57806370a082311161021857806370a0823114610793578063715018a6146107c6578063749796a5146107db578063753d02a11461080e5761035b565b806356a227f2146107305780636d351d1a146107695780636ddd17131461077e5761035b565b8063395093511161027a578063395093511461067857806340c10f19146106b15780634d709adf146106ea578063563df32f1461071b5761035b565b80633092afd5146105e1578063313ce5671461061457806333f3d6281461063f5761035b565b80631df4ccfc1161030d5780632b112e49116102e75780632b112e491461056f5780632b14ca56146105845780632be6937d146105995780632f34d282146105ae5761035b565b80631df4ccfc146104e7578063201e7991146104fc57806323b872dd1461052c5761035b565b806304a66b481461036057806306fdde03146103a4578063095ea7b31461042e5780631161ae391461047b578063180b0d7e146104ab57806318160ddd146104d25761035b565b3661035b57005b600080fd5b34801561036c57600080fd5b506103a2600480360360a081101561038357600080fd5b5080359060208101359060408101359060608101359060800135610cf4565b005b3480156103b057600080fd5b506103b9610d4d565b6040805160208082528351818301528351919283929083019185019080838360005b838110156103f35781810151838201526020016103db565b50505050905090810190601f1680156104205780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561043a57600080fd5b506104676004803603604081101561045157600080fd5b506001600160a01b038135169060200135610de3565b604080519115158252519081900360200190f35b34801561048757600080fd5b506104676004803603604081101561049e57600080fd5b5080359060200135610e8c565b3480156104b757600080fd5b506104c0610ea0565b60408051918252519081900360200190f35b3480156104de57600080fd5b506104c0610ea6565b3480156104f357600080fd5b506104c0610eac565b34801561050857600080fd5b506103a26004803603604081101561051f57600080fd5b5080359060200135610eb2565b34801561053857600080fd5b506104676004803603606081101561054f57600080fd5b506001600160a01b03813581169160208101359091169060400135610ece565b34801561057b57600080fd5b506104c0610fa8565b34801561059057600080fd5b506104c061100a565b3480156105a557600080fd5b506103a2611010565b3480156105ba57600080fd5b506103a2600480360360208110156105d157600080fd5b50356001600160a01b0316611036565b3480156105ed57600080fd5b506103a26004803603602081101561060457600080fd5b50356001600160a01b0316611070565b34801561062057600080fd5b5061062961108d565b6040805160ff9092168252519081900360200190f35b34801561064b57600080fd5b506104676004803603604081101561066257600080fd5b506001600160a01b038135169060200135611096565b34801561068457600080fd5b506104676004803603604081101561069b57600080fd5b506001600160a01b03813516906020013561112b565b3480156106bd57600080fd5b506103a2600480360360408110156106d457600080fd5b506001600160a01b0381351690602001356111ff565b3480156106f657600080fd5b506106ff611333565b604080516001600160a01b039092168252519081900360200190f35b34801561072757600080fd5b506104c0611342565b34801561073c57600080fd5b506103a26004803603604081101561075357600080fd5b50803590602001356001600160a01b0316611348565b34801561077557600080fd5b506104c061139b565b34801561078a57600080fd5b506104676113b4565b34801561079f57600080fd5b506104c0600480360360208110156107b657600080fd5b50356001600160a01b03166113c4565b3480156107d257600080fd5b506103a26113ec565b3480156107e757600080fd5b506103a2600480360360208110156107fe57600080fd5b50356001600160a01b031661144c565b34801561081a57600080fd5b506103a2611481565b34801561082f57600080fd5b506104c06004803603604081101561084657600080fd5b50803590602001356114e5565b34801561085f57600080fd5b506106ff611691565b34801561087457600080fd5b506104676116a0565b34801561088957600080fd5b506106ff6116aa565b34801561089e57600080fd5b506104676116be565b3480156108b357600080fd5b506103a2600480360360408110156108ca57600080fd5b506001600160a01b03813516906020013515156116d4565b3480156108ee57600080fd5b506103b9611710565b34801561090357600080fd5b506104c0611770565b34801561091857600080fd5b506103a26004803603602081101561092f57600080fd5b50356001600160a01b0316611776565b34801561094b57600080fd5b506103a2611790565b34801561096057600080fd5b506104676004803603604081101561097757600080fd5b506001600160a01b03813516906020013561179b565b34801561099957600080fd5b506106ff6118c5565b3480156109ae57600080fd5b50610467600480360360408110156109c557600080fd5b506001600160a01b0381351690602001356118d4565b3480156109e757600080fd5b50610467600480360360208110156109fe57600080fd5b50356001600160a01b031661193e565b348015610a1a57600080fd5b506104c061194b565b348015610a2f57600080fd5b506106ff611951565b348015610a4457600080fd5b506103a260048036036060811015610a5b57600080fd5b50803515159060208101359060400135611960565b348015610a7c57600080fd5b506104676119b3565b348015610a9157600080fd5b506103a260048036036040811015610aa857600080fd5b810190602081018135640100000000811115610ac357600080fd5b820183602082011115610ad557600080fd5b80359060200191846020830284011164010000000083111715610af757600080fd5b919390929091602081019035640100000000811115610b1557600080fd5b820183602082011115610b2757600080fd5b80359060200191846020830284011164010000000083111715610b4957600080fd5b5090925090506119c3565b348015610b6057600080fd5b5061046760048036036020811015610b7757600080fd5b50356001600160a01b0316611a20565b348015610b9357600080fd5b506104c060048036036020811015610baa57600080fd5b5035611a3e565b348015610bbd57600080fd5b506103a260048036036020811015610bd457600080fd5b50356001600160a01b0316611a92565b348015610bf057600080fd5b506106ff611ac7565b348015610c0557600080fd5b506103a260048036036060811015610c1c57600080fd5b506001600160a01b038135811691602081013582169160409091013516611ad6565b348015610c4a57600080fd5b506104c060048036036040811015610c6157600080fd5b506001600160a01b0381358116916020013516611b26565b348015610c8557600080fd5b506103a260048036036020811015610c9c57600080fd5b50356001600160a01b0316611b51565b348015610cb857600080fd5b506106ff611b6b565b348015610ccd57600080fd5b5061046760048036036020811015610ce457600080fd5b50356001600160a01b0316611b7a565b610cfc6116be565b610d0557600080fd5b600785905560098490556008839055600a829055610d2d84610d278786611b8f565b90611b8f565b600b55600c81905560048104600b5410610d4657600080fd5b5050505050565b60008054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610dd95780601f10610dae57610100808354040283529160200191610dd9565b820191906000526020600020905b815481529060010190602001808311610dbc57829003601f168201915b5050505050905090565b600454600090600160a01b900460ff1680610e015750610e016116be565b80610e1b57503360009081526005602052604090205460ff165b610e2457600080fd5b336000818152601b602090815260408083206001600160a01b03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060015b92915050565b600082610e9883611a3e565b119392505050565b600c5481565b60185490565b600b5481565b610eba6116be565b610ec357600080fd5b601291909155601355565b6000826001600160a01b038116610ee457600080fd5b6001600160a01b0385166000908152601b6020908152604080832033845290915290205460001914610f91576040805180820182526016815275496e73756666696369656e7420416c6c6f77616e636560501b6020808301919091526001600160a01b0388166000908152601b82528381203382529091529190912054610f6c918590611cac565b6001600160a01b0386166000908152601b602090815260408083203384529091529020555b610f9c858585611d43565b50600195945050505050565b601954600e546001600160a01b039081166000908152601a602052604080822054600d5490931682528120549092611005929091610fff9190610ff9906b01d290004395eb7bbfffffff1990611f02565b90611f02565b90611be9565b905090565b600a5481565b6110186116be565b61102157600080fd5b6004805460ff60a01b1916600160a01b179055565b61103e6116be565b61104757600080fd5b600480546001600160a01b039092166001600160a01b0319909216821790556000526006602052565b6110786116be565b61108157600080fd5b61108a81611f44565b50565b60025460ff1690565b60006110a06116be565b6110a957600080fd5b6040805163a9059cbb60e01b81523360048201526024810184905290516001600160a01b0385169163a9059cbb9160448083019260209291908290030181600087803b1580156110f857600080fd5b505af115801561110c573d6000803e3d6000fd5b505050506040513d602081101561112257600080fd5b50519392505050565b600454600090600160a01b900460ff168061114957506111496116be565b8061116357503360009081526005602052604090205460ff165b61116c57600080fd5b336000908152601b602090815260408083206001600160a01b038716845290915290205461119a9083611b8f565b336000818152601b602090815260408083206001600160a01b0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b6112083361193e565b6112435760405162461bcd60e51b81526004018080602001828103825260308152602001806127f56030913960400191505060405180910390fd5b6018546112509082611b8f565b60188190556001600160801b03101561126f576001600160801b036018555b60185461128f906b0cecb8f27f4200f3a00000006000195b061990611be9565b601955600480546040805160016209351760e01b0319815290516001600160a01b039092169263fff6cae992828201926000929082900301818387803b1580156112d857600080fd5b505af11580156112ec573d6000803e3d6000fd5b5050506001600160a01b0383166000908152601a6020526040902054611313915082611b8f565b6001600160a01b039092166000908152601a602052604090209190915550565b6004546001600160a01b031681565b60085481565b6113506116be565b61135957600080fd5b60405147906001600160a01b0383169060648584020480156108fc02916000818181858888f19350505050158015611395573d6000803e3d6000fd5b50505050565b6000611005601954601654611be990919063ffffffff16565b601554600160a01b900460ff1681565b6019546001600160a01b0382166000908152601a60205260408120549091610e869190611be9565b6113f46116be565b6113fd57600080fd5b6002546040516101009091046001600160a01b0316907ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482090600090a260028054610100600160a81b0319169055565b6114546116be565b61145d57600080fd5b6001600160a01b03166000908152600660205260409020805460ff19166001179055565b601560009054906101000a90046001600160a01b03166001600160a01b031663fff6cae96040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156114d157600080fd5b505af1158015611395573d6000803e3d6000fd5b60006114ef6116be565b6114f857600080fd5b60175460ff161561153c576040805162461bcd60e51b81526020600482015260096024820152682a393c9030b3b0b4b760b91b604482015290519081900360640190fd5b8161158257601854604080519182525184917f72725a3b1e5bd622d6bcd1339bb31279c351abe8f541ac7fd320f24e1b1641f2919081900360200190a250601854610e86565b60008212156115a45760185461159c906000849003611f02565b6018556115b5565b6018546115b19083611b8f565b6018555b6018546001600160801b0310156115d2576001600160801b036018555b6018546115ee906b0cecb8f27f4200f3a0000000600019611287565b601955600480546040805160016209351760e01b0319815290516001600160a01b039092169263fff6cae992828201926000929082900301818387803b15801561163757600080fd5b505af115801561164b573d6000803e3d6000fd5b505060185460408051918252518693507f72725a3b1e5bd622d6bcd1339bb31279c351abe8f541ac7fd320f24e1b1641f292509081900360200190a25060185492915050565b6010546001600160a01b031681565b60175460ff161590565b60025461010090046001600160a01b031690565b60025461010090046001600160a01b0316331490565b6116dc6116be565b6116e557600080fd5b6001600160a01b03919091166000908152601c60205260409020805460ff1916911515919091179055565b60018054604080516020601f60026000196101008789161502019095169490940493840181900481028201810190925282815260609390929091830182828015610dd95780601f10610dae57610100808354040283529160200191610dd9565b60075481565b61177e6116be565b61178757600080fd5b61108a81611f86565b61179933611f44565b565b600454600090600160a01b900460ff16806117b957506117b96116be565b806117d357503360009081526005602052604090205460ff165b6117dc57600080fd5b336000908152601b602090815260408083206001600160a01b038716845290915290205480831061183057336000908152601b602090815260408083206001600160a01b038816845290915281205561185f565b61183a8184611f02565b336000908152601b602090815260408083206001600160a01b03891684529091529020555b336000818152601b602090815260408083206001600160a01b0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b6015546001600160a01b031681565b6000826001600160a01b0381166118ea57600080fd5b600454600160a01b900460ff168061190557506119056116be565b8061191f57503360009081526005602052604090205460ff165b61192857600080fd5b611933338585611d43565b506001949350505050565b6000610e86600383611fc8565b60095481565b600f546001600160a01b031681565b6119686116be565b61197157600080fd5b6015805460ff60a01b1916600160a01b851515021790556119ab826119a5836b0cecb8f27f4200f3a0000000600019611287565b9061202f565b601655505050565b600454600160a01b900460ff1681565b6119cb6116be565b6119d457600080fd5b60005b83811015610d4657611a17338686848181106119ef57fe5b905060200201356001600160a01b0316858585818110611a0b57fe5b90506020020135611d43565b506001016119d7565b6001600160a01b031660009081526006602052604090205460ff1690565b6019546015546001600160a01b03166000908152601a602052604081205490918291611a6991611be9565b9050611a8b611a76610fa8565b610fff611a8484600261202f565b869061202f565b9392505050565b611a9a6116be565b611aa357600080fd5b6001600160a01b03166000908152600560205260409020805460ff19166001179055565b6011546001600160a01b031681565b611ade6116be565b611ae757600080fd5b600f80546001600160a01b039485166001600160a01b031991821617909155601080549385169382169390931790925560118054919093169116179055565b6001600160a01b039182166000908152601b6020908152604080832093909416825291909152205490565b611b596116be565b611b6257600080fd5b61108a81612088565b6014546001600160a01b031681565b601c6020526000908152604090205460ff1681565b600082820183811015611a8b576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000611a8b83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612102565b611c358282611fc8565b15611c87576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60008184841115611d3b5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611d00578181015183820152602001611ce8565b50505050905090810190601f168015611d2d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6001600160a01b0383166000908152601c602052604081205460ff16158015611d8557506001600160a01b0383166000908152601c602052604090205460ff16155b611dc5576040805162461bcd60e51b815260206004820152600c60248201526b1a5b97d89b1858dadb1a5cdd60a21b604482015290519081900360640190fd5b60175460ff1615611de257611ddb848484612167565b9050611a8b565b6000611df96019548461202f90919063ffffffff16565b9050611e036121f9565b15611e1057611e1061224f565b6001600160a01b0385166000908152601a6020526040902054611e339082611f02565b6001600160a01b0386166000908152601a6020526040812091909155611e598686612667565b611e635781611e6e565b611e6e8686846126bb565b6001600160a01b0386166000908152601a6020526040902054909150611e949082611b8f565b6001600160a01b038087166000818152601a6020526040902092909255601954908816907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611ee5908590611be9565b60408051918252519081900360200190a350600195945050505050565b6000611a8b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611cac565b611f4f60038261278d565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b611f91600382611c2b565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b60006001600160a01b03821661200f5760405162461bcd60e51b81526004018080602001828103825260228152602001806128676022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b60008261203e57506000610e86565b8282028284828161204b57fe5b0414611a8b5760405162461bcd60e51b81526004018080602001828103825260218152602001806128466021913960400191505060405180910390fd5b6001600160a01b03811661209b57600080fd5b6002546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600280546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b600081836121515760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611d00578181015183820152602001611ce8565b50600083858161215d57fe5b0495945050505050565b60008061217f6019548461202f90919063ffffffff16565b6001600160a01b0386166000908152601a60205260409020549091506121a59082611f02565b6001600160a01b038087166000908152601a602052604080822093909355908616815220546121d49082611b8f565b6001600160a01b0385166000908152601a602052604090205550600190509392505050565b6015546000906001600160a01b0316331480159061221a575060175460ff16155b801561222f5750601554600160a01b900460ff165b8015611005575050601654306000908152601a6020526040902054101590565b6017805460ff1916600117905560125460135460009161226e91610e8c565b61227a5760075461227d565b60005b601954306000908152601a60205260408120549293509161229d91611be9565b905060006122bf6002610fff600b54610fff878761202f90919063ffffffff16565b905060006122cd8383611f02565b60408051600280825260608083018452939450909160208301908036833701905050905030816000815181106122ff57fe5b6001600160a01b03928316602091820292909201810191909152601454604080516315ab88c960e31b81529051919093169263ad5c4648926004808301939192829003018186803b15801561235357600080fd5b505afa158015612367573d6000803e3d6000fd5b505050506040513d602081101561237d57600080fd5b505181518290600190811061238e57fe5b6001600160a01b0392831660209182029290920181019190915260145460405163791ac94760e01b8152600481018681526000602483018190523060648401819052426084850181905260a060448601908152895160a487015289514799979097169763791ac947978c9795968c9690939260c49091019187820191028083838b5b83811015612428578181015183820152602001612410565b505050509050019650505050505050600060405180830381600087803b15801561245157600080fd5b505af1158015612465573d6000803e3d6000fd5b50505050600061247e8247611f0290919063ffffffff16565b90506000612499612490896002611be9565b600b5490611f02565b905060006124ae6002610fff8481878e61202f565b905060006124cb83610fff6009548761202f90919063ffffffff16565b905060006124e884610fff6008548861202f90919063ffffffff16565b6010546040519192506000916001600160a01b039091169061753090849084818181858888f193505050503d806000811461253f576040519150601f19603f3d011682016040523d82523d6000602084013e612544565b606091505b50506011546040519192506001600160a01b0316906175309085906000818181858888f193505050503d8060008114612599576040519150601f19603f3d011682016040523d82523d6000602084013e61259e565b606091505b5060009250508a15905061264f57601454600f546040805163f305d71960e01b8152306004820152602481018e905260006044820181905260648201526001600160a01b0392831660848201524260a48201529051919092169163f305d71991879160c48082019260609290919082900301818588803b15801561262157600080fd5b505af1158015612635573d6000803e3d6000fd5b50505050506040513d606081101561264c57600080fd5b50505b50506017805460ff1916905550505050505050505050565b6015546000906001600160a01b038481169116148061269357506015546001600160a01b038381169116145b8015611a8b575050506001600160a01b031660009081526006602052604090205460ff161590565b600b54601554600091906001600160a01b03858116911614156126e957600a546126e6908290611b8f565b90505b600c546000906126fd90610fff868561202f565b306000908152601a602052604090205490915061271a9082611b8f565b306000818152601a60205260409020919091556019546001600160a01b038816907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90612768908590611be9565b60408051918252519081900360200190a36127838482611f02565b9695505050505050565b6127978282611fc8565b6127d25760405162461bcd60e51b81526004018080602001828103825260218152602001806128256021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff1916905556fe4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373a2646970667358221220baa1c6c1681b846fe2fa110a4564947a67973ddf4695e023bfa53eb30ae007e664736f6c63430007040033526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x5 PUSH1 0x7 SSTORE PUSH1 0x3 PUSH1 0x8 SSTORE PUSH1 0x5 PUSH1 0x9 SSTORE PUSH1 0x5 PUSH1 0xA SSTORE PUSH3 0x51 PUSH1 0x9 SLOAD PUSH3 0x3D PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD PUSH3 0x490 PUSH1 0x20 SHL PUSH3 0x1B8F OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x490 PUSH1 0x20 SHL PUSH3 0x1B8F OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xB SSTORE PUSH1 0x64 PUSH1 0xC DUP2 SWAP1 SSTORE PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH2 0xDEAD OR SWAP1 SWAP2 SSTORE PUSH1 0xE DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x32 PUSH1 0x12 SSTORE PUSH1 0x13 SSTORE PUSH1 0x15 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH2 0x2710 PUSH12 0x1239A002A3DB32D57FFFFFFF NOT DIV PUSH1 0x16 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH16 0x20B7323932BBAA30BA32902A37B5B2B7 PUSH1 0x81 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0x4 DUP5 MSTORE PUSH4 0x544F5047 PUSH1 0xE0 SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD SWAP2 SWAP3 SWAP2 PUSH1 0x12 SWAP2 PUSH3 0x111 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH3 0x79D JUMP JUMPDEST POP DUP2 MLOAD PUSH3 0x127 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x79D JUMP JUMPDEST POP PUSH1 0x2 DUP1 SLOAD CALLER PUSH2 0x100 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT PUSH1 0xFF SWAP1 SWAP6 AND PUSH1 0xFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP4 SWAP1 SWAP4 AND OR SWAP1 SSTORE PUSH3 0x160 SWAP3 POP SWAP1 POP PUSH3 0x4F2 JUMP JUMPDEST PUSH1 0x14 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0xCEEB22FAF32FF4EAD24565225503807E41E5FE87 OR SWAP1 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0xC45A0155 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 PUSH4 0xC45A0155 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1E1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x1F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x14 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 PUSH4 0xC9C65396 SWAP4 AND SWAP2 PUSH4 0xAD5C4648 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x25C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x273 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x2C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x2D8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x2EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x15 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR DUP3 SSTORE PUSH1 0xF DUP1 SLOAD DUP3 AND PUSH20 0x2C604D9E15E6524F0BB2A2A22F63A7CA041E84C3 OR SWAP1 SSTORE PUSH1 0x10 DUP1 SLOAD DUP3 AND PUSH20 0xCC5E043C5142033A800A72286356317DACB57A77 OR DUP2 SSTORE PUSH1 0x11 DUP1 SLOAD DUP4 AND PUSH20 0x833123D7AF220758A5484887AC582D4D39E9EDE0 OR SWAP1 SSTORE ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x14 SLOAD DUP9 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 PUSH1 0x0 NOT SWAP1 SSTORE SWAP5 SLOAD PUSH1 0x4 DUP1 SLOAD SWAP1 SWAP6 AND SWAP1 DUP8 AND OR SWAP1 SWAP4 SSTORE PUSH12 0xCECB8F27F4200F3A0000000 PUSH1 0x18 SWAP1 DUP2 SSTORE SWAP2 SLOAD SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x1A DUP3 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 PUSH12 0x1D290004395EB7BBFFFFFFF NOT SWAP1 DUP2 SWAP1 SSTORE SWAP1 SLOAD PUSH3 0x3E5 SWAP3 PUSH3 0x544 DUP2 SHL PUSH3 0x1BE9 OR SWAP1 SHR JUMP JUMPDEST PUSH1 0x19 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH1 0x10 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE ADDRESS DUP5 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE SWAP1 SLOAD PUSH3 0x442 SWAP2 AND PUSH3 0x58E JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x18 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH1 0x0 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 PUSH3 0x849 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH3 0x4EB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH3 0x50D DUP2 PUSH1 0x3 PUSH3 0x609 PUSH1 0x20 SHL PUSH3 0x1C2B OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4EB DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH3 0x68D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x5A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 PUSH2 0x100 SWAP1 DIV AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH3 0x615 DUP3 DUP3 PUSH3 0x734 JUMP JUMPDEST ISZERO PUSH3 0x668 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH3 0x71D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x6E1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x6C7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x70F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH3 0x72A JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x77D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x3117 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x7D5 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x820 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x7F0 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x820 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x820 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x820 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x803 JUMP JUMPDEST POP PUSH3 0x82E SWAP3 SWAP2 POP PUSH3 0x832 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x82E JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x833 JUMP JUMPDEST PUSH2 0x28BE DUP1 PUSH3 0x859 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x354 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7A43E23F GT PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xBDA5C8BB GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xD5938AAC GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0xC3E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xC79 JUMPI DUP1 PUSH4 0xF887EA40 EQ PUSH2 0xCAC JUMPI DUP1 PUSH4 0xF9F92BE4 EQ PUSH2 0xCC1 JUMPI PUSH2 0x35B JUMP JUMPDEST DUP1 PUSH4 0xD5938AAC EQ PUSH2 0xBB1 JUMPI DUP1 PUSH4 0xD7AC6585 EQ PUSH2 0xBE4 JUMPI DUP1 PUSH4 0xD7C01032 EQ PUSH2 0xBF9 JUMPI PUSH2 0x35B JUMP JUMPDEST DUP1 PUSH4 0xD1FCE264 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xD1FCE264 EQ PUSH2 0xA70 JUMPI DUP1 PUSH4 0xD37E219D EQ PUSH2 0xA85 JUMPI DUP1 PUSH4 0xD4399790 EQ PUSH2 0xB54 JUMPI DUP1 PUSH4 0xD51ED1C8 EQ PUSH2 0xB87 JUMPI PUSH2 0x35B JUMP JUMPDEST DUP1 PUSH4 0xBDA5C8BB EQ PUSH2 0xA0E JUMPI DUP1 PUSH4 0xCA33E64C EQ PUSH2 0xA23 JUMPI DUP1 PUSH4 0xD0889358 EQ PUSH2 0xA38 JUMPI PUSH2 0x35B JUMP JUMPDEST DUP1 PUSH4 0x98118CB4 GT PUSH2 0x164 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x954 JUMPI DUP1 PUSH4 0xA8AA1B31 EQ PUSH2 0x98D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x9A2 JUMPI DUP1 PUSH4 0xAA271E1A EQ PUSH2 0x9DB JUMPI PUSH2 0x35B JUMP JUMPDEST DUP1 PUSH4 0x98118CB4 EQ PUSH2 0x8F7 JUMPI DUP1 PUSH4 0x983B2D56 EQ PUSH2 0x90C JUMPI DUP1 PUSH4 0x98650275 EQ PUSH2 0x93F JUMPI PUSH2 0x35B JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x87D JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x892 JUMPI DUP1 PUSH4 0x9155E083 EQ PUSH2 0x8A7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x8E2 JUMPI PUSH2 0x35B JUMP JUMPDEST DUP1 PUSH4 0x7A43E23F EQ PUSH2 0x823 JUMPI DUP1 PUSH4 0x800CEE51 EQ PUSH2 0x853 JUMPI DUP1 PUSH4 0x83B4AC68 EQ PUSH2 0x868 JUMPI PUSH2 0x35B JUMP JUMPDEST DUP1 PUSH4 0x3092AFD5 GT PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x56A227F2 GT PUSH2 0x23E JUMPI DUP1 PUSH4 0x70A08231 GT PUSH2 0x218 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x793 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x7C6 JUMPI DUP1 PUSH4 0x749796A5 EQ PUSH2 0x7DB JUMPI DUP1 PUSH4 0x753D02A1 EQ PUSH2 0x80E JUMPI PUSH2 0x35B JUMP JUMPDEST DUP1 PUSH4 0x56A227F2 EQ PUSH2 0x730 JUMPI DUP1 PUSH4 0x6D351D1A EQ PUSH2 0x769 JUMPI DUP1 PUSH4 0x6DDD1713 EQ PUSH2 0x77E JUMPI PUSH2 0x35B JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x27A JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x678 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x6B1 JUMPI DUP1 PUSH4 0x4D709ADF EQ PUSH2 0x6EA JUMPI DUP1 PUSH4 0x563DF32F EQ PUSH2 0x71B JUMPI PUSH2 0x35B JUMP JUMPDEST DUP1 PUSH4 0x3092AFD5 EQ PUSH2 0x5E1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x614 JUMPI DUP1 PUSH4 0x33F3D628 EQ PUSH2 0x63F JUMPI PUSH2 0x35B JUMP JUMPDEST DUP1 PUSH4 0x1DF4CCFC GT PUSH2 0x30D JUMPI DUP1 PUSH4 0x2B112E49 GT PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x2B112E49 EQ PUSH2 0x56F JUMPI DUP1 PUSH4 0x2B14CA56 EQ PUSH2 0x584 JUMPI DUP1 PUSH4 0x2BE6937D EQ PUSH2 0x599 JUMPI DUP1 PUSH4 0x2F34D282 EQ PUSH2 0x5AE JUMPI PUSH2 0x35B JUMP JUMPDEST DUP1 PUSH4 0x1DF4CCFC EQ PUSH2 0x4E7 JUMPI DUP1 PUSH4 0x201E7991 EQ PUSH2 0x4FC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x52C JUMPI PUSH2 0x35B JUMP JUMPDEST DUP1 PUSH4 0x4A66B48 EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x42E JUMPI DUP1 PUSH4 0x1161AE39 EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0x180B0D7E EQ PUSH2 0x4AB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x4D2 JUMPI PUSH2 0x35B JUMP JUMPDEST CALLDATASIZE PUSH2 0x35B JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x383 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x80 ADD CALLDATALOAD PUSH2 0xCF4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0xD4D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3F3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3DB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x420 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x467 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x451 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xDE3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x467 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x49E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xE8C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C0 PUSH2 0xEA0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C0 PUSH2 0xEA6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C0 PUSH2 0xEAC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x508 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x51F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xEB2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x538 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x467 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x54F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0xECE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C0 PUSH2 0xFA8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x590 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C0 PUSH2 0x100A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH2 0x1010 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1036 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x604 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1070 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x620 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x629 PUSH2 0x108D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x467 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x662 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1096 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x684 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x467 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x69B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x112B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x11FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6FF PUSH2 0x1333 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x727 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C0 PUSH2 0x1342 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x753 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1348 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x775 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C0 PUSH2 0x139B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x467 PUSH2 0x13B4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x79F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH2 0x13EC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x144C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH2 0x1481 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x82F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x846 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x14E5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x85F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6FF PUSH2 0x1691 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x874 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x467 PUSH2 0x16A0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x889 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6FF PUSH2 0x16AA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x89E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x467 PUSH2 0x16BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x8CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x16D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0x1710 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x903 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C0 PUSH2 0x1770 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x918 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x92F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1776 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH2 0x1790 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x960 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x467 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x977 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x179B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x999 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6FF PUSH2 0x18C5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x467 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x9C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x18D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x467 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x193E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C0 PUSH2 0x194B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6FF PUSH2 0x1951 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xA5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x1960 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x467 PUSH2 0x19B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xAA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xAC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xAD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xAF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xB15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xB27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xB49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x19C3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x467 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A20 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1A3E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A92 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6FF PUSH2 0x1AC7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xC1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD CALLDATALOAD AND PUSH2 0x1AD6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xC61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x1B26 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B51 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6FF PUSH2 0x1B6B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x467 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B7A JUMP JUMPDEST PUSH2 0xCFC PUSH2 0x16BE JUMP JUMPDEST PUSH2 0xD05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 DUP6 SWAP1 SSTORE PUSH1 0x9 DUP5 SWAP1 SSTORE PUSH1 0x8 DUP4 SWAP1 SSTORE PUSH1 0xA DUP3 SWAP1 SSTORE PUSH2 0xD2D DUP5 PUSH2 0xD27 DUP8 DUP7 PUSH2 0x1B8F JUMP JUMPDEST SWAP1 PUSH2 0x1B8F JUMP JUMPDEST PUSH1 0xB SSTORE PUSH1 0xC DUP2 SWAP1 SSTORE PUSH1 0x4 DUP2 DIV PUSH1 0xB SLOAD LT PUSH2 0xD46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xDD9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDAE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDD9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDBC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xE01 JUMPI POP PUSH2 0xE01 PUSH2 0x16BE JUMP JUMPDEST DUP1 PUSH2 0xE1B JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0xE24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP7 SWAP1 SSTORE DUP1 MLOAD DUP7 DUP2 MSTORE SWAP1 MLOAD SWAP3 SWAP4 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xE98 DUP4 PUSH2 0x1A3E JUMP JUMPDEST GT SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x18 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0xEBA PUSH2 0x16BE JUMP JUMPDEST PUSH2 0xEC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x12 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x13 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xEE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x0 NOT EQ PUSH2 0xF91 JUMPI PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH22 0x496E73756666696369656E7420416C6C6F77616E6365 PUSH1 0x50 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B DUP3 MSTORE DUP4 DUP2 KECCAK256 CALLER DUP3 MSTORE SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0xF6C SWAP2 DUP6 SWAP1 PUSH2 0x1CAC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0xF9C DUP6 DUP6 DUP6 PUSH2 0x1D43 JUMP JUMPDEST POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x19 SLOAD PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD PUSH1 0xD SLOAD SWAP1 SWAP4 AND DUP3 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP3 PUSH2 0x1005 SWAP3 SWAP1 SWAP2 PUSH2 0xFFF SWAP2 SWAP1 PUSH2 0xFF9 SWAP1 PUSH12 0x1D290004395EB7BBFFFFFFF NOT SWAP1 PUSH2 0x1F02 JUMP JUMPDEST SWAP1 PUSH2 0x1F02 JUMP JUMPDEST SWAP1 PUSH2 0x1BE9 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1018 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x1021 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x103E PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x1047 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP3 AND DUP3 OR SWAP1 SSTORE PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE JUMP JUMPDEST PUSH2 0x1078 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x1081 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x108A DUP2 PUSH2 0x1F44 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10A0 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x10A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x110C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1149 JUMPI POP PUSH2 0x1149 PUSH2 0x16BE JUMP JUMPDEST DUP1 PUSH2 0x1163 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x116C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x119A SWAP1 DUP4 PUSH2 0x1B8F JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP1 MLOAD SWAP5 DUP6 MSTORE MLOAD SWAP2 SWAP4 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1208 CALLER PUSH2 0x193E JUMP JUMPDEST PUSH2 0x1243 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x27F5 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x18 SLOAD PUSH2 0x1250 SWAP1 DUP3 PUSH2 0x1B8F JUMP JUMPDEST PUSH1 0x18 DUP2 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB LT ISZERO PUSH2 0x126F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH1 0x18 SSTORE JUMPDEST PUSH1 0x18 SLOAD PUSH2 0x128F SWAP1 PUSH12 0xCECB8F27F4200F3A0000000 PUSH1 0x0 NOT JUMPDEST MOD NOT SWAP1 PUSH2 0x1BE9 JUMP JUMPDEST PUSH1 0x19 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH3 0x93517 PUSH1 0xE0 SHL SUB NOT DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0xFFF6CAE9 SWAP3 DUP3 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1313 SWAP2 POP DUP3 PUSH2 0x1B8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1350 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x1359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SELFBALANCE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x64 DUP6 DUP5 MUL DIV DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1395 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1005 PUSH1 0x19 SLOAD PUSH1 0x16 SLOAD PUSH2 0x1BE9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x19 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0xE86 SWAP2 SWAP1 PUSH2 0x1BE9 JUMP JUMPDEST PUSH2 0x13F4 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x13FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x2 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1454 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x145D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x15 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFFF6CAE9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1395 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x14EF PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x14F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x17 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x153C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2A393C9030B3B0B4B7 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 PUSH2 0x1582 JUMPI PUSH1 0x18 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD DUP5 SWAP2 PUSH32 0x72725A3B1E5BD622D6BCD1339BB31279C351ABE8F541AC7FD320F24E1B1641F2 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP PUSH1 0x18 SLOAD PUSH2 0xE86 JUMP JUMPDEST PUSH1 0x0 DUP3 SLT ISZERO PUSH2 0x15A4 JUMPI PUSH1 0x18 SLOAD PUSH2 0x159C SWAP1 PUSH1 0x0 DUP5 SWAP1 SUB PUSH2 0x1F02 JUMP JUMPDEST PUSH1 0x18 SSTORE PUSH2 0x15B5 JUMP JUMPDEST PUSH1 0x18 SLOAD PUSH2 0x15B1 SWAP1 DUP4 PUSH2 0x1B8F JUMP JUMPDEST PUSH1 0x18 SSTORE JUMPDEST PUSH1 0x18 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB LT ISZERO PUSH2 0x15D2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH1 0x18 SSTORE JUMPDEST PUSH1 0x18 SLOAD PUSH2 0x15EE SWAP1 PUSH12 0xCECB8F27F4200F3A0000000 PUSH1 0x0 NOT PUSH2 0x1287 JUMP JUMPDEST PUSH1 0x19 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH3 0x93517 PUSH1 0xE0 SHL SUB NOT DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0xFFF6CAE9 SWAP3 DUP3 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1637 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x164B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x18 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD DUP7 SWAP4 POP PUSH32 0x72725A3B1E5BD622D6BCD1339BB31279C351ABE8F541AC7FD320F24E1B1641F2 SWAP3 POP SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP PUSH1 0x18 SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x17 SLOAD PUSH1 0xFF AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP JUMPDEST PUSH2 0x16DC PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x16E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 DUP8 DUP10 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xDD9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDAE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDD9 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x177E PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x1787 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x108A DUP2 PUSH2 0x1F86 JUMP JUMPDEST PUSH2 0x1799 CALLER PUSH2 0x1F44 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x17B9 JUMPI POP PUSH2 0x17B9 PUSH2 0x16BE JUMP JUMPDEST DUP1 PUSH2 0x17D3 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x17DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP1 DUP4 LT PUSH2 0x1830 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SSTORE PUSH2 0x185F JUMP JUMPDEST PUSH2 0x183A DUP2 DUP5 PUSH2 0x1F02 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 SLOAD DUP2 MLOAD SWAP1 DUP2 MSTORE SWAP1 MLOAD SWAP3 SWAP4 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x18EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1905 JUMPI POP PUSH2 0x1905 PUSH2 0x16BE JUMP JUMPDEST DUP1 PUSH2 0x191F JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x1928 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1933 CALLER DUP6 DUP6 PUSH2 0x1D43 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE86 PUSH1 0x3 DUP4 PUSH2 0x1FC8 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1968 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x1971 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x15 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL DUP6 ISZERO ISZERO MUL OR SWAP1 SSTORE PUSH2 0x19AB DUP3 PUSH2 0x19A5 DUP4 PUSH12 0xCECB8F27F4200F3A0000000 PUSH1 0x0 NOT PUSH2 0x1287 JUMP JUMPDEST SWAP1 PUSH2 0x202F JUMP JUMPDEST PUSH1 0x16 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x19CB PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x19D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD46 JUMPI PUSH2 0x1A17 CALLER DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0x19EF JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x1A0B JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x1D43 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x19D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x19 SLOAD PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH2 0x1A69 SWAP2 PUSH2 0x1BE9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1A8B PUSH2 0x1A76 PUSH2 0xFA8 JUMP JUMPDEST PUSH2 0xFFF PUSH2 0x1A84 DUP5 PUSH1 0x2 PUSH2 0x202F JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x202F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1A9A PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x1AA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1ADE PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x1AE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x10 DUP1 SLOAD SWAP4 DUP6 AND SWAP4 DUP3 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x11 DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B59 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x1B62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x108A DUP2 PUSH2 0x2088 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1C PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x1A8B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1A8B DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x2102 JUMP JUMPDEST PUSH2 0x1C35 DUP3 DUP3 PUSH2 0x1FC8 JUMP JUMPDEST ISZERO PUSH2 0x1C87 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1D3B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D00 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1CE8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1D2D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1D85 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1DC5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x1A5B97D89B1858DADB1A5CDD PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x17 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1DE2 JUMPI PUSH2 0x1DDB DUP5 DUP5 DUP5 PUSH2 0x2167 JUMP JUMPDEST SWAP1 POP PUSH2 0x1A8B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DF9 PUSH1 0x19 SLOAD DUP5 PUSH2 0x202F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1E03 PUSH2 0x21F9 JUMP JUMPDEST ISZERO PUSH2 0x1E10 JUMPI PUSH2 0x1E10 PUSH2 0x224F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1E33 SWAP1 DUP3 PUSH2 0x1F02 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x1E59 DUP7 DUP7 PUSH2 0x2667 JUMP JUMPDEST PUSH2 0x1E63 JUMPI DUP2 PUSH2 0x1E6E JUMP JUMPDEST PUSH2 0x1E6E DUP7 DUP7 DUP5 PUSH2 0x26BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x1E94 SWAP1 DUP3 PUSH2 0x1B8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x19 SLOAD SWAP1 DUP9 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x1EE5 SWAP1 DUP6 SWAP1 PUSH2 0x1BE9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A8B DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1CAC JUMP JUMPDEST PUSH2 0x1F4F PUSH1 0x3 DUP3 PUSH2 0x278D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xE94479A9F7E1952CC78F2D6BAAB678ADC1B772D936C6583DEF489E524CB66692 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1F91 PUSH1 0x3 DUP3 PUSH2 0x1C2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x200F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2867 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x203E JUMPI POP PUSH1 0x0 PUSH2 0xE86 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x204B JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1A8B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2846 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x209B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 PUSH2 0x100 SWAP1 DIV AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2151 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1D00 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1CE8 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x215D JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x217F PUSH1 0x19 SLOAD DUP5 PUSH2 0x202F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x21A5 SWAP1 DUP3 PUSH2 0x1F02 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP7 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x21D4 SWAP1 DUP3 PUSH2 0x1B8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x221A JUMPI POP PUSH1 0x17 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x222F JUMPI POP PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST DUP1 ISZERO PUSH2 0x1005 JUMPI POP POP PUSH1 0x16 SLOAD ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x17 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x12 SLOAD PUSH1 0x13 SLOAD PUSH1 0x0 SWAP2 PUSH2 0x226E SWAP2 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x227A JUMPI PUSH1 0x7 SLOAD PUSH2 0x227D JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x19 SLOAD ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP3 SWAP4 POP SWAP2 PUSH2 0x229D SWAP2 PUSH2 0x1BE9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x22BF PUSH1 0x2 PUSH2 0xFFF PUSH1 0xB SLOAD PUSH2 0xFFF DUP8 DUP8 PUSH2 0x202F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x22CD DUP4 DUP4 PUSH2 0x1F02 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP4 SWAP5 POP SWAP1 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP ADDRESS DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x22FF JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x14 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP4 AND SWAP3 PUSH4 0xAD5C4648 SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2353 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2367 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x237D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP2 MLOAD DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x238E JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x14 SLOAD PUSH1 0x40 MLOAD PUSH4 0x791AC947 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 DUP2 MSTORE PUSH1 0x0 PUSH1 0x24 DUP4 ADD DUP2 SWAP1 MSTORE ADDRESS PUSH1 0x64 DUP5 ADD DUP2 SWAP1 MSTORE TIMESTAMP PUSH1 0x84 DUP6 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x44 DUP7 ADD SWAP1 DUP2 MSTORE DUP10 MLOAD PUSH1 0xA4 DUP8 ADD MSTORE DUP10 MLOAD SELFBALANCE SWAP10 SWAP8 SWAP1 SWAP8 AND SWAP8 PUSH4 0x791AC947 SWAP8 DUP13 SWAP8 SWAP6 SWAP7 DUP13 SWAP7 SWAP1 SWAP4 SWAP3 PUSH1 0xC4 SWAP1 SWAP2 ADD SWAP2 DUP8 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 DUP12 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2428 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2410 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2451 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2465 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH2 0x247E DUP3 SELFBALANCE PUSH2 0x1F02 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2499 PUSH2 0x2490 DUP10 PUSH1 0x2 PUSH2 0x1BE9 JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 PUSH2 0x1F02 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x24AE PUSH1 0x2 PUSH2 0xFFF DUP5 DUP2 DUP8 DUP15 PUSH2 0x202F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x24CB DUP4 PUSH2 0xFFF PUSH1 0x9 SLOAD DUP8 PUSH2 0x202F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x24E8 DUP5 PUSH2 0xFFF PUSH1 0x8 SLOAD DUP9 PUSH2 0x202F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0x7530 SWAP1 DUP5 SWAP1 DUP5 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x253F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2544 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0x11 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x7530 SWAP1 DUP6 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2599 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x259E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 SWAP3 POP POP DUP11 ISZERO SWAP1 POP PUSH2 0x264F JUMPI PUSH1 0x14 SLOAD PUSH1 0xF SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xF305D719 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP15 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x44 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x84 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xA4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xF305D719 SWAP2 DUP8 SWAP2 PUSH1 0xC4 DUP1 DUP3 ADD SWAP3 PUSH1 0x60 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2621 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2635 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x264C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMPDEST POP POP PUSH1 0x17 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0x2693 JUMPI POP PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ JUMPDEST DUP1 ISZERO PUSH2 0x1A8B JUMPI POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x15 SLOAD PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x26E9 JUMPI PUSH1 0xA SLOAD PUSH2 0x26E6 SWAP1 DUP3 SWAP1 PUSH2 0x1B8F JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH2 0x26FD SWAP1 PUSH2 0xFFF DUP7 DUP6 PUSH2 0x202F JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x271A SWAP1 DUP3 PUSH2 0x1B8F JUMP JUMPDEST ADDRESS PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x19 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x2768 SWAP1 DUP6 SWAP1 PUSH2 0x1BE9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 PUSH2 0x2783 DUP5 DUP3 PUSH2 0x1F02 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2797 DUP3 DUP3 PUSH2 0x1FC8 JUMP JUMPDEST PUSH2 0x27D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2825 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP INVALID 0x4D PUSH10 0x6E746572526F6C653A20 PUSH4 0x616C6C65 PUSH19 0x20646F6573206E6F7420686176652074686520 0x4D PUSH10 0x6E74657220726F6C6552 PUSH16 0x6C65733A206163636F756E7420646F65 PUSH20 0x206E6F74206861766520726F6C65536166654D61 PUSH21 0x683A206D756C7469706C69636174696F6E206F7665 PUSH19 0x666C6F77526F6C65733A206163636F756E7420 PUSH10 0x7320746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x657373A2646970667358221220BAA1C6C1681B DUP5 PUSH16 0xE2FA110A4564947A67973DDF4695E023 0xBF 0xA5 RETURNDATACOPY 0xB3 EXP 0xE0 SMOD 0xE6 PUSH5 0x736F6C6343 STOP SMOD DIV STOP CALLER MSTORE PUSH16 0x6C65733A206163636F756E7420697320 PUSH21 0x6865207A65726F2061646472657373000000000000 ",
							"sourceMap": "8436:15557:0:-:0;;;9354:1;9324:31;;9388:1;9362:27;;9427:1;9396:32;;9460:1;9435:26;;9503:45;9534:13;;9503:26;9520:8;;9503:12;;:16;;;;;;:26;;;;:::i;:::-;:30;;;;;;:45;;;;:::i;:::-;9468:80;;9587:3;9555:35;;;;9599:57;;;-1:-1:-1;;;;;;9599:57:0;;;9614:42;9599:57;;;;9663;;;;;;;;9881:2;9855:28;;9890:40;;9998:30;;;-1:-1:-1;;;;9998:30:0;-1:-1:-1;;;9998:30:0;;;10090:5;-1:-1:-1;;10070:25:0;10035:60;;10646:1160;;;;;;;;;-1:-1:-1;5208:229:0;;;;;;;;;;;-1:-1:-1;;;5208:229:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5208:229:0;;;;5341:18;;5208:229;;;9171:2;;5341:18;;-1:-1:-1;;5208:229:0;5341:18;:::i;:::-;-1:-1:-1;5370:22:0;;;;:7;;:22;;;;;:::i;:::-;-1:-1:-1;5403:9:0;:26;;7700:10;5403:26;7691:19;;-1:-1:-1;;;;;;5403:26:0;;;;-1:-1:-1;;5403:26:0;;;;;;;7691:19;;;;;;;4422:22;;-1:-1:-1;7700:10:0;-1:-1:-1;4422:10:0;:22::i;:::-;10730:6:::1;:63:::0;;-1:-1:-1;;;;;;10730:63:0::1;10750:42;10730:63;::::0;;;;10932:16:::1;::::0;;-1:-1:-1;;;10932:16:0;;;;-1:-1:-1;;;;;10932:6:0;;;::::1;::::0;:14:::1;::::0;:16:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;:6;:16;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;10932:16:0;10975:6:::1;::::0;:13:::1;::::0;;-1:-1:-1;;;10975:13:0;;;;-1:-1:-1;;;;;10920:40:0;;::::1;::::0;::::1;::::0;10975:6:::1;::::0;:11:::1;::::0;:13:::1;::::0;;::::1;::::0;10932:16:::1;::::0;10975:13;;;;;;;:6;:13;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;10975:13:0;10920:107:::1;::::0;;-1:-1:-1;;;;;;10920:107:0::1;::::0;;;;;;-1:-1:-1;;;;;10920:107:0;;::::1;;::::0;::::1;::::0;11011:4:::1;10920:107:::0;;;;;;;;;;10975:13:::1;::::0;10920:107;;;;;;;-1:-1:-1;10920:107:0;;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;10920:107:0;10913:4:::1;:114:::0;;-1:-1:-1;;;;;10913:114:0;;::::1;-1:-1:-1::0;;;;;;10913:114:0;;::::1;;::::0;;11040:21:::1;:66:::0;;;::::1;11064:42;11040:66;::::0;;11117:16:::1;:61:::0;;;::::1;11136:42;11117:61;::::0;;11189:21:::1;:66:::0;;;::::1;11213:42;11189:66;::::0;;11294:4:::1;-1:-1:-1::0;11268:32:0;;;:17:::1;10920:107;11268:32:::0;;;;;;;11309:6:::1;::::0;;::::1;11268:49:::0;;;;;;;-1:-1:-1;;11268:63:0;;11369:4;;-1:-1:-1;11342:32:0;;;;::::1;11369:4:::0;;::::1;11342:32;::::0;;;9291:24;11387:12:::1;:39:::0;;;11450:16;;;;::::1;11437:30:::0;;:12:::1;:30:::0;;;;;;-1:-1:-1;;11437:43:0;;;;11525:12;;11510:28:::1;::::0;:14:::1;::::0;::::1;;;:28:::0;::::1;:::i;:::-;11491:16;:47:::0;11551:27:::1;:35:::0;;-1:-1:-1;;;;11551:35:0::1;::::0;;11610:16:::1;::::0;;-1:-1:-1;;;;;11610:16:0;;::::1;11581:5;11597:30:::0;;;:12:::1;:30;::::0;;;;;:37;;-1:-1:-1;;11597:37:0;;::::1;11551:35:::0;11597:37;;::::1;::::0;;;11666:4:::1;11645:27:::0;;;;;;:34;;;;::::1;::::0;;::::1;::::0;;11711:16;;11692:36:::1;::::0;11711:16:::1;11692:18;:36::i;:::-;11767:16;::::0;11785:12:::1;::::0;11744:54:::1;::::0;;;;;;-1:-1:-1;;;;;11767:16:0;;::::1;::::0;::::1;::::0;11744:54:::1;::::0;;;;;::::1;::::0;;::::1;8436:15557:::0;;1900:181;1958:7;1990:5;;;2014:6;;;;2006:46;;;;;-1:-1:-1;;;2006:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;2072:1;1900:181;-1:-1:-1;;;1900:181:0:o;4804:122::-;4861:21;4874:7;4861:8;:12;;;;;;:21;;;;:::i;:::-;4898:20;;-1:-1:-1;;;;;4898:20:0;;;;;;;;4804:122;:::o;2725:132::-;2783:7;2810:39;2814:1;2817;2810:39;;;;;;;;;;;;;;;;;:3;;;:39;;:::i;8242:187::-;-1:-1:-1;;;;;8316:22:0;;8308:31;;;;;;8376:6;;8355:38;;-1:-1:-1;;;;;8355:38:0;;;;8376:6;;;;;8355:38;;;;;8404:6;:17;;-1:-1:-1;;;;;8404:17:0;;;;;-1:-1:-1;;;;;;8404:17:0;;;;;;;;;8242:187::o;3450:178::-;3528:18;3532:4;3538:7;3528:3;:18::i;:::-;3527:19;3519:63;;;;;-1:-1:-1;;;3519:63:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3593:20:0;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;3593:27:0;3616:4;3593:27;;;3450:178::o;2865:225::-;2985:7;3020:12;3013:5;3005:28;;;;-1:-1:-1;;;3005:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3044:9;3060:1;3056;:5;;;;;;;2865:225;-1:-1:-1;;;;;2865:225:0:o;3986:203::-;4058:4;-1:-1:-1;;;;;4083:21:0;;4075:68;;;;-1:-1:-1;;;4075:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4161:20:0;:11;:20;;;;;;;;;;;;;;;3986:203::o;8436:15557::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8436:15557:0;;;-1:-1:-1;8436:15557:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106103545760003560e01c80637a43e23f116101c6578063bda5c8bb116100f7578063d5938aac11610095578063dd62ed3e1161006f578063dd62ed3e14610c3e578063f2fde38b14610c79578063f887ea4014610cac578063f9f92be414610cc15761035b565b8063d5938aac14610bb1578063d7ac658514610be4578063d7c0103214610bf95761035b565b8063d1fce264116100d1578063d1fce26414610a70578063d37e219d14610a85578063d439979014610b54578063d51ed1c814610b875761035b565b8063bda5c8bb14610a0e578063ca33e64c14610a23578063d088935814610a385761035b565b806398118cb411610164578063a457c2d71161013e578063a457c2d714610954578063a8aa1b311461098d578063a9059cbb146109a2578063aa271e1a146109db5761035b565b806398118cb4146108f7578063983b2d561461090c578063986502751461093f5761035b565b80638da5cb5b116101a05780638da5cb5b1461087d5780638f32d59b146108925780639155e083146108a757806395d89b41146108e25761035b565b80637a43e23f14610823578063800cee511461085357806383b4ac68146108685761035b565b80633092afd5116102a057806356a227f21161023e57806370a082311161021857806370a0823114610793578063715018a6146107c6578063749796a5146107db578063753d02a11461080e5761035b565b806356a227f2146107305780636d351d1a146107695780636ddd17131461077e5761035b565b8063395093511161027a578063395093511461067857806340c10f19146106b15780634d709adf146106ea578063563df32f1461071b5761035b565b80633092afd5146105e1578063313ce5671461061457806333f3d6281461063f5761035b565b80631df4ccfc1161030d5780632b112e49116102e75780632b112e491461056f5780632b14ca56146105845780632be6937d146105995780632f34d282146105ae5761035b565b80631df4ccfc146104e7578063201e7991146104fc57806323b872dd1461052c5761035b565b806304a66b481461036057806306fdde03146103a4578063095ea7b31461042e5780631161ae391461047b578063180b0d7e146104ab57806318160ddd146104d25761035b565b3661035b57005b600080fd5b34801561036c57600080fd5b506103a2600480360360a081101561038357600080fd5b5080359060208101359060408101359060608101359060800135610cf4565b005b3480156103b057600080fd5b506103b9610d4d565b6040805160208082528351818301528351919283929083019185019080838360005b838110156103f35781810151838201526020016103db565b50505050905090810190601f1680156104205780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561043a57600080fd5b506104676004803603604081101561045157600080fd5b506001600160a01b038135169060200135610de3565b604080519115158252519081900360200190f35b34801561048757600080fd5b506104676004803603604081101561049e57600080fd5b5080359060200135610e8c565b3480156104b757600080fd5b506104c0610ea0565b60408051918252519081900360200190f35b3480156104de57600080fd5b506104c0610ea6565b3480156104f357600080fd5b506104c0610eac565b34801561050857600080fd5b506103a26004803603604081101561051f57600080fd5b5080359060200135610eb2565b34801561053857600080fd5b506104676004803603606081101561054f57600080fd5b506001600160a01b03813581169160208101359091169060400135610ece565b34801561057b57600080fd5b506104c0610fa8565b34801561059057600080fd5b506104c061100a565b3480156105a557600080fd5b506103a2611010565b3480156105ba57600080fd5b506103a2600480360360208110156105d157600080fd5b50356001600160a01b0316611036565b3480156105ed57600080fd5b506103a26004803603602081101561060457600080fd5b50356001600160a01b0316611070565b34801561062057600080fd5b5061062961108d565b6040805160ff9092168252519081900360200190f35b34801561064b57600080fd5b506104676004803603604081101561066257600080fd5b506001600160a01b038135169060200135611096565b34801561068457600080fd5b506104676004803603604081101561069b57600080fd5b506001600160a01b03813516906020013561112b565b3480156106bd57600080fd5b506103a2600480360360408110156106d457600080fd5b506001600160a01b0381351690602001356111ff565b3480156106f657600080fd5b506106ff611333565b604080516001600160a01b039092168252519081900360200190f35b34801561072757600080fd5b506104c0611342565b34801561073c57600080fd5b506103a26004803603604081101561075357600080fd5b50803590602001356001600160a01b0316611348565b34801561077557600080fd5b506104c061139b565b34801561078a57600080fd5b506104676113b4565b34801561079f57600080fd5b506104c0600480360360208110156107b657600080fd5b50356001600160a01b03166113c4565b3480156107d257600080fd5b506103a26113ec565b3480156107e757600080fd5b506103a2600480360360208110156107fe57600080fd5b50356001600160a01b031661144c565b34801561081a57600080fd5b506103a2611481565b34801561082f57600080fd5b506104c06004803603604081101561084657600080fd5b50803590602001356114e5565b34801561085f57600080fd5b506106ff611691565b34801561087457600080fd5b506104676116a0565b34801561088957600080fd5b506106ff6116aa565b34801561089e57600080fd5b506104676116be565b3480156108b357600080fd5b506103a2600480360360408110156108ca57600080fd5b506001600160a01b03813516906020013515156116d4565b3480156108ee57600080fd5b506103b9611710565b34801561090357600080fd5b506104c0611770565b34801561091857600080fd5b506103a26004803603602081101561092f57600080fd5b50356001600160a01b0316611776565b34801561094b57600080fd5b506103a2611790565b34801561096057600080fd5b506104676004803603604081101561097757600080fd5b506001600160a01b03813516906020013561179b565b34801561099957600080fd5b506106ff6118c5565b3480156109ae57600080fd5b50610467600480360360408110156109c557600080fd5b506001600160a01b0381351690602001356118d4565b3480156109e757600080fd5b50610467600480360360208110156109fe57600080fd5b50356001600160a01b031661193e565b348015610a1a57600080fd5b506104c061194b565b348015610a2f57600080fd5b506106ff611951565b348015610a4457600080fd5b506103a260048036036060811015610a5b57600080fd5b50803515159060208101359060400135611960565b348015610a7c57600080fd5b506104676119b3565b348015610a9157600080fd5b506103a260048036036040811015610aa857600080fd5b810190602081018135640100000000811115610ac357600080fd5b820183602082011115610ad557600080fd5b80359060200191846020830284011164010000000083111715610af757600080fd5b919390929091602081019035640100000000811115610b1557600080fd5b820183602082011115610b2757600080fd5b80359060200191846020830284011164010000000083111715610b4957600080fd5b5090925090506119c3565b348015610b6057600080fd5b5061046760048036036020811015610b7757600080fd5b50356001600160a01b0316611a20565b348015610b9357600080fd5b506104c060048036036020811015610baa57600080fd5b5035611a3e565b348015610bbd57600080fd5b506103a260048036036020811015610bd457600080fd5b50356001600160a01b0316611a92565b348015610bf057600080fd5b506106ff611ac7565b348015610c0557600080fd5b506103a260048036036060811015610c1c57600080fd5b506001600160a01b038135811691602081013582169160409091013516611ad6565b348015610c4a57600080fd5b506104c060048036036040811015610c6157600080fd5b506001600160a01b0381358116916020013516611b26565b348015610c8557600080fd5b506103a260048036036020811015610c9c57600080fd5b50356001600160a01b0316611b51565b348015610cb857600080fd5b506106ff611b6b565b348015610ccd57600080fd5b5061046760048036036020811015610ce457600080fd5b50356001600160a01b0316611b7a565b610cfc6116be565b610d0557600080fd5b600785905560098490556008839055600a829055610d2d84610d278786611b8f565b90611b8f565b600b55600c81905560048104600b5410610d4657600080fd5b5050505050565b60008054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610dd95780601f10610dae57610100808354040283529160200191610dd9565b820191906000526020600020905b815481529060010190602001808311610dbc57829003601f168201915b5050505050905090565b600454600090600160a01b900460ff1680610e015750610e016116be565b80610e1b57503360009081526005602052604090205460ff165b610e2457600080fd5b336000818152601b602090815260408083206001600160a01b03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060015b92915050565b600082610e9883611a3e565b119392505050565b600c5481565b60185490565b600b5481565b610eba6116be565b610ec357600080fd5b601291909155601355565b6000826001600160a01b038116610ee457600080fd5b6001600160a01b0385166000908152601b6020908152604080832033845290915290205460001914610f91576040805180820182526016815275496e73756666696369656e7420416c6c6f77616e636560501b6020808301919091526001600160a01b0388166000908152601b82528381203382529091529190912054610f6c918590611cac565b6001600160a01b0386166000908152601b602090815260408083203384529091529020555b610f9c858585611d43565b50600195945050505050565b601954600e546001600160a01b039081166000908152601a602052604080822054600d5490931682528120549092611005929091610fff9190610ff9906b01d290004395eb7bbfffffff1990611f02565b90611f02565b90611be9565b905090565b600a5481565b6110186116be565b61102157600080fd5b6004805460ff60a01b1916600160a01b179055565b61103e6116be565b61104757600080fd5b600480546001600160a01b039092166001600160a01b0319909216821790556000526006602052565b6110786116be565b61108157600080fd5b61108a81611f44565b50565b60025460ff1690565b60006110a06116be565b6110a957600080fd5b6040805163a9059cbb60e01b81523360048201526024810184905290516001600160a01b0385169163a9059cbb9160448083019260209291908290030181600087803b1580156110f857600080fd5b505af115801561110c573d6000803e3d6000fd5b505050506040513d602081101561112257600080fd5b50519392505050565b600454600090600160a01b900460ff168061114957506111496116be565b8061116357503360009081526005602052604090205460ff165b61116c57600080fd5b336000908152601b602090815260408083206001600160a01b038716845290915290205461119a9083611b8f565b336000818152601b602090815260408083206001600160a01b0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b6112083361193e565b6112435760405162461bcd60e51b81526004018080602001828103825260308152602001806127f56030913960400191505060405180910390fd5b6018546112509082611b8f565b60188190556001600160801b03101561126f576001600160801b036018555b60185461128f906b0cecb8f27f4200f3a00000006000195b061990611be9565b601955600480546040805160016209351760e01b0319815290516001600160a01b039092169263fff6cae992828201926000929082900301818387803b1580156112d857600080fd5b505af11580156112ec573d6000803e3d6000fd5b5050506001600160a01b0383166000908152601a6020526040902054611313915082611b8f565b6001600160a01b039092166000908152601a602052604090209190915550565b6004546001600160a01b031681565b60085481565b6113506116be565b61135957600080fd5b60405147906001600160a01b0383169060648584020480156108fc02916000818181858888f19350505050158015611395573d6000803e3d6000fd5b50505050565b6000611005601954601654611be990919063ffffffff16565b601554600160a01b900460ff1681565b6019546001600160a01b0382166000908152601a60205260408120549091610e869190611be9565b6113f46116be565b6113fd57600080fd5b6002546040516101009091046001600160a01b0316907ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482090600090a260028054610100600160a81b0319169055565b6114546116be565b61145d57600080fd5b6001600160a01b03166000908152600660205260409020805460ff19166001179055565b601560009054906101000a90046001600160a01b03166001600160a01b031663fff6cae96040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156114d157600080fd5b505af1158015611395573d6000803e3d6000fd5b60006114ef6116be565b6114f857600080fd5b60175460ff161561153c576040805162461bcd60e51b81526020600482015260096024820152682a393c9030b3b0b4b760b91b604482015290519081900360640190fd5b8161158257601854604080519182525184917f72725a3b1e5bd622d6bcd1339bb31279c351abe8f541ac7fd320f24e1b1641f2919081900360200190a250601854610e86565b60008212156115a45760185461159c906000849003611f02565b6018556115b5565b6018546115b19083611b8f565b6018555b6018546001600160801b0310156115d2576001600160801b036018555b6018546115ee906b0cecb8f27f4200f3a0000000600019611287565b601955600480546040805160016209351760e01b0319815290516001600160a01b039092169263fff6cae992828201926000929082900301818387803b15801561163757600080fd5b505af115801561164b573d6000803e3d6000fd5b505060185460408051918252518693507f72725a3b1e5bd622d6bcd1339bb31279c351abe8f541ac7fd320f24e1b1641f292509081900360200190a25060185492915050565b6010546001600160a01b031681565b60175460ff161590565b60025461010090046001600160a01b031690565b60025461010090046001600160a01b0316331490565b6116dc6116be565b6116e557600080fd5b6001600160a01b03919091166000908152601c60205260409020805460ff1916911515919091179055565b60018054604080516020601f60026000196101008789161502019095169490940493840181900481028201810190925282815260609390929091830182828015610dd95780601f10610dae57610100808354040283529160200191610dd9565b60075481565b61177e6116be565b61178757600080fd5b61108a81611f86565b61179933611f44565b565b600454600090600160a01b900460ff16806117b957506117b96116be565b806117d357503360009081526005602052604090205460ff165b6117dc57600080fd5b336000908152601b602090815260408083206001600160a01b038716845290915290205480831061183057336000908152601b602090815260408083206001600160a01b038816845290915281205561185f565b61183a8184611f02565b336000908152601b602090815260408083206001600160a01b03891684529091529020555b336000818152601b602090815260408083206001600160a01b0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b6015546001600160a01b031681565b6000826001600160a01b0381166118ea57600080fd5b600454600160a01b900460ff168061190557506119056116be565b8061191f57503360009081526005602052604090205460ff165b61192857600080fd5b611933338585611d43565b506001949350505050565b6000610e86600383611fc8565b60095481565b600f546001600160a01b031681565b6119686116be565b61197157600080fd5b6015805460ff60a01b1916600160a01b851515021790556119ab826119a5836b0cecb8f27f4200f3a0000000600019611287565b9061202f565b601655505050565b600454600160a01b900460ff1681565b6119cb6116be565b6119d457600080fd5b60005b83811015610d4657611a17338686848181106119ef57fe5b905060200201356001600160a01b0316858585818110611a0b57fe5b90506020020135611d43565b506001016119d7565b6001600160a01b031660009081526006602052604090205460ff1690565b6019546015546001600160a01b03166000908152601a602052604081205490918291611a6991611be9565b9050611a8b611a76610fa8565b610fff611a8484600261202f565b869061202f565b9392505050565b611a9a6116be565b611aa357600080fd5b6001600160a01b03166000908152600560205260409020805460ff19166001179055565b6011546001600160a01b031681565b611ade6116be565b611ae757600080fd5b600f80546001600160a01b039485166001600160a01b031991821617909155601080549385169382169390931790925560118054919093169116179055565b6001600160a01b039182166000908152601b6020908152604080832093909416825291909152205490565b611b596116be565b611b6257600080fd5b61108a81612088565b6014546001600160a01b031681565b601c6020526000908152604090205460ff1681565b600082820183811015611a8b576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000611a8b83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612102565b611c358282611fc8565b15611c87576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60008184841115611d3b5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611d00578181015183820152602001611ce8565b50505050905090810190601f168015611d2d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6001600160a01b0383166000908152601c602052604081205460ff16158015611d8557506001600160a01b0383166000908152601c602052604090205460ff16155b611dc5576040805162461bcd60e51b815260206004820152600c60248201526b1a5b97d89b1858dadb1a5cdd60a21b604482015290519081900360640190fd5b60175460ff1615611de257611ddb848484612167565b9050611a8b565b6000611df96019548461202f90919063ffffffff16565b9050611e036121f9565b15611e1057611e1061224f565b6001600160a01b0385166000908152601a6020526040902054611e339082611f02565b6001600160a01b0386166000908152601a6020526040812091909155611e598686612667565b611e635781611e6e565b611e6e8686846126bb565b6001600160a01b0386166000908152601a6020526040902054909150611e949082611b8f565b6001600160a01b038087166000818152601a6020526040902092909255601954908816907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611ee5908590611be9565b60408051918252519081900360200190a350600195945050505050565b6000611a8b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611cac565b611f4f60038261278d565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b611f91600382611c2b565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b60006001600160a01b03821661200f5760405162461bcd60e51b81526004018080602001828103825260228152602001806128676022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b60008261203e57506000610e86565b8282028284828161204b57fe5b0414611a8b5760405162461bcd60e51b81526004018080602001828103825260218152602001806128466021913960400191505060405180910390fd5b6001600160a01b03811661209b57600080fd5b6002546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600280546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b600081836121515760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611d00578181015183820152602001611ce8565b50600083858161215d57fe5b0495945050505050565b60008061217f6019548461202f90919063ffffffff16565b6001600160a01b0386166000908152601a60205260409020549091506121a59082611f02565b6001600160a01b038087166000908152601a602052604080822093909355908616815220546121d49082611b8f565b6001600160a01b0385166000908152601a602052604090205550600190509392505050565b6015546000906001600160a01b0316331480159061221a575060175460ff16155b801561222f5750601554600160a01b900460ff165b8015611005575050601654306000908152601a6020526040902054101590565b6017805460ff1916600117905560125460135460009161226e91610e8c565b61227a5760075461227d565b60005b601954306000908152601a60205260408120549293509161229d91611be9565b905060006122bf6002610fff600b54610fff878761202f90919063ffffffff16565b905060006122cd8383611f02565b60408051600280825260608083018452939450909160208301908036833701905050905030816000815181106122ff57fe5b6001600160a01b03928316602091820292909201810191909152601454604080516315ab88c960e31b81529051919093169263ad5c4648926004808301939192829003018186803b15801561235357600080fd5b505afa158015612367573d6000803e3d6000fd5b505050506040513d602081101561237d57600080fd5b505181518290600190811061238e57fe5b6001600160a01b0392831660209182029290920181019190915260145460405163791ac94760e01b8152600481018681526000602483018190523060648401819052426084850181905260a060448601908152895160a487015289514799979097169763791ac947978c9795968c9690939260c49091019187820191028083838b5b83811015612428578181015183820152602001612410565b505050509050019650505050505050600060405180830381600087803b15801561245157600080fd5b505af1158015612465573d6000803e3d6000fd5b50505050600061247e8247611f0290919063ffffffff16565b90506000612499612490896002611be9565b600b5490611f02565b905060006124ae6002610fff8481878e61202f565b905060006124cb83610fff6009548761202f90919063ffffffff16565b905060006124e884610fff6008548861202f90919063ffffffff16565b6010546040519192506000916001600160a01b039091169061753090849084818181858888f193505050503d806000811461253f576040519150601f19603f3d011682016040523d82523d6000602084013e612544565b606091505b50506011546040519192506001600160a01b0316906175309085906000818181858888f193505050503d8060008114612599576040519150601f19603f3d011682016040523d82523d6000602084013e61259e565b606091505b5060009250508a15905061264f57601454600f546040805163f305d71960e01b8152306004820152602481018e905260006044820181905260648201526001600160a01b0392831660848201524260a48201529051919092169163f305d71991879160c48082019260609290919082900301818588803b15801561262157600080fd5b505af1158015612635573d6000803e3d6000fd5b50505050506040513d606081101561264c57600080fd5b50505b50506017805460ff1916905550505050505050505050565b6015546000906001600160a01b038481169116148061269357506015546001600160a01b038381169116145b8015611a8b575050506001600160a01b031660009081526006602052604090205460ff161590565b600b54601554600091906001600160a01b03858116911614156126e957600a546126e6908290611b8f565b90505b600c546000906126fd90610fff868561202f565b306000908152601a602052604090205490915061271a9082611b8f565b306000818152601a60205260409020919091556019546001600160a01b038816907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90612768908590611be9565b60408051918252519081900360200190a36127838482611f02565b9695505050505050565b6127978282611fc8565b6127d25760405162461bcd60e51b81526004018080602001828103825260218152602001806128256021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff1916905556fe4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373a2646970667358221220baa1c6c1681b846fe2fa110a4564947a67973ddf4695e023bfa53eb30ae007e664736f6c63430007040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x354 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7A43E23F GT PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xBDA5C8BB GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xD5938AAC GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0xC3E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xC79 JUMPI DUP1 PUSH4 0xF887EA40 EQ PUSH2 0xCAC JUMPI DUP1 PUSH4 0xF9F92BE4 EQ PUSH2 0xCC1 JUMPI PUSH2 0x35B JUMP JUMPDEST DUP1 PUSH4 0xD5938AAC EQ PUSH2 0xBB1 JUMPI DUP1 PUSH4 0xD7AC6585 EQ PUSH2 0xBE4 JUMPI DUP1 PUSH4 0xD7C01032 EQ PUSH2 0xBF9 JUMPI PUSH2 0x35B JUMP JUMPDEST DUP1 PUSH4 0xD1FCE264 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xD1FCE264 EQ PUSH2 0xA70 JUMPI DUP1 PUSH4 0xD37E219D EQ PUSH2 0xA85 JUMPI DUP1 PUSH4 0xD4399790 EQ PUSH2 0xB54 JUMPI DUP1 PUSH4 0xD51ED1C8 EQ PUSH2 0xB87 JUMPI PUSH2 0x35B JUMP JUMPDEST DUP1 PUSH4 0xBDA5C8BB EQ PUSH2 0xA0E JUMPI DUP1 PUSH4 0xCA33E64C EQ PUSH2 0xA23 JUMPI DUP1 PUSH4 0xD0889358 EQ PUSH2 0xA38 JUMPI PUSH2 0x35B JUMP JUMPDEST DUP1 PUSH4 0x98118CB4 GT PUSH2 0x164 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x954 JUMPI DUP1 PUSH4 0xA8AA1B31 EQ PUSH2 0x98D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x9A2 JUMPI DUP1 PUSH4 0xAA271E1A EQ PUSH2 0x9DB JUMPI PUSH2 0x35B JUMP JUMPDEST DUP1 PUSH4 0x98118CB4 EQ PUSH2 0x8F7 JUMPI DUP1 PUSH4 0x983B2D56 EQ PUSH2 0x90C JUMPI DUP1 PUSH4 0x98650275 EQ PUSH2 0x93F JUMPI PUSH2 0x35B JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x87D JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x892 JUMPI DUP1 PUSH4 0x9155E083 EQ PUSH2 0x8A7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x8E2 JUMPI PUSH2 0x35B JUMP JUMPDEST DUP1 PUSH4 0x7A43E23F EQ PUSH2 0x823 JUMPI DUP1 PUSH4 0x800CEE51 EQ PUSH2 0x853 JUMPI DUP1 PUSH4 0x83B4AC68 EQ PUSH2 0x868 JUMPI PUSH2 0x35B JUMP JUMPDEST DUP1 PUSH4 0x3092AFD5 GT PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x56A227F2 GT PUSH2 0x23E JUMPI DUP1 PUSH4 0x70A08231 GT PUSH2 0x218 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x793 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x7C6 JUMPI DUP1 PUSH4 0x749796A5 EQ PUSH2 0x7DB JUMPI DUP1 PUSH4 0x753D02A1 EQ PUSH2 0x80E JUMPI PUSH2 0x35B JUMP JUMPDEST DUP1 PUSH4 0x56A227F2 EQ PUSH2 0x730 JUMPI DUP1 PUSH4 0x6D351D1A EQ PUSH2 0x769 JUMPI DUP1 PUSH4 0x6DDD1713 EQ PUSH2 0x77E JUMPI PUSH2 0x35B JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x27A JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x678 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x6B1 JUMPI DUP1 PUSH4 0x4D709ADF EQ PUSH2 0x6EA JUMPI DUP1 PUSH4 0x563DF32F EQ PUSH2 0x71B JUMPI PUSH2 0x35B JUMP JUMPDEST DUP1 PUSH4 0x3092AFD5 EQ PUSH2 0x5E1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x614 JUMPI DUP1 PUSH4 0x33F3D628 EQ PUSH2 0x63F JUMPI PUSH2 0x35B JUMP JUMPDEST DUP1 PUSH4 0x1DF4CCFC GT PUSH2 0x30D JUMPI DUP1 PUSH4 0x2B112E49 GT PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x2B112E49 EQ PUSH2 0x56F JUMPI DUP1 PUSH4 0x2B14CA56 EQ PUSH2 0x584 JUMPI DUP1 PUSH4 0x2BE6937D EQ PUSH2 0x599 JUMPI DUP1 PUSH4 0x2F34D282 EQ PUSH2 0x5AE JUMPI PUSH2 0x35B JUMP JUMPDEST DUP1 PUSH4 0x1DF4CCFC EQ PUSH2 0x4E7 JUMPI DUP1 PUSH4 0x201E7991 EQ PUSH2 0x4FC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x52C JUMPI PUSH2 0x35B JUMP JUMPDEST DUP1 PUSH4 0x4A66B48 EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x42E JUMPI DUP1 PUSH4 0x1161AE39 EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0x180B0D7E EQ PUSH2 0x4AB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x4D2 JUMPI PUSH2 0x35B JUMP JUMPDEST CALLDATASIZE PUSH2 0x35B JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x383 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x80 ADD CALLDATALOAD PUSH2 0xCF4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0xD4D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3F3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3DB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x420 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x467 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x451 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xDE3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x467 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x49E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xE8C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C0 PUSH2 0xEA0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C0 PUSH2 0xEA6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C0 PUSH2 0xEAC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x508 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x51F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xEB2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x538 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x467 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x54F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0xECE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C0 PUSH2 0xFA8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x590 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C0 PUSH2 0x100A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH2 0x1010 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1036 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x604 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1070 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x620 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x629 PUSH2 0x108D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x467 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x662 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1096 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x684 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x467 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x69B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x112B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x11FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6FF PUSH2 0x1333 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x727 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C0 PUSH2 0x1342 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x753 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1348 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x775 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C0 PUSH2 0x139B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x467 PUSH2 0x13B4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x79F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH2 0x13EC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x144C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH2 0x1481 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x82F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x846 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x14E5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x85F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6FF PUSH2 0x1691 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x874 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x467 PUSH2 0x16A0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x889 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6FF PUSH2 0x16AA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x89E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x467 PUSH2 0x16BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x8CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x16D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0x1710 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x903 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C0 PUSH2 0x1770 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x918 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x92F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1776 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH2 0x1790 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x960 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x467 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x977 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x179B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x999 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6FF PUSH2 0x18C5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x467 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x9C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x18D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x467 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x193E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C0 PUSH2 0x194B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6FF PUSH2 0x1951 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xA5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x1960 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x467 PUSH2 0x19B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xAA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xAC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xAD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xAF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xB15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xB27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xB49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x19C3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x467 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A20 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1A3E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A92 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6FF PUSH2 0x1AC7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xC1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD CALLDATALOAD AND PUSH2 0x1AD6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xC61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x1B26 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B51 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6FF PUSH2 0x1B6B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x467 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B7A JUMP JUMPDEST PUSH2 0xCFC PUSH2 0x16BE JUMP JUMPDEST PUSH2 0xD05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 DUP6 SWAP1 SSTORE PUSH1 0x9 DUP5 SWAP1 SSTORE PUSH1 0x8 DUP4 SWAP1 SSTORE PUSH1 0xA DUP3 SWAP1 SSTORE PUSH2 0xD2D DUP5 PUSH2 0xD27 DUP8 DUP7 PUSH2 0x1B8F JUMP JUMPDEST SWAP1 PUSH2 0x1B8F JUMP JUMPDEST PUSH1 0xB SSTORE PUSH1 0xC DUP2 SWAP1 SSTORE PUSH1 0x4 DUP2 DIV PUSH1 0xB SLOAD LT PUSH2 0xD46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xDD9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDAE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDD9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDBC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xE01 JUMPI POP PUSH2 0xE01 PUSH2 0x16BE JUMP JUMPDEST DUP1 PUSH2 0xE1B JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0xE24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP7 SWAP1 SSTORE DUP1 MLOAD DUP7 DUP2 MSTORE SWAP1 MLOAD SWAP3 SWAP4 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xE98 DUP4 PUSH2 0x1A3E JUMP JUMPDEST GT SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x18 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0xEBA PUSH2 0x16BE JUMP JUMPDEST PUSH2 0xEC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x12 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x13 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xEE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x0 NOT EQ PUSH2 0xF91 JUMPI PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH22 0x496E73756666696369656E7420416C6C6F77616E6365 PUSH1 0x50 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B DUP3 MSTORE DUP4 DUP2 KECCAK256 CALLER DUP3 MSTORE SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0xF6C SWAP2 DUP6 SWAP1 PUSH2 0x1CAC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0xF9C DUP6 DUP6 DUP6 PUSH2 0x1D43 JUMP JUMPDEST POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x19 SLOAD PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD PUSH1 0xD SLOAD SWAP1 SWAP4 AND DUP3 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP3 PUSH2 0x1005 SWAP3 SWAP1 SWAP2 PUSH2 0xFFF SWAP2 SWAP1 PUSH2 0xFF9 SWAP1 PUSH12 0x1D290004395EB7BBFFFFFFF NOT SWAP1 PUSH2 0x1F02 JUMP JUMPDEST SWAP1 PUSH2 0x1F02 JUMP JUMPDEST SWAP1 PUSH2 0x1BE9 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1018 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x1021 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x103E PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x1047 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP3 AND DUP3 OR SWAP1 SSTORE PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE JUMP JUMPDEST PUSH2 0x1078 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x1081 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x108A DUP2 PUSH2 0x1F44 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10A0 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x10A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x110C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1149 JUMPI POP PUSH2 0x1149 PUSH2 0x16BE JUMP JUMPDEST DUP1 PUSH2 0x1163 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x116C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x119A SWAP1 DUP4 PUSH2 0x1B8F JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP1 MLOAD SWAP5 DUP6 MSTORE MLOAD SWAP2 SWAP4 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1208 CALLER PUSH2 0x193E JUMP JUMPDEST PUSH2 0x1243 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x27F5 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x18 SLOAD PUSH2 0x1250 SWAP1 DUP3 PUSH2 0x1B8F JUMP JUMPDEST PUSH1 0x18 DUP2 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB LT ISZERO PUSH2 0x126F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH1 0x18 SSTORE JUMPDEST PUSH1 0x18 SLOAD PUSH2 0x128F SWAP1 PUSH12 0xCECB8F27F4200F3A0000000 PUSH1 0x0 NOT JUMPDEST MOD NOT SWAP1 PUSH2 0x1BE9 JUMP JUMPDEST PUSH1 0x19 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH3 0x93517 PUSH1 0xE0 SHL SUB NOT DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0xFFF6CAE9 SWAP3 DUP3 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1313 SWAP2 POP DUP3 PUSH2 0x1B8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1350 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x1359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SELFBALANCE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x64 DUP6 DUP5 MUL DIV DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1395 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1005 PUSH1 0x19 SLOAD PUSH1 0x16 SLOAD PUSH2 0x1BE9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x19 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0xE86 SWAP2 SWAP1 PUSH2 0x1BE9 JUMP JUMPDEST PUSH2 0x13F4 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x13FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x2 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1454 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x145D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x15 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFFF6CAE9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1395 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x14EF PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x14F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x17 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x153C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2A393C9030B3B0B4B7 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 PUSH2 0x1582 JUMPI PUSH1 0x18 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD DUP5 SWAP2 PUSH32 0x72725A3B1E5BD622D6BCD1339BB31279C351ABE8F541AC7FD320F24E1B1641F2 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP PUSH1 0x18 SLOAD PUSH2 0xE86 JUMP JUMPDEST PUSH1 0x0 DUP3 SLT ISZERO PUSH2 0x15A4 JUMPI PUSH1 0x18 SLOAD PUSH2 0x159C SWAP1 PUSH1 0x0 DUP5 SWAP1 SUB PUSH2 0x1F02 JUMP JUMPDEST PUSH1 0x18 SSTORE PUSH2 0x15B5 JUMP JUMPDEST PUSH1 0x18 SLOAD PUSH2 0x15B1 SWAP1 DUP4 PUSH2 0x1B8F JUMP JUMPDEST PUSH1 0x18 SSTORE JUMPDEST PUSH1 0x18 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB LT ISZERO PUSH2 0x15D2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH1 0x18 SSTORE JUMPDEST PUSH1 0x18 SLOAD PUSH2 0x15EE SWAP1 PUSH12 0xCECB8F27F4200F3A0000000 PUSH1 0x0 NOT PUSH2 0x1287 JUMP JUMPDEST PUSH1 0x19 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH3 0x93517 PUSH1 0xE0 SHL SUB NOT DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0xFFF6CAE9 SWAP3 DUP3 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1637 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x164B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x18 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD DUP7 SWAP4 POP PUSH32 0x72725A3B1E5BD622D6BCD1339BB31279C351ABE8F541AC7FD320F24E1B1641F2 SWAP3 POP SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP PUSH1 0x18 SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x17 SLOAD PUSH1 0xFF AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP JUMPDEST PUSH2 0x16DC PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x16E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 DUP8 DUP10 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xDD9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDAE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDD9 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x177E PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x1787 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x108A DUP2 PUSH2 0x1F86 JUMP JUMPDEST PUSH2 0x1799 CALLER PUSH2 0x1F44 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x17B9 JUMPI POP PUSH2 0x17B9 PUSH2 0x16BE JUMP JUMPDEST DUP1 PUSH2 0x17D3 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x17DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP1 DUP4 LT PUSH2 0x1830 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SSTORE PUSH2 0x185F JUMP JUMPDEST PUSH2 0x183A DUP2 DUP5 PUSH2 0x1F02 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 SLOAD DUP2 MLOAD SWAP1 DUP2 MSTORE SWAP1 MLOAD SWAP3 SWAP4 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x18EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1905 JUMPI POP PUSH2 0x1905 PUSH2 0x16BE JUMP JUMPDEST DUP1 PUSH2 0x191F JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x1928 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1933 CALLER DUP6 DUP6 PUSH2 0x1D43 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE86 PUSH1 0x3 DUP4 PUSH2 0x1FC8 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1968 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x1971 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x15 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL DUP6 ISZERO ISZERO MUL OR SWAP1 SSTORE PUSH2 0x19AB DUP3 PUSH2 0x19A5 DUP4 PUSH12 0xCECB8F27F4200F3A0000000 PUSH1 0x0 NOT PUSH2 0x1287 JUMP JUMPDEST SWAP1 PUSH2 0x202F JUMP JUMPDEST PUSH1 0x16 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x19CB PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x19D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD46 JUMPI PUSH2 0x1A17 CALLER DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0x19EF JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x1A0B JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x1D43 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x19D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x19 SLOAD PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH2 0x1A69 SWAP2 PUSH2 0x1BE9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1A8B PUSH2 0x1A76 PUSH2 0xFA8 JUMP JUMPDEST PUSH2 0xFFF PUSH2 0x1A84 DUP5 PUSH1 0x2 PUSH2 0x202F JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x202F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1A9A PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x1AA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1ADE PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x1AE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x10 DUP1 SLOAD SWAP4 DUP6 AND SWAP4 DUP3 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x11 DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B59 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x1B62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x108A DUP2 PUSH2 0x2088 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1C PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x1A8B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1A8B DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x2102 JUMP JUMPDEST PUSH2 0x1C35 DUP3 DUP3 PUSH2 0x1FC8 JUMP JUMPDEST ISZERO PUSH2 0x1C87 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1D3B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D00 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1CE8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1D2D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1D85 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1DC5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x1A5B97D89B1858DADB1A5CDD PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x17 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1DE2 JUMPI PUSH2 0x1DDB DUP5 DUP5 DUP5 PUSH2 0x2167 JUMP JUMPDEST SWAP1 POP PUSH2 0x1A8B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DF9 PUSH1 0x19 SLOAD DUP5 PUSH2 0x202F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1E03 PUSH2 0x21F9 JUMP JUMPDEST ISZERO PUSH2 0x1E10 JUMPI PUSH2 0x1E10 PUSH2 0x224F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1E33 SWAP1 DUP3 PUSH2 0x1F02 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x1E59 DUP7 DUP7 PUSH2 0x2667 JUMP JUMPDEST PUSH2 0x1E63 JUMPI DUP2 PUSH2 0x1E6E JUMP JUMPDEST PUSH2 0x1E6E DUP7 DUP7 DUP5 PUSH2 0x26BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x1E94 SWAP1 DUP3 PUSH2 0x1B8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x19 SLOAD SWAP1 DUP9 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x1EE5 SWAP1 DUP6 SWAP1 PUSH2 0x1BE9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A8B DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1CAC JUMP JUMPDEST PUSH2 0x1F4F PUSH1 0x3 DUP3 PUSH2 0x278D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xE94479A9F7E1952CC78F2D6BAAB678ADC1B772D936C6583DEF489E524CB66692 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1F91 PUSH1 0x3 DUP3 PUSH2 0x1C2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x200F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2867 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x203E JUMPI POP PUSH1 0x0 PUSH2 0xE86 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x204B JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1A8B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2846 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x209B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 PUSH2 0x100 SWAP1 DIV AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2151 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1D00 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1CE8 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x215D JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x217F PUSH1 0x19 SLOAD DUP5 PUSH2 0x202F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x21A5 SWAP1 DUP3 PUSH2 0x1F02 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP7 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x21D4 SWAP1 DUP3 PUSH2 0x1B8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x221A JUMPI POP PUSH1 0x17 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x222F JUMPI POP PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST DUP1 ISZERO PUSH2 0x1005 JUMPI POP POP PUSH1 0x16 SLOAD ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x17 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x12 SLOAD PUSH1 0x13 SLOAD PUSH1 0x0 SWAP2 PUSH2 0x226E SWAP2 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x227A JUMPI PUSH1 0x7 SLOAD PUSH2 0x227D JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x19 SLOAD ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP3 SWAP4 POP SWAP2 PUSH2 0x229D SWAP2 PUSH2 0x1BE9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x22BF PUSH1 0x2 PUSH2 0xFFF PUSH1 0xB SLOAD PUSH2 0xFFF DUP8 DUP8 PUSH2 0x202F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x22CD DUP4 DUP4 PUSH2 0x1F02 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP4 SWAP5 POP SWAP1 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP ADDRESS DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x22FF JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x14 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP4 AND SWAP3 PUSH4 0xAD5C4648 SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2353 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2367 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x237D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP2 MLOAD DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x238E JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x14 SLOAD PUSH1 0x40 MLOAD PUSH4 0x791AC947 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 DUP2 MSTORE PUSH1 0x0 PUSH1 0x24 DUP4 ADD DUP2 SWAP1 MSTORE ADDRESS PUSH1 0x64 DUP5 ADD DUP2 SWAP1 MSTORE TIMESTAMP PUSH1 0x84 DUP6 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x44 DUP7 ADD SWAP1 DUP2 MSTORE DUP10 MLOAD PUSH1 0xA4 DUP8 ADD MSTORE DUP10 MLOAD SELFBALANCE SWAP10 SWAP8 SWAP1 SWAP8 AND SWAP8 PUSH4 0x791AC947 SWAP8 DUP13 SWAP8 SWAP6 SWAP7 DUP13 SWAP7 SWAP1 SWAP4 SWAP3 PUSH1 0xC4 SWAP1 SWAP2 ADD SWAP2 DUP8 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 DUP12 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2428 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2410 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2451 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2465 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH2 0x247E DUP3 SELFBALANCE PUSH2 0x1F02 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2499 PUSH2 0x2490 DUP10 PUSH1 0x2 PUSH2 0x1BE9 JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 PUSH2 0x1F02 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x24AE PUSH1 0x2 PUSH2 0xFFF DUP5 DUP2 DUP8 DUP15 PUSH2 0x202F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x24CB DUP4 PUSH2 0xFFF PUSH1 0x9 SLOAD DUP8 PUSH2 0x202F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x24E8 DUP5 PUSH2 0xFFF PUSH1 0x8 SLOAD DUP9 PUSH2 0x202F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0x7530 SWAP1 DUP5 SWAP1 DUP5 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x253F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2544 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0x11 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x7530 SWAP1 DUP6 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2599 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x259E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 SWAP3 POP POP DUP11 ISZERO SWAP1 POP PUSH2 0x264F JUMPI PUSH1 0x14 SLOAD PUSH1 0xF SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xF305D719 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP15 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x44 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x84 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xA4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xF305D719 SWAP2 DUP8 SWAP2 PUSH1 0xC4 DUP1 DUP3 ADD SWAP3 PUSH1 0x60 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2621 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2635 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x264C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMPDEST POP POP PUSH1 0x17 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0x2693 JUMPI POP PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ JUMPDEST DUP1 ISZERO PUSH2 0x1A8B JUMPI POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x15 SLOAD PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x26E9 JUMPI PUSH1 0xA SLOAD PUSH2 0x26E6 SWAP1 DUP3 SWAP1 PUSH2 0x1B8F JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH2 0x26FD SWAP1 PUSH2 0xFFF DUP7 DUP6 PUSH2 0x202F JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x271A SWAP1 DUP3 PUSH2 0x1B8F JUMP JUMPDEST ADDRESS PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x19 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x2768 SWAP1 DUP6 SWAP1 PUSH2 0x1BE9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 PUSH2 0x2783 DUP5 DUP3 PUSH2 0x1F02 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2797 DUP3 DUP3 PUSH2 0x1FC8 JUMP JUMPDEST PUSH2 0x27D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2825 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP INVALID 0x4D PUSH10 0x6E746572526F6C653A20 PUSH4 0x616C6C65 PUSH19 0x20646F6573206E6F7420686176652074686520 0x4D PUSH10 0x6E74657220726F6C6552 PUSH16 0x6C65733A206163636F756E7420646F65 PUSH20 0x206E6F74206861766520726F6C65536166654D61 PUSH21 0x683A206D756C7469706C69636174696F6E206F7665 PUSH19 0x666C6F77526F6C65733A206163636F756E7420 PUSH10 0x7320746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x657373A2646970667358221220BAA1C6C1681B DUP5 PUSH16 0xE2FA110A4564947A67973DDF4695E023 0xBF 0xA5 RETURNDATACOPY 0xB3 EXP 0xE0 SMOD 0xE6 PUSH5 0x736F6C6343 STOP SMOD DIV STOP CALLER ",
							"sourceMapi;:::-;;5445:83;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19013:286;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;19013:286:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;23771:182;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;23771:182:0;;;;;;;:::i;9555:35::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;12700:102;;;;;;;;;;;;;:::i;9468:80::-;;;;;;;;;;;;;:::i;21036:172::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21036:172:0;;;;;;;:::i;14852:457::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;14852:457:0;;;;;;;;;;;;;;;;;:::i;20813:215::-;;;;;;;;;;;;;:::i;9435:26::-;;;;;;;;;;;;;:::i;19428:114::-;;;;;;;;;;;;;:::i;13066:140::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13066:140:0;-1:-1:-1;;;;;13066:140:0;;:::i;21315:97::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21315:97:0;-1:-1:-1;;;;;21315:97:0;;:::i;5631:83::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;23099:213;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;23099:213:0;;;;;;;;:::i;18566:439::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;18566:439:0;;;;;;;;:::i;19936:395::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;19936:395:0;;;;;;;;:::i;8644:31::-;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;8644:31:0;;;;;;;;;;;;;;9362:27;;;;;;;;;;;;;:::i;22852:239::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22852:239:0;;;;;;-1:-1:-1;;;;;22852:239:0;;:::i;21778:126::-;;;;;;;;;;;;;:::i;9998:30::-;;;;;;;;;;;;;:::i;13416:138::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13416:138:0;-1:-1:-1;;;;;13416:138:0;;:::i;7991:126::-;;;;;;;;;;;;;:::i;19662:101::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19662:101:0;-1:-1:-1;;;;;19662:101:0;;:::i;21912:74::-;;;;;;;;;;;;;:::i;11933:759::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11933:759:0;;;;;;;:::i;9772:31::-;;;;;;;;;;;;;:::i;21420:85::-;;;;;;;;;;;;;:::i;7726:79::-;;;;;;;;;;;;;:::i;7891:92::-;;;;;;;;;;;;;:::i;11814:111::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;11814:111:0;;;;;;;;;;:::i;5536:87::-;;;;;;;;;;;;;:::i;9324:31::-;;;;;;;;;;;;;:::i;21216:91::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21216:91:0;-1:-1:-1;;;;;21216:91:0;;:::i;4719:77::-;;;;;;;;;;;;;:::i;17929:629::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;17929:629:0;;;;;;;;:::i;9970:19::-;;;;;;;;;;;;;:::i;12810:248::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;12810:248:0;;;;;;;;:::i;4602:109::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4602:109:0;-1:-1:-1;;;;;4602:109:0;;:::i;9396:32::-;;;;;;;;;;;;;:::i;9729:36::-;;;;;;;;;;;;;:::i;20339:230::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20339:230:0;;;;;;;;;;;;;;:::i;8684:39::-;;;;;;;;;;;;;:::i;21513:257::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21513:257:0;;-1:-1:-1;21513:257:0;-1:-1:-1;21513:257:0;:::i;19307:113::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19307:113:0;-1:-1:-1;;;;;19307:113:0;;:::i;23468:291::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;23468:291:0;;:::i;19550:104::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19550:104:0;-1:-1:-1;;;;;19550:104:0;;:::i;9810:36::-;;;;;;;;;;;;;:::i;21994:338::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;21994:338:0;;;;;;;;;;;;;;;;;;;:::i;13214:194::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;13214:194:0;;;;;;;;;;:::i;8125:109::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8125:109:0;-1:-1:-1;;;;;8125:109:0;;:::i;9939:24::-;;;;;;;;;;;;;:::i;10596:41::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10596:41:0;-1:-1:-1;;;;;10596:41:0;;:::i;22340:504::-;7853:9;:7;:9::i;:::-;7845:18;;;;;;22548:12:::1;:28:::0;;;22587:13:::1;:30:::0;;;22628:8:::1;:20:::0;;;22659:7:::1;:18:::0;;;22699:45:::1;22603:14:::0;22699:26:::1;22563:13:::0;22639:9;22699:16:::1;:26::i;:::-;:30:::0;::::1;:45::i;:::-;22688:8;:56:::0;22755:14:::1;:32:::0;;;22834:1:::1;22772:15:::0;22817:18:::1;22806:8;;:29;22798:38;;;::::0;::::1;;22340:504:::0;;;;;:::o;5445:83::-;5515:5;5508:12;;;;;;;;-1:-1:-1;;5508:12:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5482:13;;5508:12;;5515:5;;5508:12;;5515:5;5508:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:83;:::o;19013:286::-;8891:27;;19149:4;;-1:-1:-1;;;8891:27:0;;;;;:57;;;8939:9;:7;:9::i;:::-;8891:103;;;-1:-1:-1;8983:10:0;8969:25;;;;:13;:25;;;;;;;;8891:103;8869:136;;;;;;19189:10:::1;19171:29;::::0;;;:17:::1;:29;::::0;;;;;;;-1:-1:-1;;;;;19171:38:0;::::1;::::0;;;;;;;;;;:46;;;19233:36;;;;;;;19171:38;;19189:10;19233:36:::1;::::0;;;;;;;;;::::1;-1:-1:-1::0;19287:4:0::1;9016:1;19013:286:::0;;;;:::o;23771:182::-;23878:4;23939:6;23907:29;23927:8;23907:19;:29::i;:::-;:38;;23771:182;-1:-1:-1;;;23771:182:0:o;9555:35::-;;;;:::o;12700:102::-;12782:12;;12700:102;:::o;9468:80::-;;;;:::o;21036:172::-;7853:9;:7;:9::i;:::-;7845:18;;;;;;21128:15:::1;:24:::0;;;;21163:26:::1;:37:::0;21036:172::o;14852:457::-;14995:4;14982:2;-1:-1:-1;;;;;9088:18:0;;9080:27;;;;;;-1:-1:-1;;;;;15016:23:0;::::1;;::::0;;;:17:::1;:23;::::0;;;;;;;15040:10:::1;15016:35:::0;;;;;;;;-1:-1:-1;;15016:50:0::1;15012:225;;15121:104;::::0;;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;15121:104:0::1;::::0;;::::1;::::0;;;;-1:-1:-1;;;;;15121:23:0;::::1;-1:-1:-1::0;15121:23:0;;;:17:::1;:23:::0;;;;;15163:10:::1;15121:67:::0;;;;;;;;;;:104:::1;::::0;15193:5;;15121:71:::1;:104::i;:::-;-1:-1:-1::0;;;;;15083:23:0;::::1;;::::0;;;:17:::1;:23;::::0;;;;;;;15107:10:::1;15083:35:::0;;;;;;;:142;15012:225:::1;15249:30;15263:4;15269:2;15273:5;15249:13;:30::i;:::-;-1:-1:-1::0;15297:4:0::1;::::0;14852:457;-1:-1:-1;;;;;14852:457:0:o;20813:215::-;20989:16;;20959:4;;-1:-1:-1;;;;;20959:4:0;;;20866:7;20946:18;;;:12;:18;;;;;;;20935:4;;;;;20922:18;;;;;20866:7;;20906:114;;20989:16;;20907:58;;20946:18;20907:34;;-1:-1:-1;;10264:54:0;20907:14;:34::i;:::-;:38;;:58::i;:::-;20906:64;;:114::i;:::-;20886:134;;20813:215;:::o;9435:26::-;;;;:::o;19428:114::-;7853:9;:7;:9::i;:::-;7845:18;;;;;;19500:27:::1;:34:::0;;-1:-1:-1;;;;19500:34:0::1;-1:-1:-1::0;;;19500:34:0::1;::::0;;19428:114::o;13066:140::-;7853:9;:7;:9::i;:::-;7845:18;;;;;;13129:12:::1;:36:::0;;-1:-1:-1;;;;;13129:36:0;;::::1;-1:-1:-1::0;;;;;;13129:36:0;;::::1;::::0;::::1;::::0;;:12:::1;13176:22:::0;:12:::1;:22;::::0;13066:140::o;21315:97::-;7853:9;:7;:9::i;:::-;7845:18;;;;;;21382:22:::1;21396:7;21382:13;:22::i;:::-;21315:97:::0;:::o;5631:83::-;5697:9;;;;5631:83;:::o;23099:213::-;23211:12;7853:9;:7;:9::i;:::-;7845:18;;;;;;23248:56:::1;::::0;;-1:-1:-1;;;23248:56:0;;23285:10:::1;23248:56;::::0;::::1;::::0;;;;;;;;;-1:-1:-1;;;;;23248:36:0;::::1;::::0;::::1;::::0;:56;;;;;::::1;::::0;;;;;;;;-1:-1:-1;23248:36:0;:56;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;23248:56:0;;23099:213;-1:-1:-1;;;23099:213:0:o;18566:439::-;8891:27;;18699:4;;-1:-1:-1;;;8891:27:0;;;;;:57;;;8939:9;:7;:9::i;:::-;8891:103;;;-1:-1:-1;8983:10:0;8969:25;;;;:13;:25;;;;;;;;8891:103;8869:136;;;;;;18780:10:::1;18762:29;::::0;;;:17:::1;:29;::::0;;;;;;;-1:-1:-1;;;;;18762:62:0;::::1;::::0;;;;;;;;:78:::1;::::0;18829:10;18762:66:::1;:78::i;:::-;18739:10;18721:29;::::0;;;:17:::1;:29;::::0;;;;;;;-1:-1:-1;;;;;18721:38:0;::::1;::::0;;;;;;;;;;:119;;;18856;;;;;;18721:38;;18856:119:::1;::::0;;;;;;;;;::::1;-1:-1:-1::0;18993:4:0::1;18566:439:::0;;;;:::o;19936:395::-;4501:20;4510:10;4501:8;:20::i;:::-;4493:81;;;;-1:-1:-1;;;4493:81:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20031:12:::1;::::0;:33:::1;::::0;20056:6;20031:16:::1;:33::i;:::-;20016:12;:48:::0;;;-1:-1:-1;;;;;;20077:83:0::1;;;-1:-1:-1::0;;;;;20123:12:0::1;:25:::0;20077:83:::1;20206:12;::::0;20191:28:::1;::::0;9291:24;-1:-1:-1;;10279:38:0::1;;10264:54:::0;;20191:14:::1;:28::i;:::-;20172:16;:47:::0;20230:12:::1;::::0;;:19:::1;::::0;;-1:-1:-1;;;;;;20230:19:0;;;;-1:-1:-1;;;;;20230:12:0;;::::1;::::0;:17:::1;::::0;:19;;::::1;::::0;:12:::1;::::0;:19;;;;;;:12;;:19;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;;;;;;20288:23:0;::::1;;::::0;;;:12:::1;:23;::::0;;;;;:35:::1;::::0;-1:-1:-1;20316:6:0;20288:27:::1;:35::i;:::-;-1:-1:-1::0;;;;;20262:23:0;;::::1;;::::0;;;:12:::1;:23;::::0;;;;:61;;;;-1:-1:-1;19936:395:0:o;8644:31::-;;;-1:-1:-1;;;;;8644:31:0;;:::o;9362:27::-;;;;:::o;22852:239::-;7853:9;:7;:9::i;:::-;7845:18;;;;;;23000:83:::1;::::0;22968:21:::1;::::0;-1:-1:-1;;;;;23000:21:0;::::1;::::0;23069:3:::1;23037:28:::0;;::::1;23036:36;23000:83:::0;::::1;;;::::0;::::1;::::0;;;23036:36;23000:21;:83;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;7874:1;22852:239:::0;;:::o;21778:126::-;21831:7;21858:38;21879:16;;21858;;:20;;:38;;;;:::i;9998:30::-;;;-1:-1:-1;;;9998:30:0;;;;;:::o;13416:138::-;13529:16;;-1:-1:-1;;;;;13507:17:0;;13480:7;13507:17;;;:12;:17;;;;;;13480:7;;13507:39;;:17;:21;:39::i;7991:126::-;7853:9;:7;:9::i;:::-;7845:18;;;;;;8072:6:::1;::::0;8053:26:::1;::::0;8072:6:::1;::::0;;::::1;-1:-1:-1::0;;;;;8072:6:0::1;::::0;8053:26:::1;::::0;;;::::1;8090:6;:19:::0;;-1:-1:-1;;;;;;8090:19:0::1;::::0;;7991:126::o;19662:101::-;7853:9;:7;:9::i;:::-;7845:18;;;;;;-1:-1:-1;;;;;19729:19:0::1;;::::0;;;:12:::1;:19;::::0;;;;:26;;-1:-1:-1;;19729:26:0::1;19751:4;19729:26;::::0;;19662:101::o;21912:74::-;21966:4;;;;;;;;;-1:-1:-1;;;;;21966:4:0;-1:-1:-1;;;;;21954:22:0;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11933:759;12039:7;7853:9;:7;:9::i;:::-;7845:18;;;;;;12073:6:::1;::::0;::::1;;12072:7;12064:29;;;::::0;;-1:-1:-1;;;12064:29:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;12064:29:0;;;;;;;;;;;;;::::1;;12108:16:::0;12104:118:::1;;12163:12;::::0;12146:30:::1;::::0;;;;;;12156:5;;12146:30:::1;::::0;;;;;::::1;::::0;;::::1;-1:-1:-1::0;12198:12:0::1;::::0;12191:19:::1;;12104:118;12252:1;12238:11;:15;12234:188;;;12285:12;::::0;:39:::1;::::0;12310:12:::1;::::0;;::::1;12285:16;:39::i;:::-;12270:12;:54:::0;12234:188:::1;;;12372:12;::::0;:38:::1;::::0;12397:11;12372:16:::1;:38::i;:::-;12357:12;:53:::0;12234:188:::1;12438:12;::::0;-1:-1:-1;;;;;;12434:83:0::1;;;-1:-1:-1::0;;;;;12480:12:0::1;:25:::0;12434:83:::1;12563:12;::::0;12548:28:::1;::::0;9291:24;-1:-1:-1;;10279:38:0::1;::::0;12548:28:::1;12529:16;:47:::0;12587:12:::1;::::0;;:19:::1;::::0;;-1:-1:-1;;;;;;12587:19:0;;;;-1:-1:-1;;;;;12587:12:0;;::::1;::::0;:17:::1;::::0;:19;;::::1;::::0;:12:::1;::::0;:19;;;;;;:12;;:19;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;12641:12:0::1;::::0;12624:30:::1;::::0;;;;;;12634:5;;-1:-1:-1;12624:30:0::1;::::0;-1:-1:-1;12624:30:0;;;;::::1;::::0;;::::1;-1:-1:-1::0;12672:12:0::1;::::0;11933:759;;;;:::o;9772:31::-;;;-1:-1:-1;;;;;9772:31:0;;:::o;21420:85::-;21491:6;;;;21490:7;21420:85;:::o;7726:79::-;7791:6;;;;;-1:-1:-1;;;;;7791:6:0;;7726:79::o;7891:92::-;7969:6;;;;;-1:-1:-1;;;;;7969:6:0;7955:10;:20;;7891:92::o;11814:111::-;7853:9;:7;:9::i;:::-;7845:18;;;;;;-1:-1:-1;;;;;11893:16:0;;;::::1;;::::0;;;:9:::1;:16;::::0;;;;:24;;-1:-1:-1;;11893:24:0::1;::::0;::::1;;::::0;;;::::1;::::0;;11814:111::o;5536:87::-;5608:7;5601:14;;;;;;;;-1:-1:-1;;5601:14:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5575:13;;5601:14;;5608:7;;5601:14;;5608:7;5601:14;;;;;;;;;;;;;;;;;;;;;;;;9324:31;;;;:::o;21216:91::-;7853:9;:7;:9::i;:::-;7845:18;;;;;;21280:19:::1;21291:7;21280:10;:19::i;4719:77::-:0;4763:25;4777:10;4763:13;:25::i;:::-;4719:77::o;17929:629::-;8891:27;;18067:4;;-1:-1:-1;;;8891:27:0;;;;;:57;;;8939:9;:7;:9::i;:::-;8891:103;;;-1:-1:-1;8983:10:0;8969:25;;;;:13;:25;;;;;;;;8891:103;8869:136;;;;;;18126:10:::1;18089:16;18108:29:::0;;;:17:::1;:29;::::0;;;;;;;-1:-1:-1;;;;;18108:38:0;::::1;::::0;;;;;;;;18161:27;;::::1;18157:237;;18223:10;18246:1;18205:29:::0;;;:17:::1;:29;::::0;;;;;;;-1:-1:-1;;;;;18205:38:0;::::1;::::0;;;;;;;:42;18157:237:::1;;;18321:61;:8:::0;18352:15;18321:12:::1;:61::i;:::-;18298:10;18280:29;::::0;;;:17:::1;:29;::::0;;;;;;;-1:-1:-1;;;;;18280:38:0;::::1;::::0;;;;;;;:102;18157:237:::1;18432:10;18479:29;::::0;;;:17:::1;:29;::::0;;;;;;;-1:-1:-1;;;;;18409:119:0;::::1;18479:38:::0;;;;;;;;;;;18409:119;;;;;;;;;18432:10;18409:119:::1;::::0;;;;;;;;;::::1;-1:-1:-1::0;18546:4:0::1;::::0;17929:629;-1:-1:-1;;;17929:629:0:o;9970:19::-;;;-1:-1:-1;;;;;9970:19:0;;:::o;12810:248::-;12970:4;12915:2;-1:-1:-1;;;;;9088:18:0;;9080:27;;;;;;8891::::1;::::0;-1:-1:-1;;;8891:27:0;::::1;;;::::0;:57:::1;;;8939:9;:7;:9::i;:::-;8891:103;;;-1:-1:-1::0;8983:10:0::1;8969:25;::::0;;;:13:::1;:25;::::0;;;;;::::1;;8891:103;8869:136;;;::::0;::::1;;12992:36:::2;13006:10;13018:2;13022:5;12992:13;:36::i;:::-;-1:-1:-1::0;13046:4:0::2;::::0;12810:248;-1:-1:-1;;;;12810:248:0:o;4602:109::-;4658:4;4682:21;:8;4695:7;4682:12;:21::i;9396:32::-;;;;:::o;9729:36::-;;;-1:-1:-1;;;;;9729:36:0;;:::o;20339:230::-;7853:9;:7;:9::i;:::-;7845:18;;;;;;20477:11:::1;:22:::0;;-1:-1:-1;;;;20477:22:0::1;-1:-1:-1::0;;;20477:22:0;::::1;;;;::::0;;20529:32:::1;20556:4:::0;20529:22:::1;20544:6:::0;9291:24;-1:-1:-1;;10279:38:0::1;::::0;20529:22:::1;:26:::0;::::1;:32::i;:::-;20510:16;:51:::0;-1:-1:-1;;;20339:230:0:o;8684:39::-;;;-1:-1:-1;;;8684:39:0;;;;;:::o;21513:257::-;7853:9;:7;:9::i;:::-;7845:18;;;;;;21648:9:::1;21643:120;21663:21:::0;;::::1;21643:120;;;21702:51;21716:10;21728;;21739:1;21728:13;;;;;;;;;;;;;-1:-1:-1::0;;;;;21728:13:0::1;21743:6;;21750:1;21743:9;;;;;;;;;;;;;21702:13;:51::i;:::-;-1:-1:-1::0;21686:3:0::1;;21643:120;;19307:113:::0;-1:-1:-1;;;;;19393:19:0;19369:4;19393:19;;;:12;:19;;;;;;;;;19307:113::o;23468:291::-;23638:16;;23628:4;;-1:-1:-1;;;;;23628:4:0;23563:7;23615:18;;;:12;:18;;;;;;23563:7;;;;23615:40;;:22;:40::i;:::-;23588:67;;23686:65;23728:22;:20;:22::i;:::-;23686:37;23699:23;:16;23720:1;23699:20;:23::i;:::-;23686:8;;:12;:37::i;:65::-;23666:85;23468:291;-1:-1:-1;;;23468:291:0:o;19550:104::-;7853:9;:7;:9::i;:::-;7845:18;;;;;;-1:-1:-1;;;;;19619:20:0::1;;::::0;;;:13:::1;:20;::::0;;;;:27;;-1:-1:-1;;19619:27:0::1;19642:4;19619:27;::::0;;19550:104::o;9810:36::-;;;-1:-1:-1;;;;;9810:36:0;;:::o;21994:338::-;7853:9;:7;:9::i;:::-;7845:18;;;;;;22174:21:::1;:46:::0;;-1:-1:-1;;;;;22174:46:0;;::::1;-1:-1:-1::0;;;;;;22174:46:0;;::::1;;::::0;;;22231:16:::1;:36:::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;22278:21:::1;:46:::0;;;;;::::1;::::0;::::1;;::::0;;21994:338::o;13214:194::-;-1:-1:-1;;;;;13366:25:0;;;13334:7;13366:25;;;:17;:25;;;;;;;;:34;;;;;;;;;;;;;13214:194::o;8125:109::-;7853:9;:7;:9::i;:::-;7845:18;;;;;;8198:28:::1;8217:8;8198:18;:28::i;9939:24::-:0;;;-1:-1:-1;;;;;9939:24:0;;:::o;10596:41::-;;;;;;;;;;;;;;;:::o;1900:181::-;1958:7;1990:5;;;2014:6;;;;2006:46;;;;;-1:-1:-1;;;2006:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;2725:132;2783:7;2810:39;2814:1;2817;2810:39;;;;;;;;;;;;;;;;;:3;:39::i;3450:178::-;3528:18;3532:4;3538:7;3528:3;:18::i;:::-;3527:19;3519:63;;;;;-1:-1:-1;;;3519:63:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3593:20:0;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;3593:27:0;3616:4;3593:27;;;3450:178::o;2233:226::-;2353:7;2389:12;2381:6;;;;2373:29;;;;-1:-1:-1;;;2373:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2425:5:0;;;2233:226::o;13909:935::-;-1:-1:-1;;;;;14061:17:0;;14035:4;14061:17;;;:9;:17;;;;;;;;14060:18;:43;;;;-1:-1:-1;;;;;;14083:20:0;;;;;;:9;:20;;;;;;;;14082:21;14060:43;14052:68;;;;;-1:-1:-1;;;14052:68:0;;;;;;;;;;;;-1:-1:-1;;;14052:68:0;;;;;;;;;;;;;;;14135:6;;;;14131:87;;;14165:41;14180:6;14188:9;14199:6;14165:14;:41::i;:::-;14158:48;;;;14131:87;14230:17;14250:28;14261:16;;14250:6;:10;;:28;;;;:::i;:::-;14230:48;;14295:16;:14;:16::i;:::-;14291:59;;;14328:10;:8;:10::i;:::-;-1:-1:-1;;;;;14385:20:0;;;;;;:12;:20;;;;;;:35;;14410:9;14385:24;:35::i;:::-;-1:-1:-1;;;;;14362:20:0;;;;;;:12;:20;;;;;:58;;;;14461:32;14375:6;14483:9;14461:13;:32::i;:::-;:110;;14562:9;14461:110;;;14509:37;14517:6;14525:9;14536;14509:7;:37::i;:::-;-1:-1:-1;;;;;14608:23:0;;;;;;:12;:23;;;;;;14433:138;;-1:-1:-1;14608:70:0;;14433:138;14608:27;:70::i;:::-;-1:-1:-1;;;;;14582:23:0;;;;;;;:12;:23;;;;;:96;;;;14786:16;;14696:118;;;;;;14764:39;;:17;;:21;:39::i;:::-;14696:118;;;;;;;;;;;;;;;-1:-1:-1;14832:4:0;;13909:935;-1:-1:-1;;;;;13909:935:0:o;2089:136::-;2147:7;2174:43;2178:1;2181;2174:43;;;;;;;;;;;;;;;;;:3;:43::i;4934:130::-;4994:24;:8;5010:7;4994:15;:24::i;:::-;5034:22;;-1:-1:-1;;;;;5034:22:0;;;;;;;;4934:130;:::o;4804:122::-;4861:21;:8;4874:7;4861:12;:21::i;:::-;4898:20;;-1:-1:-1;;;;;4898:20:0;;;;;;;;4804:122;:::o;3986:203::-;4058:4;-1:-1:-1;;;;;4083:21:0;;4075:68;;;;-1:-1:-1;;;4075:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4161:20:0;:11;:20;;;;;;;;;;;;;;;3986:203::o;2467:250::-;2525:7;2549:6;2545:47;;-1:-1:-1;2579:1:0;2572:8;;2545:47;2616:5;;;2620:1;2616;:5;:1;2640:5;;;;;:10;2632:56;;;;-1:-1:-1;;;2632:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8242:187;-1:-1:-1;;;;;8316:22:0;;8308:31;;;;;;8376:6;;8355:38;;-1:-1:-1;;;;;8355:38:0;;;;8376:6;;;;;8355:38;;;;;8404:6;:17;;-1:-1:-1;;;;;8404:17:0;;;;;-1:-1:-1;;;;;;8404:17:0;;;;;;;;;8242:187::o;2865:225::-;2985:7;3020:12;3013:5;3005:28;;;;-1:-1:-1;;;3005:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3044:9;3060:1;3056;:5;;;;;;;2865:225;-1:-1:-1;;;;;2865:225:0:o;13562:339::-;13680:4;13697:17;13717:28;13728:16;;13717:6;:10;;:28;;;;:::i;:::-;-1:-1:-1;;;;;13777:18:0;;;;;;:12;:18;;;;;;13697:48;;-1:-1:-1;13777:33:0;;13697:48;13777:22;:33::i;:::-;-1:-1:-1;;;;;13756:18:0;;;;;;;:12;:18;;;;;;:54;;;;13840:16;;;;;;;:31;;13861:9;13840:20;:31::i;:::-;-1:-1:-1;;;;;13821:16:0;;;;;;:12;:16;;;;;:50;-1:-1:-1;13889:4:0;;-1:-1:-1;13562:339:0;;;;;:::o;20577:228::-;20677:4;;20626;;-1:-1:-1;;;;;20677:4:0;20663:10;:18;;;;:42;;-1:-1:-1;20699:6:0;;;;20698:7;20663:42;:70;;;;-1:-1:-1;20722:11:0;;-1:-1:-1;;;20722:11:0;;;;20663:70;:134;;;;-1:-1:-1;;20781:16:0;;20771:4;20750:27;;;;:12;:27;;;;;;:47;;;20577:228::o;15317:2047::-;10151:6;:13;;-1:-1:-1;;10151:13:0;10160:4;10151:13;;;15426:15:::1;::::0;15456:26:::1;::::0;10151:6;;15396:97:::1;::::0;:15:::1;:97::i;:::-;:142;;15526:12;;15396:142;;;15509:1;15396:142;15626:16;::::0;15601:4:::1;15549:28;15580:27:::0;;;:12:::1;:27;::::0;;;;;15366:172;;-1:-1:-1;15549:28:0;15580:73:::1;::::0;:31:::1;:73::i;:::-;15549:104;;15664:23;15690:108;15796:1;15690:87;15768:8;;15690:59;15729:19;15690:20;:38;;:59;;;;:::i;:108::-;15664:134:::0;-1:-1:-1;15809:20:0::1;15832:41;:20:::0;15664:134;15832:24:::1;:41::i;:::-;15910:16;::::0;;15924:1:::1;15910:16:::0;;;15886:21:::1;15910:16:::0;;::::1;::::0;;15809:64;;-1:-1:-1;15910:16:0;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;;::::0;-1:-1:-1;15910:16:0::1;15886:40;;15955:4;15937;15942:1;15937:7;;;;;;;;-1:-1:-1::0;;;;;15937:23:0;;::::1;:7;::::0;;::::1;::::0;;;;;;:23;;;;15981:6:::1;::::0;:13:::1;::::0;;-1:-1:-1;;;15981:13:0;;;;:6;;;::::1;::::0;:11:::1;::::0;:13:::1;::::0;;::::1;::::0;15937:7;;15981:13;;;;;:6;:13;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;15981:13:0;15971:7;;:4;;15976:1:::1;::::0;15971:7;::::1;;;;;-1:-1:-1::0;;;;;15971:23:0;;::::1;:7;::::0;;::::1;::::0;;;;;;:23;;;;16065:6:::1;::::0;:188:::1;::::0;-1:-1:-1;;;16065:188:0;;::::1;::::0;::::1;::::0;;;16007:21:::1;16065:188:::0;;;;;;16207:4:::1;16065:188:::0;;;;;;16227:15:::1;16065:188:::0;;;;;;;;;;;;;;;;;;;;;16031:21:::1;::::0;16065:6;;;::::1;::::0;:57:::1;::::0;16137:12;;16007:21;;16180:4;;16065:188;;;;;;;;;;::::1;::::0;::::1;::::0;;;16007:21;16065:188:::1;;;;;;;::::0;;::::1;::::0;;;::::1;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;16266:17;16286:40;16312:13;16286:21;:25;;:40;;;;:::i;:::-;16266:60:::0;-1:-1:-1;16339:19:0::1;16361:40;16374:26;:19:::0;16398:1:::1;16374:23;:26::i;:::-;16361:8;::::0;;:12:::1;:40::i;:::-;16339:62:::0;-1:-1:-1;16414:26:0::1;16443:100;16541:1;16443:79;16339:62:::0;16443:79;:9;16471:19;16443:27:::1;:48::i;:100::-;16414:129;;16554:30;16587:45;16620:11;16587:28;16601:13;;16587:9;:13;;:28;;;;:::i;:45::-;16554:78;;16643:25;16671:64;16713:11;16671:23;16685:8;;16671:9;:13;;:23;;;;:::i;:64::-;16775:16;::::0;16767:109:::1;::::0;16643:92;;-1:-1:-1;16749:12:0::1;::::0;-1:-1:-1;;;;;16775:16:0;;::::1;::::0;16856:5:::1;::::0;16643:92;;16749:12;16767:109;16749:12;16767:109;16643:92;16775:16;16856:5;16767:109:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;16909:21:0::1;::::0;16901:119:::1;::::0;16748:128;;-1:-1:-1;;;;;;16909:21:0::1;::::0;17000:5:::1;::::0;16958:22;;16909:21:::1;16901:119:::0;16909:21;16901:119;16958:22;16909:21;17000:5;16901:119:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;17043:5:0::1;::::0;-1:-1:-1;;17065:19:0;;;-1:-1:-1;17061:296:0::1;;17101:6;::::0;17275:21:::1;::::0;17101:244:::1;::::0;;-1:-1:-1;;;17101:244:0;;17177:4:::1;17101:244;::::0;::::1;::::0;;;;;;;:6:::1;:244:::0;;;;;;;;;;-1:-1:-1;;;;;17275:21:0;;::::1;17101:244:::0;;;;17315:15:::1;17101:244:::0;;;;;;:6;;;::::1;::::0;:22:::1;::::0;17131:18;;17101:244;;;;;::::1;::::0;;;;;;;;;17131:18;17101:6;:244;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;;17061:296:0::1;-1:-1:-1::0;;10187:6:0;:14;;-1:-1:-1;;10187:14:0;;;-1:-1:-1;;;;;;;;;;15317:2047:0:o;19771:157::-;19868:4;;19843;;-1:-1:-1;;;;;19868:12:0;;;:4;;:12;;:26;;-1:-1:-1;19884:4:0;;-1:-1:-1;;;;;19884:10:0;;;:4;;:10;19868:26;19867:53;;;;-1:-1:-1;;;;;;;;19901:18:0;;;;;:12;:18;;;;;;;;19900:19;;19771:157::o;17372:545::-;17524:8;;17559:4;;17479:7;;17524:8;-1:-1:-1;;;;;17546:17:0;;;17559:4;;17546:17;17543:56;;;17591:7;;17577:22;;:9;;:13;:22::i;:::-;17565:34;;17543:56;17661:14;;17612:17;;17632:44;;:24;:9;17646;17632:13;:24::i;:44::-;17740:4;17719:27;;;;:12;:27;;;;;;17612:64;;-1:-1:-1;17719:66:0;;17612:64;17719:31;:66::i;:::-;17710:4;17689:27;;;;:12;:27;;;;;:96;;;;17847:16;;-1:-1:-1;;;;;17801:64:0;;;;;17833:31;;:9;;:13;:31::i;:::-;17801:64;;;;;;;;;;;;;;;17885:24;:9;17899;17885:13;:24::i;:::-;17878:31;17372:545;-1:-1:-1;;;;;;17372:545:0:o;3708:183::-;3788:18;3792:4;3798:7;3788:3;:18::i;:::-;3780:64;;;;-1:-1:-1;;;3780:64:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3855:20:0;3878:5;3855:20;;;;;;;;;;;:28;;-1:-1:-1;;3855:28:0;;;3708:183::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2086000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"RiskFreeValue()": "1066",
								"RiskFreeValueReceiver()": "1126",
								"Treasury()": "1132",
								"TreasuryReceiver()": "1128",
								"addMinter(address)": "infinite",
								"allowance(address,address)": "1316",
								"approve(address,uint256)": "24996",
								"autoLiquidityReceiver()": "1127",
								"balanceOf(address)": "2499",
								"blacklist(address)": "1268",
								"checkFeeExempt(address)": "1265",
								"checkSwapThreshold()": "infinite",
								"clearStuckBalance(uint256,address)": "infinite",
								"decimals()": "1104",
								"decreaseAllowance(address,uint256)": "infinite",
								"enableTransfer(address)": "22057",
								"feeDenominator()": "1133",
								"getCirculatingSupply()": "infinite",
								"getLiquidityBacking(uint256)": "infinite",
								"increaseAllowance(address,uint256)": "26007",
								"initialDistributionFinished()": "1094",
								"isMinter(address)": "infinite",
								"isNotInSwap()": "1126",
								"isOverLiquified(uint256,uint256)": "infinite",
								"isOwner()": "1128",
								"liquidityFee()": "1066",
								"manualSync()": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "1116",
								"pair()": "1126",
								"pairContract()": "1149",
								"rebase(uint256,int256)": "infinite",
								"removeMinter(address)": "infinite",
								"renounceMinter()": "infinite",
								"renounceOwnership()": "23922",
								"rescueToken(address,uint256)": "infinite",
								"router()": "1147",
								"sellFee()": "1088",
								"sendPresale(address[],uint256[])": "infinite",
								"setFeeExempt(address)": "22101",
								"setFeeReceivers(address,address,address)": "63779",
								"setFees(uint256,uint256,uint256,uint256,uint256)": "infinite",
								"setInitialDistributionFinished()": "21970",
								"setLP(address)": "22097",
								"setSwapBackSettings(bool,uint256,uint256)": "infinite",
								"setTargetLiquidity(uint256,uint256)": "41185",
								"swapEnabled()": "1139",
								"symbol()": "infinite",
								"totalFee()": "1067",
								"totalSupply()": "1155",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "24479",
								"updateBlacklist(address,bool)": "22147"
							},
							"internal": {
								"_basicTransfer(address,address,uint256)": "infinite",
								"_transferFrom(address,address,uint256)": "infinite",
								"shouldSwapBack()": "4238",
								"shouldTakeFee(address,address)": "2636",
								"swapBack()": "infinite",
								"takeFee(address,address,uint256)": "infinite",
								"transferToAddressETH(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 8436,
									"end": 23993,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9354,
									"end": 9355,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 9324,
									"end": 9355,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 9324,
									"end": 9355,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9388,
									"end": 9389,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 9362,
									"end": 9389,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 9362,
									"end": 9389,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9427,
									"end": 9428,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 9396,
									"end": 9428,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 9396,
									"end": 9428,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9460,
									"end": 9461,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 9435,
									"end": 9461,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 9435,
									"end": 9461,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9503,
									"end": 9548,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 9534,
									"end": 9547,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 9534,
									"end": 9547,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 9503,
									"end": 9529,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 9520,
									"end": 9528,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 9520,
									"end": 9528,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 9503,
									"end": 9515,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 9503,
									"end": 9515,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 9503,
									"end": 9519,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 9503,
									"end": 9519,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 9503,
									"end": 9519,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 9503,
									"end": 9519,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551897"
								},
								{
									"begin": 9503,
									"end": 9519,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 9503,
									"end": 9519,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9503,
									"end": 9529,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 9503,
									"end": 9529,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9503,
									"end": 9529,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 9503,
									"end": 9529,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 9503,
									"end": 9529,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 9503,
									"end": 9529,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 9503,
									"end": 9529,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9503,
									"end": 9533,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 9503,
									"end": 9533,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 9503,
									"end": 9533,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 9503,
									"end": 9533,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551897"
								},
								{
									"begin": 9503,
									"end": 9533,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 9503,
									"end": 9533,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9503,
									"end": 9548,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 9503,
									"end": 9548,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9503,
									"end": 9548,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 9503,
									"end": 9548,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 9503,
									"end": 9548,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 9503,
									"end": 9548,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 9503,
									"end": 9548,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9468,
									"end": 9548,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 9468,
									"end": 9548,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9587,
									"end": 9590,
									"name": "PUSH",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 9555,
									"end": 9590,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 9555,
									"end": 9590,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9555,
									"end": 9590,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9555,
									"end": 9590,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9599,
									"end": 9656,
									"name": "PUSH",
									"source": 0,
									"value": "D"
								},
								{
									"begin": 9599,
									"end": 9656,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9599,
									"end": 9656,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 9599,
									"end": 9656,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9599,
									"end": 9656,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9599,
									"end": 9656,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 9614,
									"end": 9656,
									"name": "PUSH",
									"source": 0,
									"value": "DEAD"
								},
								{
									"begin": 9599,
									"end": 9656,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 9599,
									"end": 9656,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9599,
									"end": 9656,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 9599,
									"end": 9656,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9663,
									"end": 9720,
									"name": "PUSH",
									"source": 0,
									"value": "E"
								},
								{
									"begin": 9663,
									"end": 9720,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9663,
									"end": 9720,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 9663,
									"end": 9720,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9663,
									"end": 9720,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 9663,
									"end": 9720,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 9663,
									"end": 9720,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9663,
									"end": 9720,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9881,
									"end": 9883,
									"name": "PUSH",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 9855,
									"end": 9883,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 9855,
									"end": 9883,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9890,
									"end": 9930,
									"name": "PUSH",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 9890,
									"end": 9930,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9998,
									"end": 10028,
									"name": "PUSH",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 9998,
									"end": 10028,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9998,
									"end": 10028,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 9998,
									"end": 10028,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 9998,
									"end": 10028,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 9998,
									"end": 10028,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9998,
									"end": 10028,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 10090,
									"end": 10095,
									"name": "PUSH",
									"source": 0,
									"value": "2710"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1239A002A3DB32D57FFFFFFF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 10070,
									"end": 10095,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 10035,
									"end": 10095,
									"name": "PUSH",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 10035,
									"end": 10095,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 10646,
									"end": 11806,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 10646,
									"end": 11806,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10646,
									"end": 11806,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 10646,
									"end": 11806,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 10646,
									"end": 11806,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 10646,
									"end": 11806,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10646,
									"end": 11806,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10646,
									"end": 11806,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 10646,
									"end": 11806,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 10646,
									"end": 11806,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5208,
									"end": 5437,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5208,
									"end": 5437,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5208,
									"end": 5437,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5208,
									"end": 5437,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5208,
									"end": 5437,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5208,
									"end": 5437,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5208,
									"end": 5437,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5208,
									"end": 5437,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5208,
									"end": 5437,
									"name": "PUSH",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 5208,
									"end": 5437,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5208,
									"end": 5437,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20B7323932BBAA30BA32902A37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "81"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5208,
									"end": 5437,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5208,
									"end": 5437,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5208,
									"end": 5437,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5208,
									"end": 5437,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5208,
									"end": 5437,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5208,
									"end": 5437,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5208,
									"end": 5437,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5208,
									"end": 5437,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5208,
									"end": 5437,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5208,
									"end": 5437,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5208,
									"end": 5437,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 5208,
									"end": 5437,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5208,
									"end": 5437,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5208,
									"end": 5437,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 5208,
									"end": 5437,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5208,
									"end": 5437,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 5208,
									"end": 5437,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 5208,
									"end": 5437,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "544F5047"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5208,
									"end": 5437,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5208,
									"end": 5437,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 5208,
									"end": 5437,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5208,
									"end": 5437,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5341,
									"end": 5359,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5341,
									"end": 5359,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5208,
									"end": 5437,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5208,
									"end": 5437,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 5208,
									"end": 5437,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 9171,
									"end": 9173,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 9171,
									"end": 9173,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5341,
									"end": 5359,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 5341,
									"end": 5359,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 5208,
									"end": 5437,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5341,
									"end": 5359,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 5341,
									"end": 5359,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 5341,
									"end": 5359,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 5341,
									"end": 5359,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5370,
									"end": 5392,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5370,
									"end": 5392,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5370,
									"end": 5392,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 5370,
									"end": 5392,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5370,
									"end": 5377,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5370,
									"end": 5377,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5370,
									"end": 5392,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5370,
									"end": 5392,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 5370,
									"end": 5392,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5370,
									"end": 5392,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5370,
									"end": 5392,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 5370,
									"end": 5392,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 5370,
									"end": 5392,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 5370,
									"end": 5392,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5403,
									"end": 5412,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 5403,
									"end": 5429,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5403,
									"end": 5429,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 7700,
									"end": 7710,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 5403,
									"end": 5429,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 7691,
									"end": 7710,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7691,
									"end": 7710,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5403,
									"end": 5429,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 5403,
									"end": 5429,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5403,
									"end": 5429,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 5403,
									"end": 5429,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5403,
									"end": 5429,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5403,
									"end": 5429,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 5403,
									"end": 5429,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 5403,
									"end": 5429,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 5403,
									"end": 5429,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5403,
									"end": 5429,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 5403,
									"end": 5429,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 7691,
									"end": 7710,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 7691,
									"end": 7710,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7691,
									"end": 7710,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 7691,
									"end": 7710,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7691,
									"end": 7710,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 7691,
									"end": 7710,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7691,
									"end": 7710,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 4422,
									"end": 4444,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 4422,
									"end": 4444,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 7700,
									"end": 7710,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4422,
									"end": 4432,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 4422,
									"end": 4444,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 4422,
									"end": 4444,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 4422,
									"end": 4444,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 10730,
									"end": 10736,
									"name": "PUSH",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 10730,
									"end": 10793,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10730,
									"end": 10793,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 10730,
									"end": 10793,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10750,
									"end": 10792,
									"name": "PUSH",
									"source": 0,
									"value": "CEEB22FAF32FF4EAD24565225503807E41E5FE87"
								},
								{
									"begin": 10730,
									"end": 10793,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 10730,
									"end": 10793,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10730,
									"end": 10793,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10730,
									"end": 10793,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10730,
									"end": 10793,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C45A0155"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 10932,
									"end": 10938,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10938,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10938,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10938,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10938,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10946,
									"name": "PUSH",
									"source": 0,
									"value": "C45A0155"
								},
								{
									"begin": 10932,
									"end": 10946,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10938,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "EXTCODESIZE",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "STATICCALL",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10981,
									"name": "PUSH",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 10975,
									"end": 10981,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "15AB88C9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 10920,
									"end": 10960,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 10960,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 10960,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 10960,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 10960,
									"name": "PUSH",
									"source": 0,
									"value": "C9C65396"
								},
								{
									"begin": 10920,
									"end": 10960,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10981,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10981,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10986,
									"name": "PUSH",
									"source": 0,
									"value": "AD5C4648"
								},
								{
									"begin": 10975,
									"end": 10986,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 10932,
									"end": 10948,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10981,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "EXTCODESIZE",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "STATICCALL",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11011,
									"end": 11015,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "PUSH",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 10975,
									"end": 10988,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "EXTCODESIZE",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "CALL",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 10913,
									"end": 10917,
									"name": "PUSH",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 10913,
									"end": 11027,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10913,
									"end": 11027,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 10913,
									"end": 11027,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 10913,
									"end": 11027,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 10913,
									"end": 11027,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 10913,
									"end": 11027,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10913,
									"end": 11027,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10913,
									"end": 11027,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10913,
									"end": 11027,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 10913,
									"end": 11027,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10913,
									"end": 11027,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 11040,
									"end": 11061,
									"name": "PUSH",
									"source": 0,
									"value": "F"
								},
								{
									"begin": 11040,
									"end": 11106,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11040,
									"end": 11106,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 11040,
									"end": 11106,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11040,
									"end": 11106,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11064,
									"end": 11106,
									"name": "PUSH",
									"source": 0,
									"value": "2C604D9E15E6524F0BB2A2A22F63A7CA041E84C3"
								},
								{
									"begin": 11040,
									"end": 11106,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 11040,
									"end": 11106,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11040,
									"end": 11106,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 11117,
									"end": 11133,
									"name": "PUSH",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 11117,
									"end": 11178,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11117,
									"end": 11178,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 11117,
									"end": 11178,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11117,
									"end": 11178,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11136,
									"end": 11178,
									"name": "PUSH",
									"source": 0,
									"value": "CC5E043C5142033A800A72286356317DACB57A77"
								},
								{
									"begin": 11117,
									"end": 11178,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 11117,
									"end": 11178,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11117,
									"end": 11178,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 11189,
									"end": 11210,
									"name": "PUSH",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 11189,
									"end": 11255,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11189,
									"end": 11255,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 11189,
									"end": 11255,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 11189,
									"end": 11255,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11213,
									"end": 11255,
									"name": "PUSH",
									"source": 0,
									"value": "833123D7AF220758A5484887AC582D4D39E9EDE0"
								},
								{
									"begin": 11189,
									"end": 11255,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 11189,
									"end": 11255,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11189,
									"end": 11255,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 11294,
									"end": 11298,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 11268,
									"end": 11300,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11268,
									"end": 11300,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11268,
									"end": 11300,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11268,
									"end": 11285,
									"name": "PUSH",
									"source": 0,
									"value": "1B"
								},
								{
									"begin": 10920,
									"end": 11027,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11268,
									"end": 11300,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11268,
									"end": 11300,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11268,
									"end": 11300,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11268,
									"end": 11300,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11268,
									"end": 11300,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11268,
									"end": 11300,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 11268,
									"end": 11300,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 11309,
									"end": 11315,
									"name": "PUSH",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 11309,
									"end": 11315,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 11309,
									"end": 11315,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": 11309,
									"end": 11315,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11268,
									"end": 11317,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 11268,
									"end": 11317,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11268,
									"end": 11317,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11268,
									"end": 11317,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11268,
									"end": 11317,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11268,
									"end": 11317,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 11268,
									"end": 11317,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 11268,
									"end": 11331,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11268,
									"end": 11331,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 11369,
									"end": 11373,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 11369,
									"end": 11373,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4"
								},
								{
									"begin": 11342,
									"end": 11374,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11342,
									"end": 11374,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 11342,
									"end": 11374,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11342,
									"end": 11374,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 11342,
									"end": 11374,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11369,
									"end": 11373,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11369,
									"end": 11373,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 11369,
									"end": 11373,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11342,
									"end": 11374,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 11342,
									"end": 11374,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11342,
									"end": 11374,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 11342,
									"end": 11374,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9291,
									"end": 9315,
									"name": "PUSH",
									"source": 0,
									"value": "CECB8F27F4200F3A0000000"
								},
								{
									"begin": 11387,
									"end": 11399,
									"name": "PUSH",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 11387,
									"end": 11426,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11387,
									"end": 11426,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11387,
									"end": 11426,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 11466,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 11466,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 11466,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 11466,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 11466,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11437,
									"end": 11467,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 11437,
									"end": 11467,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11437,
									"end": 11449,
									"name": "PUSH",
									"source": 0,
									"value": "1A"
								},
								{
									"begin": 11437,
									"end": 11467,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11437,
									"end": 11467,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11437,
									"end": 11467,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11437,
									"end": 11467,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11437,
									"end": 11467,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 11437,
									"end": 11467,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1D290004395EB7BBFFFFFFF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 11437,
									"end": 11480,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11437,
									"end": 11480,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11437,
									"end": 11480,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11437,
									"end": 11480,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 11525,
									"end": 11537,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11525,
									"end": 11537,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 11510,
									"end": 11538,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 11510,
									"end": 11538,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 11510,
									"end": 11524,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 11510,
									"end": 11524,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11510,
									"end": 11524,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 11510,
									"end": 11524,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551898"
								},
								{
									"begin": 11510,
									"end": 11524,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 11510,
									"end": 11538,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11510,
									"end": 11538,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 11510,
									"end": 11538,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 11510,
									"end": 11538,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 11510,
									"end": 11538,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11491,
									"end": 11507,
									"name": "PUSH",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 11491,
									"end": 11538,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 11551,
									"end": 11578,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 11551,
									"end": 11586,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11551,
									"end": 11586,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 11551,
									"end": 11586,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11551,
									"end": 11586,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11551,
									"end": 11586,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 11610,
									"end": 11626,
									"name": "PUSH",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 11610,
									"end": 11626,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11610,
									"end": 11626,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 11610,
									"end": 11626,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11610,
									"end": 11626,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11610,
									"end": 11626,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11581,
									"end": 11586,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11597,
									"end": 11627,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11597,
									"end": 11627,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11597,
									"end": 11627,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11597,
									"end": 11609,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 11597,
									"end": 11627,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11597,
									"end": 11627,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11597,
									"end": 11627,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11597,
									"end": 11627,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11597,
									"end": 11627,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11597,
									"end": 11627,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 11597,
									"end": 11634,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11597,
									"end": 11634,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 11597,
									"end": 11634,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11597,
									"end": 11634,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11597,
									"end": 11634,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11551,
									"end": 11586,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 11597,
									"end": 11634,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11597,
									"end": 11634,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11597,
									"end": 11634,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 11597,
									"end": 11634,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11597,
									"end": 11634,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 11597,
									"end": 11634,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 11666,
									"end": 11670,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 11645,
									"end": 11672,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 11645,
									"end": 11672,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11645,
									"end": 11672,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11645,
									"end": 11672,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11645,
									"end": 11672,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 11645,
									"end": 11672,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 11645,
									"end": 11679,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11645,
									"end": 11679,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 11645,
									"end": 11679,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11645,
									"end": 11679,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11645,
									"end": 11679,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11645,
									"end": 11679,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11645,
									"end": 11679,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11645,
									"end": 11679,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 11645,
									"end": 11679,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11645,
									"end": 11679,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 11711,
									"end": 11727,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11711,
									"end": 11727,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 11692,
									"end": 11728,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 11692,
									"end": 11728,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11711,
									"end": 11727,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11692,
									"end": 11710,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 11692,
									"end": 11728,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 11692,
									"end": 11728,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 11692,
									"end": 11728,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11767,
									"end": 11783,
									"name": "PUSH",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 11767,
									"end": 11783,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 11785,
									"end": 11797,
									"name": "PUSH",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 11785,
									"end": 11797,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 11744,
									"end": 11798,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11744,
									"end": 11798,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11744,
									"end": 11798,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11744,
									"end": 11798,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11744,
									"end": 11798,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11744,
									"end": 11798,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11744,
									"end": 11798,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 11767,
									"end": 11783,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11767,
									"end": 11783,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 11767,
									"end": 11783,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11767,
									"end": 11783,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11767,
									"end": 11783,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11767,
									"end": 11783,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11744,
									"end": 11798,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 11744,
									"end": 11798,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11744,
									"end": 11798,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11744,
									"end": 11798,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11744,
									"end": 11798,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11744,
									"end": 11798,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 11744,
									"end": 11798,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11744,
									"end": 11798,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11744,
									"end": 11798,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11744,
									"end": 11798,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2081,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1900,
									"end": 2081,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1958,
									"end": 1965,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1990,
									"end": 1995,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1990,
									"end": 1995,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1990,
									"end": 1995,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2014,
									"end": 2020,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2014,
									"end": 2020,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2014,
									"end": 2020,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 2014,
									"end": 2020,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2006,
									"end": 2052,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2006,
									"end": 2052,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2006,
									"end": 2052,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2006,
									"end": 2052,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2006,
									"end": 2052,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2006,
									"end": 2052,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2006,
									"end": 2052,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2006,
									"end": 2052,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2006,
									"end": 2052,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2006,
									"end": 2052,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2006,
									"end": 2052,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2006,
									"end": 2052,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2006,
									"end": 2052,
									"name": "PUSH",
									"source": 0,
									"value": "1B"
								},
								{
									"begin": 2006,
									"end": 2052,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 2006,
									"end": 2052,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2006,
									"end": 2052,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2006,
									"end": 2052,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2006,
									"end": 2052,
									"name": "PUSH",
									"source": 0,
									"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
								},
								{
									"begin": 2006,
									"end": 2052,
									"name": "PUSH",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 2006,
									"end": 2052,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2006,
									"end": 2052,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2006,
									"end": 2052,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2006,
									"end": 2052,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2006,
									"end": 2052,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2006,
									"end": 2052,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2006,
									"end": 2052,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2006,
									"end": 2052,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2006,
									"end": 2052,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2006,
									"end": 2052,
									"name": "PUSH",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 2006,
									"end": 2052,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2006,
									"end": 2052,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2006,
									"end": 2052,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2006,
									"end": 2052,
									"name": "tag",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2006,
									"end": 2052,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2072,
									"end": 2073,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2081,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1900,
									"end": 2081,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 4804,
									"end": 4926,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 4804,
									"end": 4926,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4861,
									"end": 4882,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 4874,
									"end": 4881,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4861,
									"end": 4869,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 4861,
									"end": 4873,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 4861,
									"end": 4873,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 4861,
									"end": 4873,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 4861,
									"end": 4873,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551899"
								},
								{
									"begin": 4861,
									"end": 4873,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 4861,
									"end": 4873,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4861,
									"end": 4882,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4861,
									"end": 4882,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4861,
									"end": 4882,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 4861,
									"end": 4882,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 4861,
									"end": 4882,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 4861,
									"end": 4882,
									"name": "tag",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 4861,
									"end": 4882,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4898,
									"end": 4918,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 4898,
									"end": 4918,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4898,
									"end": 4918,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4898,
									"end": 4918,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 4898,
									"end": 4918,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4898,
									"end": 4918,
									"name": "PUSH",
									"source": 0,
									"value": "6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6"
								},
								{
									"begin": 4898,
									"end": 4918,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4898,
									"end": 4918,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4898,
									"end": 4918,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4898,
									"end": 4918,
									"name": "LOG2",
									"source": 0
								},
								{
									"begin": 4804,
									"end": 4926,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4804,
									"end": 4926,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 2725,
									"end": 2857,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 2725,
									"end": 2857,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2783,
									"end": 2790,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2810,
									"end": 2849,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2814,
									"end": 2815,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2817,
									"end": 2818,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2810,
									"end": 2849,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2810,
									"end": 2849,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2810,
									"end": 2849,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2810,
									"end": 2849,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2810,
									"end": 2849,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2810,
									"end": 2849,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2810,
									"end": 2849,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2810,
									"end": 2849,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2810,
									"end": 2849,
									"name": "PUSH",
									"source": 0,
									"value": "1A"
								},
								{
									"begin": 2810,
									"end": 2849,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2810,
									"end": 2849,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2810,
									"end": 2849,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2810,
									"end": 2849,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2810,
									"end": 2849,
									"name": "PUSH",
									"source": 0,
									"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
								},
								{
									"begin": 2810,
									"end": 2849,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2810,
									"end": 2849,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2810,
									"end": 2849,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2810,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 2810,
									"end": 2813,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2810,
									"end": 2813,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 2810,
									"end": 2849,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2810,
									"end": 2849,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 2810,
									"end": 2849,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8242,
									"end": 8429,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 8242,
									"end": 8429,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8316,
									"end": 8338,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8316,
									"end": 8338,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8308,
									"end": 8339,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 8308,
									"end": 8339,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8308,
									"end": 8339,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8308,
									"end": 8339,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8308,
									"end": 8339,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 8308,
									"end": 8339,
									"name": "tag",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 8308,
									"end": 8339,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8376,
									"end": 8382,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 8376,
									"end": 8382,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8355,
									"end": 8393,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8355,
									"end": 8393,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8355,
									"end": 8393,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8355,
									"end": 8393,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 8355,
									"end": 8393,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8355,
									"end": 8393,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 8376,
									"end": 8382,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 8376,
									"end": 8382,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8376,
									"end": 8382,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 8376,
									"end": 8382,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8376,
									"end": 8382,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8355,
									"end": 8393,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 8355,
									"end": 8393,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8355,
									"end": 8393,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8355,
									"end": 8393,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8355,
									"end": 8393,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 8404,
									"end": 8410,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 8404,
									"end": 8421,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8404,
									"end": 8421,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8404,
									"end": 8421,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8404,
									"end": 8421,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 8404,
									"end": 8421,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8404,
									"end": 8421,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 8404,
									"end": 8421,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 8404,
									"end": 8421,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8404,
									"end": 8421,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 8404,
									"end": 8421,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8404,
									"end": 8421,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8404,
									"end": 8421,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8404,
									"end": 8421,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8404,
									"end": 8421,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 8404,
									"end": 8421,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8404,
									"end": 8421,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8242,
									"end": 8429,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 3450,
									"end": 3628,
									"name": "tag",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 3450,
									"end": 3628,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3528,
									"end": 3546,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 3532,
									"end": 3536,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3538,
									"end": 3545,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3528,
									"end": 3531,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 3528,
									"end": 3546,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 3528,
									"end": 3546,
									"name": "tag",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 3528,
									"end": 3546,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3527,
									"end": 3546,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "52"
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "PUSH",
									"source": 0,
									"value": "526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500"
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "PUSH",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "PUSH",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "tag",
									"source": 0,
									"value": "52"
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3593,
									"end": 3613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3593,
									"end": 3604,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3593,
									"end": 3613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3593,
									"end": 3613,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3593,
									"end": 3613,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3593,
									"end": 3613,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3593,
									"end": 3613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3593,
									"end": 3613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3593,
									"end": 3613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3593,
									"end": 3613,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3593,
									"end": 3613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3593,
									"end": 3613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3593,
									"end": 3613,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3593,
									"end": 3620,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3593,
									"end": 3620,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3593,
									"end": 3620,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3616,
									"end": 3620,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3593,
									"end": 3620,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3593,
									"end": 3620,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3593,
									"end": 3620,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3450,
									"end": 3628,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 2865,
									"end": 3090,
									"name": "tag",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 2865,
									"end": 3090,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 2992,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3032,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3013,
									"end": 3018,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "54"
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "tag",
									"source": 0,
									"value": "55"
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "57"
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "55"
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "tag",
									"source": 0,
									"value": "57"
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "58"
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "tag",
									"source": 0,
									"value": "58"
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "tag",
									"source": 0,
									"value": "54"
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3005,
									"end": 3033,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3044,
									"end": 3053,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3060,
									"end": 3061,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3056,
									"end": 3057,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 3056,
									"end": 3061,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3056,
									"end": 3061,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "59"
								},
								{
									"begin": 3056,
									"end": 3061,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3056,
									"end": 3061,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 3056,
									"end": 3061,
									"name": "tag",
									"source": 0,
									"value": "59"
								},
								{
									"begin": 3056,
									"end": 3061,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3056,
									"end": 3061,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3056,
									"end": 3061,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 2865,
									"end": 3090,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2865,
									"end": 3090,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 3986,
									"end": 4189,
									"name": "tag",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 3986,
									"end": 4189,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4058,
									"end": 4062,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4083,
									"end": 4104,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4083,
									"end": 4104,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "61"
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "PUSH",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "PUSH data",
									"source": 0,
									"value": "9D214FA89563F4E6456A3929327E54500EA1CDE2C0BA9FB2035EC106190D682F"
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "PUSH",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "tag",
									"source": 0,
									"value": "61"
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4161,
									"end": 4181,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 4161,
									"end": 4172,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4161,
									"end": 4181,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4161,
									"end": 4181,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4161,
									"end": 4181,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4161,
									"end": 4181,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 4161,
									"end": 4181,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4161,
									"end": 4181,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4161,
									"end": 4181,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4161,
									"end": 4181,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4161,
									"end": 4181,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 4161,
									"end": 4181,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4161,
									"end": 4181,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 4161,
									"end": 4181,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 4161,
									"end": 4181,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 4161,
									"end": 4181,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 4161,
									"end": 4181,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3986,
									"end": 4189,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "63"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "66"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "tag",
									"source": 0,
									"value": "63"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "66"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "tag",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "66"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "tag",
									"source": 0,
									"value": "65"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "66"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "65"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "tag",
									"source": 0,
									"value": "66"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "67"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "68"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "tag",
									"source": 0,
									"value": "67"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "tag",
									"source": 0,
									"value": "68"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "tag",
									"source": 0,
									"value": "69"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "67"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "69"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8436,
									"end": 23993,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220baa1c6c1681b846fe2fa110a4564947a67973ddf4695e023bfa53eb30ae007e664736f6c63430007040033",
									".code": [
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "7A43E23F"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "BDA5C8BB"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "D5938AAC"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "F887EA40"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "F9F92BE4"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "D5938AAC"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "D7AC6585"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "D7C01032"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "D1FCE264"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "D1FCE264"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "D37E219D"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "D4399790"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "D51ED1C8"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "BDA5C8BB"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "CA33E64C"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "D0889358"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "98118CB4"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "A8AA1B31"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "AA271E1A"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "98118CB4"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "983B2D56"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "98650275"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "8F32D59B"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "9155E083"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "7A43E23F"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "800CEE51"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "83B4AC68"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "3092AFD5"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "56A227F2"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "749796A5"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "753D02A1"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "56A227F2"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "6D351D1A"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "6DDD1713"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "4D709ADF"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "563DF32F"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "3092AFD5"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "33F3D628"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "1DF4CCFC"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "2B112E49"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "2B112E49"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "2B14CA56"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "2BE6937D"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "2F34D282"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "1DF4CCFC"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "201E7991"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "4A66B48"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "1161AE39"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "180B0D7E"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 23993,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 23771,
											"end": 23953,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 23771,
											"end": 23953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23771,
											"end": 23953,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 23771,
											"end": 23953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23771,
											"end": 23953,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23771,
											"end": 23953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 23771,
											"end": 23953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23771,
											"end": 23953,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23771,
											"end": 23953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23771,
											"end": 23953,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23771,
											"end": 23953,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 23771,
											"end": 23953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23771,
											"end": 23953,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23771,
											"end": 23953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 23771,
											"end": 23953,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23771,
											"end": 23953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23771,
											"end": 23953,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23771,
											"end": 23953,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23771,
											"end": 23953,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23771,
											"end": 23953,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23771,
											"end": 23953,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23771,
											"end": 23953,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23771,
											"end": 23953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 23771,
											"end": 23953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23771,
											"end": 23953,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23771,
											"end": 23953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23771,
											"end": 23953,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23771,
											"end": 23953,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 23771,
											"end": 23953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23771,
											"end": 23953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23771,
											"end": 23953,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 23771,
											"end": 23953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23771,
											"end": 23953,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23771,
											"end": 23953,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23771,
											"end": 23953,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 23771,
											"end": 23953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 23771,
											"end": 23953,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9555,
											"end": 9590,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 9555,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9555,
											"end": 9590,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9555,
											"end": 9590,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9555,
											"end": 9590,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9555,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 9555,
											"end": 9590,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9555,
											"end": 9590,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9555,
											"end": 9590,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9555,
											"end": 9590,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9555,
											"end": 9590,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 9555,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9555,
											"end": 9590,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9555,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 9555,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 9555,
											"end": 9590,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9555,
											"end": 9590,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 9555,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9555,
											"end": 9590,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9555,
											"end": 9590,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9555,
											"end": 9590,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9555,
											"end": 9590,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9555,
											"end": 9590,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9555,
											"end": 9590,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9555,
											"end": 9590,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9555,
											"end": 9590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9555,
											"end": 9590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9555,
											"end": 9590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9555,
											"end": 9590,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9555,
											"end": 9590,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9555,
											"end": 9590,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9555,
											"end": 9590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9555,
											"end": 9590,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 12700,
											"end": 12802,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 12700,
											"end": 12802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12700,
											"end": 12802,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12700,
											"end": 12802,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12700,
											"end": 12802,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12700,
											"end": 12802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 12700,
											"end": 12802,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12700,
											"end": 12802,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12700,
											"end": 12802,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12700,
											"end": 12802,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12700,
											"end": 12802,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 12700,
											"end": 12802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12700,
											"end": 12802,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12700,
											"end": 12802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 12700,
											"end": 12802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 12700,
											"end": 12802,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9468,
											"end": 9548,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9468,
											"end": 9548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9548,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9548,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9548,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 9468,
											"end": 9548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9548,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9468,
											"end": 9548,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9548,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9548,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 9468,
											"end": 9548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9548,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 9468,
											"end": 9548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 9468,
											"end": 9548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21036,
											"end": 21208,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 21036,
											"end": 21208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 21208,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 21208,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 21208,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 21036,
											"end": 21208,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 21208,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21036,
											"end": 21208,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 21208,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 21208,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 21036,
											"end": 21208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 21208,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 21036,
											"end": 21208,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21036,
											"end": 21208,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 21208,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 21208,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 21208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21036,
											"end": 21208,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 21208,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 21208,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 21036,
											"end": 21208,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 21208,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21036,
											"end": 21208,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 21208,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 21208,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 21036,
											"end": 21208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21036,
											"end": 21208,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 21208,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 21208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 21208,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21036,
											"end": 21208,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 21208,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 21036,
											"end": 21208,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20813,
											"end": 21028,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 20813,
											"end": 21028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20813,
											"end": 21028,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 20813,
											"end": 21028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20813,
											"end": 21028,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20813,
											"end": 21028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 20813,
											"end": 21028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20813,
											"end": 21028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20813,
											"end": 21028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20813,
											"end": 21028,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20813,
											"end": 21028,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 20813,
											"end": 21028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20813,
											"end": 21028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20813,
											"end": 21028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 20813,
											"end": 21028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 20813,
											"end": 21028,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9435,
											"end": 9461,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 9435,
											"end": 9461,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9435,
											"end": 9461,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9435,
											"end": 9461,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9435,
											"end": 9461,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9435,
											"end": 9461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 9435,
											"end": 9461,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9435,
											"end": 9461,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9435,
											"end": 9461,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9435,
											"end": 9461,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9435,
											"end": 9461,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 9435,
											"end": 9461,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9435,
											"end": 9461,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9435,
											"end": 9461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 9435,
											"end": 9461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 9435,
											"end": 9461,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19428,
											"end": 19542,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 19428,
											"end": 19542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19428,
											"end": 19542,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 19428,
											"end": 19542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19428,
											"end": 19542,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19428,
											"end": 19542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 19428,
											"end": 19542,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19428,
											"end": 19542,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19428,
											"end": 19542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19428,
											"end": 19542,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19428,
											"end": 19542,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 19428,
											"end": 19542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19428,
											"end": 19542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19428,
											"end": 19542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 19428,
											"end": 19542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 19428,
											"end": 19542,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13066,
											"end": 13206,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 13066,
											"end": 13206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13066,
											"end": 13206,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13066,
											"end": 13206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13066,
											"end": 13206,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13066,
											"end": 13206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 13066,
											"end": 13206,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13066,
											"end": 13206,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13066,
											"end": 13206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13066,
											"end": 13206,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13066,
											"end": 13206,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 13066,
											"end": 13206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13066,
											"end": 13206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13066,
											"end": 13206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 13066,
											"end": 13206,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13066,
											"end": 13206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13066,
											"end": 13206,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13066,
											"end": 13206,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13066,
											"end": 13206,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13066,
											"end": 13206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13066,
											"end": 13206,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13066,
											"end": 13206,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13066,
											"end": 13206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 13066,
											"end": 13206,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13066,
											"end": 13206,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13066,
											"end": 13206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13066,
											"end": 13206,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13066,
											"end": 13206,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 13066,
											"end": 13206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13066,
											"end": 13206,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13066,
											"end": 13206,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13066,
											"end": 13206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 13066,
											"end": 13206,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21315,
											"end": 21412,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 21315,
											"end": 21412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21315,
											"end": 21412,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 21315,
											"end": 21412,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21315,
											"end": 21412,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21315,
											"end": 21412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 21315,
											"end": 21412,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21315,
											"end": 21412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21315,
											"end": 21412,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21315,
											"end": 21412,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21315,
											"end": 21412,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 21315,
											"end": 21412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21315,
											"end": 21412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21315,
											"end": 21412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 21315,
											"end": 21412,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21315,
											"end": 21412,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21315,
											"end": 21412,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21315,
											"end": 21412,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21315,
											"end": 21412,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21315,
											"end": 21412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21315,
											"end": 21412,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21315,
											"end": 21412,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21315,
											"end": 21412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 21315,
											"end": 21412,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21315,
											"end": 21412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21315,
											"end": 21412,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21315,
											"end": 21412,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21315,
											"end": 21412,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 21315,
											"end": 21412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21315,
											"end": 21412,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21315,
											"end": 21412,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21315,
											"end": 21412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 21315,
											"end": 21412,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5631,
											"end": 5714,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 5631,
											"end": 5714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5631,
											"end": 5714,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5631,
											"end": 5714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5631,
											"end": 5714,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5631,
											"end": 5714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 5631,
											"end": 5714,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5631,
											"end": 5714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5631,
											"end": 5714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5631,
											"end": 5714,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5631,
											"end": 5714,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 5631,
											"end": 5714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5631,
											"end": 5714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5631,
											"end": 5714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 5631,
											"end": 5714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 5631,
											"end": 5714,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5631,
											"end": 5714,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 5631,
											"end": 5714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5631,
											"end": 5714,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5631,
											"end": 5714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5631,
											"end": 5714,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5631,
											"end": 5714,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5631,
											"end": 5714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5631,
											"end": 5714,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5631,
											"end": 5714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5631,
											"end": 5714,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5631,
											"end": 5714,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5631,
											"end": 5714,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5631,
											"end": 5714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5631,
											"end": 5714,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5631,
											"end": 5714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5631,
											"end": 5714,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5631,
											"end": 5714,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5631,
											"end": 5714,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5631,
											"end": 5714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5631,
											"end": 5714,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 23099,
											"end": 23312,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 23099,
											"end": 23312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23099,
											"end": 23312,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 23099,
											"end": 23312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23099,
											"end": 23312,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23099,
											"end": 23312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 23099,
											"end": 23312,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23099,
											"end": 23312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23099,
											"end": 23312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23099,
											"end": 23312,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23099,
											"end": 23312,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 23099,
											"end": 23312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23099,
											"end": 23312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23099,
											"end": 23312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 23099,
											"end": 23312,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23099,
											"end": 23312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23099,
											"end": 23312,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23099,
											"end": 23312,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23099,
											"end": 23312,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23099,
											"end": 23312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23099,
											"end": 23312,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23099,
											"end": 23312,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23099,
											"end": 23312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 23099,
											"end": 23312,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23099,
											"end": 23312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23099,
											"end": 23312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23099,
											"end": 23312,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23099,
											"end": 23312,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 23099,
											"end": 23312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23099,
											"end": 23312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23099,
											"end": 23312,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 23099,
											"end": 23312,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23099,
											"end": 23312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23099,
											"end": 23312,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23099,
											"end": 23312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23099,
											"end": 23312,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 23099,
											"end": 23312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 23099,
											"end": 23312,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19936,
											"end": 20331,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19936,
											"end": 20331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19936,
											"end": 20331,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 19936,
											"end": 20331,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19936,
											"end": 20331,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19936,
											"end": 20331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 19936,
											"end": 20331,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19936,
											"end": 20331,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19936,
											"end": 20331,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19936,
											"end": 20331,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19936,
											"end": 20331,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 19936,
											"end": 20331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19936,
											"end": 20331,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19936,
											"end": 20331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 19936,
											"end": 20331,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19936,
											"end": 20331,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19936,
											"end": 20331,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19936,
											"end": 20331,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19936,
											"end": 20331,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19936,
											"end": 20331,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19936,
											"end": 20331,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19936,
											"end": 20331,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19936,
											"end": 20331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 19936,
											"end": 20331,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19936,
											"end": 20331,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19936,
											"end": 20331,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19936,
											"end": 20331,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19936,
											"end": 20331,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 19936,
											"end": 20331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19936,
											"end": 20331,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19936,
											"end": 20331,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 19936,
											"end": 20331,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19936,
											"end": 20331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19936,
											"end": 20331,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19936,
											"end": 20331,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19936,
											"end": 20331,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 19936,
											"end": 20331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 19936,
											"end": 20331,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8644,
											"end": 8675,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 8644,
											"end": 8675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8644,
											"end": 8675,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8644,
											"end": 8675,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8644,
											"end": 8675,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8644,
											"end": 8675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 8644,
											"end": 8675,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8644,
											"end": 8675,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8644,
											"end": 8675,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8644,
											"end": 8675,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8644,
											"end": 8675,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 8644,
											"end": 8675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8644,
											"end": 8675,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8644,
											"end": 8675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 8644,
											"end": 8675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 8644,
											"end": 8675,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8644,
											"end": 8675,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 8644,
											"end": 8675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8644,
											"end": 8675,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8644,
											"end": 8675,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8644,
											"end": 8675,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8644,
											"end": 8675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8644,
											"end": 8675,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8644,
											"end": 8675,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8644,
											"end": 8675,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8644,
											"end": 8675,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8644,
											"end": 8675,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8644,
											"end": 8675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8644,
											"end": 8675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8644,
											"end": 8675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8644,
											"end": 8675,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8644,
											"end": 8675,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8644,
											"end": 8675,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8644,
											"end": 8675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8644,
											"end": 8675,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9362,
											"end": 9389,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 9362,
											"end": 9389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9362,
											"end": 9389,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9362,
											"end": 9389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9362,
											"end": 9389,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9362,
											"end": 9389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 9362,
											"end": 9389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9362,
											"end": 9389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9362,
											"end": 9389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9362,
											"end": 9389,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9362,
											"end": 9389,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 9362,
											"end": 9389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9362,
											"end": 9389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9362,
											"end": 9389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 9362,
											"end": 9389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 9362,
											"end": 9389,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22852,
											"end": 23091,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 22852,
											"end": 23091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22852,
											"end": 23091,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22852,
											"end": 23091,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22852,
											"end": 23091,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22852,
											"end": 23091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 22852,
											"end": 23091,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22852,
											"end": 23091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22852,
											"end": 23091,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22852,
											"end": 23091,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22852,
											"end": 23091,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 22852,
											"end": 23091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22852,
											"end": 23091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22852,
											"end": 23091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 22852,
											"end": 23091,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22852,
											"end": 23091,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22852,
											"end": 23091,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22852,
											"end": 23091,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22852,
											"end": 23091,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22852,
											"end": 23091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22852,
											"end": 23091,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22852,
											"end": 23091,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22852,
											"end": 23091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 22852,
											"end": 23091,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22852,
											"end": 23091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22852,
											"end": 23091,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22852,
											"end": 23091,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22852,
											"end": 23091,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 22852,
											"end": 23091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22852,
											"end": 23091,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22852,
											"end": 23091,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 22852,
											"end": 23091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22852,
											"end": 23091,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22852,
											"end": 23091,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22852,
											"end": 23091,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22852,
											"end": 23091,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22852,
											"end": 23091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 22852,
											"end": 23091,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21778,
											"end": 21904,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 21778,
											"end": 21904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21778,
											"end": 21904,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 21778,
											"end": 21904,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21778,
											"end": 21904,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21778,
											"end": 21904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 21778,
											"end": 21904,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21778,
											"end": 21904,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21778,
											"end": 21904,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21778,
											"end": 21904,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21778,
											"end": 21904,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 21778,
											"end": 21904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21778,
											"end": 21904,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21778,
											"end": 21904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 21778,
											"end": 21904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 21778,
											"end": 21904,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9998,
											"end": 10028,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 9998,
											"end": 10028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 10028,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 10028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 10028,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 10028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 9998,
											"end": 10028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 10028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9998,
											"end": 10028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 10028,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 10028,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 9998,
											"end": 10028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 10028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 10028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 9998,
											"end": 10028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 9998,
											"end": 10028,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13416,
											"end": 13554,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 13416,
											"end": 13554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13416,
											"end": 13554,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13416,
											"end": 13554,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13416,
											"end": 13554,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13416,
											"end": 13554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 13416,
											"end": 13554,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13416,
											"end": 13554,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13416,
											"end": 13554,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13416,
											"end": 13554,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13416,
											"end": 13554,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 13416,
											"end": 13554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13416,
											"end": 13554,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13416,
											"end": 13554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 13416,
											"end": 13554,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13416,
											"end": 13554,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13416,
											"end": 13554,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13416,
											"end": 13554,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13416,
											"end": 13554,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13416,
											"end": 13554,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13416,
											"end": 13554,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13416,
											"end": 13554,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13416,
											"end": 13554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 13416,
											"end": 13554,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13416,
											"end": 13554,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13416,
											"end": 13554,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13416,
											"end": 13554,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13416,
											"end": 13554,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 13416,
											"end": 13554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13416,
											"end": 13554,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13416,
											"end": 13554,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13416,
											"end": 13554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 13416,
											"end": 13554,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7991,
											"end": 8117,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 7991,
											"end": 8117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7991,
											"end": 8117,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 7991,
											"end": 8117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7991,
											"end": 8117,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7991,
											"end": 8117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 7991,
											"end": 8117,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7991,
											"end": 8117,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7991,
											"end": 8117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7991,
											"end": 8117,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7991,
											"end": 8117,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 7991,
											"end": 8117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7991,
											"end": 8117,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7991,
											"end": 8117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 7991,
											"end": 8117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 7991,
											"end": 8117,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19662,
											"end": 19763,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 19662,
											"end": 19763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19662,
											"end": 19763,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 19662,
											"end": 19763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19662,
											"end": 19763,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19662,
											"end": 19763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 19662,
											"end": 19763,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19662,
											"end": 19763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19662,
											"end": 19763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19662,
											"end": 19763,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19662,
											"end": 19763,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 19662,
											"end": 19763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19662,
											"end": 19763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19662,
											"end": 19763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 19662,
											"end": 19763,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19662,
											"end": 19763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19662,
											"end": 19763,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19662,
											"end": 19763,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19662,
											"end": 19763,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19662,
											"end": 19763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19662,
											"end": 19763,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19662,
											"end": 19763,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19662,
											"end": 19763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 19662,
											"end": 19763,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19662,
											"end": 19763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19662,
											"end": 19763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19662,
											"end": 19763,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19662,
											"end": 19763,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 19662,
											"end": 19763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19662,
											"end": 19763,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19662,
											"end": 19763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19662,
											"end": 19763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 19662,
											"end": 19763,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21912,
											"end": 21986,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 21912,
											"end": 21986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21912,
											"end": 21986,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 21912,
											"end": 21986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21912,
											"end": 21986,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21912,
											"end": 21986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 21912,
											"end": 21986,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21912,
											"end": 21986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21912,
											"end": 21986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21912,
											"end": 21986,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21912,
											"end": 21986,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 21912,
											"end": 21986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21912,
											"end": 21986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21912,
											"end": 21986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 21912,
											"end": 21986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 21912,
											"end": 21986,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11933,
											"end": 12692,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 11933,
											"end": 12692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11933,
											"end": 12692,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11933,
											"end": 12692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11933,
											"end": 12692,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11933,
											"end": 12692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 11933,
											"end": 12692,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11933,
											"end": 12692,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11933,
											"end": 12692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11933,
											"end": 12692,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11933,
											"end": 12692,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 11933,
											"end": 12692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11933,
											"end": 12692,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11933,
											"end": 12692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 11933,
											"end": 12692,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11933,
											"end": 12692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11933,
											"end": 12692,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11933,
											"end": 12692,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11933,
											"end": 12692,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11933,
											"end": 12692,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11933,
											"end": 12692,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11933,
											"end": 12692,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11933,
											"end": 12692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 11933,
											"end": 12692,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11933,
											"end": 12692,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11933,
											"end": 12692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11933,
											"end": 12692,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11933,
											"end": 12692,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 11933,
											"end": 12692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11933,
											"end": 12692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11933,
											"end": 12692,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 11933,
											"end": 12692,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11933,
											"end": 12692,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11933,
											"end": 12692,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11933,
											"end": 12692,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 11933,
											"end": 12692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 11933,
											"end": 12692,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9772,
											"end": 9803,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 9772,
											"end": 9803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9772,
											"end": 9803,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9772,
											"end": 9803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9772,
											"end": 9803,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9772,
											"end": 9803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 9772,
											"end": 9803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9772,
											"end": 9803,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9772,
											"end": 9803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9772,
											"end": 9803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9772,
											"end": 9803,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 9772,
											"end": 9803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9772,
											"end": 9803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9772,
											"end": 9803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 9772,
											"end": 9803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 9772,
											"end": 9803,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21420,
											"end": 21505,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 21420,
											"end": 21505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21420,
											"end": 21505,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 21420,
											"end": 21505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21420,
											"end": 21505,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21420,
											"end": 21505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 21420,
											"end": 21505,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21420,
											"end": 21505,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21420,
											"end": 21505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21420,
											"end": 21505,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21420,
											"end": 21505,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 21420,
											"end": 21505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21420,
											"end": 21505,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21420,
											"end": 21505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 21420,
											"end": 21505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 21420,
											"end": 21505,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11814,
											"end": 11925,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 11814,
											"end": 11925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11814,
											"end": 11925,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11814,
											"end": 11925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11814,
											"end": 11925,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11814,
											"end": 11925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 11814,
											"end": 11925,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11814,
											"end": 11925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11814,
											"end": 11925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11814,
											"end": 11925,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11814,
											"end": 11925,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 11814,
											"end": 11925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11814,
											"end": 11925,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11814,
											"end": 11925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 11814,
											"end": 11925,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11814,
											"end": 11925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11814,
											"end": 11925,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11814,
											"end": 11925,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11814,
											"end": 11925,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11814,
											"end": 11925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11814,
											"end": 11925,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11814,
											"end": 11925,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11814,
											"end": 11925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 11814,
											"end": 11925,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11814,
											"end": 11925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11814,
											"end": 11925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11814,
											"end": 11925,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11814,
											"end": 11925,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 11814,
											"end": 11925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11814,
											"end": 11925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11814,
											"end": 11925,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 11814,
											"end": 11925,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11814,
											"end": 11925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11814,
											"end": 11925,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11814,
											"end": 11925,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11814,
											"end": 11925,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 11814,
											"end": 11925,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11814,
											"end": 11925,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11814,
											"end": 11925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 11814,
											"end": 11925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5536,
											"end": 5623,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 5536,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5536,
											"end": 5623,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5536,
											"end": 5623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5536,
											"end": 5623,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5536,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 5536,
											"end": 5623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5536,
											"end": 5623,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5536,
											"end": 5623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5536,
											"end": 5623,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5536,
											"end": 5623,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 5536,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5536,
											"end": 5623,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5536,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5536,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 5536,
											"end": 5623,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9324,
											"end": 9355,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 9324,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9355,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9355,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 9324,
											"end": 9355,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9355,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9324,
											"end": 9355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9355,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9355,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 9324,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 9324,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 9324,
											"end": 9355,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21216,
											"end": 21307,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 21216,
											"end": 21307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21216,
											"end": 21307,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 21216,
											"end": 21307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21216,
											"end": 21307,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21216,
											"end": 21307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 21216,
											"end": 21307,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21216,
											"end": 21307,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21216,
											"end": 21307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21216,
											"end": 21307,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21216,
											"end": 21307,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 21216,
											"end": 21307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21216,
											"end": 21307,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21216,
											"end": 21307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 21216,
											"end": 21307,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21216,
											"end": 21307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21216,
											"end": 21307,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21216,
											"end": 21307,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21216,
											"end": 21307,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21216,
											"end": 21307,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21216,
											"end": 21307,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21216,
											"end": 21307,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21216,
											"end": 21307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 21216,
											"end": 21307,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21216,
											"end": 21307,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21216,
											"end": 21307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21216,
											"end": 21307,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21216,
											"end": 21307,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 21216,
											"end": 21307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21216,
											"end": 21307,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21216,
											"end": 21307,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21216,
											"end": 21307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 21216,
											"end": 21307,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4719,
											"end": 4796,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4719,
											"end": 4796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4796,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4796,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 4719,
											"end": 4796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4796,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4796,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 4719,
											"end": 4796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4719,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 4719,
											"end": 4796,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17929,
											"end": 18558,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17929,
											"end": 18558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17929,
											"end": 18558,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 17929,
											"end": 18558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17929,
											"end": 18558,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17929,
											"end": 18558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 17929,
											"end": 18558,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17929,
											"end": 18558,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17929,
											"end": 18558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17929,
											"end": 18558,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17929,
											"end": 18558,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 17929,
											"end": 18558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17929,
											"end": 18558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17929,
											"end": 18558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 17929,
											"end": 18558,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17929,
											"end": 18558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17929,
											"end": 18558,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17929,
											"end": 18558,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17929,
											"end": 18558,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17929,
											"end": 18558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17929,
											"end": 18558,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17929,
											"end": 18558,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17929,
											"end": 18558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 17929,
											"end": 18558,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17929,
											"end": 18558,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17929,
											"end": 18558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17929,
											"end": 18558,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17929,
											"end": 18558,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 17929,
											"end": 18558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17929,
											"end": 18558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17929,
											"end": 18558,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 17929,
											"end": 18558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17929,
											"end": 18558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17929,
											"end": 18558,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17929,
											"end": 18558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17929,
											"end": 18558,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 17929,
											"end": 18558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 17929,
											"end": 18558,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9970,
											"end": 9989,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 9970,
											"end": 9989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9970,
											"end": 9989,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9970,
											"end": 9989,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9970,
											"end": 9989,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9970,
											"end": 9989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 9970,
											"end": 9989,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9970,
											"end": 9989,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9970,
											"end": 9989,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9970,
											"end": 9989,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9970,
											"end": 9989,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 9970,
											"end": 9989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9970,
											"end": 9989,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9970,
											"end": 9989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 9970,
											"end": 9989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 9970,
											"end": 9989,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12810,
											"end": 13058,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 12810,
											"end": 13058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12810,
											"end": 13058,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12810,
											"end": 13058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12810,
											"end": 13058,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12810,
											"end": 13058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 12810,
											"end": 13058,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12810,
											"end": 13058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12810,
											"end": 13058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12810,
											"end": 13058,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12810,
											"end": 13058,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 12810,
											"end": 13058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12810,
											"end": 13058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12810,
											"end": 13058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 12810,
											"end": 13058,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12810,
											"end": 13058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12810,
											"end": 13058,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12810,
											"end": 13058,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12810,
											"end": 13058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12810,
											"end": 13058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12810,
											"end": 13058,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12810,
											"end": 13058,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12810,
											"end": 13058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 12810,
											"end": 13058,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12810,
											"end": 13058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12810,
											"end": 13058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12810,
											"end": 13058,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12810,
											"end": 13058,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 12810,
											"end": 13058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12810,
											"end": 13058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12810,
											"end": 13058,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 12810,
											"end": 13058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12810,
											"end": 13058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12810,
											"end": 13058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12810,
											"end": 13058,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12810,
											"end": 13058,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 12810,
											"end": 13058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 12810,
											"end": 13058,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9729,
											"end": 9765,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 9729,
											"end": 9765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9729,
											"end": 9765,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9729,
											"end": 9765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9729,
											"end": 9765,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9729,
											"end": 9765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 9729,
											"end": 9765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9729,
											"end": 9765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9729,
											"end": 9765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9729,
											"end": 9765,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9729,
											"end": 9765,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 9729,
											"end": 9765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9729,
											"end": 9765,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9729,
											"end": 9765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 9729,
											"end": 9765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 9729,
											"end": 9765,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8684,
											"end": 8723,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 8684,
											"end": 8723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8684,
											"end": 8723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8684,
											"end": 8723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8684,
											"end": 8723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8684,
											"end": 8723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 8684,
											"end": 8723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8684,
											"end": 8723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8684,
											"end": 8723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8684,
											"end": 8723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8684,
											"end": 8723,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 8684,
											"end": 8723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8684,
											"end": 8723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8684,
											"end": 8723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 8684,
											"end": 8723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 8684,
											"end": 8723,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19307,
											"end": 19420,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 19307,
											"end": 19420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19307,
											"end": 19420,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 19307,
											"end": 19420,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19307,
											"end": 19420,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19307,
											"end": 19420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 19307,
											"end": 19420,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19307,
											"end": 19420,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19307,
											"end": 19420,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19307,
											"end": 19420,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19307,
											"end": 19420,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 19307,
											"end": 19420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19307,
											"end": 19420,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19307,
											"end": 19420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 19307,
											"end": 19420,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19307,
											"end": 19420,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19307,
											"end": 19420,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19307,
											"end": 19420,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19307,
											"end": 19420,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19307,
											"end": 19420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19307,
											"end": 19420,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19307,
											"end": 19420,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19307,
											"end": 19420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 19307,
											"end": 19420,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19307,
											"end": 19420,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19307,
											"end": 19420,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19307,
											"end": 19420,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19307,
											"end": 19420,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 19307,
											"end": 19420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19307,
											"end": 19420,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19307,
											"end": 19420,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19307,
											"end": 19420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 19307,
											"end": 19420,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23468,
											"end": 23759,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 23468,
											"end": 23759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23468,
											"end": 23759,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 23468,
											"end": 23759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23468,
											"end": 23759,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23468,
											"end": 23759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 23468,
											"end": 23759,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23468,
											"end": 23759,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23468,
											"end": 23759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23468,
											"end": 23759,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23468,
											"end": 23759,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 23468,
											"end": 23759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23468,
											"end": 23759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23468,
											"end": 23759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 23468,
											"end": 23759,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23468,
											"end": 23759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23468,
											"end": 23759,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23468,
											"end": 23759,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23468,
											"end": 23759,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23468,
											"end": 23759,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23468,
											"end": 23759,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23468,
											"end": 23759,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23468,
											"end": 23759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 23468,
											"end": 23759,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23468,
											"end": 23759,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23468,
											"end": 23759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23468,
											"end": 23759,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23468,
											"end": 23759,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 23468,
											"end": 23759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23468,
											"end": 23759,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 23468,
											"end": 23759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 23468,
											"end": 23759,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19550,
											"end": 19654,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 19550,
											"end": 19654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19550,
											"end": 19654,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 19550,
											"end": 19654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19550,
											"end": 19654,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19550,
											"end": 19654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 19550,
											"end": 19654,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19550,
											"end": 19654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19550,
											"end": 19654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19550,
											"end": 19654,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19550,
											"end": 19654,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 19550,
											"end": 19654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19550,
											"end": 19654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19550,
											"end": 19654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 19550,
											"end": 19654,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19550,
											"end": 19654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19550,
											"end": 19654,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19550,
											"end": 19654,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19550,
											"end": 19654,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19550,
											"end": 19654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19550,
											"end": 19654,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19550,
											"end": 19654,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19550,
											"end": 19654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 19550,
											"end": 19654,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19550,
											"end": 19654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19550,
											"end": 19654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19550,
											"end": 19654,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19550,
											"end": 19654,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 19550,
											"end": 19654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19550,
											"end": 19654,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19550,
											"end": 19654,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19550,
											"end": 19654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 19550,
											"end": 19654,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9810,
											"end": 9846,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 9810,
											"end": 9846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9810,
											"end": 9846,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9810,
											"end": 9846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9810,
											"end": 9846,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9810,
											"end": 9846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 9810,
											"end": 9846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9810,
											"end": 9846,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9810,
											"end": 9846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9810,
											"end": 9846,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9810,
											"end": 9846,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 9810,
											"end": 9846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9810,
											"end": 9846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9810,
											"end": 9846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 9810,
											"end": 9846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 9810,
											"end": 9846,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13214,
											"end": 13408,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 13214,
											"end": 13408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13214,
											"end": 13408,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13214,
											"end": 13408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13214,
											"end": 13408,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13214,
											"end": 13408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 13214,
											"end": 13408,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13214,
											"end": 13408,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13214,
											"end": 13408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13214,
											"end": 13408,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13214,
											"end": 13408,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 13214,
											"end": 13408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13214,
											"end": 13408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13214,
											"end": 13408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 13214,
											"end": 13408,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13214,
											"end": 13408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13214,
											"end": 13408,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13214,
											"end": 13408,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13214,
											"end": 13408,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13214,
											"end": 13408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13214,
											"end": 13408,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13214,
											"end": 13408,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13214,
											"end": 13408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 13214,
											"end": 13408,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13214,
											"end": 13408,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13214,
											"end": 13408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13214,
											"end": 13408,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13214,
											"end": 13408,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 13214,
											"end": 13408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13214,
											"end": 13408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13214,
											"end": 13408,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 13214,
											"end": 13408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13214,
											"end": 13408,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13214,
											"end": 13408,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13214,
											"end": 13408,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13214,
											"end": 13408,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13214,
											"end": 13408,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 13214,
											"end": 13408,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13214,
											"end": 13408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 13214,
											"end": 13408,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9939,
											"end": 9963,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 9939,
											"end": 9963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9939,
											"end": 9963,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9939,
											"end": 9963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9939,
											"end": 9963,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9939,
											"end": 9963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 9939,
											"end": 9963,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9939,
											"end": 9963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9939,
											"end": 9963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9939,
											"end": 9963,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9939,
											"end": 9963,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 9939,
											"end": 9963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9939,
											"end": 9963,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9939,
											"end": 9963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 9939,
											"end": 9963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 9939,
											"end": 9963,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 7853,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22548,
											"end": 22560,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 22548,
											"end": 22576,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 22548,
											"end": 22576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22548,
											"end": 22576,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22587,
											"end": 22600,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 22587,
											"end": 22617,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22587,
											"end": 22617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22587,
											"end": 22617,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22628,
											"end": 22636,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 22628,
											"end": 22648,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22628,
											"end": 22648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22628,
											"end": 22648,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22659,
											"end": 22666,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 22659,
											"end": 22677,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22659,
											"end": 22677,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22659,
											"end": 22677,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22699,
											"end": 22744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 22603,
											"end": 22617,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22699,
											"end": 22725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 22563,
											"end": 22576,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 22639,
											"end": 22648,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 22699,
											"end": 22715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 22699,
											"end": 22725,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22699,
											"end": 22725,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 22699,
											"end": 22725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22699,
											"end": 22729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22699,
											"end": 22729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 22699,
											"end": 22744,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22699,
											"end": 22744,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 22699,
											"end": 22744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22688,
											"end": 22696,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 22688,
											"end": 22744,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22755,
											"end": 22769,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 22755,
											"end": 22787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22755,
											"end": 22787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22755,
											"end": 22787,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22834,
											"end": 22835,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22772,
											"end": 22787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22817,
											"end": 22835,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 22806,
											"end": 22814,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 22806,
											"end": 22814,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22806,
											"end": 22835,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22798,
											"end": 22836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 22798,
											"end": 22836,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22798,
											"end": 22836,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22798,
											"end": 22836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22798,
											"end": 22836,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22798,
											"end": 22836,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 22798,
											"end": 22836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22340,
											"end": 22844,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5515,
											"end": 5520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5482,
											"end": 5495,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5482,
											"end": 5495,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5515,
											"end": 5520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5515,
											"end": 5520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5515,
											"end": 5520,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5528,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8891,
											"end": 8918,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8891,
											"end": 8918,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19149,
											"end": 19153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19149,
											"end": 19153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8891,
											"end": 8918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8891,
											"end": 8918,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8891,
											"end": 8918,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8891,
											"end": 8918,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8891,
											"end": 8918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8891,
											"end": 8948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 8891,
											"end": 8948,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8891,
											"end": 8948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8939,
											"end": 8948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 8939,
											"end": 8946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 8939,
											"end": 8948,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8939,
											"end": 8948,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 8939,
											"end": 8948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8891,
											"end": 8994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8891,
											"end": 8994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 8891,
											"end": 8994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8983,
											"end": 8993,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8982,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8891,
											"end": 8994,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 8891,
											"end": 8994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8869,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 8869,
											"end": 9005,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8869,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8869,
											"end": 9005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8869,
											"end": 9005,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8869,
											"end": 9005,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 8869,
											"end": 9005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19189,
											"end": 19199,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19171,
											"end": 19200,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19171,
											"end": 19200,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19171,
											"end": 19200,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19171,
											"end": 19200,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19171,
											"end": 19188,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 19171,
											"end": 19200,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19171,
											"end": 19200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19171,
											"end": 19200,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19171,
											"end": 19200,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19171,
											"end": 19200,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19171,
											"end": 19200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19171,
											"end": 19200,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19171,
											"end": 19200,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19171,
											"end": 19209,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 19171,
											"end": 19209,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19171,
											"end": 19209,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19171,
											"end": 19209,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19171,
											"end": 19209,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19171,
											"end": 19209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19171,
											"end": 19209,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19171,
											"end": 19209,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19171,
											"end": 19209,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19171,
											"end": 19209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19171,
											"end": 19209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19171,
											"end": 19209,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19171,
											"end": 19217,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 19171,
											"end": 19217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19171,
											"end": 19217,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19233,
											"end": 19269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19233,
											"end": 19269,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19233,
											"end": 19269,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 19233,
											"end": 19269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19233,
											"end": 19269,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19233,
											"end": 19269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19233,
											"end": 19269,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19171,
											"end": 19209,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19171,
											"end": 19209,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 19189,
											"end": 19199,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19233,
											"end": 19269,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 19233,
											"end": 19269,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19233,
											"end": 19269,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19233,
											"end": 19269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19233,
											"end": 19269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19233,
											"end": 19269,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19233,
											"end": 19269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19233,
											"end": 19269,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19233,
											"end": 19269,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19233,
											"end": 19269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19233,
											"end": 19269,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19287,
											"end": 19291,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9016,
											"end": 9017,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 9016,
											"end": 9017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19299,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23771,
											"end": 23953,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 23771,
											"end": 23953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23878,
											"end": 23882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23939,
											"end": 23945,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23907,
											"end": 23936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 23927,
											"end": 23935,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23907,
											"end": 23926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 23907,
											"end": 23936,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23907,
											"end": 23936,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 23907,
											"end": 23936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23907,
											"end": 23945,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23907,
											"end": 23945,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 23771,
											"end": 23953,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23771,
											"end": 23953,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9555,
											"end": 9590,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 9555,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9555,
											"end": 9590,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 9555,
											"end": 9590,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9555,
											"end": 9590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9555,
											"end": 9590,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12700,
											"end": 12802,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 12700,
											"end": 12802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12782,
											"end": 12794,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 12782,
											"end": 12794,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12700,
											"end": 12802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12700,
											"end": 12802,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9468,
											"end": 9548,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 9468,
											"end": 9548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9548,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 9468,
											"end": 9548,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9548,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21036,
											"end": 21208,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 21036,
											"end": 21208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 7853,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21128,
											"end": 21143,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 21128,
											"end": 21152,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21128,
											"end": 21152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21128,
											"end": 21152,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21128,
											"end": 21152,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21163,
											"end": 21189,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 21163,
											"end": 21200,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 21208,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14995,
											"end": 14999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14982,
											"end": 14984,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9088,
											"end": 9106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9088,
											"end": 9106,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9080,
											"end": 9107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 9080,
											"end": 9107,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9080,
											"end": 9107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9080,
											"end": 9107,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9080,
											"end": 9107,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9080,
											"end": 9107,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 9080,
											"end": 9107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15016,
											"end": 15039,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15016,
											"end": 15039,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15016,
											"end": 15039,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15016,
											"end": 15039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15016,
											"end": 15039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15016,
											"end": 15039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15016,
											"end": 15033,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 15016,
											"end": 15039,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15016,
											"end": 15039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15016,
											"end": 15039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15016,
											"end": 15039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15016,
											"end": 15039,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15016,
											"end": 15039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15016,
											"end": 15039,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15016,
											"end": 15039,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15050,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15016,
											"end": 15051,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15016,
											"end": 15051,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15016,
											"end": 15051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15016,
											"end": 15051,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15016,
											"end": 15051,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15016,
											"end": 15051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15016,
											"end": 15051,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15016,
											"end": 15051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15016,
											"end": 15066,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15012,
											"end": 15237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 15012,
											"end": 15237,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15225,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15121,
											"end": 15225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15225,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15225,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15225,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15225,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 15121,
											"end": 15225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E7420416C6C6F77616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15121,
											"end": 15225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15121,
											"end": 15225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15225,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15121,
											"end": 15144,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15144,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 15121,
											"end": 15144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15144,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15138,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 15121,
											"end": 15144,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15144,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15144,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15144,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15163,
											"end": 15173,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15188,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15188,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15188,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15188,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15188,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15188,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15188,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15188,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 15121,
											"end": 15225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15193,
											"end": 15198,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15193,
											"end": 15198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15121,
											"end": 15192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 15121,
											"end": 15225,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15121,
											"end": 15225,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 15121,
											"end": 15225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15083,
											"end": 15106,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15083,
											"end": 15106,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15083,
											"end": 15106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15083,
											"end": 15106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15083,
											"end": 15106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15083,
											"end": 15106,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15083,
											"end": 15100,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 15083,
											"end": 15106,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15083,
											"end": 15106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15083,
											"end": 15106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15083,
											"end": 15106,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15083,
											"end": 15106,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15083,
											"end": 15106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15083,
											"end": 15106,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15083,
											"end": 15106,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15107,
											"end": 15117,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15083,
											"end": 15118,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15083,
											"end": 15118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15083,
											"end": 15118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15083,
											"end": 15118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15083,
											"end": 15118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15083,
											"end": 15118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15083,
											"end": 15118,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15083,
											"end": 15225,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15012,
											"end": 15237,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 15012,
											"end": 15237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15249,
											"end": 15279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 15263,
											"end": 15267,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15269,
											"end": 15271,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15273,
											"end": 15278,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15249,
											"end": 15262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 15249,
											"end": 15279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15249,
											"end": 15279,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 15249,
											"end": 15279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15297,
											"end": 15301,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15297,
											"end": 15301,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14852,
											"end": 15309,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20813,
											"end": 21028,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 20813,
											"end": 21028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20989,
											"end": 21005,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 20989,
											"end": 21005,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20959,
											"end": 20963,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 20959,
											"end": 20963,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20959,
											"end": 20963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20959,
											"end": 20963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20959,
											"end": 20963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20866,
											"end": 20873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20946,
											"end": 20964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20946,
											"end": 20964,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20946,
											"end": 20964,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20946,
											"end": 20958,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 20946,
											"end": 20964,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20946,
											"end": 20964,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20946,
											"end": 20964,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20946,
											"end": 20964,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20946,
											"end": 20964,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20946,
											"end": 20964,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20946,
											"end": 20964,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20935,
											"end": 20939,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 20935,
											"end": 20939,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20935,
											"end": 20939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20935,
											"end": 20939,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20935,
											"end": 20939,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20922,
											"end": 20940,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20922,
											"end": 20940,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20922,
											"end": 20940,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20922,
											"end": 20940,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20922,
											"end": 20940,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20866,
											"end": 20873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20866,
											"end": 20873,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 21020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 20906,
											"end": 21020,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20989,
											"end": 21005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20989,
											"end": 21005,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 20907,
											"end": 20965,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20946,
											"end": 20964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 20907,
											"end": 20941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D290004395EB7BBFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10264,
											"end": 10318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 20907,
											"end": 20941,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20907,
											"end": 20941,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 20907,
											"end": 20941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 20907,
											"end": 20965,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20907,
											"end": 20965,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 20907,
											"end": 20965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 20906,
											"end": 21020,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20906,
											"end": 21020,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 20906,
											"end": 21020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20886,
											"end": 21020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20886,
											"end": 21020,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20813,
											"end": 21028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20813,
											"end": 21028,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9435,
											"end": 9461,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 9435,
											"end": 9461,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9435,
											"end": 9461,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 9435,
											"end": 9461,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9435,
											"end": 9461,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9435,
											"end": 9461,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19428,
											"end": 19542,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 19428,
											"end": 19542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 7853,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19500,
											"end": 19527,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19500,
											"end": 19534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19500,
											"end": 19534,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19500,
											"end": 19534,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19500,
											"end": 19534,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 19500,
											"end": 19534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19500,
											"end": 19534,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19428,
											"end": 19542,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13066,
											"end": 13206,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 13066,
											"end": 13206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 7853,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13129,
											"end": 13141,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13129,
											"end": 13165,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13129,
											"end": 13165,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13129,
											"end": 13165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13129,
											"end": 13165,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13129,
											"end": 13165,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13129,
											"end": 13165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13129,
											"end": 13165,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13129,
											"end": 13165,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13129,
											"end": 13165,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13129,
											"end": 13165,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 13129,
											"end": 13165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13129,
											"end": 13165,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13129,
											"end": 13141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13176,
											"end": 13198,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13176,
											"end": 13188,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13176,
											"end": 13198,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13176,
											"end": 13198,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13066,
											"end": 13206,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21315,
											"end": 21412,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 21315,
											"end": 21412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 7853,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21382,
											"end": 21404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 21396,
											"end": 21403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21382,
											"end": 21395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 21382,
											"end": 21404,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21382,
											"end": 21404,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 21382,
											"end": 21404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21315,
											"end": 21412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21315,
											"end": 21412,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5631,
											"end": 5714,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 5631,
											"end": 5714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5697,
											"end": 5706,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5697,
											"end": 5706,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5697,
											"end": 5706,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5697,
											"end": 5706,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5631,
											"end": 5714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5631,
											"end": 5714,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23099,
											"end": 23312,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 23099,
											"end": 23312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23211,
											"end": 23223,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 7853,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23285,
											"end": 23295,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23248,
											"end": 23284,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23284,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23284,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23284,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 23248,
											"end": 23284,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 23248,
											"end": 23284,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23304,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 23099,
											"end": 23312,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23099,
											"end": 23312,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8891,
											"end": 8918,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8891,
											"end": 8918,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18699,
											"end": 18703,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18699,
											"end": 18703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8891,
											"end": 8918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8891,
											"end": 8918,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8891,
											"end": 8918,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8891,
											"end": 8918,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8891,
											"end": 8918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8891,
											"end": 8948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 8891,
											"end": 8948,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8891,
											"end": 8948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8939,
											"end": 8948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 8939,
											"end": 8946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 8939,
											"end": 8948,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8939,
											"end": 8948,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 8939,
											"end": 8948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8891,
											"end": 8994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8891,
											"end": 8994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 8891,
											"end": 8994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8983,
											"end": 8993,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8982,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8891,
											"end": 8994,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 8891,
											"end": 8994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8869,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 8869,
											"end": 9005,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8869,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8869,
											"end": 9005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8869,
											"end": 9005,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8869,
											"end": 9005,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 8869,
											"end": 9005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18780,
											"end": 18790,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 18762,
											"end": 18791,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18762,
											"end": 18791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18762,
											"end": 18791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18762,
											"end": 18791,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18762,
											"end": 18779,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 18762,
											"end": 18791,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18762,
											"end": 18791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18762,
											"end": 18791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18762,
											"end": 18791,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18762,
											"end": 18791,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18762,
											"end": 18791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18762,
											"end": 18791,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18762,
											"end": 18791,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18762,
											"end": 18824,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 18762,
											"end": 18824,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18762,
											"end": 18824,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18762,
											"end": 18824,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18762,
											"end": 18824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18762,
											"end": 18824,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18762,
											"end": 18824,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18762,
											"end": 18824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18762,
											"end": 18824,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18762,
											"end": 18824,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18762,
											"end": 18840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 18762,
											"end": 18840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18829,
											"end": 18839,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18762,
											"end": 18828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 18762,
											"end": 18840,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18762,
											"end": 18840,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 18762,
											"end": 18840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18739,
											"end": 18749,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 18721,
											"end": 18750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18721,
											"end": 18750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18721,
											"end": 18750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18721,
											"end": 18750,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18721,
											"end": 18738,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 18721,
											"end": 18750,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18721,
											"end": 18750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18721,
											"end": 18750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18721,
											"end": 18750,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18721,
											"end": 18750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18721,
											"end": 18750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18721,
											"end": 18750,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18721,
											"end": 18750,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18721,
											"end": 18759,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 18721,
											"end": 18759,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18721,
											"end": 18759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18721,
											"end": 18759,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18721,
											"end": 18759,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18721,
											"end": 18759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18721,
											"end": 18759,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18721,
											"end": 18759,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18721,
											"end": 18759,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18721,
											"end": 18759,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18721,
											"end": 18759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18721,
											"end": 18759,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18721,
											"end": 18840,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18721,
											"end": 18840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18721,
											"end": 18840,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18856,
											"end": 18975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18856,
											"end": 18975,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18856,
											"end": 18975,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 18856,
											"end": 18975,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18856,
											"end": 18975,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18856,
											"end": 18975,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18721,
											"end": 18759,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18721,
											"end": 18759,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18856,
											"end": 18975,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 18856,
											"end": 18975,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18856,
											"end": 18975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18856,
											"end": 18975,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18856,
											"end": 18975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18856,
											"end": 18975,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18856,
											"end": 18975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18856,
											"end": 18975,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18856,
											"end": 18975,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18856,
											"end": 18975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18856,
											"end": 18975,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18993,
											"end": 18997,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18566,
											"end": 19005,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19936,
											"end": 20331,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 19936,
											"end": 20331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4501,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 4510,
											"end": 4520,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4501,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 4501,
											"end": 4521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4501,
											"end": 4521,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 4501,
											"end": 4521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 4493,
											"end": 4574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4493,
											"end": 4574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4493,
											"end": 4574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4493,
											"end": 4574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4574,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4493,
											"end": 4574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4574,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4574,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4574,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4574,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4493,
											"end": 4574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4574,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4493,
											"end": 4574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4574,
											"name": "PUSH data",
											"source": 0,
											"value": "79ECB50133735B20228DEA9D08FE36A462BBC1350F591A146908848DB91104CD"
										},
										{
											"begin": 4493,
											"end": 4574,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4493,
											"end": 4574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4574,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4493,
											"end": 4574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4493,
											"end": 4574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4574,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4574,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4574,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 4493,
											"end": 4574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20031,
											"end": 20043,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 20031,
											"end": 20043,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20031,
											"end": 20064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 20031,
											"end": 20064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20056,
											"end": 20062,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20031,
											"end": 20047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 20031,
											"end": 20064,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20031,
											"end": 20064,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 20031,
											"end": 20064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20016,
											"end": 20028,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 20016,
											"end": 20064,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20016,
											"end": 20064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20016,
											"end": 20064,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 20077,
											"end": 20160,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20077,
											"end": 20160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 20077,
											"end": 20160,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20123,
											"end": 20135,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 20123,
											"end": 20148,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20077,
											"end": 20160,
											"name": "tag",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 20077,
											"end": 20160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20206,
											"end": 20218,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 20206,
											"end": 20218,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20191,
											"end": 20219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 20191,
											"end": 20219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9291,
											"end": 9315,
											"name": "PUSH",
											"source": 0,
											"value": "CECB8F27F4200F3A0000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10279,
											"end": 10317,
											"name": "tag",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 10279,
											"end": 10317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10279,
											"end": 10317,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 10264,
											"end": 10318,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10264,
											"end": 10318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20191,
											"end": 20205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 20191,
											"end": 20219,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20191,
											"end": 20219,
											"name": "tag",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 20191,
											"end": 20219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20172,
											"end": 20188,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 20172,
											"end": 20219,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20242,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20230,
											"end": 20242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20242,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "93517"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20230,
											"end": 20242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20242,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20242,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20242,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20247,
											"name": "PUSH",
											"source": 0,
											"value": "FFF6CAE9"
										},
										{
											"begin": 20230,
											"end": 20247,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20242,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20230,
											"end": 20242,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20242,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20242,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "tag",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 20230,
											"end": 20249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20288,
											"end": 20311,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20288,
											"end": 20311,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20288,
											"end": 20311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20288,
											"end": 20311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20288,
											"end": 20311,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20288,
											"end": 20311,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20288,
											"end": 20300,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 20288,
											"end": 20311,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20288,
											"end": 20311,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20288,
											"end": 20311,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20288,
											"end": 20311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20288,
											"end": 20311,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20288,
											"end": 20311,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20288,
											"end": 20323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 20288,
											"end": 20323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20316,
											"end": 20322,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20288,
											"end": 20315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 20288,
											"end": 20323,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20288,
											"end": 20323,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 20288,
											"end": 20323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20262,
											"end": 20285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20262,
											"end": 20285,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20262,
											"end": 20285,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20262,
											"end": 20285,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20262,
											"end": 20285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20262,
											"end": 20285,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20262,
											"end": 20285,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20262,
											"end": 20274,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 20262,
											"end": 20285,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20262,
											"end": 20285,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20262,
											"end": 20285,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20262,
											"end": 20285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20262,
											"end": 20285,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20262,
											"end": 20323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20262,
											"end": 20323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20262,
											"end": 20323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20262,
											"end": 20323,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19936,
											"end": 20331,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8644,
											"end": 8675,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 8644,
											"end": 8675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8644,
											"end": 8675,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8644,
											"end": 8675,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8644,
											"end": 8675,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8644,
											"end": 8675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8644,
											"end": 8675,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9362,
											"end": 9389,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 9362,
											"end": 9389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9362,
											"end": 9389,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9362,
											"end": 9389,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9362,
											"end": 9389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9362,
											"end": 9389,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22852,
											"end": 23091,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 22852,
											"end": 23091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 7853,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "tag",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23000,
											"end": 23083,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23000,
											"end": 23083,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22968,
											"end": 22989,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 22968,
											"end": 22989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23000,
											"end": 23021,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23000,
											"end": 23021,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23000,
											"end": 23021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23069,
											"end": 23072,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 23037,
											"end": 23065,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23037,
											"end": 23065,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23037,
											"end": 23065,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23036,
											"end": 23072,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23000,
											"end": 23083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23000,
											"end": 23083,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23000,
											"end": 23083,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 23000,
											"end": 23083,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23000,
											"end": 23083,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23000,
											"end": 23083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23000,
											"end": 23083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23000,
											"end": 23083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23000,
											"end": 23083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23036,
											"end": 23072,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23000,
											"end": 23021,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 23000,
											"end": 23083,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 23000,
											"end": 23083,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 23000,
											"end": 23083,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 23000,
											"end": 23083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23000,
											"end": 23083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23000,
											"end": 23083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23000,
											"end": 23083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23000,
											"end": 23083,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23000,
											"end": 23083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23000,
											"end": 23083,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23000,
											"end": 23083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 23000,
											"end": 23083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23000,
											"end": 23083,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23000,
											"end": 23083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23000,
											"end": 23083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23000,
											"end": 23083,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 23000,
											"end": 23083,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23000,
											"end": 23083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23000,
											"end": 23083,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23000,
											"end": 23083,
											"name": "tag",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 23000,
											"end": 23083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23000,
											"end": 23083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7874,
											"end": 7875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22852,
											"end": 23091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22852,
											"end": 23091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22852,
											"end": 23091,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21778,
											"end": 21904,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 21778,
											"end": 21904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21838,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21858,
											"end": 21896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 21879,
											"end": 21895,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 21879,
											"end": 21895,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21858,
											"end": 21874,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 21858,
											"end": 21874,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21858,
											"end": 21878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 21858,
											"end": 21878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21858,
											"end": 21896,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21858,
											"end": 21896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21858,
											"end": 21896,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21858,
											"end": 21896,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21858,
											"end": 21896,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9998,
											"end": 10028,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 9998,
											"end": 10028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 10028,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 9998,
											"end": 10028,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9998,
											"end": 10028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 10028,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 10028,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 9998,
											"end": 10028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 10028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 10028,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13416,
											"end": 13554,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 13416,
											"end": 13554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13529,
											"end": 13545,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 13529,
											"end": 13545,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13507,
											"end": 13524,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13507,
											"end": 13524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13480,
											"end": 13487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13507,
											"end": 13524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13507,
											"end": 13524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13507,
											"end": 13524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13507,
											"end": 13519,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 13507,
											"end": 13524,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13507,
											"end": 13524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13507,
											"end": 13524,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13507,
											"end": 13524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13507,
											"end": 13524,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13507,
											"end": 13524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13480,
											"end": 13487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13480,
											"end": 13487,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13507,
											"end": 13546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 13507,
											"end": 13546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13507,
											"end": 13524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13507,
											"end": 13528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 13507,
											"end": 13546,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7991,
											"end": 8117,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 7991,
											"end": 8117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 7853,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "tag",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "tag",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8078,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8072,
											"end": 8078,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8053,
											"end": 8079,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8053,
											"end": 8079,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8078,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8072,
											"end": 8078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8078,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8078,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8072,
											"end": 8078,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8053,
											"end": 8079,
											"name": "PUSH",
											"source": 0,
											"value": "F8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820"
										},
										{
											"begin": 8053,
											"end": 8079,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8053,
											"end": 8079,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8053,
											"end": 8079,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8053,
											"end": 8079,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 8090,
											"end": 8096,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8090,
											"end": 8109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8090,
											"end": 8109,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8090,
											"end": 8109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8090,
											"end": 8109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8090,
											"end": 8109,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7991,
											"end": 8117,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19662,
											"end": 19763,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 19662,
											"end": 19763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 7853,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "tag",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "tag",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19729,
											"end": 19748,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19729,
											"end": 19748,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19729,
											"end": 19748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19729,
											"end": 19748,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19729,
											"end": 19748,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19729,
											"end": 19741,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 19729,
											"end": 19748,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19729,
											"end": 19748,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19729,
											"end": 19748,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19729,
											"end": 19748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19729,
											"end": 19748,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19729,
											"end": 19755,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19729,
											"end": 19755,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19729,
											"end": 19755,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19751,
											"end": 19755,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19729,
											"end": 19755,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 19729,
											"end": 19755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19729,
											"end": 19755,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19662,
											"end": 19763,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21912,
											"end": 21986,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 21912,
											"end": 21986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21966,
											"end": 21970,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 21966,
											"end": 21970,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21966,
											"end": 21970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21966,
											"end": 21970,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21966,
											"end": 21970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21966,
											"end": 21970,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 21966,
											"end": 21970,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 21966,
											"end": 21970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21966,
											"end": 21970,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21966,
											"end": 21970,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21954,
											"end": 21976,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21954,
											"end": 21976,
											"name": "PUSH",
											"source": 0,
											"value": "FFF6CAE9"
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "tag",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21954,
											"end": 21978,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11933,
											"end": 12692,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 11933,
											"end": 12692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 7853,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "tag",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "tag",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12073,
											"end": 12079,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 12073,
											"end": 12079,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12073,
											"end": 12079,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 12073,
											"end": 12079,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12072,
											"end": 12079,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2A393C9030B3B0B4B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "tag",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 12064,
											"end": 12093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12108,
											"end": 12124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12104,
											"end": 12222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 12104,
											"end": 12222,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12163,
											"end": 12175,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 12163,
											"end": 12175,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12146,
											"end": 12176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12146,
											"end": 12176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12146,
											"end": 12176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12146,
											"end": 12176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12146,
											"end": 12176,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12146,
											"end": 12176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12146,
											"end": 12176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12156,
											"end": 12161,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12156,
											"end": 12161,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12146,
											"end": 12176,
											"name": "PUSH",
											"source": 0,
											"value": "72725A3B1E5BD622D6BCD1339BB31279C351ABE8F541AC7FD320F24E1B1641F2"
										},
										{
											"begin": 12146,
											"end": 12176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12146,
											"end": 12176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12146,
											"end": 12176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12146,
											"end": 12176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12146,
											"end": 12176,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12146,
											"end": 12176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12146,
											"end": 12176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12146,
											"end": 12176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12146,
											"end": 12176,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12198,
											"end": 12210,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 12198,
											"end": 12210,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12191,
											"end": 12210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 12191,
											"end": 12210,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12104,
											"end": 12222,
											"name": "tag",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 12104,
											"end": 12222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12252,
											"end": 12253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12238,
											"end": 12249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12253,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 12234,
											"end": 12422,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12234,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 12234,
											"end": 12422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12285,
											"end": 12297,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 12285,
											"end": 12297,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12285,
											"end": 12324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 12285,
											"end": 12324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12310,
											"end": 12322,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12310,
											"end": 12322,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12310,
											"end": 12322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12310,
											"end": 12322,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12285,
											"end": 12301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 12285,
											"end": 12324,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12285,
											"end": 12324,
											"name": "tag",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 12285,
											"end": 12324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12270,
											"end": 12282,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 12270,
											"end": 12324,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12234,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 12234,
											"end": 12422,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12234,
											"end": 12422,
											"name": "tag",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 12234,
											"end": 12422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12372,
											"end": 12384,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 12372,
											"end": 12384,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12372,
											"end": 12410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 12372,
											"end": 12410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12397,
											"end": 12408,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12372,
											"end": 12388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 12372,
											"end": 12410,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12372,
											"end": 12410,
											"name": "tag",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 12372,
											"end": 12410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12357,
											"end": 12369,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 12357,
											"end": 12410,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12234,
											"end": 12422,
											"name": "tag",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 12234,
											"end": 12422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12438,
											"end": 12450,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 12438,
											"end": 12450,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 12434,
											"end": 12517,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12434,
											"end": 12517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 12434,
											"end": 12517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 12480,
											"end": 12505,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12434,
											"end": 12517,
											"name": "tag",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 12434,
											"end": 12517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12563,
											"end": 12575,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 12563,
											"end": 12575,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12548,
											"end": 12576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 12548,
											"end": 12576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9291,
											"end": 9315,
											"name": "PUSH",
											"source": 0,
											"value": "CECB8F27F4200F3A0000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10279,
											"end": 10317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 10279,
											"end": 10317,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12548,
											"end": 12576,
											"name": "tag",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 12548,
											"end": 12576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12529,
											"end": 12545,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 12529,
											"end": 12576,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12599,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12587,
											"end": 12599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12599,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "93517"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12587,
											"end": 12599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12599,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12599,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12604,
											"name": "PUSH",
											"source": 0,
											"value": "FFF6CAE9"
										},
										{
											"begin": 12587,
											"end": 12604,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12587,
											"end": 12599,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12599,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12599,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "tag",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "tag",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12641,
											"end": 12653,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 12641,
											"end": 12653,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12624,
											"end": 12654,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12624,
											"end": 12654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12624,
											"end": 12654,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12624,
											"end": 12654,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12624,
											"end": 12654,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12624,
											"end": 12654,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12624,
											"end": 12654,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12634,
											"end": 12639,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12634,
											"end": 12639,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12624,
											"end": 12654,
											"name": "PUSH",
											"source": 0,
											"value": "72725A3B1E5BD622D6BCD1339BB31279C351ABE8F541AC7FD320F24E1B1641F2"
										},
										{
											"begin": 12624,
											"end": 12654,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12624,
											"end": 12654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12624,
											"end": 12654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12624,
											"end": 12654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12624,
											"end": 12654,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12624,
											"end": 12654,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12624,
											"end": 12654,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12624,
											"end": 12654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12624,
											"end": 12654,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12672,
											"end": 12684,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 12672,
											"end": 12684,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11933,
											"end": 12692,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11933,
											"end": 12692,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11933,
											"end": 12692,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11933,
											"end": 12692,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11933,
											"end": 12692,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9772,
											"end": 9803,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 9772,
											"end": 9803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9772,
											"end": 9803,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 9772,
											"end": 9803,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9772,
											"end": 9803,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9772,
											"end": 9803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9772,
											"end": 9803,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21420,
											"end": 21505,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 21420,
											"end": 21505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21491,
											"end": 21497,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 21491,
											"end": 21497,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21491,
											"end": 21497,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 21491,
											"end": 21497,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21490,
											"end": 21497,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21420,
											"end": 21505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21420,
											"end": 21505,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7791,
											"end": 7797,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7791,
											"end": 7797,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7791,
											"end": 7797,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7791,
											"end": 7797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7791,
											"end": 7797,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7791,
											"end": 7797,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7791,
											"end": 7797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7969,
											"end": 7975,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7969,
											"end": 7975,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7969,
											"end": 7975,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7969,
											"end": 7975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7969,
											"end": 7975,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7969,
											"end": 7975,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7955,
											"end": 7965,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7955,
											"end": 7975,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7955,
											"end": 7975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11814,
											"end": 11925,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 11814,
											"end": 11925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 7853,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "tag",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "tag",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11893,
											"end": 11909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11893,
											"end": 11909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11893,
											"end": 11909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11893,
											"end": 11909,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11893,
											"end": 11909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11893,
											"end": 11909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11893,
											"end": 11909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11893,
											"end": 11909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11893,
											"end": 11902,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 11893,
											"end": 11909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11893,
											"end": 11909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11893,
											"end": 11909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11893,
											"end": 11909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11893,
											"end": 11909,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11893,
											"end": 11917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11893,
											"end": 11917,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11893,
											"end": 11917,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11893,
											"end": 11917,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11893,
											"end": 11917,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11893,
											"end": 11917,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11893,
											"end": 11917,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11893,
											"end": 11917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11893,
											"end": 11917,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11893,
											"end": 11917,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 11893,
											"end": 11917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11893,
											"end": 11917,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11814,
											"end": 11925,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5536,
											"end": 5623,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 5536,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5608,
											"end": 5615,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5575,
											"end": 5588,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5575,
											"end": 5588,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5608,
											"end": 5615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5608,
											"end": 5615,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5608,
											"end": 5615,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 5601,
											"end": 5615,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9355,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 9324,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9355,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 9324,
											"end": 9355,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9355,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21216,
											"end": 21307,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 21216,
											"end": 21307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 7853,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "tag",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "tag",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21280,
											"end": 21299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 21291,
											"end": 21298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21280,
											"end": 21290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 21280,
											"end": 21299,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4719,
											"end": 4796,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 4719,
											"end": 4796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 4777,
											"end": 4787,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 4763,
											"end": 4788,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4763,
											"end": 4788,
											"name": "tag",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 4763,
											"end": 4788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4796,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17929,
											"end": 18558,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 17929,
											"end": 18558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8891,
											"end": 8918,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8891,
											"end": 8918,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18067,
											"end": 18071,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18067,
											"end": 18071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8891,
											"end": 8918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8891,
											"end": 8918,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8891,
											"end": 8918,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8891,
											"end": 8918,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8891,
											"end": 8918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8891,
											"end": 8948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 8891,
											"end": 8948,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8891,
											"end": 8948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8939,
											"end": 8948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 8939,
											"end": 8946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 8939,
											"end": 8948,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8939,
											"end": 8948,
											"name": "tag",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 8939,
											"end": 8948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8891,
											"end": 8994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8891,
											"end": 8994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 8891,
											"end": 8994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8983,
											"end": 8993,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8982,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8891,
											"end": 8994,
											"name": "tag",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 8891,
											"end": 8994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8869,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 8869,
											"end": 9005,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8869,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8869,
											"end": 9005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8869,
											"end": 9005,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8869,
											"end": 9005,
											"name": "tag",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 8869,
											"end": 9005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18126,
											"end": 18136,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 18089,
											"end": 18105,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18108,
											"end": 18137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18108,
											"end": 18137,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18108,
											"end": 18137,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18108,
											"end": 18125,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 18108,
											"end": 18137,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18108,
											"end": 18137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18108,
											"end": 18137,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18108,
											"end": 18137,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18108,
											"end": 18137,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18108,
											"end": 18137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18108,
											"end": 18137,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18108,
											"end": 18137,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18108,
											"end": 18146,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 18108,
											"end": 18146,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18108,
											"end": 18146,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18108,
											"end": 18146,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18108,
											"end": 18146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18108,
											"end": 18146,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18108,
											"end": 18146,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18108,
											"end": 18146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18108,
											"end": 18146,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18108,
											"end": 18146,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18161,
											"end": 18188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18161,
											"end": 18188,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18161,
											"end": 18188,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18157,
											"end": 18394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 18157,
											"end": 18394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18233,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 18246,
											"end": 18247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18205,
											"end": 18234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18205,
											"end": 18234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18205,
											"end": 18234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18205,
											"end": 18222,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 18205,
											"end": 18234,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18205,
											"end": 18234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18205,
											"end": 18234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18205,
											"end": 18234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18205,
											"end": 18234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18205,
											"end": 18234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18205,
											"end": 18234,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18205,
											"end": 18234,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18205,
											"end": 18243,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 18205,
											"end": 18243,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18205,
											"end": 18243,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18205,
											"end": 18243,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18205,
											"end": 18243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18205,
											"end": 18243,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18205,
											"end": 18243,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18205,
											"end": 18243,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18205,
											"end": 18243,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18205,
											"end": 18247,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18157,
											"end": 18394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 18157,
											"end": 18394,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18157,
											"end": 18394,
											"name": "tag",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 18157,
											"end": 18394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18321,
											"end": 18382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 18321,
											"end": 18329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18352,
											"end": 18367,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18321,
											"end": 18333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 18321,
											"end": 18382,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18321,
											"end": 18382,
											"name": "tag",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 18321,
											"end": 18382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18298,
											"end": 18308,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18280,
											"end": 18309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18309,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18297,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 18280,
											"end": 18309,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18280,
											"end": 18309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18309,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18309,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18280,
											"end": 18309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18309,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18309,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18280,
											"end": 18318,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18318,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18318,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18318,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18318,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18382,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18157,
											"end": 18394,
											"name": "tag",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 18157,
											"end": 18394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18432,
											"end": 18442,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 18479,
											"end": 18508,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18479,
											"end": 18508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18479,
											"end": 18508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18479,
											"end": 18508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18479,
											"end": 18496,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 18479,
											"end": 18508,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18479,
											"end": 18508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18479,
											"end": 18508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18479,
											"end": 18508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18479,
											"end": 18508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18479,
											"end": 18508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18479,
											"end": 18508,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18479,
											"end": 18508,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18409,
											"end": 18528,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18528,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18479,
											"end": 18517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18479,
											"end": 18517,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18479,
											"end": 18517,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18479,
											"end": 18517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18479,
											"end": 18517,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18479,
											"end": 18517,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18479,
											"end": 18517,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18479,
											"end": 18517,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18479,
											"end": 18517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18479,
											"end": 18517,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18479,
											"end": 18517,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18528,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18528,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18432,
											"end": 18442,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18528,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 18409,
											"end": 18528,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18528,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18528,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18528,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18528,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18546,
											"end": 18550,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18546,
											"end": 18550,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17929,
											"end": 18558,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17929,
											"end": 18558,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9970,
											"end": 9989,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 9970,
											"end": 9989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9970,
											"end": 9989,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 9970,
											"end": 9989,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9970,
											"end": 9989,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9970,
											"end": 9989,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9970,
											"end": 9989,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12810,
											"end": 13058,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 12810,
											"end": 13058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12970,
											"end": 12974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12915,
											"end": 12917,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9088,
											"end": 9106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9088,
											"end": 9106,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9080,
											"end": 9107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 9080,
											"end": 9107,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9080,
											"end": 9107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9080,
											"end": 9107,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9080,
											"end": 9107,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9080,
											"end": 9107,
											"name": "tag",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 9080,
											"end": 9107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8891,
											"end": 8918,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8891,
											"end": 8918,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8891,
											"end": 8918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8891,
											"end": 8918,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8891,
											"end": 8918,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8891,
											"end": 8918,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8891,
											"end": 8918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8891,
											"end": 8948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 8891,
											"end": 8948,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8891,
											"end": 8948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8939,
											"end": 8948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 8939,
											"end": 8946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 8939,
											"end": 8948,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8939,
											"end": 8948,
											"name": "tag",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 8939,
											"end": 8948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8891,
											"end": 8994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8891,
											"end": 8994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 8891,
											"end": 8994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8983,
											"end": 8993,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8982,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8969,
											"end": 8994,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8891,
											"end": 8994,
											"name": "tag",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 8891,
											"end": 8994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8869,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 8869,
											"end": 9005,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8869,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8869,
											"end": 9005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8869,
											"end": 9005,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8869,
											"end": 9005,
											"name": "tag",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 8869,
											"end": 9005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12992,
											"end": 13028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 13006,
											"end": 13016,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13018,
											"end": 13020,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13022,
											"end": 13027,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12992,
											"end": 13005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 12992,
											"end": 13028,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12992,
											"end": 13028,
											"name": "tag",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 12992,
											"end": 13028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13046,
											"end": 13050,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13046,
											"end": 13050,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12810,
											"end": 13058,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12810,
											"end": 13058,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4658,
											"end": 4662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4682,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 4682,
											"end": 4690,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4695,
											"end": 4702,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4682,
											"end": 4694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 4682,
											"end": 4703,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9396,
											"end": 9428,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9729,
											"end": 9765,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 9729,
											"end": 9765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9729,
											"end": 9765,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 9729,
											"end": 9765,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9729,
											"end": 9765,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9729,
											"end": 9765,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9729,
											"end": 9765,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 7853,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "tag",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "tag",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20477,
											"end": 20488,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 20477,
											"end": 20499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20477,
											"end": 20499,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 20477,
											"end": 20499,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20477,
											"end": 20499,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20477,
											"end": 20499,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20477,
											"end": 20499,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20477,
											"end": 20499,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 20477,
											"end": 20499,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 20477,
											"end": 20499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20477,
											"end": 20499,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20529,
											"end": 20561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 20556,
											"end": 20560,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20529,
											"end": 20551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 20544,
											"end": 20550,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9291,
											"end": 9315,
											"name": "PUSH",
											"source": 0,
											"value": "CECB8F27F4200F3A0000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10279,
											"end": 10317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 10279,
											"end": 10317,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20529,
											"end": 20551,
											"name": "tag",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 20529,
											"end": 20551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20529,
											"end": 20555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20529,
											"end": 20555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 20529,
											"end": 20561,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20529,
											"end": 20561,
											"name": "tag",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 20529,
											"end": 20561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20510,
											"end": 20526,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 20510,
											"end": 20561,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20339,
											"end": 20569,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8684,
											"end": 8723,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 8684,
											"end": 8723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8684,
											"end": 8723,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8684,
											"end": 8723,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8684,
											"end": 8723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8684,
											"end": 8723,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8684,
											"end": 8723,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8684,
											"end": 8723,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8684,
											"end": 8723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8684,
											"end": 8723,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 21513,
											"end": 21770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "453"
										},
										{
											"begin": 7853,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "tag",
											"source": 0,
											"value": "453"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "tag",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21648,
											"end": 21657,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21643,
											"end": 21763,
											"name": "tag",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 21643,
											"end": 21763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21663,
											"end": 21684,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21663,
											"end": 21684,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21663,
											"end": 21684,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21643,
											"end": 21763,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21643,
											"end": 21763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 21643,
											"end": 21763,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21702,
											"end": 21753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 21716,
											"end": 21726,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 21728,
											"end": 21738,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 21728,
											"end": 21738,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 21739,
											"end": 21740,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21728,
											"end": 21741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21728,
											"end": 21741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21728,
											"end": 21741,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21728,
											"end": 21741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 21728,
											"end": 21741,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21728,
											"end": 21741,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 21728,
											"end": 21741,
											"name": "tag",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 21728,
											"end": 21741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21728,
											"end": 21741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21728,
											"end": 21741,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21728,
											"end": 21741,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21728,
											"end": 21741,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21728,
											"end": 21741,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21728,
											"end": 21741,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21728,
											"end": 21741,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21743,
											"end": 21749,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21743,
											"end": 21749,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21750,
											"end": 21751,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21743,
											"end": 21752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21743,
											"end": 21752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21743,
											"end": 21752,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21743,
											"end": 21752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 21743,
											"end": 21752,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21743,
											"end": 21752,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 21743,
											"end": 21752,
											"name": "tag",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 21743,
											"end": 21752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21743,
											"end": 21752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21743,
											"end": 21752,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21743,
											"end": 21752,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21743,
											"end": 21752,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21743,
											"end": 21752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21743,
											"end": 21752,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 21702,
											"end": 21715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 21702,
											"end": 21753,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21702,
											"end": 21753,
											"name": "tag",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 21702,
											"end": 21753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21686,
											"end": 21689,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21686,
											"end": 21689,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21643,
											"end": 21763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 21643,
											"end": 21763,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19307,
											"end": 19420,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 19307,
											"end": 19420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19393,
											"end": 19412,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19373,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19393,
											"end": 19412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19393,
											"end": 19412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19393,
											"end": 19412,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19393,
											"end": 19405,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 19393,
											"end": 19412,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19393,
											"end": 19412,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19393,
											"end": 19412,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19393,
											"end": 19412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19393,
											"end": 19412,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19393,
											"end": 19412,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19393,
											"end": 19412,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 19393,
											"end": 19412,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19393,
											"end": 19412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19307,
											"end": 19420,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23468,
											"end": 23759,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 23468,
											"end": 23759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23654,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 23638,
											"end": 23654,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23628,
											"end": 23632,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 23628,
											"end": 23632,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23628,
											"end": 23632,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23563,
											"end": 23570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23615,
											"end": 23633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23615,
											"end": 23633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23615,
											"end": 23633,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23615,
											"end": 23627,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 23615,
											"end": 23633,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23615,
											"end": 23633,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23615,
											"end": 23633,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23615,
											"end": 23633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23615,
											"end": 23633,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23615,
											"end": 23633,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23563,
											"end": 23570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23563,
											"end": 23570,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23563,
											"end": 23570,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23563,
											"end": 23570,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23615,
											"end": 23655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 23615,
											"end": 23655,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23615,
											"end": 23637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 23615,
											"end": 23655,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23615,
											"end": 23655,
											"name": "tag",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 23615,
											"end": 23655,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23588,
											"end": 23655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23588,
											"end": 23655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23686,
											"end": 23751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 23728,
											"end": 23750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 23728,
											"end": 23748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 23728,
											"end": 23750,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23728,
											"end": 23750,
											"name": "tag",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 23728,
											"end": 23750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23686,
											"end": 23723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 23699,
											"end": 23722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 23699,
											"end": 23715,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23720,
											"end": 23721,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23699,
											"end": 23719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 23699,
											"end": 23722,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23699,
											"end": 23722,
											"name": "tag",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 23699,
											"end": 23722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23686,
											"end": 23694,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 23686,
											"end": 23694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23686,
											"end": 23698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 23686,
											"end": 23723,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23686,
											"end": 23751,
											"name": "tag",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 23686,
											"end": 23751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23666,
											"end": 23751,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 23468,
											"end": 23759,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23468,
											"end": 23759,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19550,
											"end": 19654,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 19550,
											"end": 19654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 7853,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "tag",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "tag",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19619,
											"end": 19639,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19619,
											"end": 19639,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19619,
											"end": 19639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19619,
											"end": 19639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19619,
											"end": 19639,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19619,
											"end": 19632,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 19619,
											"end": 19639,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19619,
											"end": 19639,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19619,
											"end": 19639,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19619,
											"end": 19639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19619,
											"end": 19639,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19619,
											"end": 19646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19619,
											"end": 19646,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19619,
											"end": 19646,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19642,
											"end": 19646,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19619,
											"end": 19646,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 19619,
											"end": 19646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19619,
											"end": 19646,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19550,
											"end": 19654,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9810,
											"end": 9846,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 9810,
											"end": 9846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9810,
											"end": 9846,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 9810,
											"end": 9846,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9810,
											"end": 9846,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9810,
											"end": 9846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9810,
											"end": 9846,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 7853,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "tag",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "tag",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22174,
											"end": 22195,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 22174,
											"end": 22220,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22174,
											"end": 22220,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22174,
											"end": 22220,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 22174,
											"end": 22220,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 22174,
											"end": 22220,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 22174,
											"end": 22220,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22174,
											"end": 22220,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22174,
											"end": 22220,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22174,
											"end": 22220,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 22174,
											"end": 22220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22174,
											"end": 22220,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22174,
											"end": 22220,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22231,
											"end": 22247,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 22231,
											"end": 22267,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22231,
											"end": 22267,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22231,
											"end": 22267,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 22231,
											"end": 22267,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 22231,
											"end": 22267,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22231,
											"end": 22267,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 22231,
											"end": 22267,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22231,
											"end": 22267,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22231,
											"end": 22267,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 22231,
											"end": 22267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22231,
											"end": 22267,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 22231,
											"end": 22267,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 22231,
											"end": 22267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22231,
											"end": 22267,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22231,
											"end": 22267,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22278,
											"end": 22299,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 22278,
											"end": 22324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22278,
											"end": 22324,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22278,
											"end": 22324,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22278,
											"end": 22324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22278,
											"end": 22324,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 22278,
											"end": 22324,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22278,
											"end": 22324,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22278,
											"end": 22324,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22278,
											"end": 22324,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 22278,
											"end": 22324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22278,
											"end": 22324,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 22332,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13214,
											"end": 13408,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 13214,
											"end": 13408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13366,
											"end": 13391,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13366,
											"end": 13391,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13366,
											"end": 13391,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13334,
											"end": 13341,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13366,
											"end": 13391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13366,
											"end": 13391,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13366,
											"end": 13391,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13366,
											"end": 13383,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 13366,
											"end": 13391,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13366,
											"end": 13391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13366,
											"end": 13391,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13366,
											"end": 13391,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13366,
											"end": 13391,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13366,
											"end": 13391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13366,
											"end": 13391,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13366,
											"end": 13391,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13366,
											"end": 13400,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13366,
											"end": 13400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13366,
											"end": 13400,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13366,
											"end": 13400,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13366,
											"end": 13400,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13366,
											"end": 13400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13366,
											"end": 13400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13366,
											"end": 13400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13366,
											"end": 13400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13366,
											"end": 13400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13366,
											"end": 13400,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13366,
											"end": 13400,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13366,
											"end": 13400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13214,
											"end": 13408,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 7853,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "tag",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "tag",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8198,
											"end": 8226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 8217,
											"end": 8225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8198,
											"end": 8216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 8198,
											"end": 8226,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9939,
											"end": 9963,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 9939,
											"end": 9963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9939,
											"end": 9963,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 9939,
											"end": 9963,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9939,
											"end": 9963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9939,
											"end": 9963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9939,
											"end": 9963,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10637,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1900,
											"end": 2081,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 1900,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1958,
											"end": 1965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 1995,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 1995,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 1995,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2014,
											"end": 2020,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2014,
											"end": 2020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2014,
											"end": 2020,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2014,
											"end": 2020,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 2006,
											"end": 2052,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2052,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2006,
											"end": 2052,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2052,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2052,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2052,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2052,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2006,
											"end": 2052,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2006,
											"end": 2052,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2052,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2052,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2052,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 2006,
											"end": 2052,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2006,
											"end": 2052,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2052,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2052,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2052,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 2006,
											"end": 2052,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2006,
											"end": 2052,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2052,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2052,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2052,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2052,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2052,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2052,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2052,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2052,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2052,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2006,
											"end": 2052,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2052,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2052,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2725,
											"end": 2857,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 2725,
											"end": 2857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2810,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 2814,
											"end": 2815,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2818,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2810,
											"end": 2849,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2810,
											"end": 2849,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2810,
											"end": 2849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2810,
											"end": 2849,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2810,
											"end": 2849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2810,
											"end": 2849,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2810,
											"end": 2849,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2810,
											"end": 2849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2810,
											"end": 2849,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 2810,
											"end": 2849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2810,
											"end": 2849,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2810,
											"end": 2849,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2810,
											"end": 2849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2810,
											"end": 2849,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 2810,
											"end": 2849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2810,
											"end": 2849,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2810,
											"end": 2849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2810,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 2810,
											"end": 2849,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3450,
											"end": 3628,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 3450,
											"end": 3628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3528,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "490"
										},
										{
											"begin": 3532,
											"end": 3536,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3538,
											"end": 3545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 3528,
											"end": 3546,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3528,
											"end": 3546,
											"name": "tag",
											"source": 0,
											"value": "490"
										},
										{
											"begin": 3528,
											"end": 3546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3527,
											"end": 3546,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "PUSH",
											"source": 0,
											"value": "526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500"
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "tag",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3593,
											"end": 3613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3593,
											"end": 3604,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3593,
											"end": 3613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3593,
											"end": 3613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3593,
											"end": 3613,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3593,
											"end": 3613,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3593,
											"end": 3613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3593,
											"end": 3613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3593,
											"end": 3613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3593,
											"end": 3613,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3593,
											"end": 3613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3593,
											"end": 3613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3593,
											"end": 3613,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3593,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3593,
											"end": 3620,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3593,
											"end": 3620,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3616,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3593,
											"end": 3620,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3593,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3593,
											"end": 3620,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3450,
											"end": 3628,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2233,
											"end": 2459,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 2233,
											"end": 2459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2360,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2389,
											"end": 2401,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2381,
											"end": 2387,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2381,
											"end": 2387,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2381,
											"end": 2387,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2381,
											"end": 2387,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "493"
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "tag",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "tag",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "497"
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "tag",
											"source": 0,
											"value": "497"
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "tag",
											"source": 0,
											"value": "493"
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2425,
											"end": 2430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2425,
											"end": 2430,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2425,
											"end": 2430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2459,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13909,
											"end": 14844,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 13909,
											"end": 14844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14061,
											"end": 14078,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14061,
											"end": 14078,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14039,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14061,
											"end": 14078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14061,
											"end": 14078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14061,
											"end": 14078,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14061,
											"end": 14070,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 14061,
											"end": 14078,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14061,
											"end": 14078,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14061,
											"end": 14078,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14061,
											"end": 14078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14061,
											"end": 14078,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14061,
											"end": 14078,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14061,
											"end": 14078,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 14061,
											"end": 14078,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14060,
											"end": 14078,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14060,
											"end": 14103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14060,
											"end": 14103,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14060,
											"end": 14103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "499"
										},
										{
											"begin": 14060,
											"end": 14103,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14083,
											"end": 14103,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14083,
											"end": 14103,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14083,
											"end": 14103,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14083,
											"end": 14103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14083,
											"end": 14103,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14083,
											"end": 14103,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14083,
											"end": 14092,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 14083,
											"end": 14103,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14083,
											"end": 14103,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14083,
											"end": 14103,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14083,
											"end": 14103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14083,
											"end": 14103,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14083,
											"end": 14103,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14083,
											"end": 14103,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 14083,
											"end": 14103,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14082,
											"end": 14103,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14060,
											"end": 14103,
											"name": "tag",
											"source": 0,
											"value": "499"
										},
										{
											"begin": 14060,
											"end": 14103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14052,
											"end": 14120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "500"
										},
										{
											"begin": 14052,
											"end": 14120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14052,
											"end": 14120,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14052,
											"end": 14120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14052,
											"end": 14120,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14052,
											"end": 14120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14052,
											"end": 14120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14052,
											"end": 14120,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14052,
											"end": 14120,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14052,
											"end": 14120,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14052,
											"end": 14120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14052,
											"end": 14120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14052,
											"end": 14120,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 14052,
											"end": 14120,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14052,
											"end": 14120,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14052,
											"end": 14120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14052,
											"end": 14120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A5B97D89B1858DADB1A5CDD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14052,
											"end": 14120,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 14052,
											"end": 14120,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14052,
											"end": 14120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14052,
											"end": 14120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14052,
											"end": 14120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14052,
											"end": 14120,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14052,
											"end": 14120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14052,
											"end": 14120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14052,
											"end": 14120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14052,
											"end": 14120,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14052,
											"end": 14120,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 14052,
											"end": 14120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14052,
											"end": 14120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14052,
											"end": 14120,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14052,
											"end": 14120,
											"name": "tag",
											"source": 0,
											"value": "500"
										},
										{
											"begin": 14052,
											"end": 14120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14135,
											"end": 14141,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 14135,
											"end": 14141,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14135,
											"end": 14141,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 14135,
											"end": 14141,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14131,
											"end": 14218,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14131,
											"end": 14218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "501"
										},
										{
											"begin": 14131,
											"end": 14218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14165,
											"end": 14206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "502"
										},
										{
											"begin": 14180,
											"end": 14186,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14188,
											"end": 14197,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14199,
											"end": 14205,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14165,
											"end": 14179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 14165,
											"end": 14206,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14165,
											"end": 14206,
											"name": "tag",
											"source": 0,
											"value": "502"
										},
										{
											"begin": 14165,
											"end": 14206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14158,
											"end": 14206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14158,
											"end": 14206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14158,
											"end": 14206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 14158,
											"end": 14206,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14131,
											"end": 14218,
											"name": "tag",
											"source": 0,
											"value": "501"
										},
										{
											"begin": 14131,
											"end": 14218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14230,
											"end": 14247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14250,
											"end": 14278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "504"
										},
										{
											"begin": 14261,
											"end": 14277,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 14261,
											"end": 14277,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14250,
											"end": 14256,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14250,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 14250,
											"end": 14260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14250,
											"end": 14278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14250,
											"end": 14278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14250,
											"end": 14278,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14250,
											"end": 14278,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14250,
											"end": 14278,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14250,
											"end": 14278,
											"name": "tag",
											"source": 0,
											"value": "504"
										},
										{
											"begin": 14250,
											"end": 14278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14230,
											"end": 14278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14230,
											"end": 14278,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14295,
											"end": 14311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "505"
										},
										{
											"begin": 14295,
											"end": 14309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "506"
										},
										{
											"begin": 14295,
											"end": 14311,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14295,
											"end": 14311,
											"name": "tag",
											"source": 0,
											"value": "505"
										},
										{
											"begin": 14295,
											"end": 14311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14291,
											"end": 14350,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14291,
											"end": 14350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "508"
										},
										{
											"begin": 14291,
											"end": 14350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "508"
										},
										{
											"begin": 14328,
											"end": 14336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "509"
										},
										{
											"begin": 14328,
											"end": 14338,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14328,
											"end": 14338,
											"name": "tag",
											"source": 0,
											"value": "508"
										},
										{
											"begin": 14328,
											"end": 14338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14385,
											"end": 14405,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14405,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14405,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14385,
											"end": 14405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14405,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14397,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 14385,
											"end": 14405,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14385,
											"end": 14405,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14405,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14385,
											"end": 14405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14405,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14405,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "510"
										},
										{
											"begin": 14385,
											"end": 14420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14410,
											"end": 14419,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 14385,
											"end": 14420,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14385,
											"end": 14420,
											"name": "tag",
											"source": 0,
											"value": "510"
										},
										{
											"begin": 14385,
											"end": 14420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14362,
											"end": 14382,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14362,
											"end": 14382,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14362,
											"end": 14382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14362,
											"end": 14382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14362,
											"end": 14382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14362,
											"end": 14382,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14362,
											"end": 14374,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 14362,
											"end": 14382,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14362,
											"end": 14382,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14362,
											"end": 14382,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14362,
											"end": 14382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14362,
											"end": 14382,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14362,
											"end": 14420,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14362,
											"end": 14420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14362,
											"end": 14420,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14362,
											"end": 14420,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14461,
											"end": 14493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "511"
										},
										{
											"begin": 14375,
											"end": 14381,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14483,
											"end": 14492,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14461,
											"end": 14474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "512"
										},
										{
											"begin": 14461,
											"end": 14493,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14461,
											"end": 14493,
											"name": "tag",
											"source": 0,
											"value": "511"
										},
										{
											"begin": 14461,
											"end": 14493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14461,
											"end": 14571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "513"
										},
										{
											"begin": 14461,
											"end": 14571,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14562,
											"end": 14571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14461,
											"end": 14571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "515"
										},
										{
											"begin": 14461,
											"end": 14571,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14461,
											"end": 14571,
											"name": "tag",
											"source": 0,
											"value": "513"
										},
										{
											"begin": 14461,
											"end": 14571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14509,
											"end": 14546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "515"
										},
										{
											"begin": 14517,
											"end": 14523,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14525,
											"end": 14534,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14536,
											"end": 14545,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14509,
											"end": 14516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "516"
										},
										{
											"begin": 14509,
											"end": 14546,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14509,
											"end": 14546,
											"name": "tag",
											"source": 0,
											"value": "515"
										},
										{
											"begin": 14509,
											"end": 14546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14608,
											"end": 14631,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14631,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14631,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14608,
											"end": 14631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14631,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14620,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 14608,
											"end": 14631,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14608,
											"end": 14631,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14631,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14608,
											"end": 14631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14631,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14631,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14571,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14608,
											"end": 14678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "517"
										},
										{
											"begin": 14608,
											"end": 14678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14571,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 14608,
											"end": 14678,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14608,
											"end": 14678,
											"name": "tag",
											"source": 0,
											"value": "517"
										},
										{
											"begin": 14608,
											"end": 14678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14582,
											"end": 14605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14582,
											"end": 14605,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14582,
											"end": 14605,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14582,
											"end": 14605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14582,
											"end": 14605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14582,
											"end": 14605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14582,
											"end": 14605,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14582,
											"end": 14594,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 14582,
											"end": 14605,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14582,
											"end": 14605,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14582,
											"end": 14605,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14582,
											"end": 14605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14582,
											"end": 14605,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14582,
											"end": 14678,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14582,
											"end": 14678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14582,
											"end": 14678,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14582,
											"end": 14678,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14786,
											"end": 14802,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 14786,
											"end": 14802,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14696,
											"end": 14814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14696,
											"end": 14814,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 14696,
											"end": 14814,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14696,
											"end": 14814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14696,
											"end": 14814,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 14696,
											"end": 14814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14764,
											"end": 14803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 14764,
											"end": 14803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14764,
											"end": 14781,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14764,
											"end": 14781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14764,
											"end": 14785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 14764,
											"end": 14803,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14764,
											"end": 14803,
											"name": "tag",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 14764,
											"end": 14803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14696,
											"end": 14814,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14696,
											"end": 14814,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14696,
											"end": 14814,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14696,
											"end": 14814,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14696,
											"end": 14814,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14696,
											"end": 14814,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14696,
											"end": 14814,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14696,
											"end": 14814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14696,
											"end": 14814,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14696,
											"end": 14814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14696,
											"end": 14814,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14696,
											"end": 14814,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14696,
											"end": 14814,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14696,
											"end": 14814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14696,
											"end": 14814,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14832,
											"end": 14836,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14832,
											"end": 14836,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 14844,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13909,
											"end": 14844,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2089,
											"end": 2225,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 2089,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2174,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 2178,
											"end": 2179,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2182,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2174,
											"end": 2217,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2174,
											"end": 2217,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2174,
											"end": 2217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2174,
											"end": 2217,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2174,
											"end": 2217,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2174,
											"end": 2217,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2174,
											"end": 2217,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2174,
											"end": 2217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2174,
											"end": 2217,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 2174,
											"end": 2217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2174,
											"end": 2217,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2174,
											"end": 2217,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2174,
											"end": 2217,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2174,
											"end": 2217,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 2174,
											"end": 2217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2174,
											"end": 2217,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2174,
											"end": 2217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2174,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 2174,
											"end": 2217,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4934,
											"end": 5064,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 4934,
											"end": 5064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "522"
										},
										{
											"begin": 4994,
											"end": 5002,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5010,
											"end": 5017,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "523"
										},
										{
											"begin": 4994,
											"end": 5018,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4994,
											"end": 5018,
											"name": "tag",
											"source": 0,
											"value": "522"
										},
										{
											"begin": 4994,
											"end": 5018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5034,
											"end": 5056,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5034,
											"end": 5056,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5034,
											"end": 5056,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5034,
											"end": 5056,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5034,
											"end": 5056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5034,
											"end": 5056,
											"name": "PUSH",
											"source": 0,
											"value": "E94479A9F7E1952CC78F2D6BAAB678ADC1B772D936C6583DEF489E524CB66692"
										},
										{
											"begin": 5034,
											"end": 5056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5034,
											"end": 5056,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5034,
											"end": 5056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5034,
											"end": 5056,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 4934,
											"end": 5064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4934,
											"end": 5064,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4804,
											"end": 4926,
											"name": "tag",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 4804,
											"end": 4926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4861,
											"end": 4882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "525"
										},
										{
											"begin": 4861,
											"end": 4869,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4874,
											"end": 4881,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4861,
											"end": 4873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 4861,
											"end": 4882,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4861,
											"end": 4882,
											"name": "tag",
											"source": 0,
											"value": "525"
										},
										{
											"begin": 4861,
											"end": 4882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4898,
											"end": 4918,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4898,
											"end": 4918,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4898,
											"end": 4918,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4898,
											"end": 4918,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4898,
											"end": 4918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4898,
											"end": 4918,
											"name": "PUSH",
											"source": 0,
											"value": "6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6"
										},
										{
											"begin": 4898,
											"end": 4918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4898,
											"end": 4918,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4898,
											"end": 4918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4898,
											"end": 4918,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 4804,
											"end": 4926,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4804,
											"end": 4926,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3986,
											"end": 4189,
											"name": "tag",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 3986,
											"end": 4189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4058,
											"end": 4062,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4083,
											"end": 4104,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4083,
											"end": 4104,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "527"
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "PUSH data",
											"source": 0,
											"value": "9D214FA89563F4E6456A3929327E54500EA1CDE2C0BA9FB2035EC106190D682F"
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "tag",
											"source": 0,
											"value": "527"
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4161,
											"end": 4181,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4161,
											"end": 4181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4181,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4181,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4161,
											"end": 4181,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4181,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4181,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4181,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4161,
											"end": 4181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4181,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4181,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4181,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4161,
											"end": 4181,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3986,
											"end": 4189,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2467,
											"end": 2717,
											"name": "tag",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 2467,
											"end": 2717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2549,
											"end": 2555,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2545,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "529"
										},
										{
											"begin": 2545,
											"end": 2592,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2579,
											"end": 2580,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2572,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 2572,
											"end": 2580,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2545,
											"end": 2592,
											"name": "tag",
											"source": 0,
											"value": "529"
										},
										{
											"begin": 2545,
											"end": 2592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2616,
											"end": 2621,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2616,
											"end": 2621,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2616,
											"end": 2621,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2616,
											"end": 2617,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2616,
											"end": 2621,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2616,
											"end": 2617,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2640,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "530"
										},
										{
											"begin": 2640,
											"end": 2645,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2640,
											"end": 2645,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 2640,
											"end": 2645,
											"name": "tag",
											"source": 0,
											"value": "530"
										},
										{
											"begin": 2640,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2640,
											"end": 2645,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2640,
											"end": 2650,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "PUSH data",
											"source": 0,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8429,
											"name": "tag",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 8242,
											"end": 8429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8316,
											"end": 8338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8316,
											"end": 8338,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8308,
											"end": 8339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "533"
										},
										{
											"begin": 8308,
											"end": 8339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8308,
											"end": 8339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8308,
											"end": 8339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8308,
											"end": 8339,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8308,
											"end": 8339,
											"name": "tag",
											"source": 0,
											"value": "533"
										},
										{
											"begin": 8308,
											"end": 8339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8376,
											"end": 8382,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8376,
											"end": 8382,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8355,
											"end": 8393,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8355,
											"end": 8393,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8355,
											"end": 8393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8355,
											"end": 8393,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8355,
											"end": 8393,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8355,
											"end": 8393,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8376,
											"end": 8382,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8376,
											"end": 8382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8376,
											"end": 8382,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8376,
											"end": 8382,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8376,
											"end": 8382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8355,
											"end": 8393,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 8355,
											"end": 8393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8355,
											"end": 8393,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8355,
											"end": 8393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8355,
											"end": 8393,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 8404,
											"end": 8410,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8404,
											"end": 8421,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8404,
											"end": 8421,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8404,
											"end": 8421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8404,
											"end": 8421,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8404,
											"end": 8421,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8404,
											"end": 8421,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8404,
											"end": 8421,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8404,
											"end": 8421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8404,
											"end": 8421,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8404,
											"end": 8421,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8404,
											"end": 8421,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8404,
											"end": 8421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8404,
											"end": 8421,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8404,
											"end": 8421,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 8404,
											"end": 8421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8404,
											"end": 8421,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8429,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2865,
											"end": 3090,
											"name": "tag",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 2865,
											"end": 3090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 2992,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3032,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3013,
											"end": 3018,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "535"
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "tag",
											"source": 0,
											"value": "535"
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3044,
											"end": 3053,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3060,
											"end": 3061,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3056,
											"end": 3057,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3056,
											"end": 3061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3056,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 3056,
											"end": 3061,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3056,
											"end": 3061,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 3056,
											"end": 3061,
											"name": "tag",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 3056,
											"end": 3061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3056,
											"end": 3061,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3056,
											"end": 3061,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 3090,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2865,
											"end": 3090,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13562,
											"end": 13901,
											"name": "tag",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 13562,
											"end": 13901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13680,
											"end": 13684,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13697,
											"end": 13714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13717,
											"end": 13745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "542"
										},
										{
											"begin": 13728,
											"end": 13744,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 13728,
											"end": 13744,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13717,
											"end": 13723,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13717,
											"end": 13727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 13717,
											"end": 13727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13717,
											"end": 13745,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13717,
											"end": 13745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13717,
											"end": 13745,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13717,
											"end": 13745,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13717,
											"end": 13745,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13717,
											"end": 13745,
											"name": "tag",
											"source": 0,
											"value": "542"
										},
										{
											"begin": 13717,
											"end": 13745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13777,
											"end": 13795,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13795,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13795,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13777,
											"end": 13795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13795,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13795,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13789,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 13777,
											"end": 13795,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13777,
											"end": 13795,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13795,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13777,
											"end": 13795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13795,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13795,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13697,
											"end": 13745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13697,
											"end": 13745,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13777,
											"end": 13810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "543"
										},
										{
											"begin": 13777,
											"end": 13810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13697,
											"end": 13745,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 13777,
											"end": 13810,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13777,
											"end": 13810,
											"name": "tag",
											"source": 0,
											"value": "543"
										},
										{
											"begin": 13777,
											"end": 13810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13756,
											"end": 13774,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13756,
											"end": 13774,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13756,
											"end": 13774,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13756,
											"end": 13774,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13756,
											"end": 13774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13756,
											"end": 13774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13756,
											"end": 13774,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13756,
											"end": 13768,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 13756,
											"end": 13774,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13756,
											"end": 13774,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13756,
											"end": 13774,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13756,
											"end": 13774,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13756,
											"end": 13774,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13756,
											"end": 13774,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13756,
											"end": 13810,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13756,
											"end": 13810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13756,
											"end": 13810,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13756,
											"end": 13810,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13840,
											"end": 13856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13840,
											"end": 13856,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13840,
											"end": 13856,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13840,
											"end": 13856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13840,
											"end": 13856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13840,
											"end": 13856,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13840,
											"end": 13856,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13840,
											"end": 13871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "544"
										},
										{
											"begin": 13840,
											"end": 13871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13861,
											"end": 13870,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13840,
											"end": 13860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 13840,
											"end": 13871,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13840,
											"end": 13871,
											"name": "tag",
											"source": 0,
											"value": "544"
										},
										{
											"begin": 13840,
											"end": 13871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13821,
											"end": 13837,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 13837,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 13837,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13821,
											"end": 13837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 13837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 13837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 13833,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 13821,
											"end": 13837,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13821,
											"end": 13837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 13837,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13821,
											"end": 13837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 13837,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 13871,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13889,
											"end": 13893,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13889,
											"end": 13893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13562,
											"end": 13901,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13562,
											"end": 13901,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13562,
											"end": 13901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13562,
											"end": 13901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13562,
											"end": 13901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13562,
											"end": 13901,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20577,
											"end": 20805,
											"name": "tag",
											"source": 0,
											"value": "506"
										},
										{
											"begin": 20577,
											"end": 20805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20677,
											"end": 20681,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 20677,
											"end": 20681,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20626,
											"end": 20630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20626,
											"end": 20630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20677,
											"end": 20681,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20663,
											"end": 20673,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 20663,
											"end": 20681,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20663,
											"end": 20681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20663,
											"end": 20681,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20663,
											"end": 20681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20663,
											"end": 20705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "546"
										},
										{
											"begin": 20663,
											"end": 20705,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20699,
											"end": 20705,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 20699,
											"end": 20705,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20699,
											"end": 20705,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 20699,
											"end": 20705,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20698,
											"end": 20705,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20663,
											"end": 20705,
											"name": "tag",
											"source": 0,
											"value": "546"
										},
										{
											"begin": 20663,
											"end": 20705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20663,
											"end": 20733,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20663,
											"end": 20733,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20663,
											"end": 20733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "547"
										},
										{
											"begin": 20663,
											"end": 20733,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20722,
											"end": 20733,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 20722,
											"end": 20733,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20722,
											"end": 20733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20722,
											"end": 20733,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 20722,
											"end": 20733,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 20722,
											"end": 20733,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20663,
											"end": 20733,
											"name": "tag",
											"source": 0,
											"value": "547"
										},
										{
											"begin": 20663,
											"end": 20733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20663,
											"end": 20797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20663,
											"end": 20797,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20663,
											"end": 20797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 20663,
											"end": 20797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20781,
											"end": 20797,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 20781,
											"end": 20797,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20771,
											"end": 20775,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 20750,
											"end": 20777,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20750,
											"end": 20777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20750,
											"end": 20777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20750,
											"end": 20777,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20750,
											"end": 20762,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 20750,
											"end": 20777,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20750,
											"end": 20777,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20750,
											"end": 20777,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20750,
											"end": 20777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20750,
											"end": 20777,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20750,
											"end": 20777,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20750,
											"end": 20797,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20750,
											"end": 20797,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20750,
											"end": 20797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20577,
											"end": 20805,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15317,
											"end": 17364,
											"name": "tag",
											"source": 0,
											"value": "509"
										},
										{
											"begin": 15317,
											"end": 17364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10151,
											"end": 10157,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 10151,
											"end": 10164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10151,
											"end": 10164,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10151,
											"end": 10164,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10160,
											"end": 10164,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10151,
											"end": 10164,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10151,
											"end": 10164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10151,
											"end": 10164,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15426,
											"end": 15441,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 15426,
											"end": 15441,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15456,
											"end": 15482,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 15456,
											"end": 15482,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10151,
											"end": 10157,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10151,
											"end": 10157,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15396,
											"end": 15493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "551"
										},
										{
											"begin": 15396,
											"end": 15493,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15396,
											"end": 15411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 15396,
											"end": 15493,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15396,
											"end": 15493,
											"name": "tag",
											"source": 0,
											"value": "551"
										},
										{
											"begin": 15396,
											"end": 15493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15396,
											"end": 15538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "552"
										},
										{
											"begin": 15396,
											"end": 15538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15526,
											"end": 15538,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 15526,
											"end": 15538,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15396,
											"end": 15538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "553"
										},
										{
											"begin": 15396,
											"end": 15538,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15396,
											"end": 15538,
											"name": "tag",
											"source": 0,
											"value": "552"
										},
										{
											"begin": 15396,
											"end": 15538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15509,
											"end": 15510,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15396,
											"end": 15538,
											"name": "tag",
											"source": 0,
											"value": "553"
										},
										{
											"begin": 15396,
											"end": 15538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15626,
											"end": 15642,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 15626,
											"end": 15642,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15601,
											"end": 15605,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 15549,
											"end": 15577,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15580,
											"end": 15607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15580,
											"end": 15607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15580,
											"end": 15607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15580,
											"end": 15592,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 15580,
											"end": 15607,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15580,
											"end": 15607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15580,
											"end": 15607,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15580,
											"end": 15607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15580,
											"end": 15607,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15580,
											"end": 15607,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15366,
											"end": 15538,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15366,
											"end": 15538,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15549,
											"end": 15577,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15580,
											"end": 15653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "554"
										},
										{
											"begin": 15580,
											"end": 15653,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15580,
											"end": 15611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 15580,
											"end": 15653,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15580,
											"end": 15653,
											"name": "tag",
											"source": 0,
											"value": "554"
										},
										{
											"begin": 15580,
											"end": 15653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15549,
											"end": 15653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15549,
											"end": 15653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15664,
											"end": 15687,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15690,
											"end": 15798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "555"
										},
										{
											"begin": 15796,
											"end": 15797,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15690,
											"end": 15777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 15768,
											"end": 15776,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 15768,
											"end": 15776,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15690,
											"end": 15749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 15729,
											"end": 15748,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15690,
											"end": 15710,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15690,
											"end": 15728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 15690,
											"end": 15728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15690,
											"end": 15749,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15690,
											"end": 15749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15690,
											"end": 15749,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15690,
											"end": 15749,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15690,
											"end": 15749,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15690,
											"end": 15798,
											"name": "tag",
											"source": 0,
											"value": "555"
										},
										{
											"begin": 15690,
											"end": 15798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15664,
											"end": 15798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15809,
											"end": 15829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15832,
											"end": 15873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "558"
										},
										{
											"begin": 15832,
											"end": 15852,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15664,
											"end": 15798,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15832,
											"end": 15856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 15832,
											"end": 15873,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15832,
											"end": 15873,
											"name": "tag",
											"source": 0,
											"value": "558"
										},
										{
											"begin": 15832,
											"end": 15873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15926,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15910,
											"end": 15926,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15926,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15924,
											"end": 15925,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15910,
											"end": 15926,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15926,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15926,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15886,
											"end": 15907,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15910,
											"end": 15926,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15926,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15926,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15926,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15926,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15809,
											"end": 15873,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15809,
											"end": 15873,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15910,
											"end": 15926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15926,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15910,
											"end": 15926,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15926,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15926,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15926,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15926,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15926,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15926,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15910,
											"end": 15926,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15886,
											"end": 15926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15886,
											"end": 15926,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15959,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 15937,
											"end": 15941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15942,
											"end": 15943,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15937,
											"end": 15944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15937,
											"end": 15944,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15937,
											"end": 15944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15937,
											"end": 15944,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15937,
											"end": 15944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "561"
										},
										{
											"begin": 15937,
											"end": 15944,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15937,
											"end": 15944,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 15937,
											"end": 15944,
											"name": "tag",
											"source": 0,
											"value": "561"
										},
										{
											"begin": 15937,
											"end": 15944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15937,
											"end": 15960,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15937,
											"end": 15960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15937,
											"end": 15960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15937,
											"end": 15944,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15937,
											"end": 15944,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15937,
											"end": 15944,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15937,
											"end": 15944,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15937,
											"end": 15944,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15937,
											"end": 15944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15937,
											"end": 15944,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15937,
											"end": 15944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15937,
											"end": 15944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15937,
											"end": 15944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15937,
											"end": 15960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15937,
											"end": 15960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15937,
											"end": 15960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15937,
											"end": 15960,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15987,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 15981,
											"end": 15987,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "15AB88C9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15987,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15987,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15987,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15987,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15992,
											"name": "PUSH",
											"source": 0,
											"value": "AD5C4648"
										},
										{
											"begin": 15981,
											"end": 15992,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15937,
											"end": 15944,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15937,
											"end": 15944,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15987,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "562"
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "tag",
											"source": 0,
											"value": "562"
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "564"
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "tag",
											"source": 0,
											"value": "564"
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "565"
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "tag",
											"source": 0,
											"value": "565"
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15981,
											"end": 15994,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15971,
											"end": 15978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15971,
											"end": 15978,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15971,
											"end": 15975,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15971,
											"end": 15975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15976,
											"end": 15977,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15976,
											"end": 15977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15971,
											"end": 15978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15971,
											"end": 15978,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15971,
											"end": 15978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "566"
										},
										{
											"begin": 15971,
											"end": 15978,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15971,
											"end": 15978,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 15971,
											"end": 15978,
											"name": "tag",
											"source": 0,
											"value": "566"
										},
										{
											"begin": 15971,
											"end": 15978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15971,
											"end": 15994,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15971,
											"end": 15994,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15971,
											"end": 15994,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15971,
											"end": 15978,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15971,
											"end": 15978,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15971,
											"end": 15978,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15971,
											"end": 15978,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15971,
											"end": 15978,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15971,
											"end": 15978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15971,
											"end": 15978,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15971,
											"end": 15978,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15971,
											"end": 15978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15971,
											"end": 15978,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15971,
											"end": 15994,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15971,
											"end": 15994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15971,
											"end": 15994,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15971,
											"end": 15994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16071,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 16065,
											"end": 16071,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "791AC947"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16007,
											"end": 16028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16207,
											"end": 16211,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16227,
											"end": 16242,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "PUSH",
											"source": 0,
											"value": "A4"
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16031,
											"end": 16052,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 16031,
											"end": 16052,
											"name": "SWAP10",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16071,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16071,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16071,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16071,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16122,
											"name": "PUSH",
											"source": 0,
											"value": "791AC947"
										},
										{
											"begin": 16065,
											"end": 16122,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 16137,
											"end": 16149,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 16137,
											"end": 16149,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 16007,
											"end": 16028,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 16007,
											"end": 16028,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 16180,
											"end": 16184,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 16180,
											"end": 16184,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "PUSH",
											"source": 0,
											"value": "C4"
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16007,
											"end": 16028,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "tag",
											"source": 0,
											"value": "567"
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "569"
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "567"
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "tag",
											"source": 0,
											"value": "569"
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "570"
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "tag",
											"source": 0,
											"value": "570"
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "572"
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "tag",
											"source": 0,
											"value": "572"
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16266,
											"end": 16283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16286,
											"end": 16326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "573"
										},
										{
											"begin": 16312,
											"end": 16325,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16286,
											"end": 16307,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 16286,
											"end": 16311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 16286,
											"end": 16311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16286,
											"end": 16326,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16286,
											"end": 16326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16286,
											"end": 16326,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16286,
											"end": 16326,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16286,
											"end": 16326,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16286,
											"end": 16326,
											"name": "tag",
											"source": 0,
											"value": "573"
										},
										{
											"begin": 16286,
											"end": 16326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16266,
											"end": 16326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16339,
											"end": 16358,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16361,
											"end": 16401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "574"
										},
										{
											"begin": 16374,
											"end": 16400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "575"
										},
										{
											"begin": 16374,
											"end": 16393,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 16398,
											"end": 16399,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 16374,
											"end": 16397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 16374,
											"end": 16400,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16374,
											"end": 16400,
											"name": "tag",
											"source": 0,
											"value": "575"
										},
										{
											"begin": 16374,
											"end": 16400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16361,
											"end": 16369,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 16361,
											"end": 16369,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16361,
											"end": 16369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16361,
											"end": 16373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 16361,
											"end": 16401,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16361,
											"end": 16401,
											"name": "tag",
											"source": 0,
											"value": "574"
										},
										{
											"begin": 16361,
											"end": 16401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16339,
											"end": 16401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16414,
											"end": 16440,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16443,
											"end": 16543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "576"
										},
										{
											"begin": 16541,
											"end": 16542,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 16443,
											"end": 16522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 16339,
											"end": 16401,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16443,
											"end": 16522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16443,
											"end": 16452,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16471,
											"end": 16490,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 16443,
											"end": 16470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 16443,
											"end": 16491,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16443,
											"end": 16543,
											"name": "tag",
											"source": 0,
											"value": "576"
										},
										{
											"begin": 16443,
											"end": 16543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16414,
											"end": 16543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16414,
											"end": 16543,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16554,
											"end": 16584,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16587,
											"end": 16632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "579"
										},
										{
											"begin": 16620,
											"end": 16631,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16587,
											"end": 16615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 16601,
											"end": 16614,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 16601,
											"end": 16614,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16587,
											"end": 16596,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16587,
											"end": 16600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 16587,
											"end": 16600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16587,
											"end": 16615,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16587,
											"end": 16615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16587,
											"end": 16615,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16587,
											"end": 16615,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16587,
											"end": 16615,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16587,
											"end": 16632,
											"name": "tag",
											"source": 0,
											"value": "579"
										},
										{
											"begin": 16587,
											"end": 16632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16554,
											"end": 16632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16554,
											"end": 16632,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16643,
											"end": 16668,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16671,
											"end": 16735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "581"
										},
										{
											"begin": 16713,
											"end": 16724,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16671,
											"end": 16694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 16685,
											"end": 16693,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 16685,
											"end": 16693,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16671,
											"end": 16680,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16671,
											"end": 16684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 16671,
											"end": 16684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16671,
											"end": 16694,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16671,
											"end": 16694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16671,
											"end": 16694,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16671,
											"end": 16694,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16671,
											"end": 16694,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16671,
											"end": 16735,
											"name": "tag",
											"source": 0,
											"value": "581"
										},
										{
											"begin": 16671,
											"end": 16735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16775,
											"end": 16791,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 16775,
											"end": 16791,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16643,
											"end": 16735,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16643,
											"end": 16735,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16749,
											"end": 16761,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16749,
											"end": 16761,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16775,
											"end": 16791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16775,
											"end": 16791,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16775,
											"end": 16791,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16775,
											"end": 16791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16856,
											"end": 16861,
											"name": "PUSH",
											"source": 0,
											"value": "7530"
										},
										{
											"begin": 16856,
											"end": 16861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16643,
											"end": 16735,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16643,
											"end": 16735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16749,
											"end": 16761,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16749,
											"end": 16761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16643,
											"end": 16735,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16775,
											"end": 16791,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16856,
											"end": 16861,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "585"
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "584"
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "tag",
											"source": 0,
											"value": "585"
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "tag",
											"source": 0,
											"value": "584"
										},
										{
											"begin": 16767,
											"end": 16876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16909,
											"end": 16930,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 16909,
											"end": 16930,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16748,
											"end": 16876,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16748,
											"end": 16876,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16909,
											"end": 16930,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16909,
											"end": 16930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17000,
											"end": 17005,
											"name": "PUSH",
											"source": 0,
											"value": "7530"
										},
										{
											"begin": 17000,
											"end": 17005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 16980,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 16980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16909,
											"end": 16930,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16909,
											"end": 16930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 16980,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16909,
											"end": 16930,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 17000,
											"end": 17005,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "588"
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "587"
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "tag",
											"source": 0,
											"value": "588"
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "tag",
											"source": 0,
											"value": "587"
										},
										{
											"begin": 16901,
											"end": 17020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17043,
											"end": 17048,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17043,
											"end": 17048,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17065,
											"end": 17084,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 17065,
											"end": 17084,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17065,
											"end": 17084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17061,
											"end": 17357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "589"
										},
										{
											"begin": 17061,
											"end": 17357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17107,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 17101,
											"end": 17107,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17275,
											"end": 17296,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 17275,
											"end": 17296,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F305D719"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17177,
											"end": 17181,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17275,
											"end": 17296,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17275,
											"end": 17296,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17275,
											"end": 17296,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17315,
											"end": 17330,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "PUSH",
											"source": 0,
											"value": "A4"
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17107,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17107,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17107,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17123,
											"name": "PUSH",
											"source": 0,
											"value": "F305D719"
										},
										{
											"begin": 17101,
											"end": 17123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17131,
											"end": 17149,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17131,
											"end": 17149,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "PUSH",
											"source": 0,
											"value": "C4"
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17131,
											"end": 17149,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17107,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "590"
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "tag",
											"source": 0,
											"value": "590"
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "592"
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "tag",
											"source": 0,
											"value": "592"
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "593"
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "tag",
											"source": 0,
											"value": "593"
										},
										{
											"begin": 17101,
											"end": 17345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17061,
											"end": 17357,
											"name": "tag",
											"source": 0,
											"value": "589"
										},
										{
											"begin": 17061,
											"end": 17357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10187,
											"end": 10193,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 10187,
											"end": 10201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10187,
											"end": 10201,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10187,
											"end": 10201,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10187,
											"end": 10201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10187,
											"end": 10201,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15317,
											"end": 17364,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19771,
											"end": 19928,
											"name": "tag",
											"source": 0,
											"value": "512"
										},
										{
											"begin": 19771,
											"end": 19928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19868,
											"end": 19872,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 19868,
											"end": 19872,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19843,
											"end": 19847,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19843,
											"end": 19847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19868,
											"end": 19880,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19868,
											"end": 19880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19868,
											"end": 19880,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19868,
											"end": 19872,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19868,
											"end": 19872,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19868,
											"end": 19880,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19868,
											"end": 19880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19868,
											"end": 19894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "595"
										},
										{
											"begin": 19868,
											"end": 19894,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19884,
											"end": 19888,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 19884,
											"end": 19888,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19884,
											"end": 19894,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19884,
											"end": 19894,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19884,
											"end": 19894,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19884,
											"end": 19888,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19884,
											"end": 19888,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19884,
											"end": 19894,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19868,
											"end": 19894,
											"name": "tag",
											"source": 0,
											"value": "595"
										},
										{
											"begin": 19868,
											"end": 19894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19867,
											"end": 19920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19867,
											"end": 19920,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19867,
											"end": 19920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 19867,
											"end": 19920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19901,
											"end": 19919,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19919,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19901,
											"end": 19919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19919,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19919,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19913,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 19901,
											"end": 19919,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19901,
											"end": 19919,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19919,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19901,
											"end": 19919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19919,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19919,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19919,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 19901,
											"end": 19919,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19900,
											"end": 19919,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19900,
											"end": 19919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19771,
											"end": 19928,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17372,
											"end": 17917,
											"name": "tag",
											"source": 0,
											"value": "516"
										},
										{
											"begin": 17372,
											"end": 17917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17524,
											"end": 17532,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 17524,
											"end": 17532,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17559,
											"end": 17563,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 17559,
											"end": 17563,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17479,
											"end": 17486,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17479,
											"end": 17486,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17524,
											"end": 17532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17546,
											"end": 17563,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17546,
											"end": 17563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17546,
											"end": 17563,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17559,
											"end": 17563,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17559,
											"end": 17563,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17546,
											"end": 17563,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17543,
											"end": 17599,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17543,
											"end": 17599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "598"
										},
										{
											"begin": 17543,
											"end": 17599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17591,
											"end": 17598,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 17591,
											"end": 17598,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17577,
											"end": 17599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "599"
										},
										{
											"begin": 17577,
											"end": 17599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17577,
											"end": 17586,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17577,
											"end": 17586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17577,
											"end": 17590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 17577,
											"end": 17599,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17577,
											"end": 17599,
											"name": "tag",
											"source": 0,
											"value": "599"
										},
										{
											"begin": 17577,
											"end": 17599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17565,
											"end": 17599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17565,
											"end": 17599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17543,
											"end": 17599,
											"name": "tag",
											"source": 0,
											"value": "598"
										},
										{
											"begin": 17543,
											"end": 17599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17661,
											"end": 17675,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 17661,
											"end": 17675,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17612,
											"end": 17629,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17612,
											"end": 17629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17632,
											"end": 17676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "600"
										},
										{
											"begin": 17632,
											"end": 17676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17632,
											"end": 17656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 17632,
											"end": 17641,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17646,
											"end": 17655,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17632,
											"end": 17645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 17632,
											"end": 17656,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17632,
											"end": 17676,
											"name": "tag",
											"source": 0,
											"value": "600"
										},
										{
											"begin": 17632,
											"end": 17676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17740,
											"end": 17744,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 17719,
											"end": 17746,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17719,
											"end": 17746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17719,
											"end": 17746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17719,
											"end": 17746,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17719,
											"end": 17731,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 17719,
											"end": 17746,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17719,
											"end": 17746,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17719,
											"end": 17746,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17719,
											"end": 17746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17719,
											"end": 17746,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17719,
											"end": 17746,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17612,
											"end": 17676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17612,
											"end": 17676,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17719,
											"end": 17785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "602"
										},
										{
											"begin": 17719,
											"end": 17785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17612,
											"end": 17676,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17719,
											"end": 17750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 17719,
											"end": 17785,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17719,
											"end": 17785,
											"name": "tag",
											"source": 0,
											"value": "602"
										},
										{
											"begin": 17719,
											"end": 17785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17710,
											"end": 17714,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 17689,
											"end": 17716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17689,
											"end": 17716,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17689,
											"end": 17716,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17689,
											"end": 17716,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17689,
											"end": 17701,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 17689,
											"end": 17716,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17689,
											"end": 17716,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17689,
											"end": 17716,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17689,
											"end": 17716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17689,
											"end": 17716,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17689,
											"end": 17785,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17689,
											"end": 17785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17689,
											"end": 17785,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17689,
											"end": 17785,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17847,
											"end": 17863,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 17847,
											"end": 17863,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17801,
											"end": 17865,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 17801,
											"end": 17865,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17801,
											"end": 17865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17801,
											"end": 17865,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 17801,
											"end": 17865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17833,
											"end": 17864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "603"
										},
										{
											"begin": 17833,
											"end": 17864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17833,
											"end": 17842,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17833,
											"end": 17842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17833,
											"end": 17846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 17833,
											"end": 17864,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17833,
											"end": 17864,
											"name": "tag",
											"source": 0,
											"value": "603"
										},
										{
											"begin": 17833,
											"end": 17864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17801,
											"end": 17865,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17801,
											"end": 17865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17801,
											"end": 17865,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17801,
											"end": 17865,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17801,
											"end": 17865,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17801,
											"end": 17865,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17801,
											"end": 17865,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17801,
											"end": 17865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17801,
											"end": 17865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17801,
											"end": 17865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17801,
											"end": 17865,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17801,
											"end": 17865,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17801,
											"end": 17865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17801,
											"end": 17865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17801,
											"end": 17865,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 17885,
											"end": 17909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "604"
										},
										{
											"begin": 17885,
											"end": 17894,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17899,
											"end": 17908,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17885,
											"end": 17898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 17885,
											"end": 17909,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17885,
											"end": 17909,
											"name": "tag",
											"source": 0,
											"value": "604"
										},
										{
											"begin": 17885,
											"end": 17909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17878,
											"end": 17909,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 17372,
											"end": 17917,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17372,
											"end": 17917,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3708,
											"end": 3891,
											"name": "tag",
											"source": 0,
											"value": "523"
										},
										{
											"begin": 3708,
											"end": 3891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3788,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "606"
										},
										{
											"begin": 3792,
											"end": 3796,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3805,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3788,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 3788,
											"end": 3806,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3788,
											"end": 3806,
											"name": "tag",
											"source": 0,
											"value": "606"
										},
										{
											"begin": 3788,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "607"
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "PUSH data",
											"source": 0,
											"value": "7BD893145AC435F339BB7C288622D270324B7033B011F693ACA172F5CBC3C257"
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "tag",
											"source": 0,
											"value": "607"
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3855,
											"end": 3875,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3855,
											"end": 3875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3855,
											"end": 3875,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3855,
											"end": 3875,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3855,
											"end": 3875,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3855,
											"end": 3875,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3855,
											"end": 3875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3855,
											"end": 3875,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3855,
											"end": 3875,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3855,
											"end": 3875,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3855,
											"end": 3875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3855,
											"end": 3875,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3855,
											"end": 3883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3855,
											"end": 3883,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3855,
											"end": 3883,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3855,
											"end": 3883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3855,
											"end": 3883,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3708,
											"end": 3891,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"79ECB50133735B20228DEA9D08FE36A462BBC1350F591A146908848DB91104CD": "4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65",
										"7BD893145AC435F339BB7C288622D270324B7033B011F693ACA172F5CBC3C257": "526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
										"9D214FA89563F4E6456A3929327E54500EA1CDE2C0BA9FB2035EC106190D682F": "526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373"
									}
								},
								"9D214FA89563F4E6456A3929327E54500EA1CDE2C0BA9FB2035EC106190D682F": "526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373"
							}
						},
						"methodIdentifiers": {
							"RiskFreeValue()": "bda5c8bb",
							"RiskFreeValueReceiver()": "d7ac6585",
							"Treasury()": "563df32f",
							"TreasuryReceiver()": "800cee51",
							"addMinter(address)": "983b2d56",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"autoLiquidityReceiver()": "ca33e64c",
							"balanceOf(address)": "70a08231",
							"blacklist(address)": "f9f92be4",
							"checkFeeExempt(address)": "d4399790",
							"checkSwapThreshold()": "6d351d1a",
							"clearStuckBalance(uint256,address)": "56a227f2",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"enableTransfer(address)": "d5938aac",
							"feeDenominator()": "180b0d7e",
							"getCirculatingSupply()": "2b112e49",
							"getLiquidityBacking(uint256)": "d51ed1c8",
							"increaseAllowance(address,uint256)": "39509351",
							"initialDistributionFinished()": "d1fce264",
							"isMinter(address)": "aa271e1a",
							"isNotInSwap()": "83b4ac68",
							"isOverLiquified(uint256,uint256)": "1161ae39",
							"isOwner()": "8f32d59b",
							"liquidityFee()": "98118cb4",
							"manualSync()": "753d02a1",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pair()": "a8aa1b31",
							"pairContract()": "4d709adf",
							"rebase(uint256,int256)": "7a43e23f",
							"removeMinter(address)": "3092afd5",
							"renounceMinter()": "98650275",
							"renounceOwnership()": "715018a6",
							"rescueToken(address,uint256)": "33f3d628",
							"router()": "f887ea40",
							"sellFee()": "2b14ca56",
							"sendPresale(address[],uint256[])": "d37e219d",
							"setFeeExempt(address)": "749796a5",
							"setFeeReceivers(address,address,address)": "d7c01032",
							"setFees(uint256,uint256,uint256,uint256,uint256)": "04a66b48",
							"setInitialDistributionFinished()": "2be6937d",
							"setLP(address)": "2f34d282",
							"setSwapBackSettings(bool,uint256,uint256)": "d0889358",
							"setTargetLiquidity(uint256,uint256)": "201e7991",
							"swapEnabled()": "6ddd1713",
							"symbol()": "95d89b41",
							"totalFee()": "1df4ccfc",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"updateBlacklist(address,bool)": "9155e083"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"name\":\"LogRebase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"RiskFreeValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RiskFreeValueReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Treasury\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TreasuryReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoLiquidityReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"blacklist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"checkFeeExempt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkSwapThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountPercentage\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"clearStuckBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"enableTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeDenominator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCirculatingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"accuracy\",\"type\":\"uint256\"}],\"name\":\"getLiquidityBacking\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialDistributionFinished\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isNotInSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"target\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accuracy\",\"type\":\"uint256\"}],\"name\":\"isOverLiquified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualSync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pairContract\",\"outputs\":[{\"internalType\":\"contract InterfaceLP\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"supplyDelta\",\"type\":\"int256\"}],\"name\":\"rebase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"rescueToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"contract IDEXRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"sendPresale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setFeeExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_autoLiquidityReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_TreasuryReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_RiskFreeValueReceiver\",\"type\":\"address\"}],\"name\":\"setFeeReceivers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_liquidityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_RiskFreeValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_Treasury\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sellFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_feeDenominator\",\"type\":\"uint256\"}],\"name\":\"setFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setInitialDistributionFinished\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setLP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_enabled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_num\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_denom\",\"type\":\"uint256\"}],\"name\":\"setSwapBackSettings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"target\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accuracy\",\"type\":\"uint256\"}],\"name\":\"setTargetLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_flag\",\"type\":\"bool\"}],\"name\":\"updateBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"AndrewTate-testnet.sol.sol\":\"AndrewTateToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"AndrewTate-testnet.sol.sol\":{\"keccak256\":\"0x001c21c0a1afc51a8ef4816412db3c789b6f74a7a1a626c8f281b67652b5a656\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1b15a71551bcd77ba0dceeb9c92caea3f6a8af34b670ad5334b1b3ac6e7f7a0\",\"dweb:/ipfs/QmUAWeemcsWpVBJSCxZSi4HhfkNKbj3sssaBinRH8jy1Ld\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 604,
								"contract": "AndrewTate-testnet.sol.sol:AndrewTateToken",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 606,
								"contract": "AndrewTate-testnet.sol.sol:AndrewTateToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 608,
								"contract": "AndrewTate-testnet.sol.sol:AndrewTateToken",
								"label": "_decimals",
								"offset": 0,
								"slot": "2",
								"type": "t_uint8"
							},
							{
								"astId": 764,
								"contract": "AndrewTate-testnet.sol.sol:AndrewTateToken",
								"label": "_owner",
								"offset": 1,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 524,
								"contract": "AndrewTate-testnet.sol.sol:AndrewTateToken",
								"label": "_minters",
								"offset": 0,
								"slot": "3",
								"type": "t_struct(Role)433_storage"
							},
							{
								"astId": 885,
								"contract": "AndrewTate-testnet.sol.sol:AndrewTateToken",
								"label": "pairContract",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(InterfaceLP)428"
							},
							{
								"astId": 887,
								"contract": "AndrewTate-testnet.sol.sol:AndrewTateToken",
								"label": "initialDistributionFinished",
								"offset": 20,
								"slot": "4",
								"type": "t_bool"
							},
							{
								"astId": 891,
								"contract": "AndrewTate-testnet.sol.sol:AndrewTateToken",
								"label": "allowTransfer",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 895,
								"contract": "AndrewTate-testnet.sol.sol:AndrewTateToken",
								"label": "_isFeeExempt",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 950,
								"contract": "AndrewTate-testnet.sol.sol:AndrewTateToken",
								"label": "liquidityFee",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 953,
								"contract": "AndrewTate-testnet.sol.sol:AndrewTateToken",
								"label": "Treasury",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 956,
								"contract": "AndrewTate-testnet.sol.sol:AndrewTateToken",
								"label": "RiskFreeValue",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 959,
								"contract": "AndrewTate-testnet.sol.sol:AndrewTateToken",
								"label": "sellFee",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 968,
								"contract": "AndrewTate-testnet.sol.sol:AndrewTateToken",
								"label": "totalFee",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 971,
								"contract": "AndrewTate-testnet.sol.sol:AndrewTateToken",
								"label": "feeDenominator",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 974,
								"contract": "AndrewTate-testnet.sol.sol:AndrewTateToken",
								"label": "DEAD",
								"offset": 0,
								"slot": "13",
								"type": "t_address"
							},
							{
								"astId": 977,
								"contract": "AndrewTate-testnet.sol.sol:AndrewTateToken",
								"label": "ZERO",
								"offset": 0,
								"slot": "14",
								"type": "t_address"
							},
							{
								"astId": 979,
								"contract": "AndrewTate-testnet.sol.sol:AndrewTateToken",
								"label": "autoLiquidityReceiver",
								"offset": 0,
								"slot": "15",
								"type": "t_address"
							},
							{
								"astId": 981,
								"contract": "AndrewTate-testnet.sol.sol:AndrewTateToken",
								"label": "TreasuryReceiver",
								"offset": 0,
								"slot": "16",
								"type": "t_address"
							},
							{
								"astId": 983,
								"contract": "AndrewTate-testnet.sol.sol:AndrewTateToken",
								"label": "RiskFreeValueReceiver",
								"offset": 0,
								"slot": "17",
								"type": "t_address"
							},
							{
								"astId": 986,
								"contract": "AndrewTate-testnet.sol.sol:AndrewTateToken",
								"label": "targetLiquidity",
								"offset": 0,
								"slot": "18",
								"type": "t_uint256"
							},
							{
								"astId": 989,
								"contract": "AndrewTate-testnet.sol.sol:AndrewTateToken",
								"label": "targetLiquidityDenominator",
								"offset": 0,
								"slot": "19",
								"type": "t_uint256"
							},
							{
								"astId": 991,
								"contract": "AndrewTate-testnet.sol.sol:AndrewTateToken",
								"label": "router",
								"offset": 0,
								"slot": "20",
								"type": "t_contract(IDEXRouter)752"
							},
							{
								"astId": 993,
								"contract": "AndrewTate-testnet.sol.sol:AndrewTateToken",
								"label": "pair",
								"offset": 0,
								"slot": "21",
								"type": "t_address"
							},
							{
								"astId": 996,
								"contract": "AndrewTate-testnet.sol.sol:AndrewTateToken",
								"label": "swapEnabled",
								"offset": 20,
								"slot": "21",
								"type": "t_bool"
							},
							{
								"astId": 1004,
								"contract": "AndrewTate-testnet.sol.sol:AndrewTateToken",
								"label": "gonSwapThreshold",
								"offset": 0,
								"slot": "22",
								"type": "t_uint256"
							},
							{
								"astId": 1006,
								"contract": "AndrewTate-testnet.sol.sol:AndrewTateToken",
								"label": "inSwap",
								"offset": 0,
								"slot": "23",
								"type": "t_bool"
							},
							{
								"astId": 1035,
								"contract": "AndrewTate-testnet.sol.sol:AndrewTateToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "24",
								"type": "t_uint256"
							},
							{
								"astId": 1037,
								"contract": "AndrewTate-testnet.sol.sol:AndrewTateToken",
								"label": "_gonsPerFragment",
								"offset": 0,
								"slot": "25",
								"type": "t_uint256"
							},
							{
								"astId": 1041,
								"contract": "AndrewTate-testnet.sol.sol:AndrewTateToken",
								"label": "_gonBalances",
								"offset": 0,
								"slot": "26",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1047,
								"contract": "AndrewTate-testnet.sol.sol:AndrewTateToken",
								"label": "_allowedFragments",
								"offset": 0,
								"slot": "27",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1051,
								"contract": "AndrewTate-testnet.sol.sol:AndrewTateToken",
								"label": "blacklist",
								"offset": 0,
								"slot": "28",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IDEXRouter)752": {
								"encoding": "inplace",
								"label": "contract IDEXRouter",
								"numberOfBytes": "20"
							},
							"t_contract(InterfaceLP)428": {
								"encoding": "inplace",
								"label": "contract InterfaceLP",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Role)433_storage": {
								"encoding": "inplace",
								"label": "struct Roles.Role",
								"members": [
									{
										"astId": 432,
										"contract": "AndrewTate-testnet.sol.sol:AndrewTateToken",
										"label": "bearer",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20Detailed": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"AndrewTate-testnet.sol.sol\":\"ERC20Detailed\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"AndrewTate-testnet.sol.sol\":{\"keccak256\":\"0x001c21c0a1afc51a8ef4816412db3c789b6f74a7a1a626c8f281b67652b5a656\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1b15a71551bcd77ba0dceeb9c92caea3f6a8af34b670ad5334b1b3ac6e7f7a0\",\"dweb:/ipfs/QmUAWeemcsWpVBJSCxZSi4HhfkNKbj3sssaBinRH8jy1Ld\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 604,
								"contract": "AndrewTate-testnet.sol.sol:ERC20Detailed",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 606,
								"contract": "AndrewTate-testnet.sol.sol:ERC20Detailed",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 608,
								"contract": "AndrewTate-testnet.sol.sol:ERC20Detailed",
								"label": "_decimals",
								"offset": 0,
								"slot": "2",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IDEXFactory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createPair(address,address)": "c9c65396"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"AndrewTate-testnet.sol.sol\":\"IDEXFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"AndrewTate-testnet.sol.sol\":{\"keccak256\":\"0x001c21c0a1afc51a8ef4816412db3c789b6f74a7a1a626c8f281b67652b5a656\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1b15a71551bcd77ba0dceeb9c92caea3f6a8af34b670ad5334b1b3ac6e7f7a0\",\"dweb:/ipfs/QmUAWeemcsWpVBJSCxZSi4HhfkNKbj3sssaBinRH8jy1Ld\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IDEXRouter": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": "b6f9de95",
							"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947",
							"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "5c11d795"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"AndrewTate-testnet.sol.sol\":\"IDEXRouter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"AndrewTate-testnet.sol.sol\":{\"keccak256\":\"0x001c21c0a1afc51a8ef4816412db3c789b6f74a7a1a626c8f281b67652b5a656\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1b15a71551bcd77ba0dceeb9c92caea3f6a8af34b670ad5334b1b3ac6e7f7a0\",\"dweb:/ipfs/QmUAWeemcsWpVBJSCxZSi4HhfkNKbj3sssaBinRH8jy1Ld\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"AndrewTate-testnet.sol.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"AndrewTate-testnet.sol.sol\":{\"keccak256\":\"0x001c21c0a1afc51a8ef4816412db3c789b6f74a7a1a626c8f281b67652b5a656\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1b15a71551bcd77ba0dceeb9c92caea3f6a8af34b670ad5334b1b3ac6e7f7a0\",\"dweb:/ipfs/QmUAWeemcsWpVBJSCxZSi4HhfkNKbj3sssaBinRH8jy1Ld\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"InterfaceLP": {
					"abi": [
						{
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"sync()": "fff6cae9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"AndrewTate-testnet.sol.sol\":\"InterfaceLP\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"AndrewTate-testnet.sol.sol\":{\"keccak256\":\"0x001c21c0a1afc51a8ef4816412db3c789b6f74a7a1a626c8f281b67652b5a656\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1b15a71551bcd77ba0dceeb9c92caea3f6a8af34b670ad5334b1b3ac6e7f7a0\",\"dweb:/ipfs/QmUAWeemcsWpVBJSCxZSi4HhfkNKbj3sssaBinRH8jy1Ld\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"MinterRole": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "MinterAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "MinterRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isMinter",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceMinter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"AndrewTate-testnet.sol.sol\":4196:5067  contract MinterRole {\r... */\n  mstore(0x40, 0x80)\n    /* \"AndrewTate-testnet.sol.sol\":4396:4452  constructor () {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"AndrewTate-testnet.sol.sol\":4422:4444  _addMinter(msg.sender) */\n  tag_4\n    /* \"AndrewTate-testnet.sol.sol\":4433:4443  msg.sender */\n  caller\n    /* \"AndrewTate-testnet.sol.sol\":4422:4432  _addMinter */\n  tag_5\n    /* \"AndrewTate-testnet.sol.sol\":4422:4444  _addMinter(msg.sender) */\n  jump\t// in\ntag_4:\n    /* \"AndrewTate-testnet.sol.sol\":4196:5067  contract MinterRole {\r... */\n  jump(tag_6)\n    /* \"AndrewTate-testnet.sol.sol\":4804:4926  function _addMinter(address account) internal {\r... */\ntag_5:\n    /* \"AndrewTate-testnet.sol.sol\":4861:4882  _minters.add(account) */\n  tag_8\n    /* \"AndrewTate-testnet.sol.sol\":4874:4881  account */\n  dup2\n    /* \"AndrewTate-testnet.sol.sol\":4861:4869  _minters */\n  0x00\n    /* \"AndrewTate-testnet.sol.sol\":4861:4873  _minters.add */\n  or(tag_0_10, shl(0x20, tag_9))\n  swap1\n    /* \"AndrewTate-testnet.sol.sol\":4861:4882  _minters.add(account) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"AndrewTate-testnet.sol.sol\":4898:4918  MinterAdded(account) */\n  mload(0x40)\n  sub(shl(0xa0, 0x01), 0x01)\n  dup3\n  and\n  swap1\n  0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6\n  swap1\n  0x00\n  swap1\n  log2\n    /* \"AndrewTate-testnet.sol.sol\":4804:4926  function _addMinter(address account) internal {\r... */\n  pop\n  jump\t// out\n    /* \"AndrewTate-testnet.sol.sol\":3450:3628  function add(Role storage role, address account) internal {\r... */\ntag_9:\n    /* \"AndrewTate-testnet.sol.sol\":3528:3546  has(role, account) */\n  tag_11\n    /* \"AndrewTate-testnet.sol.sol\":3532:3536  role */\n  dup3\n    /* \"AndrewTate-testnet.sol.sol\":3538:3545  account */\n  dup3\n    /* \"AndrewTate-testnet.sol.sol\":3528:3531  has */\n  tag_12\n    /* \"AndrewTate-testnet.sol.sol\":3528:3546  has(role, account) */\n  jump\t// in\ntag_11:\n    /* \"AndrewTate-testnet.sol.sol\":3527:3546  !has(role, account) */\n  iszero\n    /* \"AndrewTate-testnet.sol.sol\":3519:3582  require(!has(role, account), \"Roles: account already has role\") */\n  tag_13\n  jumpi\n  0x40\n  dup1\n  mload\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x1f\n  0x24\n  dup3\n  add\n  mstore\n  0x526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500\n  0x44\n  dup3\n  add\n  mstore\n  swap1\n  mload\n  swap1\n  dup2\n  swap1\n  sub\n  0x64\n  add\n  swap1\n  revert\ntag_13:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"AndrewTate-testnet.sol.sol\":3593:3613  role.bearer[account] */\n  and\n    /* \"AndrewTate-testnet.sol.sol\":3593:3604  role.bearer */\n  0x00\n    /* \"AndrewTate-testnet.sol.sol\":3593:3613  role.bearer[account] */\n  swap1\n  dup2\n  mstore\n  0x20\n  swap2\n  swap1\n  swap2\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"AndrewTate-testnet.sol.sol\":3593:3620  role.bearer[account] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"AndrewTate-testnet.sol.sol\":3616:3620  true */\n  0x01\n    /* \"AndrewTate-testnet.sol.sol\":3593:3620  role.bearer[account] = true */\n  or\n  swap1\n  sstore\n    /* \"AndrewTate-testnet.sol.sol\":3450:3628  function add(Role storage role, address account) internal {\r... */\n  jump\t// out\n    /* \"AndrewTate-testnet.sol.sol\":3986:4189  function has(Role storage role, address account) internal view returns (bool) {\r... */\ntag_12:\n    /* \"AndrewTate-testnet.sol.sol\":4058:4062  bool */\n  0x00\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"AndrewTate-testnet.sol.sol\":4083:4104  account != address(0) */\n  dup3\n  and\n    /* \"AndrewTate-testnet.sol.sol\":4075:4143  require(account != address(0), \"Roles: account is the zero address\") */\n  tag_15\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x22\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f\n  0x22\n  swap2\n  codecopy\n  0x40\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_15:\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"AndrewTate-testnet.sol.sol\":4161:4181  role.bearer[account] */\n  and\n    /* \"AndrewTate-testnet.sol.sol\":4161:4172  role.bearer */\n  0x00\n    /* \"AndrewTate-testnet.sol.sol\":4161:4181  role.bearer[account] */\n  swap1\n  dup2\n  mstore\n  0x20\n  swap2\n  swap1\n  swap2\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n  swap1\n    /* \"AndrewTate-testnet.sol.sol\":3986:4189  function has(Role storage role, address account) internal view returns (bool) {\r... */\n  jump\t// out\n    /* \"AndrewTate-testnet.sol.sol\":4196:5067  contract MinterRole {\r... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f 526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373\n\nsub_0: assembly {\n        /* \"AndrewTate-testnet.sol.sol\":4196:5067  contract MinterRole {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x98650275\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xaa271e1a\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"AndrewTate-testnet.sol.sol\":4719:4796  function renounceMinter() public {\r... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      stop\n        /* \"AndrewTate-testnet.sol.sol\":4602:4711  function isMinter(address account) public view returns (bool) {\r... */\n    tag_4:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_9\n      jump\t// in\n    tag_7:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"AndrewTate-testnet.sol.sol\":4719:4796  function renounceMinter() public {\r... */\n    tag_6:\n        /* \"AndrewTate-testnet.sol.sol\":4763:4788  _removeMinter(msg.sender) */\n      tag_12\n        /* \"AndrewTate-testnet.sol.sol\":4777:4787  msg.sender */\n      caller\n        /* \"AndrewTate-testnet.sol.sol\":4763:4776  _removeMinter */\n      tag_13\n        /* \"AndrewTate-testnet.sol.sol\":4763:4788  _removeMinter(msg.sender) */\n      jump\t// in\n    tag_12:\n        /* \"AndrewTate-testnet.sol.sol\":4719:4796  function renounceMinter() public {\r... */\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":4602:4711  function isMinter(address account) public view returns (bool) {\r... */\n    tag_9:\n        /* \"AndrewTate-testnet.sol.sol\":4658:4662  bool */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":4682:4703  _minters.has(account) */\n      tag_15\n        /* \"AndrewTate-testnet.sol.sol\":4658:4662  bool */\n      dup2\n        /* \"AndrewTate-testnet.sol.sol\":4695:4702  account */\n      dup4\n        /* \"AndrewTate-testnet.sol.sol\":4682:4694  _minters.has */\n      tag_16\n        /* \"AndrewTate-testnet.sol.sol\":4682:4703  _minters.has(account) */\n      jump\t// in\n    tag_15:\n        /* \"AndrewTate-testnet.sol.sol\":4675:4703  return _minters.has(account) */\n      swap3\n        /* \"AndrewTate-testnet.sol.sol\":4602:4711  function isMinter(address account) public view returns (bool) {\r... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":3450:3628  function add(Role storage role, address account) internal {\r... */\n    tag_10:\n        /* \"AndrewTate-testnet.sol.sol\":3528:3546  has(role, account) */\n      tag_18\n        /* \"AndrewTate-testnet.sol.sol\":3532:3536  role */\n      dup3\n        /* \"AndrewTate-testnet.sol.sol\":3538:3545  account */\n      dup3\n        /* \"AndrewTate-testnet.sol.sol\":3528:3531  has */\n      tag_16\n        /* \"AndrewTate-testnet.sol.sol\":3528:3546  has(role, account) */\n      jump\t// in\n    tag_18:\n        /* \"AndrewTate-testnet.sol.sol\":3527:3546  !has(role, account) */\n      iszero\n        /* \"AndrewTate-testnet.sol.sol\":3519:3582  require(!has(role, account), \"Roles: account already has role\") */\n      tag_19\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_19:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":3593:3613  role.bearer[account] */\n      and\n        /* \"AndrewTate-testnet.sol.sol\":3593:3604  role.bearer */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":3593:3613  role.bearer[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"AndrewTate-testnet.sol.sol\":3593:3620  role.bearer[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"AndrewTate-testnet.sol.sol\":3616:3620  true */\n      0x01\n        /* \"AndrewTate-testnet.sol.sol\":3593:3620  role.bearer[account] = true */\n      or\n      swap1\n      sstore\n        /* \"AndrewTate-testnet.sol.sol\":3450:3628  function add(Role storage role, address account) internal {\r... */\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":4934:5064  function _removeMinter(address account) internal {\r... */\n    tag_13:\n        /* \"AndrewTate-testnet.sol.sol\":4994:5018  _minters.remove(account) */\n      tag_21\n        /* \"AndrewTate-testnet.sol.sol\":4994:5002  _minters */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":5010:5017  account */\n      dup3\n        /* \"AndrewTate-testnet.sol.sol\":4994:5009  _minters.remove */\n      tag_22\n        /* \"AndrewTate-testnet.sol.sol\":4994:5018  _minters.remove(account) */\n      jump\t// in\n    tag_21:\n        /* \"AndrewTate-testnet.sol.sol\":5034:5056  MinterRemoved(account) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n      0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"AndrewTate-testnet.sol.sol\":4934:5064  function _removeMinter(address account) internal {\r... */\n      pop\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":3986:4189  function has(Role storage role, address account) internal view returns (bool) {\r... */\n    tag_16:\n        /* \"AndrewTate-testnet.sol.sol\":4058:4062  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":4083:4104  account != address(0) */\n      dup3\n      and\n        /* \"AndrewTate-testnet.sol.sol\":4075:4143  require(account != address(0), \"Roles: account is the zero address\") */\n      tag_24\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_24:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":4161:4181  role.bearer[account] */\n      and\n        /* \"AndrewTate-testnet.sol.sol\":4161:4172  role.bearer */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":4161:4181  role.bearer[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":3986:4189  function has(Role storage role, address account) internal view returns (bool) {\r... */\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":3708:3891  function remove(Role storage role, address account) internal {\r... */\n    tag_22:\n        /* \"AndrewTate-testnet.sol.sol\":3788:3806  has(role, account) */\n      tag_26\n        /* \"AndrewTate-testnet.sol.sol\":3792:3796  role */\n      dup3\n        /* \"AndrewTate-testnet.sol.sol\":3798:3805  account */\n      dup3\n        /* \"AndrewTate-testnet.sol.sol\":3788:3791  has */\n      tag_16\n        /* \"AndrewTate-testnet.sol.sol\":3788:3806  has(role, account) */\n      jump\t// in\n    tag_26:\n        /* \"AndrewTate-testnet.sol.sol\":3780:3844  require(has(role, account), \"Roles: account does not have role\") */\n      tag_27\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_27:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":3855:3875  role.bearer[account] */\n      and\n        /* \"AndrewTate-testnet.sol.sol\":3878:3883  false */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":3855:3875  role.bearer[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"AndrewTate-testnet.sol.sol\":3855:3883  role.bearer[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"AndrewTate-testnet.sol.sol\":3708:3891  function remove(Role storage role, address account) internal {\r... */\n      jump\t// out\n    stop\n    data_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257 526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65\n    data_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f 526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373\n\n    auxdata: 0xa2646970667358221220f850f69ee172f4eafeb08e962bc7410b670600390c5c2a2b28834f473d9a075e64736f6c63430007040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061001a3361001f565b610156565b61003781600061006e60201b61009c1790919060201c565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b61007882826100ef565b156100ca576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b0382166101365760405162461bcd60e51b815260040180806020018281038252602281526020018061040b6022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6102a6806101656000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063986502751461003b578063aa271e1a14610045575b600080fd5b61004361007f565b005b61006b6004803603602081101561005b57600080fd5b50356001600160a01b031661008a565b604080519115158252519081900360200190f35b6100883361011d565b565b6000610096818361015f565b92915050565b6100a6828261015f565b156100f8576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6101286000826101c6565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b60006001600160a01b0382166101a65760405162461bcd60e51b815260040180806020018281038252602281526020018061024f6022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6101d0828261015f565b61020b5760405162461bcd60e51b815260040180806020018281038252602181526020018061022e6021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff1916905556fe526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373a2646970667358221220f850f69ee172f4eafeb08e962bc7410b670600390c5c2a2b28834f473d9a075e64736f6c63430007040033526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A CALLER PUSH2 0x1F JUMP JUMPDEST PUSH2 0x156 JUMP JUMPDEST PUSH2 0x37 DUP2 PUSH1 0x0 PUSH2 0x6E PUSH1 0x20 SHL PUSH2 0x9C OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x78 DUP3 DUP3 PUSH2 0xEF JUMP JUMPDEST ISZERO PUSH2 0xCA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x136 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x40B PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x2A6 DUP1 PUSH2 0x165 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x98650275 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xAA271E1A EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x7F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x88 CALLER PUSH2 0x11D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x96 DUP2 DUP4 PUSH2 0x15F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA6 DUP3 DUP3 PUSH2 0x15F JUMP JUMPDEST ISZERO PUSH2 0xF8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x128 PUSH1 0x0 DUP3 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xE94479A9F7E1952CC78F2D6BAAB678ADC1B772D936C6583DEF489E524CB66692 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x24F PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1D0 DUP3 DUP3 PUSH2 0x15F JUMP JUMPDEST PUSH2 0x20B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x22E PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP INVALID MSTORE PUSH16 0x6C65733A206163636F756E7420646F65 PUSH20 0x206E6F74206861766520726F6C65526F6C65733A KECCAK256 PUSH2 0x6363 PUSH16 0x756E7420697320746865207A65726F20 PUSH2 0x6464 PUSH19 0x657373A2646970667358221220F850F69EE172 DELEGATECALL 0xEA INVALID 0xB0 DUP15 SWAP7 0x2B 0xC7 COINBASE SIGNEXTEND PUSH8 0x600390C5C2A2B28 DUP4 0x4F SELFBALANCE RETURNDATASIZE SWAP11 SMOD 0x5E PUSH5 0x736F6C6343 STOP SMOD DIV STOP CALLER MSTORE PUSH16 0x6C65733A206163636F756E7420697320 PUSH21 0x6865207A65726F2061646472657373000000000000 ",
							"sourceMap": "4196:871:0:-:0;;;4396:56;;;;;;;;;-1:-1:-1;4422:22:0;4433:10;4422;:22::i;:::-;4196:871;;4804:122;4861:21;4874:7;4861:8;:12;;;;;;:21;;;;:::i;:::-;4898:20;;-1:-1:-1;;;;;4898:20:0;;;;;;;;4804:122;:::o;3450:178::-;3528:18;3532:4;3538:7;3528:3;:18::i;:::-;3527:19;3519:63;;;;;-1:-1:-1;;;3519:63:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3593:20:0;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;3593:27:0;3616:4;3593:27;;;3450:178::o;3986:203::-;4058:4;-1:-1:-1;;;;;4083:21:0;;4075:68;;;;-1:-1:-1;;;4075:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4161:20:0;:11;:20;;;;;;;;;;;;;;;3986:203::o;4196:871::-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063986502751461003b578063aa271e1a14610045575b600080fd5b61004361007f565b005b61006b6004803603602081101561005b57600080fd5b50356001600160a01b031661008a565b604080519115158252519081900360200190f35b6100883361011d565b565b6000610096818361015f565b92915050565b6100a6828261015f565b156100f8576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6101286000826101c6565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b60006001600160a01b0382166101a65760405162461bcd60e51b815260040180806020018281038252602281526020018061024f6022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6101d0828261015f565b61020b5760405162461bcd60e51b815260040180806020018281038252602181526020018061022e6021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff1916905556fe526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373a2646970667358221220f850f69ee172f4eafeb08e962bc7410b670600390c5c2a2b28834f473d9a075e64736f6c63430007040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x98650275 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xAA271E1A EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x7F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x88 CALLER PUSH2 0x11D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x96 DUP2 DUP4 PUSH2 0x15F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA6 DUP3 DUP3 PUSH2 0x15F JUMP JUMPDEST ISZERO PUSH2 0xF8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x128 PUSH1 0x0 DUP3 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xE94479A9F7E1952CC78F2D6BAAB678ADC1B772D936C6583DEF489E524CB66692 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x24F PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1D0 DUP3 DUP3 PUSH2 0x15F JUMP JUMPDEST PUSH2 0x20B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x22E PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP INVALID MSTORE PUSH16 0x6C65733A206163636F756E7420646F65 PUSH20 0x206E6F74206861766520726F6C65526F6C65733A KECCAK256 PUSH2 0x6363 PUSH16 0x756E7420697320746865207A65726F20 PUSH2 0x6464 PUSH19 0x657373A2646970667358221220F850F69EE172 DELEGATECALL 0xEA INVALID 0xB0 DUP15 SWAP7 0x2B 0xC7 COINBASE SIGNEXTEND PUSH8 0x600390C5C2A2B28 DUP4 0x4F SELFBALANCE RETURNDATASIZE SWAP11 SMOD 0x5E PUSH5 0x736F6C6343 STOP SMOD DIV STOP CALLER ",
							"sourceMap": "4196:871:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4719:77;;;:::i;:::-;;4602:109;;;;;;;;;;;;;;;;-1:-1:-1;4602:109:0;-1:-1:-1;;;;;4602:109:0;;:::i;:::-;;;;;;;;;;;;;;;;;;4719:77;4763:25;4777:10;4763:13;:25::i;:::-;4719:77::o;4602:109::-;4658:4;4682:21;4658:4;4695:7;4682:12;:21::i;:::-;4675:28;4602:109;-1:-1:-1;;4602:109:0:o;3450:178::-;3528:18;3532:4;3538:7;3528:3;:18::i;:::-;3527:19;3519:63;;;;;-1:-1:-1;;;3519:63:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3593:20:0;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;3593:27:0;3616:4;3593:27;;;3450:178::o;4934:130::-;4994:24;:8;5010:7;4994:15;:24::i;:::-;5034:22;;-1:-1:-1;;;;;5034:22:0;;;;;;;;4934:130;:::o;3986:203::-;4058:4;-1:-1:-1;;;;;4083:21:0;;4075:68;;;;-1:-1:-1;;;4075:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4161:20:0;:11;:20;;;;;;;;;;;;;;;3986:203::o;3708:183::-;3788:18;3792:4;3798:7;3788:3;:18::i;:::-;3780:64;;;;-1:-1:-1;;;3780:64:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3855:20:0;3878:5;3855:20;;;;;;;;;;;:28;;-1:-1:-1;;3855:28:0;;;3708:183::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "135600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"isMinter(address)": "infinite",
								"renounceMinter()": "infinite"
							},
							"internal": {
								"_addMinter(address)": "infinite",
								"_removeMinter(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4196,
									"end": 5067,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 4196,
									"end": 5067,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 4196,
									"end": 5067,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4396,
									"end": 4452,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 4396,
									"end": 4452,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4396,
									"end": 4452,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 4396,
									"end": 4452,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 4396,
									"end": 4452,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 4396,
									"end": 4452,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4396,
									"end": 4452,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4396,
									"end": 4452,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 4396,
									"end": 4452,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 4396,
									"end": 4452,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4422,
									"end": 4444,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 4433,
									"end": 4443,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 4422,
									"end": 4432,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 4422,
									"end": 4444,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 4422,
									"end": 4444,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 4422,
									"end": 4444,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4196,
									"end": 5067,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 4196,
									"end": 5067,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 4804,
									"end": 4926,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 4804,
									"end": 4926,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4861,
									"end": 4882,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 4874,
									"end": 4881,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4861,
									"end": 4869,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4861,
									"end": 4873,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 4861,
									"end": 4873,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 4861,
									"end": 4873,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 4861,
									"end": 4873,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551626"
								},
								{
									"begin": 4861,
									"end": 4873,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 4861,
									"end": 4873,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4861,
									"end": 4882,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4861,
									"end": 4882,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4861,
									"end": 4882,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 4861,
									"end": 4882,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 4861,
									"end": 4882,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 4861,
									"end": 4882,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 4861,
									"end": 4882,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4898,
									"end": 4918,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 4898,
									"end": 4918,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4898,
									"end": 4918,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4898,
									"end": 4918,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 4898,
									"end": 4918,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4898,
									"end": 4918,
									"name": "PUSH",
									"source": 0,
									"value": "6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6"
								},
								{
									"begin": 4898,
									"end": 4918,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4898,
									"end": 4918,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4898,
									"end": 4918,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4898,
									"end": 4918,
									"name": "LOG2",
									"source": 0
								},
								{
									"begin": 4804,
									"end": 4926,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4804,
									"end": 4926,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 3450,
									"end": 3628,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 3450,
									"end": 3628,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3528,
									"end": 3546,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 3532,
									"end": 3536,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3538,
									"end": 3545,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3528,
									"end": 3531,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 3528,
									"end": 3546,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 3528,
									"end": 3546,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 3528,
									"end": 3546,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3527,
									"end": 3546,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "PUSH",
									"source": 0,
									"value": "526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500"
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "PUSH",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "PUSH",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 3519,
									"end": 3582,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3593,
									"end": 3613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3593,
									"end": 3604,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3593,
									"end": 3613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3593,
									"end": 3613,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3593,
									"end": 3613,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3593,
									"end": 3613,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3593,
									"end": 3613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3593,
									"end": 3613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3593,
									"end": 3613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3593,
									"end": 3613,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3593,
									"end": 3613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3593,
									"end": 3613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3593,
									"end": 3613,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3593,
									"end": 3620,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3593,
									"end": 3620,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3593,
									"end": 3620,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3616,
									"end": 3620,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3593,
									"end": 3620,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3593,
									"end": 3620,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3593,
									"end": 3620,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3450,
									"end": 3628,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 3986,
									"end": 4189,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 3986,
									"end": 4189,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4058,
									"end": 4062,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4083,
									"end": 4104,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4083,
									"end": 4104,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "PUSH",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "PUSH data",
									"source": 0,
									"value": "9D214FA89563F4E6456A3929327E54500EA1CDE2C0BA9FB2035EC106190D682F"
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "PUSH",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 4075,
									"end": 4143,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4161,
									"end": 4181,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 4161,
									"end": 4172,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4161,
									"end": 4181,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4161,
									"end": 4181,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4161,
									"end": 4181,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4161,
									"end": 4181,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 4161,
									"end": 4181,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4161,
									"end": 4181,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4161,
									"end": 4181,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4161,
									"end": 4181,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4161,
									"end": 4181,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 4161,
									"end": 4181,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4161,
									"end": 4181,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 4161,
									"end": 4181,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 4161,
									"end": 4181,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 4161,
									"end": 4181,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 4161,
									"end": 4181,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3986,
									"end": 4189,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 4196,
									"end": 5067,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 4196,
									"end": 5067,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4196,
									"end": 5067,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4196,
									"end": 5067,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4196,
									"end": 5067,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4196,
									"end": 5067,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4196,
									"end": 5067,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 4196,
									"end": 5067,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4196,
									"end": 5067,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f850f69ee172f4eafeb08e962bc7410b670600390c5c2a2b28834f473d9a075e64736f6c63430007040033",
									".code": [
										{
											"begin": 4196,
											"end": 5067,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4196,
											"end": 5067,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4196,
											"end": 5067,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 5067,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 5067,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 5067,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 5067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4196,
											"end": 5067,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 5067,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4196,
											"end": 5067,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 5067,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 5067,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4196,
											"end": 5067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 5067,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 5067,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4196,
											"end": 5067,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 5067,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 5067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4196,
											"end": 5067,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 5067,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4196,
											"end": 5067,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 5067,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4196,
											"end": 5067,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 5067,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 5067,
											"name": "PUSH",
											"source": 0,
											"value": "98650275"
										},
										{
											"begin": 4196,
											"end": 5067,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 5067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4196,
											"end": 5067,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 5067,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 5067,
											"name": "PUSH",
											"source": 0,
											"value": "AA271E1A"
										},
										{
											"begin": 4196,
											"end": 5067,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 5067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4196,
											"end": 5067,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 5067,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4196,
											"end": 5067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 5067,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4196,
											"end": 5067,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 5067,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4796,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4719,
											"end": 4796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4719,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4719,
											"end": 4796,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4719,
											"end": 4796,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4719,
											"end": 4796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4796,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4796,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4719,
											"end": 4796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 4777,
											"end": 4787,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 4763,
											"end": 4788,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4763,
											"end": 4788,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 4763,
											"end": 4788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4796,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4658,
											"end": 4662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4682,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 4658,
											"end": 4662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4695,
											"end": 4702,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4682,
											"end": 4694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 4682,
											"end": 4703,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4682,
											"end": 4703,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 4682,
											"end": 4703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4675,
											"end": 4703,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4602,
											"end": 4711,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3450,
											"end": 3628,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3450,
											"end": 3628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3528,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3532,
											"end": 3536,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3538,
											"end": 3545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3528,
											"end": 3546,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3528,
											"end": 3546,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3528,
											"end": 3546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3527,
											"end": 3546,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "PUSH",
											"source": 0,
											"value": "526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500"
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3593,
											"end": 3613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3593,
											"end": 3604,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3593,
											"end": 3613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3593,
											"end": 3613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3593,
											"end": 3613,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3593,
											"end": 3613,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3593,
											"end": 3613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3593,
											"end": 3613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3593,
											"end": 3613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3593,
											"end": 3613,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3593,
											"end": 3613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3593,
											"end": 3613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3593,
											"end": 3613,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3593,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3593,
											"end": 3620,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3593,
											"end": 3620,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3616,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3593,
											"end": 3620,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3593,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3593,
											"end": 3620,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3450,
											"end": 3628,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4934,
											"end": 5064,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 4934,
											"end": 5064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4994,
											"end": 5002,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5010,
											"end": 5017,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4994,
											"end": 5018,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4994,
											"end": 5018,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4994,
											"end": 5018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5034,
											"end": 5056,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5034,
											"end": 5056,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5034,
											"end": 5056,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5034,
											"end": 5056,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5034,
											"end": 5056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5034,
											"end": 5056,
											"name": "PUSH",
											"source": 0,
											"value": "E94479A9F7E1952CC78F2D6BAAB678ADC1B772D936C6583DEF489E524CB66692"
										},
										{
											"begin": 5034,
											"end": 5056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5034,
											"end": 5056,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5034,
											"end": 5056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5034,
											"end": 5056,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 4934,
											"end": 5064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4934,
											"end": 5064,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3986,
											"end": 4189,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3986,
											"end": 4189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4058,
											"end": 4062,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4083,
											"end": 4104,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4083,
											"end": 4104,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "PUSH data",
											"source": 0,
											"value": "9D214FA89563F4E6456A3929327E54500EA1CDE2C0BA9FB2035EC106190D682F"
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4075,
											"end": 4143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4161,
											"end": 4181,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4161,
											"end": 4181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4181,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4181,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4161,
											"end": 4181,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4181,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4181,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4181,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4161,
											"end": 4181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4181,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4181,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4181,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4161,
											"end": 4181,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3986,
											"end": 4189,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3708,
											"end": 3891,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3708,
											"end": 3891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3788,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3792,
											"end": 3796,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3805,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3788,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3788,
											"end": 3806,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3788,
											"end": 3806,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3788,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "PUSH data",
											"source": 0,
											"value": "7BD893145AC435F339BB7C288622D270324B7033B011F693ACA172F5CBC3C257"
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3780,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3855,
											"end": 3875,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3855,
											"end": 3875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3855,
											"end": 3875,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3855,
											"end": 3875,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3855,
											"end": 3875,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3855,
											"end": 3875,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3855,
											"end": 3875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3855,
											"end": 3875,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3855,
											"end": 3875,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3855,
											"end": 3875,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3855,
											"end": 3875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3855,
											"end": 3875,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3855,
											"end": 3883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3855,
											"end": 3883,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3855,
											"end": 3883,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3855,
											"end": 3883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3855,
											"end": 3883,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3708,
											"end": 3891,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"7BD893145AC435F339BB7C288622D270324B7033B011F693ACA172F5CBC3C257": "526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65",
										"9D214FA89563F4E6456A3929327E54500EA1CDE2C0BA9FB2035EC106190D682F": "526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373"
									}
								},
								"9D214FA89563F4E6456A3929327E54500EA1CDE2C0BA9FB2035EC106190D682F": "526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373"
							}
						},
						"methodIdentifiers": {
							"isMinter(address)": "aa271e1a",
							"renounceMinter()": "98650275"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"AndrewTate-testnet.sol.sol\":\"MinterRole\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"AndrewTate-testnet.sol.sol\":{\"keccak256\":\"0x001c21c0a1afc51a8ef4816412db3c789b6f74a7a1a626c8f281b67652b5a656\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1b15a71551bcd77ba0dceeb9c92caea3f6a8af34b670ad5334b1b3ac6e7f7a0\",\"dweb:/ipfs/QmUAWeemcsWpVBJSCxZSi4HhfkNKbj3sssaBinRH8jy1Ld\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 524,
								"contract": "AndrewTate-testnet.sol.sol:MinterRole",
								"label": "_minters",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(Role)433_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_struct(Role)433_storage": {
								"encoding": "inplace",
								"label": "struct Roles.Role",
								"members": [
									{
										"astId": 432,
										"contract": "AndrewTate-testnet.sol.sol:MinterRole",
										"label": "bearer",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									}
								],
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								}
							],
							"name": "OwnershipRenounced",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"AndrewTate-testnet.sol.sol\":7430:8432  contract Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"AndrewTate-testnet.sol.sol\":7666:7718  constructor() {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"AndrewTate-testnet.sol.sol\":7691:7697  _owner */\n  0x00\n    /* \"AndrewTate-testnet.sol.sol\":7691:7710  _owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"AndrewTate-testnet.sol.sol\":7700:7710  msg.sender */\n  caller\n    /* \"AndrewTate-testnet.sol.sol\":7691:7710  _owner = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"AndrewTate-testnet.sol.sol\":7430:8432  contract Ownable {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"AndrewTate-testnet.sol.sol\":7430:8432  contract Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8f32d59b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"AndrewTate-testnet.sol.sol\":7991:8117  function renounceOwnership() public onlyOwner {\r... */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"AndrewTate-testnet.sol.sol\":7726:7805  function owner() public view returns (address) {\r... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"AndrewTate-testnet.sol.sol\":7891:7983  function isOwner() public view returns (bool) {\r... */\n    tag_5:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"AndrewTate-testnet.sol.sol\":8125:8234  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_6:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_15\n      jump\t// in\n        /* \"AndrewTate-testnet.sol.sol\":7991:8117  function renounceOwnership() public onlyOwner {\r... */\n    tag_8:\n        /* \"AndrewTate-testnet.sol.sol\":7853:7862  isOwner() */\n      tag_17\n        /* \"AndrewTate-testnet.sol.sol\":7853:7860  isOwner */\n      tag_12\n        /* \"AndrewTate-testnet.sol.sol\":7853:7862  isOwner() */\n      jump\t// in\n    tag_17:\n        /* \"AndrewTate-testnet.sol.sol\":7845:7863  require(isOwner()) */\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n        /* \"AndrewTate-testnet.sol.sol\":8072:8078  _owner */\n      0x00\n      dup1\n      sload\n        /* \"AndrewTate-testnet.sol.sol\":8053:8079  OwnershipRenounced(_owner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":8072:8078  _owner */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"AndrewTate-testnet.sol.sol\":8053:8079  OwnershipRenounced(_owner) */\n      0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820\n      swap2\n      log2\n        /* \"AndrewTate-testnet.sol.sol\":8107:8108  0 */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":8090:8109  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"AndrewTate-testnet.sol.sol\":7991:8117  function renounceOwnership() public onlyOwner {\r... */\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":7726:7805  function owner() public view returns (address) {\r... */\n    tag_10:\n        /* \"AndrewTate-testnet.sol.sol\":7764:7771  address */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":7791:7797  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"AndrewTate-testnet.sol.sol\":7726:7805  function owner() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":7891:7983  function isOwner() public view returns (bool) {\r... */\n    tag_12:\n        /* \"AndrewTate-testnet.sol.sol\":7931:7935  bool */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":7969:7975  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"AndrewTate-testnet.sol.sol\":7955:7965  msg.sender */\n      caller\n        /* \"AndrewTate-testnet.sol.sol\":7955:7975  msg.sender == _owner */\n      eq\n      swap1\n        /* \"AndrewTate-testnet.sol.sol\":7891:7983  function isOwner() public view returns (bool) {\r... */\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":8125:8234  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_15:\n        /* \"AndrewTate-testnet.sol.sol\":7853:7862  isOwner() */\n      tag_23\n        /* \"AndrewTate-testnet.sol.sol\":7853:7860  isOwner */\n      tag_12\n        /* \"AndrewTate-testnet.sol.sol\":7853:7862  isOwner() */\n      jump\t// in\n    tag_23:\n        /* \"AndrewTate-testnet.sol.sol\":7845:7863  require(isOwner()) */\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n        /* \"AndrewTate-testnet.sol.sol\":8198:8226  _transferOwnership(newOwner) */\n      tag_26\n        /* \"AndrewTate-testnet.sol.sol\":8217:8225  newOwner */\n      dup2\n        /* \"AndrewTate-testnet.sol.sol\":8198:8216  _transferOwnership */\n      tag_27\n        /* \"AndrewTate-testnet.sol.sol\":8198:8226  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_26:\n        /* \"AndrewTate-testnet.sol.sol\":8125:8234  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"AndrewTate-testnet.sol.sol\":8242:8429  function _transferOwnership(address newOwner) internal {\r... */\n    tag_27:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"AndrewTate-testnet.sol.sol\":8316:8338  newOwner != address(0) */\n      dup2\n      and\n        /* \"AndrewTate-testnet.sol.sol\":8308:8339  require(newOwner != address(0)) */\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n        /* \"AndrewTate-testnet.sol.sol\":8376:8382  _owner */\n      0x00\n      dup1\n      sload\n        /* \"AndrewTate-testnet.sol.sol\":8355:8393  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"AndrewTate-testnet.sol.sol\":8376:8382  _owner */\n      swap3\n      and\n      swap2\n        /* \"AndrewTate-testnet.sol.sol\":8355:8393  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"AndrewTate-testnet.sol.sol\":8404:8410  _owner */\n      0x00\n        /* \"AndrewTate-testnet.sol.sol\":8404:8421  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"AndrewTate-testnet.sol.sol\":8242:8429  function _transferOwnership(address newOwner) internal {\r... */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205c747f87dae3249bbbb258df56573632f00a26b9ce72dd88ed177e5dee59e80364736f6c63430007040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600080546001600160a01b031916331790556101fb806100326000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a6146100515780638da5cb5b1461005b5780638f32d59b1461007f578063f2fde38b1461009b575b600080fd5b6100596100c1565b005b61006361011a565b604080516001600160a01b039092168252519081900360200190f35b610087610129565b604080519115158252519081900360200190f35b610059600480360360208110156100b157600080fd5b50356001600160a01b031661013a565b6100c9610129565b6100d257600080fd5b600080546040516001600160a01b03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a2600080546001600160a01b0319169055565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b610142610129565b61014b57600080fd5b61015481610157565b50565b6001600160a01b03811661016a57600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fea26469706673582212205c747f87dae3249bbbb258df56573632f00a26b9ce72dd88ed177e5dee59e80364736f6c63430007040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x1FB DUP1 PUSH2 0x32 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xC1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x63 PUSH2 0x11A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x87 PUSH2 0x129 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x59 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13A JUMP JUMPDEST PUSH2 0xC9 PUSH2 0x129 JUMP JUMPDEST PUSH2 0xD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 SWAP2 LOG2 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP JUMPDEST PUSH2 0x142 PUSH2 0x129 JUMP JUMPDEST PUSH2 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x154 DUP2 PUSH2 0x157 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C PUSH21 0x7F87DAE3249BBBB258DF56573632F00A26B9CE72DD DUP9 0xED OR PUSH31 0x5DEE59E80364736F6C63430007040033000000000000000000000000000000 ",
							"sourceMap": "7430:1002:0:-:0;;;7666:52;;;;;;;;;-1:-1:-1;7691:6:0;:19;;-1:-1:-1;;;;;;7691:19:0;7700:10;7691:19;;;7430:1002;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a6146100515780638da5cb5b1461005b5780638f32d59b1461007f578063f2fde38b1461009b575b600080fd5b6100596100c1565b005b61006361011a565b604080516001600160a01b039092168252519081900360200190f35b610087610129565b604080519115158252519081900360200190f35b610059600480360360208110156100b157600080fd5b50356001600160a01b031661013a565b6100c9610129565b6100d257600080fd5b600080546040516001600160a01b03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a2600080546001600160a01b0319169055565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b610142610129565b61014b57600080fd5b61015481610157565b50565b6001600160a01b03811661016a57600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fea26469706673582212205c747f87dae3249bbbb258df56573632f00a26b9ce72dd88ed177e5dee59e80364736f6c63430007040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xC1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x63 PUSH2 0x11A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x87 PUSH2 0x129 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x59 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13A JUMP JUMPDEST PUSH2 0xC9 PUSH2 0x129 JUMP JUMPDEST PUSH2 0xD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 SWAP2 LOG2 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP JUMPDEST PUSH2 0x142 PUSH2 0x129 JUMP JUMPDEST PUSH2 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x154 DUP2 PUSH2 0x157 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C PUSH21 0x7F87DAE3249BBBB258DF56573632F00A26B9CE72DD DUP9 0xED OR PUSH31 0x5DEE59E80364736F6C63430007040033000000000000000000000000000000 ",
							"sourceMap": "7430:1002:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7991:126;;;:::i;:::-;;7726:79;;;:::i;:::-;;;;-1:-1:-1;;;;;7726:79:0;;;;;;;;;;;;;;7891:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;8125:109;;;;;;;;;;;;;;;;-1:-1:-1;8125:109:0;-1:-1:-1;;;;;8125:109:0;;:::i;7991:126::-;7853:9;:7;:9::i;:::-;7845:18;;;;;;8072:6:::1;::::0;;8053:26:::1;::::0;-1:-1:-1;;;;;8072:6:0;;::::1;::::0;8053:26:::1;::::0;::::1;8107:1;8090:19:::0;;-1:-1:-1;;;;;;8090:19:0::1;::::0;;7991:126::o;7726:79::-;7764:7;7791:6;-1:-1:-1;;;;;7791:6:0;7726:79;:::o;7891:92::-;7931:4;7969:6;-1:-1:-1;;;;;7969:6:0;7955:10;:20;;7891:92::o;8125:109::-;7853:9;:7;:9::i;:::-;7845:18;;;;;;8198:28:::1;8217:8;8198:18;:28::i;:::-;8125:109:::0;:::o;8242:187::-;-1:-1:-1;;;;;8316:22:0;;8308:31;;;;;;8376:6;;;8355:38;;-1:-1:-1;;;;;8355:38:0;;;;8376:6;;;8355:38;;;8404:6;:17;;-1:-1:-1;;;;;;8404:17:0;-1:-1:-1;;;;;8404:17:0;;;;;;;;;;8242:187::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "101400",
								"executionCost": "20982",
								"totalCost": "122382"
							},
							"external": {
								"isOwner()": "1049",
								"owner()": "1037",
								"renounceOwnership()": "23789",
								"transferOwnership(address)": "24402"
							},
							"internal": {
								"_transferOwnership(address)": "23276"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 7430,
									"end": 8432,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 7430,
									"end": 8432,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7430,
									"end": 8432,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7666,
									"end": 7718,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 7666,
									"end": 7718,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7666,
									"end": 7718,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 7666,
									"end": 7718,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7666,
									"end": 7718,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7666,
									"end": 7718,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7666,
									"end": 7718,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7666,
									"end": 7718,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 7666,
									"end": 7718,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7666,
									"end": 7718,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 7691,
									"end": 7697,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7691,
									"end": 7710,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7691,
									"end": 7710,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 7691,
									"end": 7710,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7700,
									"end": 7710,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 7691,
									"end": 7710,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 7691,
									"end": 7710,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7691,
									"end": 7710,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7430,
									"end": 8432,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7430,
									"end": 8432,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7430,
									"end": 8432,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7430,
									"end": 8432,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7430,
									"end": 8432,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 7430,
									"end": 8432,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7430,
									"end": 8432,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205c747f87dae3249bbbb258df56573632f00a26b9ce72dd88ed177e5dee59e80364736f6c63430007040033",
									".code": [
										{
											"begin": 7430,
											"end": 8432,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "PUSH",
											"source": 0,
											"value": "8F32D59B"
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 8432,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7991,
											"end": 8117,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7991,
											"end": 8117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7991,
											"end": 8117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7991,
											"end": 8117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7991,
											"end": 8117,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7991,
											"end": 8117,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7991,
											"end": 8117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7991,
											"end": 8117,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7991,
											"end": 8117,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7991,
											"end": 8117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 7853,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8078,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8072,
											"end": 8078,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8078,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8053,
											"end": 8079,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8053,
											"end": 8079,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8072,
											"end": 8078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8078,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8078,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8078,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8053,
											"end": 8079,
											"name": "PUSH",
											"source": 0,
											"value": "F8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820"
										},
										{
											"begin": 8053,
											"end": 8079,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8053,
											"end": 8079,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 8107,
											"end": 8108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8090,
											"end": 8109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8090,
											"end": 8109,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8090,
											"end": 8109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8090,
											"end": 8109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8090,
											"end": 8109,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7991,
											"end": 8117,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7764,
											"end": 7771,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7797,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7791,
											"end": 7797,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7805,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7931,
											"end": 7935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7969,
											"end": 7975,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7969,
											"end": 7975,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7955,
											"end": 7965,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7955,
											"end": 7975,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7955,
											"end": 7975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7891,
											"end": 7983,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 7853,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8198,
											"end": 8226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 8217,
											"end": 8225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8198,
											"end": 8216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 8198,
											"end": 8226,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8198,
											"end": 8226,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 8198,
											"end": 8226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8125,
											"end": 8234,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8242,
											"end": 8429,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 8242,
											"end": 8429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8316,
											"end": 8338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8316,
											"end": 8338,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8308,
											"end": 8339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 8308,
											"end": 8339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8308,
											"end": 8339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8308,
											"end": 8339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8308,
											"end": 8339,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8308,
											"end": 8339,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 8308,
											"end": 8339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8376,
											"end": 8382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8376,
											"end": 8382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8376,
											"end": 8382,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8355,
											"end": 8393,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8355,
											"end": 8393,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8355,
											"end": 8393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8355,
											"end": 8393,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8355,
											"end": 8393,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8355,
											"end": 8393,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8376,
											"end": 8382,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8376,
											"end": 8382,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8376,
											"end": 8382,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8355,
											"end": 8393,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 8355,
											"end": 8393,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8355,
											"end": 8393,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 8404,
											"end": 8410,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8404,
											"end": 8421,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8404,
											"end": 8421,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8404,
											"end": 8421,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8404,
											"end": 8421,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8404,
											"end": 8421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8404,
											"end": 8421,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8404,
											"end": 8421,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8404,
											"end": 8421,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8404,
											"end": 8421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8404,
											"end": 8421,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8404,
											"end": 8421,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 8404,
											"end": 8421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8404,
											"end": 8421,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8429,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"AndrewTate-testnet.sol.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"AndrewTate-testnet.sol.sol\":{\"keccak256\":\"0x001c21c0a1afc51a8ef4816412db3c789b6f74a7a1a626c8f281b67652b5a656\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1b15a71551bcd77ba0dceeb9c92caea3f6a8af34b670ad5334b1b3ac6e7f7a0\",\"dweb:/ipfs/QmUAWeemcsWpVBJSCxZSi4HhfkNKbj3sssaBinRH8jy1Ld\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 764,
								"contract": "AndrewTate-testnet.sol.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Roles": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"AndrewTate-testnet.sol.sol\":3290:4192  library Roles {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"AndrewTate-testnet.sol.sol\":3290:4192  library Roles {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f39743c08df14022a17eb4c5272ecf4e6938c519405d48d9bab1e55fc863413a64736f6c63430007040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f39743c08df14022a17eb4c5272ecf4e6938c519405d48d9bab1e55fc863413a64736f6c63430007040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN SWAP8 NUMBER 0xC0 DUP14 CALL BLOCKHASH 0x22 LOG1 PUSH31 0xB4C5272ECF4E6938C519405D48D9BAB1E55FC863413A64736F6C6343000704 STOP CALLER ",
							"sourceMap": "3290:902:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f39743c08df14022a17eb4c5272ecf4e6938c519405d48d9bab1e55fc863413a64736f6c63430007040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN SWAP8 NUMBER 0xC0 DUP14 CALL BLOCKHASH 0x22 LOG1 PUSH31 0xB4C5272ECF4E6938C519405D48D9BAB1E55FC863413A64736F6C6343000704 STOP CALLER ",
							"sourceMap": "3290:902:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(struct Roles.Role storage pointer,address)": "infinite",
								"has(struct Roles.Role storage pointer,address)": "infinite",
								"remove(struct Roles.Role storage pointer,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3290,
									"end": 4192,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3290,
									"end": 4192,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3290,
									"end": 4192,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 3290,
									"end": 4192,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3290,
									"end": 4192,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3290,
									"end": 4192,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3290,
									"end": 4192,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 3290,
									"end": 4192,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3290,
									"end": 4192,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3290,
									"end": 4192,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3290,
									"end": 4192,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 3290,
									"end": 4192,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 3290,
									"end": 4192,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 3290,
									"end": 4192,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3290,
									"end": 4192,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3290,
									"end": 4192,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 3290,
									"end": 4192,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3290,
									"end": 4192,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3290,
									"end": 4192,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 3290,
									"end": 4192,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3290,
									"end": 4192,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3290,
									"end": 4192,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 3290,
									"end": 4192,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3290,
									"end": 4192,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 3290,
									"end": 4192,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3290,
									"end": 4192,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3290,
									"end": 4192,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f39743c08df14022a17eb4c5272ecf4e6938c519405d48d9bab1e55fc863413a64736f6c63430007040033",
									".code": [
										{
											"begin": 3290,
											"end": 4192,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 3290,
											"end": 4192,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 3290,
											"end": 4192,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3290,
											"end": 4192,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3290,
											"end": 4192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3290,
											"end": 4192,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3290,
											"end": 4192,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3290,
											"end": 4192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3290,
											"end": 4192,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"AndrewTate-testnet.sol.sol\":\"Roles\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"AndrewTate-testnet.sol.sol\":{\"keccak256\":\"0x001c21c0a1afc51a8ef4816412db3c789b6f74a7a1a626c8f281b67652b5a656\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1b15a71551bcd77ba0dceeb9c92caea3f6a8af34b670ad5334b1b3ac6e7f7a0\",\"dweb:/ipfs/QmUAWeemcsWpVBJSCxZSi4HhfkNKbj3sssaBinRH8jy1Ld\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"AndrewTate-testnet.sol.sol\":1876:3225  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"AndrewTate-testnet.sol.sol\":1876:3225  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200d4140a55d44fab362eae9e9603f61326124cd8da7acbaa56b94324b0a0af1d064736f6c63430007040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200d4140a55d44fab362eae9e9603f61326124cd8da7acbaa56b94324b0a0af1d064736f6c63430007040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD COINBASE BLOCKHASH 0xA5 0x5D DIFFICULTY STATICCALL 0xB3 PUSH3 0xEAE9E9 PUSH1 0x3F PUSH2 0x3261 0x24 0xCD DUP14 0xA7 0xAC 0xBA 0xA5 PUSH12 0x94324B0A0AF1D064736F6C63 NUMBER STOP SMOD DIV STOP CALLER ",
							"sourceMap": "1876:1349:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200d4140a55d44fab362eae9e9603f61326124cd8da7acbaa56b94324b0a0af1d064736f6c63430007040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD COINBASE BLOCKHASH 0xA5 0x5D DIFFICULTY STATICCALL 0xB3 PUSH3 0xEAE9E9 PUSH1 0x3F PUSH2 0x3261 0x24 0xCD DUP14 0xA7 0xAC 0xBA 0xA5 PUSH12 0x94324B0A0AF1D064736F6C63 NUMBER STOP SMOD DIV STOP CALLER ",
							"sourceMap": "1876:1349:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1876,
									"end": 3225,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1876,
									"end": 3225,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1876,
									"end": 3225,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 1876,
									"end": 3225,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1876,
									"end": 3225,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1876,
									"end": 3225,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1876,
									"end": 3225,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1876,
									"end": 3225,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1876,
									"end": 3225,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1876,
									"end": 3225,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1876,
									"end": 3225,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 1876,
									"end": 3225,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 1876,
									"end": 3225,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1876,
									"end": 3225,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1876,
									"end": 3225,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1876,
									"end": 3225,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 1876,
									"end": 3225,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1876,
									"end": 3225,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1876,
									"end": 3225,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 1876,
									"end": 3225,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1876,
									"end": 3225,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1876,
									"end": 3225,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 1876,
									"end": 3225,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1876,
									"end": 3225,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 1876,
									"end": 3225,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1876,
									"end": 3225,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1876,
									"end": 3225,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200d4140a55d44fab362eae9e9603f61326124cd8da7acbaa56b94324b0a0af1d064736f6c63430007040033",
									".code": [
										{
											"begin": 1876,
											"end": 3225,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 3225,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 3225,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 3225,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1876,
											"end": 3225,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1876,
											"end": 3225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 3225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 3225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 3225,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"AndrewTate-testnet.sol.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"AndrewTate-testnet.sol.sol\":{\"keccak256\":\"0x001c21c0a1afc51a8ef4816412db3c789b6f74a7a1a626c8f281b67652b5a656\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1b15a71551bcd77ba0dceeb9c92caea3f6a8af34b670ad5334b1b3ac6e7f7a0\",\"dweb:/ipfs/QmUAWeemcsWpVBJSCxZSi4HhfkNKbj3sssaBinRH8jy1Ld\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMathInt": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"AndrewTate-testnet.sol.sol\":59:1109  library SafeMathInt {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"AndrewTate-testnet.sol.sol\":59:1109  library SafeMathInt {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220eceb4279e19865f8cc7e7907ee90c51e678c3c4de3617e40174f0fb6208832d064736f6c63430007040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220eceb4279e19865f8cc7e7907ee90c51e678c3c4de3617e40174f0fb6208832d064736f6c63430007040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC 0xEB TIMESTAMP PUSH26 0xE19865F8CC7E7907EE90C51E678C3C4DE3617E40174F0FB62088 ORIGIN 0xD0 PUSH5 0x736F6C6343 STOP SMOD DIV STOP CALLER ",
							"sourceMap": "59:1050:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220eceb4279e19865f8cc7e7907ee90c51e678c3c4de3617e40174f0fb6208832d064736f6c63430007040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC 0xEB TIMESTAMP PUSH26 0xE19865F8CC7E7907EE90C51E678C3C4DE3617E40174F0FB62088 ORIGIN 0xD0 PUSH5 0x736F6C6343 STOP SMOD DIV STOP CALLER ",
							"sourceMap": "59:1050:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"abs(int256)": "infinite",
								"add(int256,int256)": "infinite",
								"div(int256,int256)": "infinite",
								"mul(int256,int256)": "infinite",
								"sub(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 59,
									"end": 1109,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59,
									"end": 1109,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59,
									"end": 1109,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 59,
									"end": 1109,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 59,
									"end": 1109,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 59,
									"end": 1109,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 59,
									"end": 1109,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 59,
									"end": 1109,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 59,
									"end": 1109,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 59,
									"end": 1109,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 1109,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 59,
									"end": 1109,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 59,
									"end": 1109,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 59,
									"end": 1109,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 59,
									"end": 1109,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 59,
									"end": 1109,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 59,
									"end": 1109,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 59,
									"end": 1109,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 59,
									"end": 1109,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 59,
									"end": 1109,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 1109,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 59,
									"end": 1109,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 59,
									"end": 1109,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 59,
									"end": 1109,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 59,
									"end": 1109,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 59,
									"end": 1109,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 59,
									"end": 1109,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220eceb4279e19865f8cc7e7907ee90c51e678c3c4de3617e40174f0fb6208832d064736f6c63430007040033",
									".code": [
										{
											"begin": 59,
											"end": 1109,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 59,
											"end": 1109,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 59,
											"end": 1109,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59,
											"end": 1109,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 59,
											"end": 1109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59,
											"end": 1109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59,
											"end": 1109,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59,
											"end": 1109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59,
											"end": 1109,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"AndrewTate-testnet.sol.sol\":\"SafeMathInt\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"AndrewTate-testnet.sol.sol\":{\"keccak256\":\"0x001c21c0a1afc51a8ef4816412db3c789b6f74a7a1a626c8f281b67652b5a656\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1b15a71551bcd77ba0dceeb9c92caea3f6a8af34b670ad5334b1b3ac6e7f7a0\",\"dweb:/ipfs/QmUAWeemcsWpVBJSCxZSi4HhfkNKbj3sssaBinRH8jy1Ld\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"AndrewTate-testnet.sol.sol": {
				"ast": {
					"absolutePath": "AndrewTate-testnet.sol.sol",
					"exportedSymbols": {
						"AndrewTateToken": [
							2465
						],
						"ERC20Detailed": [
							655
						],
						"IDEXFactory": [
							762
						],
						"IDEXRouter": [
							752
						],
						"IERC20": [
							258
						],
						"InterfaceLP": [
							428
						],
						"MinterRole": [
							600
						],
						"Ownable": [
							865
						],
						"Roles": [
							511
						],
						"SafeMath": [
							424
						],
						"SafeMathInt": [
							191
						]
					},
					"id": 2466,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.7",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 191,
							"linearizedBaseContracts": [
								191
							],
							"name": "SafeMathInt",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 9,
									"mutability": "constant",
									"name": "MIN_INT256",
									"nodeType": "VariableDeclaration",
									"scope": 191,
									"src": "86:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 2,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "86:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"id": 8,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"arguments": [
												{
													"hexValue": "31",
													"id": 5,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "130:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													}
												],
												"id": 4,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "123:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_int256_$",
													"typeString": "type(int256)"
												},
												"typeName": {
													"id": 3,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "123:6:0",
													"typeDescriptions": {}
												}
											},
											"id": 6,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "123:9:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323535",
											"id": 7,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "136:3:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_255_by_1",
												"typeString": "int_const 255"
											},
											"value": "255"
										},
										"src": "123:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 19,
									"mutability": "constant",
									"name": "MAX_INT256",
									"nodeType": "VariableDeclaration",
									"scope": 191,
									"src": "146:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 10,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "146:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"value": {
										"id": 18,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "~",
										"prefix": true,
										"src": "183:19:0",
										"subExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 13,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "192:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"id": 12,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "185:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 11,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "185:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 14,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "185:9:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "323535",
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "198:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "255"
													},
													"src": "185:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												}
											],
											"id": 17,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "184:18:0",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "275:175:0",
										"statements": [
											{
												"assignments": [
													29
												],
												"declarations": [
													{
														"constant": false,
														"id": 29,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 66,
														"src": "286:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 28,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "286:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 33,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "297:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 31,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "301:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "297:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "286:16:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 35,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "323:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 36,
																	"name": "MIN_INT256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "328:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "323:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 40,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 38,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 21,
																				"src": "343:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&",
																			"rightExpression": {
																				"id": 39,
																				"name": "MIN_INT256",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 9,
																				"src": "347:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "343:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 41,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "342:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 44,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 42,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 23,
																				"src": "363:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&",
																			"rightExpression": {
																				"id": 43,
																				"name": "MIN_INT256",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 9,
																				"src": "367:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "363:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 45,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "362:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "342:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "323:55:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 34,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "315:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "315:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "315:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 61,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 53,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 51,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 23,
																			"src": "399:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 52,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "404:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "399:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 54,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "398:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 59,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 57,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 55,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 29,
																				"src": "411:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 56,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 23,
																				"src": "415:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "411:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 58,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 21,
																			"src": "420:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"src": "411:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 60,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "410:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "398:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 50,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "390:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "390:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "390:33:0"
											},
											{
												"expression": {
													"id": 64,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "441:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 27,
												"id": 65,
												"nodeType": "Return",
												"src": "434:8:0"
											}
										]
									},
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "224:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 20,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "224:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "234:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "234:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "223:20:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "267:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 25,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "267:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "266:8:0"
									},
									"scope": 191,
									"src": "211:239:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "522:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 77,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "541:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "-",
																	"prefix": true,
																	"src": "546:2:0",
																	"subExpression": {
																		"hexValue": "31",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "547:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_minus_1_by_1",
																		"typeString": "int_const -1"
																	}
																},
																"src": "541:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 83,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 81,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 69,
																	"src": "552:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 82,
																	"name": "MIN_INT256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "557:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "552:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "541:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "533:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "533:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "533:35:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 87,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 69,
														"src": "588:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 88,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "592:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "588:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 75,
												"id": 90,
												"nodeType": "Return",
												"src": "581:12:0"
											}
										]
									},
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "471:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 68,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "471:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "481:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 70,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "481:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:20:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "514:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 73,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "513:8:0"
									},
									"scope": 191,
									"src": "458:143:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "673:112:0",
										"statements": [
											{
												"assignments": [
													102
												],
												"declarations": [
													{
														"constant": false,
														"id": 102,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 129,
														"src": "684:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 101,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "684:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 106,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 103,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "695:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 104,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "699:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "695:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "684:16:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 110,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 108,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 96,
																				"src": "720:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 109,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "725:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "720:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 113,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 111,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 102,
																				"src": "730:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"id": 112,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 94,
																				"src": "735:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "730:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "720:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 115,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "719:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 118,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 116,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 96,
																				"src": "742:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 117,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "746:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "742:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 121,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 119,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 102,
																				"src": "751:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"id": 120,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 94,
																				"src": "755:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "751:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "742:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 123,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "741:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "719:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 107,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "711:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "711:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 126,
												"nodeType": "ExpressionStatement",
												"src": "711:47:0"
											},
											{
												"expression": {
													"id": 127,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 102,
													"src": "776:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 100,
												"id": 128,
												"nodeType": "Return",
												"src": "769:8:0"
											}
										]
									},
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "622:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 93,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "622:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "632:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 95,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "632:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "621:20:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "665:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 98,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "665:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "664:8:0"
									},
									"scope": 191,
									"src": "609:176:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "857:112:0",
										"statements": [
											{
												"assignments": [
													140
												],
												"declarations": [
													{
														"constant": false,
														"id": 140,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 167,
														"src": "868:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 139,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "868:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 144,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 141,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 132,
														"src": "879:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 142,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 134,
														"src": "883:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "879:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "868:16:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 148,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 146,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 134,
																				"src": "904:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 147,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "909:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "904:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 151,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 149,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 140,
																				"src": "914:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"id": 150,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 132,
																				"src": "919:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "914:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "904:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 153,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "903:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 156,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 154,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 134,
																				"src": "926:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 155,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "930:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "926:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 159,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 157,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 140,
																				"src": "935:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 158,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 132,
																				"src": "939:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "935:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "926:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 161,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "925:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "903:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "895:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "895:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "895:47:0"
											},
											{
												"expression": {
													"id": 165,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 140,
													"src": "960:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 138,
												"id": 166,
												"nodeType": "Return",
												"src": "953:8:0"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "806:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 131,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "806:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "816:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 133,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "816:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "805:20:0"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "849:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 136,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "849:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "848:8:0"
									},
									"scope": 191,
									"src": "793:176:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "1031:75:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 176,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 170,
																"src": "1050:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 177,
																"name": "MIN_INT256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "1055:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "1050:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 175,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1042:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1042:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 180,
												"nodeType": "ExpressionStatement",
												"src": "1042:24:0"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 181,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "1084:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1088:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1084:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 186,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 170,
														"src": "1097:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1084:14:0",
													"trueExpression": {
														"id": 185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "-",
														"prefix": true,
														"src": "1092:2:0",
														"subExpression": {
															"id": 184,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "1093:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 174,
												"id": 188,
												"nodeType": "Return",
												"src": "1077:21:0"
											}
										]
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "990:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 169,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "990:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:10:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1023:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 172,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1023:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1022:8:0"
									},
									"scope": 191,
									"src": "977:129:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2466,
							"src": "59:1050:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 258,
							"linearizedBaseContracts": [
								258
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "18160ddd",
									"id": 196,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1157:2:0"
									},
									"returnParameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "1183:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1183:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1182:9:0"
									},
									"scope": 258,
									"src": "1137:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 203,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "who",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "1219:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:13:0"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "1255:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1254:9:0"
									},
									"scope": 258,
									"src": "1200:64:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1291:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1306:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1306:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1290:32:0"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1373:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1373:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1372:9:0"
									},
									"scope": 258,
									"src": "1272:110:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 221,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1408:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1408:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1420:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1420:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1407:27:0"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1453:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 218,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1453:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1452:6:0"
									},
									"scope": 258,
									"src": "1390:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 230,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "1484:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1484:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "1501:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1501:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1483:32:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "1534:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 227,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1534:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1533:6:0"
									},
									"scope": 258,
									"src": "1467:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 241,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "1580:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "1603:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1603:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "1624:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1624:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1569:75:0"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "1663:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 238,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:0"
									},
									"scope": 258,
									"src": "1548:121:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 249,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "1692:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1692:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "1714:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1714:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "1734:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1734:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1691:57:0"
									},
									"src": "1677:72:0"
								},
								{
									"anonymous": false,
									"id": 257,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1782:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1782:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1814:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1814:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1848:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1848:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1771:97:0"
									},
									"src": "1757:112:0"
								}
							],
							"scope": 2466,
							"src": "1113:759:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 424,
							"linearizedBaseContracts": [
								424
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "1967:114:0",
										"statements": [
											{
												"assignments": [
													268
												],
												"declarations": [
													{
														"constant": false,
														"id": 268,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 282,
														"src": "1978:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 267,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1978:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 272,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 269,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 260,
														"src": "1990:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 270,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 262,
														"src": "1994:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1990:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1978:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 274,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "2014:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 275,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "2019:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2014:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2022:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 273,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2006:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2006:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 279,
												"nodeType": "ExpressionStatement",
												"src": "2006:46:0"
											},
											{
												"expression": {
													"id": 280,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 268,
													"src": "2072:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 266,
												"id": 281,
												"nodeType": "Return",
												"src": "2065:8:0"
											}
										]
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "1913:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1913:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "1924:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1924:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1912:22:0"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "1958:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1958:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1957:9:0"
									},
									"scope": 424,
									"src": "1900:181:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "2156:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 293,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "2178:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 294,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "2181:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2184:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 292,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															299,
															326
														],
														"referencedDeclaration": 326,
														"src": "2174:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2174:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 291,
												"id": 297,
												"nodeType": "Return",
												"src": "2167:50:0"
											}
										]
									},
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2102:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2102:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2113:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2113:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2101:22:0"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2147:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2147:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2146:9:0"
									},
									"scope": 424,
									"src": "2089:136:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "2362:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 311,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 303,
																"src": "2381:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 312,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "2386:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2381:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 314,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "2389:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 310,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2373:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2373:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 316,
												"nodeType": "ExpressionStatement",
												"src": "2373:29:0"
											},
											{
												"assignments": [
													318
												],
												"declarations": [
													{
														"constant": false,
														"id": 318,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 325,
														"src": "2413:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 317,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2413:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 322,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 319,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "2425:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 320,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "2429:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2425:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2413:17:0"
											},
											{
												"expression": {
													"id": 323,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 318,
													"src": "2450:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 309,
												"id": 324,
												"nodeType": "Return",
												"src": "2443:8:0"
											}
										]
									},
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "2256:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2256:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "2276:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2276:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "2296:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 304,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2296:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2245:84:0"
									},
									"returnParameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "2353:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2353:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2352:9:0"
									},
									"scope": 424,
									"src": "2233:226:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "2534:183:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 335,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 328,
														"src": "2549:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 336,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2554:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2549:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 341,
												"nodeType": "IfStatement",
												"src": "2545:47:0",
												"trueBody": {
													"id": 340,
													"nodeType": "Block",
													"src": "2557:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 338,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2579:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 334,
															"id": 339,
															"nodeType": "Return",
															"src": "2572:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													343
												],
												"declarations": [
													{
														"constant": false,
														"id": 343,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 359,
														"src": "2604:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 342,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2604:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 347,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 328,
														"src": "2616:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 345,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "2620:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2616:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2604:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 349,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 343,
																	"src": "2640:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 350,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 328,
																	"src": "2644:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2640:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 352,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 330,
																"src": "2649:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2640:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2652:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 348,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2632:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2632:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 356,
												"nodeType": "ExpressionStatement",
												"src": "2632:56:0"
											},
											{
												"expression": {
													"id": 357,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 343,
													"src": "2708:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 334,
												"id": 358,
												"nodeType": "Return",
												"src": "2701:8:0"
											}
										]
									},
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "2480:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2480:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "2491:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2491:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2479:22:0"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "2525:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2525:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2524:9:0"
									},
									"scope": 424,
									"src": "2467:250:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "2792:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 370,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "2814:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 371,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "2817:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2820:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 369,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															376,
															403
														],
														"referencedDeclaration": 403,
														"src": "2810:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2810:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 374,
												"nodeType": "Return",
												"src": "2803:46:0"
											}
										]
									},
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "2738:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "2749:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2737:22:0"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "2783:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2783:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2782:9:0"
									},
									"scope": 424,
									"src": "2725:132:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "2994:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 388,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "3013:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 389,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3017:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3013:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 391,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "3020:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 387,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3005:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3005:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 393,
												"nodeType": "ExpressionStatement",
												"src": "3005:28:0"
											},
											{
												"assignments": [
													395
												],
												"declarations": [
													{
														"constant": false,
														"id": 395,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 402,
														"src": "3044:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 394,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3044:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 396,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 378,
														"src": "3056:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 397,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 380,
														"src": "3060:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3056:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3044:17:0"
											},
											{
												"expression": {
													"id": 400,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 395,
													"src": "3081:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 386,
												"id": 401,
												"nodeType": "Return",
												"src": "3074:8:0"
											}
										]
									},
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "2888:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2888:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "2908:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2908:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "2928:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 381,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2928:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2877:84:0"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "2985:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2985:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2984:9:0"
									},
									"scope": 424,
									"src": "2865:225:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "3165:57:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 413,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 407,
																"src": "3184:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 414,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3189:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3184:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 412,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3176:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3176:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "3176:15:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 418,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "3209:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 419,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "3213:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3209:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 411,
												"id": 421,
												"nodeType": "Return",
												"src": "3202:12:0"
											}
										]
									},
									"id": 423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "3111:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3111:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "3122:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3122:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3110:22:0"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "3156:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3156:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3155:9:0"
									},
									"scope": 424,
									"src": "3098:124:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2466,
							"src": "1876:1349:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 428,
							"linearizedBaseContracts": [
								428
							],
							"name": "InterfaceLP",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "fff6cae9",
									"id": 427,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sync",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3271:2:0"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3282:0:0"
									},
									"scope": 428,
									"src": "3258:25:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2466,
							"src": "3229:57:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 511,
							"linearizedBaseContracts": [
								511
							],
							"name": "Roles",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Roles.Role",
									"id": 433,
									"members": [
										{
											"constant": false,
											"id": 432,
											"mutability": "mutable",
											"name": "bearer",
											"nodeType": "VariableDeclaration",
											"scope": 433,
											"src": "3334:32:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 431,
												"keyType": {
													"id": 429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "3334:25:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueType": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3354:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Role",
									"nodeType": "StructDefinition",
									"scope": 511,
									"src": "3311:63:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "3508:120:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3527:19:0",
															"subExpression": {
																"arguments": [
																	{
																		"id": 443,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 436,
																		"src": "3532:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Role_$433_storage_ptr",
																			"typeString": "struct Roles.Role storage pointer"
																		}
																	},
																	{
																		"id": 444,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 438,
																		"src": "3538:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Role_$433_storage_ptr",
																			"typeString": "struct Roles.Role storage pointer"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 442,
																	"name": "has",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 510,
																	"src": "3528:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Role_$433_storage_ptr_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
																	}
																},
																"id": 445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3528:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f6c65733a206163636f756e7420616c72656164792068617320726f6c65",
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3548:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a",
																"typeString": "literal_string \"Roles: account already has role\""
															},
															"value": "Roles: account already has role"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a",
																"typeString": "literal_string \"Roles: account already has role\""
															}
														],
														"id": 441,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3519:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3519:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 449,
												"nodeType": "ExpressionStatement",
												"src": "3519:63:0"
											},
											{
												"expression": {
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 450,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 436,
																"src": "3593:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Role_$433_storage_ptr",
																	"typeString": "struct Roles.Role storage pointer"
																}
															},
															"id": 453,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "bearer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 432,
															"src": "3593:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 454,
														"indexExpression": {
															"id": 452,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "3605:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3593:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 455,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3616:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3593:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "3593:27:0"
											}
										]
									},
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "3382:62:0",
										"text": " @dev Give an account access to this role."
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "3463:17:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Role_$433_storage_ptr",
													"typeString": "struct Roles.Role"
												},
												"typeName": {
													"id": 435,
													"name": "Role",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 433,
													"src": "3463:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Role_$433_storage_ptr",
														"typeString": "struct Roles.Role"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "3482:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3482:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3462:36:0"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3508:0:0"
									},
									"scope": 511,
									"src": "3450:178:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "3769:122:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 469,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "3792:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Role_$433_storage_ptr",
																		"typeString": "struct Roles.Role storage pointer"
																	}
																},
																{
																	"id": 470,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 464,
																	"src": "3798:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Role_$433_storage_ptr",
																		"typeString": "struct Roles.Role storage pointer"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 468,
																"name": "has",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 510,
																"src": "3788:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Role_$433_storage_ptr_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
																}
															},
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3788:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65",
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3808:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257",
																"typeString": "literal_string \"Roles: account does not have role\""
															},
															"value": "Roles: account does not have role"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257",
																"typeString": "literal_string \"Roles: account does not have role\""
															}
														],
														"id": 467,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3780:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3780:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 474,
												"nodeType": "ExpressionStatement",
												"src": "3780:64:0"
											},
											{
												"expression": {
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 475,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "3855:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Role_$433_storage_ptr",
																	"typeString": "struct Roles.Role storage pointer"
																}
															},
															"id": 478,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "bearer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 432,
															"src": "3855:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 479,
														"indexExpression": {
															"id": 477,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "3867:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3855:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 480,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3878:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3855:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 482,
												"nodeType": "ExpressionStatement",
												"src": "3855:28:0"
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "3636:66:0",
										"text": " @dev Remove an account's access to this role."
									},
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3724:17:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Role_$433_storage_ptr",
													"typeString": "struct Roles.Role"
												},
												"typeName": {
													"id": 461,
													"name": "Role",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 433,
													"src": "3724:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Role_$433_storage_ptr",
														"typeString": "struct Roles.Role"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3743:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3743:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3723:36:0"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3769:0:0"
									},
									"scope": 511,
									"src": "3708:183:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "4064:125:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 495,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "4083:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4102:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4094:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 496,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4094:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4094:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "4083:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373",
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4106:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f",
																"typeString": "literal_string \"Roles: account is the zero address\""
															},
															"value": "Roles: account is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f",
																"typeString": "literal_string \"Roles: account is the zero address\""
															}
														],
														"id": 494,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4075:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4075:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "4075:68:0"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 504,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "4161:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$433_storage_ptr",
																"typeString": "struct Roles.Role storage pointer"
															}
														},
														"id": 505,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "bearer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 432,
														"src": "4161:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 507,
													"indexExpression": {
														"id": 506,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "4173:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4161:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 493,
												"id": 508,
												"nodeType": "Return",
												"src": "4154:27:0"
											}
										]
									},
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "3899:81:0",
										"text": " @dev Check if an account has this role.\n @return bool"
									},
									"id": 510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "has",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "3999:17:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Role_$433_storage_ptr",
													"typeString": "struct Roles.Role"
												},
												"typeName": {
													"id": 486,
													"name": "Role",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 433,
													"src": "3999:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Role_$433_storage_ptr",
														"typeString": "struct Roles.Role"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "4018:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4018:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3998:36:0"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "4058:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 491,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4058:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4057:6:0"
									},
									"scope": 511,
									"src": "3986:203:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2466,
							"src": "3290:902:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 600,
							"linearizedBaseContracts": [
								600
							],
							"name": "MinterRole",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 514,
									"libraryName": {
										"id": 512,
										"name": "Roles",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 511,
										"src": "4229:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Roles_$511",
											"typeString": "library Roles"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "4223:27:0",
									"typeName": {
										"id": 513,
										"name": "Roles.Role",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 433,
										"src": "4239:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Role_$433_storage_ptr",
											"typeString": "struct Roles.Role"
										}
									}
								},
								{
									"anonymous": false,
									"id": 518,
									"name": "MinterAdded",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "4276:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4276:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4275:25:0"
									},
									"src": "4258:43:0"
								},
								{
									"anonymous": false,
									"id": 522,
									"name": "MinterRemoved",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "4327:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4326:25:0"
									},
									"src": "4307:45:0"
								},
								{
									"constant": false,
									"id": 524,
									"mutability": "mutable",
									"name": "_minters",
									"nodeType": "VariableDeclaration",
									"scope": 600,
									"src": "4360:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Role_$433_storage",
										"typeString": "struct Roles.Role"
									},
									"typeName": {
										"id": 523,
										"name": "Roles.Role",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 433,
										"src": "4360:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Role_$433_storage_ptr",
											"typeString": "struct Roles.Role"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 532,
										"nodeType": "Block",
										"src": "4411:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 528,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "4433:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4433:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 527,
														"name": "_addMinter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 583,
														"src": "4422:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4422:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 531,
												"nodeType": "ExpressionStatement",
												"src": "4422:22:0"
											}
										]
									},
									"id": 533,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4408:2:0"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4411:0:0"
									},
									"scope": 600,
									"src": "4396:56:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "4482:112:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 537,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "4510:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4510:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 536,
																"name": "isMinter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 558,
																"src": "4501:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4501:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65",
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4523:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_79ecb50133735b20228dea9d08fe36a462bbc1350f591a146908848db91104cd",
																"typeString": "literal_string \"MinterRole: caller does not have the Minter role\""
															},
															"value": "MinterRole: caller does not have the Minter role"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_79ecb50133735b20228dea9d08fe36a462bbc1350f591a146908848db91104cd",
																"typeString": "literal_string \"MinterRole: caller does not have the Minter role\""
															}
														],
														"id": 535,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4493:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4493:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "4493:81:0"
											},
											{
												"id": 543,
												"nodeType": "PlaceholderStatement",
												"src": "4585:1:0"
											}
										]
									},
									"id": 545,
									"name": "onlyMinter",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4479:2:0"
									},
									"src": "4460:134:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 557,
										"nodeType": "Block",
										"src": "4664:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 554,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "4695:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 552,
															"name": "_minters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "4682:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$433_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 553,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "has",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 510,
														"src": "4682:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Role_$433_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_Role_$433_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4682:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 551,
												"id": 556,
												"nodeType": "Return",
												"src": "4675:28:0"
											}
										]
									},
									"functionSelector": "aa271e1a",
									"id": 558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isMinter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "4620:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4620:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4619:17:0"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "4658:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 549,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4658:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4657:6:0"
									},
									"scope": 600,
									"src": "4602:109:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "4752:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 562,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "4777:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4777:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 561,
														"name": "_removeMinter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "4763:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4763:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "4763:25:0"
											}
										]
									},
									"functionSelector": "98650275",
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceMinter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4742:2:0"
									},
									"returnParameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4752:0:0"
									},
									"scope": 600,
									"src": "4719:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 582,
										"nodeType": "Block",
										"src": "4850:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 575,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "4874:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 572,
															"name": "_minters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "4861:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$433_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 574,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 459,
														"src": "4861:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Role_$433_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Role_$433_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address)"
														}
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4861:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 577,
												"nodeType": "ExpressionStatement",
												"src": "4861:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 579,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "4910:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 578,
														"name": "MinterAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 518,
														"src": "4898:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4898:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 581,
												"nodeType": "EmitStatement",
												"src": "4893:25:0"
											}
										]
									},
									"id": 583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addMinter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "4824:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4823:17:0"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4850:0:0"
									},
									"scope": 600,
									"src": "4804:122:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 598,
										"nodeType": "Block",
										"src": "4983:81:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 591,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "5010:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 588,
															"name": "_minters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "4994:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$433_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 590,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 484,
														"src": "4994:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Role_$433_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Role_$433_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address)"
														}
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4994:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 593,
												"nodeType": "ExpressionStatement",
												"src": "4994:24:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 595,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "5048:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 594,
														"name": "MinterRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 522,
														"src": "5034:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5034:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 597,
												"nodeType": "EmitStatement",
												"src": "5029:27:0"
											}
										]
									},
									"id": 599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeMinter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "4957:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4957:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4956:17:0"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4983:0:0"
									},
									"scope": 600,
									"src": "4934:130:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2466,
							"src": "4196:871:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 601,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 258,
										"src": "5106:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$258",
											"typeString": "contract IERC20"
										}
									},
									"id": 602,
									"nodeType": "InheritanceSpecifier",
									"src": "5106:6:0"
								}
							],
							"contractDependencies": [
								258
							],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 655,
							"linearizedBaseContracts": [
								655,
								258
							],
							"name": "ERC20Detailed",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 604,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 655,
									"src": "5120:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 603,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5120:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 606,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 655,
									"src": "5147:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 605,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5147:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 608,
									"mutability": "mutable",
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 655,
									"src": "5176:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 607,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "5176:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "5330:107:0",
										"statements": [
											{
												"expression": {
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 617,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 604,
														"src": "5341:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 618,
														"name": "_tokenName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 610,
														"src": "5349:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "5341:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 620,
												"nodeType": "ExpressionStatement",
												"src": "5341:18:0"
											},
											{
												"expression": {
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 621,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5370:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 622,
														"name": "_tokenSymbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 612,
														"src": "5380:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "5370:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 624,
												"nodeType": "ExpressionStatement",
												"src": "5370:22:0"
											},
											{
												"expression": {
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 625,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "5403:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 626,
														"name": "_tokenDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 614,
														"src": "5415:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "5403:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 628,
												"nodeType": "ExpressionStatement",
												"src": "5403:26:0"
											}
										]
									},
									"id": 630,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "_tokenName",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "5230:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 609,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5230:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "_tokenSymbol",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "5265:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 611,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5265:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "_tokenDecimals",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "5302:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 613,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5302:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5219:110:0"
									},
									"returnParameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5330:0:0"
									},
									"scope": 655,
									"src": "5208:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 637,
										"nodeType": "Block",
										"src": "5497:31:0",
										"statements": [
											{
												"expression": {
													"id": 635,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 604,
													"src": "5515:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 634,
												"id": 636,
												"nodeType": "Return",
												"src": "5508:12:0"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5458:2:0"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "5482:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 632,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5482:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5481:15:0"
									},
									"scope": 655,
									"src": "5445:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 645,
										"nodeType": "Block",
										"src": "5590:33:0",
										"statements": [
											{
												"expression": {
													"id": 643,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 606,
													"src": "5608:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 642,
												"id": 644,
												"nodeType": "Return",
												"src": "5601:14:0"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5551:2:0"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "5575:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 640,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5575:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5574:15:0"
									},
									"scope": 655,
									"src": "5536:87:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 653,
										"nodeType": "Block",
										"src": "5679:35:0",
										"statements": [
											{
												"expression": {
													"id": 651,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 608,
													"src": "5697:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 650,
												"id": 652,
												"nodeType": "Return",
												"src": "5690:16:0"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5648:2:0"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "5672:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 648,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5672:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5671:7:0"
									},
									"scope": 655,
									"src": "5631:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2466,
							"src": "5071:646:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 752,
							"linearizedBaseContracts": [
								752
							],
							"name": "IDEXRouter",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 660,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5765:2:0"
									},
									"returnParameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "5791:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5791:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5790:9:0"
									},
									"scope": 752,
									"src": "5749:51:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 665,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5821:2:0"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "5847:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5847:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5846:9:0"
									},
									"scope": 752,
									"src": "5808:48:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e8e33700",
									"id": 690,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "5896:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5896:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "5921:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5921:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "amountADesired",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "5946:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5946:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "5979:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5979:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "amountAMin",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "6012:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "amountBMin",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "6041:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6041:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "6070:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6070:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "6091:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6091:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5885:229:0"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "amountA",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "6165:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6165:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "amountB",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "6195:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6195:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "6225:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6225:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6150:103:0"
									},
									"scope": 752,
									"src": "5864:390:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 711,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "6297:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6297:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "6321:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6321:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "6358:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6358:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "6391:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "6422:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6422:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "6443:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6286:180:0"
									},
									"returnParameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "amountToken",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "6534:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6534:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "6568:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6568:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "6600:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6519:109:0"
									},
									"scope": 752,
									"src": "6262:367:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c11d795",
									"id": 725,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "6710:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6710:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "6737:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "6768:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 716,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "6768:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 717,
													"nodeType": "ArrayTypeName",
													"src": "6768:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "6802:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "6823:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6823:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6699:147:0"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6855:0:0"
									},
									"scope": 752,
									"src": "6637:219:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b6f9de95",
									"id": 737,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "6934:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6934:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "6965:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 728,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "6965:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 729,
													"nodeType": "ArrayTypeName",
													"src": "6965:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "6999:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6999:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "7020:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7020:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6923:120:0"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7060:0:0"
									},
									"scope": 752,
									"src": "6864:197:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "791ac947",
									"id": 751,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "7139:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7139:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "7166:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7166:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "7197:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 742,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "7197:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 743,
													"nodeType": "ArrayTypeName",
													"src": "7197:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "7231:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7231:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "7252:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7252:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7128:147:0"
									},
									"returnParameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7284:0:0"
									},
									"scope": 752,
									"src": "7069:216:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2466,
							"src": "5721:1567:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 762,
							"linearizedBaseContracts": [
								762
							],
							"name": "IDEXFactory",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c9c65396",
									"id": 761,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7341:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7341:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7357:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7357:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7340:32:0"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7409:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7409:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7408:14:0"
									},
									"scope": 762,
									"src": "7321:102:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2466,
							"src": "7292:134:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 865,
							"linearizedBaseContracts": [
								865
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 764,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 865,
									"src": "7454:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 763,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7454:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 768,
									"name": "OwnershipRenounced",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "7510:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7510:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7509:31:0"
									},
									"src": "7485:56:0"
								},
								{
									"anonymous": false,
									"id": 774,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "7586:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7586:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "7626:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7626:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7575:82:0"
									},
									"src": "7549:109:0"
								},
								{
									"body": {
										"id": 782,
										"nodeType": "Block",
										"src": "7680:38:0",
										"statements": [
											{
												"expression": {
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 777,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "7691:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 778,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "7700:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "7700:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "7691:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 781,
												"nodeType": "ExpressionStatement",
												"src": "7691:19:0"
											}
										]
									},
									"id": 783,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7677:2:0"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7680:0:0"
									},
									"scope": 865,
									"src": "7666:52:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "7773:32:0",
										"statements": [
											{
												"expression": {
													"id": 788,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 764,
													"src": "7791:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 787,
												"id": 789,
												"nodeType": "Return",
												"src": "7784:13:0"
											}
										]
									},
									"functionSelector": "8da5cb5b",
									"id": 791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:0"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "7764:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7764:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7763:9:0"
									},
									"scope": 865,
									"src": "7726:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 799,
										"nodeType": "Block",
										"src": "7834:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 794,
																"name": "isOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 811,
																"src": "7853:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7853:9:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 793,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7845:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7845:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "7845:18:0"
											},
											{
												"id": 798,
												"nodeType": "PlaceholderStatement",
												"src": "7874:1:0"
											}
										]
									},
									"id": 800,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7831:2:0"
									},
									"src": "7813:70:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 810,
										"nodeType": "Block",
										"src": "7937:46:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 805,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "7955:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 806,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "7955:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 807,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "7969:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7955:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 804,
												"id": 809,
												"nodeType": "Return",
												"src": "7948:27:0"
											}
										]
									},
									"functionSelector": "8f32d59b",
									"id": 811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7907:2:0"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "7931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 802,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7930:6:0"
									},
									"scope": 865,
									"src": "7891:92:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 827,
										"nodeType": "Block",
										"src": "8037:80:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 817,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "8072:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 816,
														"name": "OwnershipRenounced",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "8053:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8053:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 819,
												"nodeType": "EmitStatement",
												"src": "8048:31:0"
											},
											{
												"expression": {
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 820,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "8090:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8107:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8099:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 821,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8099:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8099:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "8090:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 826,
												"nodeType": "ExpressionStatement",
												"src": "8090:19:0"
											}
										]
									},
									"functionSelector": "715018a6",
									"id": 828,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 814,
											"modifierName": {
												"id": 813,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 800,
												"src": "8027:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8027:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8017:2:0"
									},
									"returnParameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8037:0:0"
									},
									"scope": 865,
									"src": "7991:126:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 839,
										"nodeType": "Block",
										"src": "8187:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 836,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "8217:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 835,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "8198:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8198:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 838,
												"nodeType": "ExpressionStatement",
												"src": "8198:28:0"
											}
										]
									},
									"functionSelector": "f2fde38b",
									"id": 840,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 833,
											"modifierName": {
												"id": 832,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 800,
												"src": "8177:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8177:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "8152:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:18:0"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8187:0:0"
									},
									"scope": 865,
									"src": "8125:109:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 863,
										"nodeType": "Block",
										"src": "8297:132:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 846,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 842,
																"src": "8316:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 849,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8336:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8328:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 847,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8328:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8328:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8316:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 845,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8308:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8308:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 853,
												"nodeType": "ExpressionStatement",
												"src": "8308:31:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 855,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "8376:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 856,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "8384:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 854,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 774,
														"src": "8355:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8355:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 858,
												"nodeType": "EmitStatement",
												"src": "8350:43:0"
											},
											{
												"expression": {
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 859,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "8404:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 860,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 842,
														"src": "8413:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8404:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 862,
												"nodeType": "ExpressionStatement",
												"src": "8404:17:0"
											}
										]
									},
									"id": 864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "8270:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8270:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8269:18:0"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8297:0:0"
									},
									"scope": 865,
									"src": "8242:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2466,
							"src": "7430:1002:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 866,
										"name": "ERC20Detailed",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 655,
										"src": "8464:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Detailed_$655",
											"typeString": "contract ERC20Detailed"
										}
									},
									"id": 867,
									"nodeType": "InheritanceSpecifier",
									"src": "8464:13:0"
								},
								{
									"baseName": {
										"id": 868,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 865,
										"src": "8479:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$865",
											"typeString": "contract Ownable"
										}
									},
									"id": 869,
									"nodeType": "InheritanceSpecifier",
									"src": "8479:7:0"
								},
								{
									"baseName": {
										"id": 870,
										"name": "MinterRole",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 600,
										"src": "8488:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_MinterRole_$600",
											"typeString": "contract MinterRole"
										}
									},
									"id": 871,
									"nodeType": "InheritanceSpecifier",
									"src": "8488:10:0"
								}
							],
							"contractDependencies": [
								258,
								600,
								655,
								865
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2465,
							"linearizedBaseContracts": [
								2465,
								600,
								865,
								655,
								258
							],
							"name": "AndrewTateToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 874,
									"libraryName": {
										"id": 872,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 424,
										"src": "8512:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$424",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "8506:27:0",
									"typeName": {
										"id": 873,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8525:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 877,
									"libraryName": {
										"id": 875,
										"name": "SafeMathInt",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 191,
										"src": "8545:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMathInt_$191",
											"typeString": "library SafeMathInt"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "8539:29:0",
									"typeName": {
										"id": 876,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "8561:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									}
								},
								{
									"anonymous": false,
									"id": 883,
									"name": "LogRebase",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"indexed": true,
												"mutability": "mutable",
												"name": "epoch",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "8592:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8592:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalSupply",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "8615:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8615:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8591:44:0"
									},
									"src": "8576:60:0"
								},
								{
									"constant": false,
									"functionSelector": "4d709adf",
									"id": 885,
									"mutability": "mutable",
									"name": "pairContract",
									"nodeType": "VariableDeclaration",
									"scope": 2465,
									"src": "8644:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_InterfaceLP_$428",
										"typeString": "contract InterfaceLP"
									},
									"typeName": {
										"id": 884,
										"name": "InterfaceLP",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 428,
										"src": "8644:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_InterfaceLP_$428",
											"typeString": "contract InterfaceLP"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d1fce264",
									"id": 887,
									"mutability": "mutable",
									"name": "initialDistributionFinished",
									"nodeType": "VariableDeclaration",
									"scope": 2465,
									"src": "8684:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 886,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "8684:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 891,
									"mutability": "mutable",
									"name": "allowTransfer",
									"nodeType": "VariableDeclaration",
									"scope": 2465,
									"src": "8732:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 890,
										"keyType": {
											"id": 888,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "8740:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "8732:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 889,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "8751:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 895,
									"mutability": "mutable",
									"name": "_isFeeExempt",
									"nodeType": "VariableDeclaration",
									"scope": 2465,
									"src": "8777:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 894,
										"keyType": {
											"id": 892,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "8785:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "8777:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 893,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "8796:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 910,
										"nodeType": "Block",
										"src": "8858:167:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 898,
																	"name": "initialDistributionFinished",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 887,
																	"src": "8891:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 899,
																		"name": "isOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 811,
																		"src": "8939:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																			"typeString": "function () view returns (bool)"
																		}
																	},
																	"id": 900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8939:9:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "8891:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"baseExpression": {
																	"id": 902,
																	"name": "allowTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 891,
																	"src": "8969:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 905,
																"indexExpression": {
																	"expression": {
																		"id": 903,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "8983:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "8983:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8969:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "8891:103:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 897,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8869:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8869:136:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 908,
												"nodeType": "ExpressionStatement",
												"src": "8869:136:0"
											},
											{
												"id": 909,
												"nodeType": "PlaceholderStatement",
												"src": "9016:1:0"
											}
										]
									},
									"id": 911,
									"name": "initialDistributionLock",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8855:2:0"
									},
									"src": "8823:202:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 925,
										"nodeType": "Block",
										"src": "9069:58:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 916,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 913,
																"src": "9088:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307830",
																		"id": 919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9102:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 918,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9094:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 917,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9094:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 920,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9094:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9088:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 915,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9080:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9080:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 923,
												"nodeType": "ExpressionStatement",
												"src": "9080:27:0"
											},
											{
												"id": 924,
												"nodeType": "PlaceholderStatement",
												"src": "9118:1:0"
											}
										]
									},
									"id": 926,
									"name": "validRecipient",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "9057:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9057:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9056:12:0"
									},
									"src": "9033:94:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 929,
									"mutability": "constant",
									"name": "DECIMALS",
									"nodeType": "VariableDeclaration",
									"scope": 2465,
									"src": "9135:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 927,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9135:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 928,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9171:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 936,
									"mutability": "constant",
									"name": "MAX_UINT256",
									"nodeType": "VariableDeclaration",
									"scope": 2465,
									"src": "9180:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 930,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9180:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 935,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "~",
										"prefix": true,
										"src": "9219:11:0",
										"subExpression": {
											"arguments": [
												{
													"hexValue": "30",
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9228:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													}
												],
												"id": 932,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "9220:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_uint256_$",
													"typeString": "type(uint256)"
												},
												"typeName": {
													"id": 931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9220:7:0",
													"typeDescriptions": {}
												}
											},
											"id": 934,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "9220:10:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 947,
									"mutability": "constant",
									"name": "INITIAL_FRAGMENTS_SUPPLY",
									"nodeType": "VariableDeclaration",
									"scope": 2465,
									"src": "9239:76:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 937,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9239:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 946,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_4000000000_by_1",
												"typeString": "int_const 4000000000"
											},
											"id": 942,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "34",
												"id": 938,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "9291:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_4_by_1",
													"typeString": "int_const 4"
												},
												"value": "4"
											},
											"nodeType": "BinaryOperation",
											"operator": "*",
											"rightExpression": {
												"commonType": {
													"typeIdentifier": "t_rational_1000000000_by_1",
													"typeString": "int_const 1000000000"
												},
												"id": 941,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "3130",
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9295:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_10_by_1",
														"typeString": "int_const 10"
													},
													"value": "10"
												},
												"nodeType": "BinaryOperation",
												"operator": "**",
												"rightExpression": {
													"hexValue": "39",
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9299:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_9_by_1",
														"typeString": "int_const 9"
													},
													"value": "9"
												},
												"src": "9295:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1000000000_by_1",
													"typeString": "int_const 1000000000"
												}
											},
											"src": "9291:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_4000000000_by_1",
												"typeString": "int_const 4000000000"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 945,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 943,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "9303:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"id": 944,
												"name": "DECIMALS",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 929,
												"src": "9307:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"src": "9303:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "9291:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "98118cb4",
									"id": 950,
									"mutability": "mutable",
									"name": "liquidityFee",
									"nodeType": "VariableDeclaration",
									"scope": 2465,
									"src": "9324:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 948,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9324:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 949,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9354:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "563df32f",
									"id": 953,
									"mutability": "mutable",
									"name": "Treasury",
									"nodeType": "VariableDeclaration",
									"scope": 2465,
									"src": "9362:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 951,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9362:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 952,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9388:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bda5c8bb",
									"id": 956,
									"mutability": "mutable",
									"name": "RiskFreeValue",
									"nodeType": "VariableDeclaration",
									"scope": 2465,
									"src": "9396:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 954,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9396:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 955,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9427:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2b14ca56",
									"id": 959,
									"mutability": "mutable",
									"name": "sellFee",
									"nodeType": "VariableDeclaration",
									"scope": 2465,
									"src": "9435:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 957,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9435:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 958,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9460:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1df4ccfc",
									"id": 968,
									"mutability": "mutable",
									"name": "totalFee",
									"nodeType": "VariableDeclaration",
									"scope": 2465,
									"src": "9468:80:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 960,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9468:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 966,
												"name": "RiskFreeValue",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 956,
												"src": "9534:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"expression": {
												"arguments": [
													{
														"id": 963,
														"name": "Treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "9520:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													],
													"expression": {
														"id": 961,
														"name": "liquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "9503:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "add",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 283,
													"src": "9503:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
														"typeString": "function (uint256,uint256) pure returns (uint256)"
													}
												},
												"id": 964,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "9503:26:0",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 965,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "add",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 283,
											"src": "9503:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
												"typeString": "function (uint256,uint256) pure returns (uint256)"
											}
										},
										"id": 967,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "9503:45:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "180b0d7e",
									"id": 971,
									"mutability": "mutable",
									"name": "feeDenominator",
									"nodeType": "VariableDeclaration",
									"scope": 2465,
									"src": "9555:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 969,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9555:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 970,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9587:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 974,
									"mutability": "mutable",
									"name": "DEAD",
									"nodeType": "VariableDeclaration",
									"scope": 2465,
									"src": "9599:57:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 972,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9599:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303064456144",
										"id": 973,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9614:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										},
										"value": "0x000000000000000000000000000000000000dEaD"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 977,
									"mutability": "mutable",
									"name": "ZERO",
									"nodeType": "VariableDeclaration",
									"scope": 2465,
									"src": "9663:57:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 975,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9663:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
										"id": 976,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9678:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										},
										"value": "0x0000000000000000000000000000000000000000"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "ca33e64c",
									"id": 979,
									"mutability": "mutable",
									"name": "autoLiquidityReceiver",
									"nodeType": "VariableDeclaration",
									"scope": 2465,
									"src": "9729:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 978,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9729:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "800cee51",
									"id": 981,
									"mutability": "mutable",
									"name": "TreasuryReceiver",
									"nodeType": "VariableDeclaration",
									"scope": 2465,
									"src": "9772:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 980,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9772:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d7ac6585",
									"id": 983,
									"mutability": "mutable",
									"name": "RiskFreeValueReceiver",
									"nodeType": "VariableDeclaration",
									"scope": 2465,
									"src": "9810:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 982,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9810:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 986,
									"mutability": "mutable",
									"name": "targetLiquidity",
									"nodeType": "VariableDeclaration",
									"scope": 2465,
									"src": "9855:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 984,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9855:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3530",
										"id": 985,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9881:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "50"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 989,
									"mutability": "mutable",
									"name": "targetLiquidityDenominator",
									"nodeType": "VariableDeclaration",
									"scope": 2465,
									"src": "9890:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 987,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9890:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 988,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9927:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "f887ea40",
									"id": 991,
									"mutability": "mutable",
									"name": "router",
									"nodeType": "VariableDeclaration",
									"scope": 2465,
									"src": "9939:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IDEXRouter_$752",
										"typeString": "contract IDEXRouter"
									},
									"typeName": {
										"id": 990,
										"name": "IDEXRouter",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 752,
										"src": "9939:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IDEXRouter_$752",
											"typeString": "contract IDEXRouter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a8aa1b31",
									"id": 993,
									"mutability": "mutable",
									"name": "pair",
									"nodeType": "VariableDeclaration",
									"scope": 2465,
									"src": "9970:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 992,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9970:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6ddd1713",
									"id": 996,
									"mutability": "mutable",
									"name": "swapEnabled",
									"nodeType": "VariableDeclaration",
									"scope": 2465,
									"src": "9998:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 994,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "9998:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "74727565",
										"id": 995,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10024:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1004,
									"mutability": "mutable",
									"name": "gonSwapThreshold",
									"nodeType": "VariableDeclaration",
									"scope": 2465,
									"src": "10035:60:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 997,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10035:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1003,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"id": 998,
														"name": "TOTAL_GONS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "10071:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "3130",
														"id": 999,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10084:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "10071:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1001,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "10070:17:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "/",
										"rightExpression": {
											"hexValue": "3130303030",
											"id": 1002,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "10090:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10000_by_1",
												"typeString": "int_const 10000"
											},
											"value": "10000"
										},
										"src": "10070:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1006,
									"mutability": "mutable",
									"name": "inSwap",
									"nodeType": "VariableDeclaration",
									"scope": 2465,
									"src": "10102:11:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1005,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "10102:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1017,
										"nodeType": "Block",
										"src": "10140:69:0",
										"statements": [
											{
												"expression": {
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1008,
														"name": "inSwap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1006,
														"src": "10151:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1009,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10160:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "10151:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1011,
												"nodeType": "ExpressionStatement",
												"src": "10151:13:0"
											},
											{
												"id": 1012,
												"nodeType": "PlaceholderStatement",
												"src": "10175:1:0"
											},
											{
												"expression": {
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1013,
														"name": "inSwap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1006,
														"src": "10187:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1014,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10196:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "10187:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1016,
												"nodeType": "ExpressionStatement",
												"src": "10187:14:0"
											}
										]
									},
									"id": 1018,
									"name": "swapping",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10137:2:0"
									},
									"src": "10120:89:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1026,
									"mutability": "constant",
									"name": "TOTAL_GONS",
									"nodeType": "VariableDeclaration",
									"scope": 2465,
									"src": "10217:101:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1019,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10217:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1025,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"id": 1020,
											"name": "MAX_UINT256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 936,
											"src": "10264:11:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1021,
														"name": "MAX_UINT256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "10279:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1022,
														"name": "INITIAL_FRAGMENTS_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "10293:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10279:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1024,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "10278:40:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "10264:54:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1033,
									"mutability": "constant",
									"name": "MAX_SUPPLY",
									"nodeType": "VariableDeclaration",
									"scope": 2465,
									"src": "10327:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1027,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10327:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 1032,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "~",
										"prefix": true,
										"src": "10365:11:0",
										"subExpression": {
											"arguments": [
												{
													"hexValue": "30",
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10374:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													}
												],
												"id": 1029,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "10366:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_uint128_$",
													"typeString": "type(uint128)"
												},
												"typeName": {
													"id": 1028,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "10366:7:0",
													"typeDescriptions": {}
												}
											},
											"id": 1031,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "10366:10:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_uint128",
											"typeString": "uint128"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1035,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 2465,
									"src": "10385:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1034,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10385:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1037,
									"mutability": "mutable",
									"name": "_gonsPerFragment",
									"nodeType": "VariableDeclaration",
									"scope": 2465,
									"src": "10420:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1036,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10420:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1041,
									"mutability": "mutable",
									"name": "_gonBalances",
									"nodeType": "VariableDeclaration",
									"scope": 2465,
									"src": "10459:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1040,
										"keyType": {
											"id": 1038,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "10467:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "10459:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1039,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "10478:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1047,
									"mutability": "mutable",
									"name": "_allowedFragments",
									"nodeType": "VariableDeclaration",
									"scope": 2465,
									"src": "10516:73:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1046,
										"keyType": {
											"id": 1042,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "10524:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "10516:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 1045,
											"keyType": {
												"id": 1043,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "10543:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "10535:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 1044,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "10554:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "f9f92be4",
									"id": 1051,
									"mutability": "mutable",
									"name": "blacklist",
									"nodeType": "VariableDeclaration",
									"scope": 2465,
									"src": "10596:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1050,
										"keyType": {
											"id": 1048,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "10604:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "10596:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 1049,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "10615:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1170,
										"nodeType": "Block",
										"src": "10719:1087:0",
										"statements": [
											{
												"expression": {
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1062,
														"name": "router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 991,
														"src": "10730:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IDEXRouter_$752",
															"typeString": "contract IDEXRouter"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307863454542323246616633324646344541643234353635323235353033383037653431453546453837",
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10750:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																},
																"value": "0xcEEB22Faf32FF4EAd24565225503807e41E5FE87"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															],
															"id": 1063,
															"name": "IDEXRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "10739:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IDEXRouter_$752_$",
																"typeString": "type(contract IDEXRouter)"
															}
														},
														"id": 1065,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10739:54:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IDEXRouter_$752",
															"typeString": "contract IDEXRouter"
														}
													},
													"src": "10730:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IDEXRouter_$752",
														"typeString": "contract IDEXRouter"
													}
												},
												"id": 1067,
												"nodeType": "ExpressionStatement",
												"src": "10730:63:0"
											},
											{
												"expression": {
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1068,
														"name": "pair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 993,
														"src": "10913:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1075,
																		"name": "router",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 991,
																		"src": "10975:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IDEXRouter_$752",
																			"typeString": "contract IDEXRouter"
																		}
																	},
																	"id": 1076,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "WETH",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 665,
																	"src": "10975:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																		"typeString": "function () pure external returns (address)"
																	}
																},
																"id": 1077,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10975:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"id": 1080,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -28,
																		"src": "11011:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_AndrewTateToken_$2465",
																			"typeString": "contract AndrewTateToken"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_AndrewTateToken_$2465",
																			"typeString": "contract AndrewTateToken"
																		}
																	],
																	"id": 1079,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11003:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1078,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11003:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1081,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11003:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 1070,
																				"name": "router",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 991,
																				"src": "10932:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IDEXRouter_$752",
																					"typeString": "contract IDEXRouter"
																				}
																			},
																			"id": 1071,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "factory",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 660,
																			"src": "10932:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																				"typeString": "function () pure external returns (address)"
																			}
																		},
																		"id": 1072,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10932:16:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1069,
																	"name": "IDEXFactory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "10920:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IDEXFactory_$762_$",
																		"typeString": "type(contract IDEXFactory)"
																	}
																},
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10920:29:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IDEXFactory_$762",
																	"typeString": "contract IDEXFactory"
																}
															},
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "createPair",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 761,
															"src": "10920:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
																"typeString": "function (address,address) external returns (address)"
															}
														},
														"id": 1082,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10920:107:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10913:114:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1084,
												"nodeType": "ExpressionStatement",
												"src": "10913:114:0"
											},
											{
												"expression": {
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1085,
														"name": "autoLiquidityReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "11040:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307832433630346439453135653635323446306242326132413232463633613743613034316538344333",
														"id": 1086,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11064:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"value": "0x2C604d9E15e6524F0bB2a2A22F63a7Ca041e84C3"
													},
													"src": "11040:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1088,
												"nodeType": "ExpressionStatement",
												"src": "11040:66:0"
											},
											{
												"expression": {
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1089,
														"name": "TreasuryReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 981,
														"src": "11117:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307863433565303433433531343230333361383030413732323836333536333137644163623537413737",
														"id": 1090,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11136:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"value": "0xcC5e043C5142033a800A72286356317dAcb57A77"
													},
													"src": "11117:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1092,
												"nodeType": "ExpressionStatement",
												"src": "11117:61:0"
											},
											{
												"expression": {
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1093,
														"name": "RiskFreeValueReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 983,
														"src": "11189:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307838333331323364374146323230373538613534383438383761433538326434443339653945646530",
														"id": 1094,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11213:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"value": "0x833123d7AF220758a5484887aC582d4D39e9Ede0"
													},
													"src": "11189:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1096,
												"nodeType": "ExpressionStatement",
												"src": "11189:66:0"
											},
											{
												"expression": {
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1097,
																"name": "_allowedFragments",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1047,
																"src": "11268:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1106,
															"indexExpression": {
																"arguments": [
																	{
																		"id": 1100,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -28,
																		"src": "11294:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_AndrewTateToken_$2465",
																			"typeString": "contract AndrewTateToken"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_AndrewTateToken_$2465",
																			"typeString": "contract AndrewTateToken"
																		}
																	],
																	"id": 1099,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11286:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1098,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11286:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11286:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11268:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1107,
														"indexExpression": {
															"arguments": [
																{
																	"id": 1104,
																	"name": "router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 991,
																	"src": "11309:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IDEXRouter_$752",
																		"typeString": "contract IDEXRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IDEXRouter_$752",
																		"typeString": "contract IDEXRouter"
																	}
																],
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11301:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1102,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11301:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11301:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11268:49:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1111,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "11328:2:0",
																"subExpression": {
																	"hexValue": "31",
																	"id": 1110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11329:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															],
															"id": 1109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11320:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1108,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11320:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1112,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11320:11:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11268:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1114,
												"nodeType": "ExpressionStatement",
												"src": "11268:63:0"
											},
											{
												"expression": {
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1115,
														"name": "pairContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "11342:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_InterfaceLP_$428",
															"typeString": "contract InterfaceLP"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1117,
																"name": "pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 993,
																"src": "11369:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1116,
															"name": "InterfaceLP",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 428,
															"src": "11357:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_InterfaceLP_$428_$",
																"typeString": "type(contract InterfaceLP)"
															}
														},
														"id": 1118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11357:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_InterfaceLP_$428",
															"typeString": "contract InterfaceLP"
														}
													},
													"src": "11342:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_InterfaceLP_$428",
														"typeString": "contract InterfaceLP"
													}
												},
												"id": 1120,
												"nodeType": "ExpressionStatement",
												"src": "11342:32:0"
											},
											{
												"expression": {
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1121,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "11387:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1122,
														"name": "INITIAL_FRAGMENTS_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "11402:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11387:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1124,
												"nodeType": "ExpressionStatement",
												"src": "11387:39:0"
											},
											{
												"expression": {
													"id": 1129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1125,
															"name": "_gonBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "11437:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1127,
														"indexExpression": {
															"id": 1126,
															"name": "TreasuryReceiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 981,
															"src": "11450:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11437:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1128,
														"name": "TOTAL_GONS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "11470:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11437:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1130,
												"nodeType": "ExpressionStatement",
												"src": "11437:43:0"
											},
											{
												"expression": {
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1131,
														"name": "_gonsPerFragment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1037,
														"src": "11491:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1134,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1035,
																"src": "11525:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1132,
																"name": "TOTAL_GONS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1026,
																"src": "11510:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 376,
															"src": "11510:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11510:28:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11491:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1137,
												"nodeType": "ExpressionStatement",
												"src": "11491:47:0"
											},
											{
												"expression": {
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1138,
														"name": "initialDistributionFinished",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "11551:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1139,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11581:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "11551:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1141,
												"nodeType": "ExpressionStatement",
												"src": "11551:35:0"
											},
											{
												"expression": {
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1142,
															"name": "_isFeeExempt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "11597:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1144,
														"indexExpression": {
															"id": 1143,
															"name": "TreasuryReceiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 981,
															"src": "11610:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11597:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1145,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11630:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "11597:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1147,
												"nodeType": "ExpressionStatement",
												"src": "11597:37:0"
											},
											{
												"expression": {
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1148,
															"name": "_isFeeExempt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "11645:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1153,
														"indexExpression": {
															"arguments": [
																{
																	"id": 1151,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "11666:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AndrewTateToken_$2465",
																		"typeString": "contract AndrewTateToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AndrewTateToken_$2465",
																		"typeString": "contract AndrewTateToken"
																	}
																],
																"id": 1150,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11658:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1149,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11658:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11658:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11645:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1154,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11675:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "11645:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1156,
												"nodeType": "ExpressionStatement",
												"src": "11645:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1158,
															"name": "TreasuryReceiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 981,
															"src": "11711:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1157,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "11692:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11692:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1160,
												"nodeType": "ExpressionStatement",
												"src": "11692:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "307830",
																	"id": 1164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11761:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0x0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1163,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11753:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1162,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11753:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11753:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1166,
															"name": "TreasuryReceiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 981,
															"src": "11767:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1167,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "11785:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1161,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 249,
														"src": "11744:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11744:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1169,
												"nodeType": "EmitStatement",
												"src": "11739:59:0"
											}
										]
									},
									"id": 1171,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "416e647265775461746520546f6b656e",
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10674:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_7de1c659d090c7f2ed9df24817bd8acce7e3fb922efa8ffb8f98cf3342c9d026",
														"typeString": "literal_string \"AndrewTate Token\""
													},
													"value": "AndrewTate Token"
												},
												{
													"hexValue": "544f5047",
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10694:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_378858d4d71bc1d843edb16335c20c0370b1fadf4e8daa5dab77e9fe534bc385",
														"typeString": "literal_string \"TOPG\""
													},
													"value": "TOPG"
												},
												{
													"arguments": [
														{
															"id": 1058,
															"name": "DECIMALS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 929,
															"src": "10708:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1057,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10702:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 1056,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "10702:5:0",
															"typeDescriptions": {}
														}
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10702:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												}
											],
											"id": 1060,
											"modifierName": {
												"id": 1053,
												"name": "ERC20Detailed",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 655,
												"src": "10660:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$655_$",
													"typeString": "type(contract ERC20Detailed)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10660:58:0"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10657:2:0"
									},
									"returnParameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10719:0:0"
									},
									"scope": 2465,
									"src": "10646:1160:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1186,
										"nodeType": "Block",
										"src": "11882:43:0",
										"statements": [
											{
												"expression": {
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1180,
															"name": "blacklist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "11893:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1182,
														"indexExpression": {
															"id": 1181,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "11903:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11893:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1183,
														"name": "_flag",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1175,
														"src": "11912:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "11893:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1185,
												"nodeType": "ExpressionStatement",
												"src": "11893:24:0"
											}
										]
									},
									"functionSelector": "9155e083",
									"id": 1187,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1178,
											"modifierName": {
												"id": 1177,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 800,
												"src": "11873:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "11873:9:0"
										}
									],
									"name": "updateBlacklist",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "11839:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11839:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "_flag",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "11854:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1174,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11854:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11838:27:0"
									},
									"returnParameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11882:0:0"
									},
									"scope": 2465,
									"src": "11814:111:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1271,
										"nodeType": "Block",
										"src": "12053:639:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "12072:7:0",
															"subExpression": {
																"id": 1199,
																"name": "inSwap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1006,
																"src": "12073:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54727920616761696e",
															"id": 1201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12081:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dba053fd5b8489d1ee7c7a7bfd239d6da63244925bcb42798b4762d97af9d93b",
																"typeString": "literal_string \"Try again\""
															},
															"value": "Try again"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dba053fd5b8489d1ee7c7a7bfd239d6da63244925bcb42798b4762d97af9d93b",
																"typeString": "literal_string \"Try again\""
															}
														],
														"id": 1198,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "12064:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12064:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1203,
												"nodeType": "ExpressionStatement",
												"src": "12064:29:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1204,
														"name": "supplyDelta",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1191,
														"src": "12108:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1205,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12123:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12108:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1215,
												"nodeType": "IfStatement",
												"src": "12104:118:0",
												"trueBody": {
													"id": 1214,
													"nodeType": "Block",
													"src": "12126:96:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1208,
																		"name": "epoch",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1189,
																		"src": "12156:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1209,
																		"name": "_totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1035,
																		"src": "12163:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1207,
																	"name": "LogRebase",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 883,
																	"src": "12146:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256)"
																	}
																},
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12146:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1211,
															"nodeType": "EmitStatement",
															"src": "12141:35:0"
														},
														{
															"expression": {
																"id": 1212,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1035,
																"src": "12198:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1197,
															"id": 1213,
															"nodeType": "Return",
															"src": "12191:19:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1216,
														"name": "supplyDelta",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1191,
														"src": "12238:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "30",
														"id": 1217,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12252:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12238:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1241,
													"nodeType": "Block",
													"src": "12342:80:0",
													"statements": [
														{
															"expression": {
																"id": 1239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1231,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1035,
																	"src": "12357:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1236,
																					"name": "supplyDelta",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1191,
																					"src": "12397:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"id": 1235,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "12389:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 1234,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "12389:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1237,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12389:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1232,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1035,
																			"src": "12372:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 283,
																		"src": "12372:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12372:38:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12357:53:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1240,
															"nodeType": "ExpressionStatement",
															"src": "12357:53:0"
														}
													]
												},
												"id": 1242,
												"nodeType": "IfStatement",
												"src": "12234:188:0",
												"trueBody": {
													"id": 1230,
													"nodeType": "Block",
													"src": "12255:81:0",
													"statements": [
														{
															"expression": {
																"id": 1228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1219,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1035,
																	"src": "12270:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1225,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "-",
																					"prefix": true,
																					"src": "12310:12:0",
																					"subExpression": {
																						"id": 1224,
																						"name": "supplyDelta",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1191,
																						"src": "12311:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"id": 1223,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "12302:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 1222,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "12302:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1226,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12302:21:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1220,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1035,
																			"src": "12285:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 299,
																		"src": "12285:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12285:39:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12270:54:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1229,
															"nodeType": "ExpressionStatement",
															"src": "12270:54:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1243,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "12438:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1244,
														"name": "MAX_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "12453:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12438:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1251,
												"nodeType": "IfStatement",
												"src": "12434:83:0",
												"trueBody": {
													"id": 1250,
													"nodeType": "Block",
													"src": "12465:52:0",
													"statements": [
														{
															"expression": {
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1246,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1035,
																	"src": "12480:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1247,
																	"name": "MAX_SUPPLY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1033,
																	"src": "12495:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12480:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1249,
															"nodeType": "ExpressionStatement",
															"src": "12480:25:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1252,
														"name": "_gonsPerFragment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1037,
														"src": "12529:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1255,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1035,
																"src": "12563:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1253,
																"name": "TOTAL_GONS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1026,
																"src": "12548:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 376,
															"src": "12548:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1256,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12548:28:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12529:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1258,
												"nodeType": "ExpressionStatement",
												"src": "12529:47:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1259,
															"name": "pairContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "12587:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_InterfaceLP_$428",
																"typeString": "contract InterfaceLP"
															}
														},
														"id": 1261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sync",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 427,
														"src": "12587:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
															"typeString": "function () external"
														}
													},
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12587:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1263,
												"nodeType": "ExpressionStatement",
												"src": "12587:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1265,
															"name": "epoch",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "12634:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1266,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "12641:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1264,
														"name": "LogRebase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "12624:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12624:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1268,
												"nodeType": "EmitStatement",
												"src": "12619:35:0"
											},
											{
												"expression": {
													"id": 1269,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1035,
													"src": "12672:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1197,
												"id": 1270,
												"nodeType": "Return",
												"src": "12665:19:0"
											}
										]
									},
									"functionSelector": "7a43e23f",
									"id": 1272,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1194,
											"modifierName": {
												"id": 1193,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 800,
												"src": "12011:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "12011:9:0"
										}
									],
									"name": "rebase",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "epoch",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "11949:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11949:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "supplyDelta",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "11964:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1190,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "11964:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11948:35:0"
									},
									"returnParameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "12039:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12039:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12038:9:0"
									},
									"scope": 2465,
									"src": "11933:759:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										196
									],
									"body": {
										"id": 1280,
										"nodeType": "Block",
										"src": "12764:38:0",
										"statements": [
											{
												"expression": {
													"id": 1278,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1035,
													"src": "12782:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1277,
												"id": 1279,
												"nodeType": "Return",
												"src": "12775:19:0"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 1281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1274,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12737:8:0"
									},
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12720:2:0"
									},
									"returnParameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "12755:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12755:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12754:9:0"
									},
									"scope": 2465,
									"src": "12700:102:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										221
									],
									"body": {
										"id": 1305,
										"nodeType": "Block",
										"src": "12981:77:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1297,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "13006:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "13006:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1299,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "13018:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1300,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "13022:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1296,
														"name": "_transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1495,
														"src": "12992:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12992:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1302,
												"nodeType": "ExpressionStatement",
												"src": "12992:36:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13046:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1295,
												"id": 1304,
												"nodeType": "Return",
												"src": "13039:11:0"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1306,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1289,
													"name": "to",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1283,
													"src": "12915:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1290,
											"modifierName": {
												"id": 1288,
												"name": "validRecipient",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 926,
												"src": "12900:14:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$",
													"typeString": "modifier (address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "12900:18:0"
										},
										{
											"id": 1292,
											"modifierName": {
												"id": 1291,
												"name": "initialDistributionLock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 911,
												"src": "12928:23:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "12928:23:0"
										}
									],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1287,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12882:8:0"
									},
									"parameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "12828:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12828:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "12840:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12840:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12827:27:0"
									},
									"returnParameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "12970:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1293,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12970:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12969:6:0"
									},
									"scope": 2465,
									"src": "12810:248:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1323,
										"nodeType": "Block",
										"src": "13118:88:0",
										"statements": [
											{
												"expression": {
													"id": 1317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1313,
														"name": "pairContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "13129:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_InterfaceLP_$428",
															"typeString": "contract InterfaceLP"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1315,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1308,
																"src": "13156:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1314,
															"name": "InterfaceLP",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 428,
															"src": "13144:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_InterfaceLP_$428_$",
																"typeString": "type(contract InterfaceLP)"
															}
														},
														"id": 1316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13144:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_InterfaceLP_$428",
															"typeString": "contract InterfaceLP"
														}
													},
													"src": "13129:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_InterfaceLP_$428",
														"typeString": "contract InterfaceLP"
													}
												},
												"id": 1318,
												"nodeType": "ExpressionStatement",
												"src": "13129:36:0"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1319,
														"name": "_isFeeExempt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 895,
														"src": "13176:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1321,
													"indexExpression": {
														"id": 1320,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1308,
														"src": "13189:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13176:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1322,
												"nodeType": "ExpressionStatement",
												"src": "13176:22:0"
											}
										]
									},
									"functionSelector": "2f34d282",
									"id": 1324,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1311,
											"modifierName": {
												"id": 1310,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 800,
												"src": "13108:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "13108:9:0"
										}
									],
									"name": "setLP",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "13081:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13081:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13080:18:0"
									},
									"returnParameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13118:0:0"
									},
									"scope": 2465,
									"src": "13066:140:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										212
									],
									"body": {
										"id": 1340,
										"nodeType": "Block",
										"src": "13348:60:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1334,
															"name": "_allowedFragments",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "13366:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1336,
														"indexExpression": {
															"id": 1335,
															"name": "owner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1326,
															"src": "13384:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13366:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1338,
													"indexExpression": {
														"id": 1337,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1328,
														"src": "13392:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13366:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1333,
												"id": 1339,
												"nodeType": "Return",
												"src": "13359:41:0"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 1341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1330,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13307:8:0"
									},
									"parameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "owner_",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "13233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "13249:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13249:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13232:33:0"
									},
									"returnParameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "13334:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13334:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13333:9:0"
									},
									"scope": 2465,
									"src": "13214:194:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										203
									],
									"body": {
										"id": 1356,
										"nodeType": "Block",
										"src": "13489:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1353,
															"name": "_gonsPerFragment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "13529:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1349,
																"name": "_gonBalances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1041,
																"src": "13507:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1351,
															"indexExpression": {
																"id": 1350,
																"name": "who",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1343,
																"src": "13520:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13507:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 376,
														"src": "13507:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13507:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1348,
												"id": 1355,
												"nodeType": "Return",
												"src": "13500:46:0"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 1357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1345,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13462:8:0"
									},
									"parameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "who",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "13435:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13435:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13434:13:0"
									},
									"returnParameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "13480:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13480:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13479:9:0"
									},
									"scope": 2465,
									"src": "13416:138:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1399,
										"nodeType": "Block",
										"src": "13686:215:0",
										"statements": [
											{
												"assignments": [
													1369
												],
												"declarations": [
													{
														"constant": false,
														"id": 1369,
														"mutability": "mutable",
														"name": "gonAmount",
														"nodeType": "VariableDeclaration",
														"scope": 1399,
														"src": "13697:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1368,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13697:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1374,
												"initialValue": {
													"arguments": [
														{
															"id": 1372,
															"name": "_gonsPerFragment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "13728:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1370,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1363,
															"src": "13717:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 360,
														"src": "13717:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13717:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13697:48:0"
											},
											{
												"expression": {
													"id": 1384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1375,
															"name": "_gonBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "13756:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1377,
														"indexExpression": {
															"id": 1376,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1359,
															"src": "13769:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13756:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1382,
																"name": "gonAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1369,
																"src": "13800:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1378,
																	"name": "_gonBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1041,
																	"src": "13777:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1380,
																"indexExpression": {
																	"id": 1379,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1359,
																	"src": "13790:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "13777:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 299,
															"src": "13777:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13777:33:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13756:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1385,
												"nodeType": "ExpressionStatement",
												"src": "13756:54:0"
											},
											{
												"expression": {
													"id": 1395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1386,
															"name": "_gonBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "13821:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1388,
														"indexExpression": {
															"id": 1387,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1361,
															"src": "13834:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13821:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1393,
																"name": "gonAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1369,
																"src": "13861:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1389,
																	"name": "_gonBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1041,
																	"src": "13840:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1391,
																"indexExpression": {
																	"id": 1390,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1361,
																	"src": "13853:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "13840:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 283,
															"src": "13840:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13840:31:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13821:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1396,
												"nodeType": "ExpressionStatement",
												"src": "13821:50:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13889:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1367,
												"id": 1398,
												"nodeType": "Return",
												"src": "13882:11:0"
											}
										]
									},
									"id": 1400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_basicTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "13596:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13596:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "13619:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13619:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "13640:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13640:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13585:76:0"
									},
									"returnParameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "13680:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1365,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13680:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13679:6:0"
									},
									"scope": 2465,
									"src": "13562:339:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1494,
										"nodeType": "Block",
										"src": "14041:803:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1415,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "14060:18:0",
																"subExpression": {
																	"baseExpression": {
																		"id": 1412,
																		"name": "blacklist",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1051,
																		"src": "14061:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1414,
																	"indexExpression": {
																		"id": 1413,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1402,
																		"src": "14071:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14061:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"id": 1419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "14082:21:0",
																"subExpression": {
																	"baseExpression": {
																		"id": 1416,
																		"name": "blacklist",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1051,
																		"src": "14083:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1418,
																	"indexExpression": {
																		"id": 1417,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1404,
																		"src": "14093:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14083:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "14060:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e5f626c61636b6c697374",
															"id": 1421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14105:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9e9c909d0ab8f5cada9b74447a5e562b5cfc1de98586301c0a6f579916ee6a8a",
																"typeString": "literal_string \"in_blacklist\""
															},
															"value": "in_blacklist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9e9c909d0ab8f5cada9b74447a5e562b5cfc1de98586301c0a6f579916ee6a8a",
																"typeString": "literal_string \"in_blacklist\""
															}
														],
														"id": 1411,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "14052:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14052:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1423,
												"nodeType": "ExpressionStatement",
												"src": "14052:68:0"
											},
											{
												"condition": {
													"id": 1424,
													"name": "inSwap",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1006,
													"src": "14135:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1432,
												"nodeType": "IfStatement",
												"src": "14131:87:0",
												"trueBody": {
													"id": 1431,
													"nodeType": "Block",
													"src": "14143:75:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1426,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1402,
																		"src": "14180:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1427,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1404,
																		"src": "14188:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1428,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1406,
																		"src": "14199:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1425,
																	"name": "_basicTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1400,
																	"src": "14165:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) returns (bool)"
																	}
																},
																"id": 1429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14165:41:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"functionReturnParameters": 1410,
															"id": 1430,
															"nodeType": "Return",
															"src": "14158:48:0"
														}
													]
												}
											},
											{
												"assignments": [
													1434
												],
												"declarations": [
													{
														"constant": false,
														"id": 1434,
														"mutability": "mutable",
														"name": "gonAmount",
														"nodeType": "VariableDeclaration",
														"scope": 1494,
														"src": "14230:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1433,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14230:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1439,
												"initialValue": {
													"arguments": [
														{
															"id": 1437,
															"name": "_gonsPerFragment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "14261:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1435,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1406,
															"src": "14250:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1436,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 360,
														"src": "14250:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14250:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14230:48:0"
											},
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1440,
														"name": "shouldSwapBack",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2141,
														"src": "14295:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 1441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14295:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1446,
												"nodeType": "IfStatement",
												"src": "14291:59:0",
												"trueBody": {
													"id": 1445,
													"nodeType": "Block",
													"src": "14313:37:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1442,
																	"name": "swapBack",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1756,
																	"src": "14328:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14328:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1444,
															"nodeType": "ExpressionStatement",
															"src": "14328:10:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1447,
															"name": "_gonBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "14362:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1449,
														"indexExpression": {
															"id": 1448,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1402,
															"src": "14375:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14362:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1454,
																"name": "gonAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1434,
																"src": "14410:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1450,
																	"name": "_gonBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1041,
																	"src": "14385:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1452,
																"indexExpression": {
																	"id": 1451,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1402,
																	"src": "14398:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "14385:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 299,
															"src": "14385:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1455,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14385:35:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14362:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1457,
												"nodeType": "ExpressionStatement",
												"src": "14362:58:0"
											},
											{
												"assignments": [
													1459
												],
												"declarations": [
													{
														"constant": false,
														"id": 1459,
														"mutability": "mutable",
														"name": "gonAmountReceived",
														"nodeType": "VariableDeclaration",
														"scope": 1494,
														"src": "14433:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1458,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14433:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1471,
												"initialValue": {
													"condition": {
														"arguments": [
															{
																"id": 1461,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1402,
																"src": "14475:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1462,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1404,
																"src": "14483:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1460,
															"name": "shouldTakeFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2038,
															"src": "14461:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																"typeString": "function (address,address) view returns (bool)"
															}
														},
														"id": 1463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14461:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1469,
														"name": "gonAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1434,
														"src": "14562:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "14461:110:0",
													"trueExpression": {
														"arguments": [
															{
																"id": 1465,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1402,
																"src": "14517:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1466,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1404,
																"src": "14525:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1467,
																"name": "gonAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1434,
																"src": "14536:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1464,
															"name": "takeFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1827,
															"src": "14509:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (address,address,uint256) returns (uint256)"
															}
														},
														"id": 1468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14509:37:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14433:138:0"
											},
											{
												"expression": {
													"id": 1481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1472,
															"name": "_gonBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "14582:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1474,
														"indexExpression": {
															"id": 1473,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1404,
															"src": "14595:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14582:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1479,
																"name": "gonAmountReceived",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1459,
																"src": "14650:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1475,
																	"name": "_gonBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1041,
																	"src": "14608:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1477,
																"indexExpression": {
																	"id": 1476,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "14621:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "14608:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 283,
															"src": "14608:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14608:70:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14582:96:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1482,
												"nodeType": "ExpressionStatement",
												"src": "14582:96:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1484,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1402,
															"src": "14719:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1485,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1404,
															"src": "14740:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1488,
																	"name": "_gonsPerFragment",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1037,
																	"src": "14786:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1486,
																	"name": "gonAmountReceived",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1459,
																	"src": "14764:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 376,
																"src": "14764:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14764:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1483,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 249,
														"src": "14696:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14696:118:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1491,
												"nodeType": "EmitStatement",
												"src": "14691:123:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1492,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14832:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1410,
												"id": 1493,
												"nodeType": "Return",
												"src": "14825:11:0"
											}
										]
									},
									"id": 1495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1495,
												"src": "13942:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13942:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1495,
												"src": "13967:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13967:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1495,
												"src": "13995:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13995:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13931:85:0"
									},
									"returnParameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1495,
												"src": "14035:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1408,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14035:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14034:6:0"
									},
									"scope": 2465,
									"src": "13909:935:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										241
									],
									"body": {
										"id": 1550,
										"nodeType": "Block",
										"src": "15001:308:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1510,
																"name": "_allowedFragments",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1047,
																"src": "15016:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1512,
															"indexExpression": {
																"id": 1511,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1497,
																"src": "15034:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15016:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1515,
														"indexExpression": {
															"expression": {
																"id": 1513,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "15040:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "15040:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "15016:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"id": 1519,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "15063:2:0",
																"subExpression": {
																	"hexValue": "31",
																	"id": 1518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15064:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															],
															"id": 1517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15055:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1516,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "15055:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1520,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15055:11:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15016:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1541,
												"nodeType": "IfStatement",
												"src": "15012:225:0",
												"trueBody": {
													"id": 1540,
													"nodeType": "Block",
													"src": "15068:169:0",
													"statements": [
														{
															"expression": {
																"id": 1538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1522,
																			"name": "_allowedFragments",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1047,
																			"src": "15083:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1526,
																		"indexExpression": {
																			"id": 1523,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1497,
																			"src": "15101:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "15083:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1527,
																	"indexExpression": {
																		"expression": {
																			"id": 1524,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "15107:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "15107:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "15083:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1535,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1501,
																			"src": "15193:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"hexValue": "496e73756666696369656e7420416c6c6f77616e6365",
																			"id": 1536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15200:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_3f0ff8cd200538bae802ddf9006bb5040e9e9ddc88045ad2938dcac06977cbf6",
																				"typeString": "literal_string \"Insufficient Allowance\""
																			},
																			"value": "Insufficient Allowance"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_3f0ff8cd200538bae802ddf9006bb5040e9e9ddc88045ad2938dcac06977cbf6",
																				"typeString": "literal_string \"Insufficient Allowance\""
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 1528,
																					"name": "_allowedFragments",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1047,
																					"src": "15121:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(address => mapping(address => uint256))"
																					}
																				},
																				"id": 1530,
																				"indexExpression": {
																					"id": 1529,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1497,
																					"src": "15139:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "15121:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1533,
																			"indexExpression": {
																				"expression": {
																					"id": 1531,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -15,
																					"src": "15163:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1532,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "15163:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "15121:67:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 326,
																		"src": "15121:71:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																		}
																	},
																	"id": 1537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15121:104:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15083:142:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1539,
															"nodeType": "ExpressionStatement",
															"src": "15083:142:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1543,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1497,
															"src": "15263:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1544,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1499,
															"src": "15269:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1545,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1501,
															"src": "15273:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1542,
														"name": "_transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1495,
														"src": "15249:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 1546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15249:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1547,
												"nodeType": "ExpressionStatement",
												"src": "15249:30:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1548,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15297:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1509,
												"id": 1549,
												"nodeType": "Return",
												"src": "15290:11:0"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1551,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1505,
													"name": "to",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1499,
													"src": "14982:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1506,
											"modifierName": {
												"id": 1504,
												"name": "validRecipient",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 926,
												"src": "14967:14:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$",
													"typeString": "modifier (address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "14967:18:0"
										}
									],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1503,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14958:8:0"
									},
									"parameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "14884:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14884:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "14907:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14907:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "14928:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14928:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14873:75:0"
									},
									"returnParameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "14995:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1507,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14995:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14994:6:0"
									},
									"scope": 2465,
									"src": "14852:457:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1755,
										"nodeType": "Block",
										"src": "15355:2009:0",
										"statements": [
											{
												"assignments": [
													1557
												],
												"declarations": [
													{
														"constant": false,
														"id": 1557,
														"mutability": "mutable",
														"name": "dynamicLiquidityFee",
														"nodeType": "VariableDeclaration",
														"scope": 1755,
														"src": "15366:27:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1556,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15366:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1565,
												"initialValue": {
													"condition": {
														"arguments": [
															{
																"id": 1559,
																"name": "targetLiquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 986,
																"src": "15426:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1560,
																"name": "targetLiquidityDenominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 989,
																"src": "15456:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1558,
															"name": "isOverLiquified",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2460,
															"src": "15396:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256,uint256) view returns (bool)"
															}
														},
														"id": 1561,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15396:97:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1563,
														"name": "liquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "15526:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "15396:142:0",
													"trueExpression": {
														"hexValue": "30",
														"id": 1562,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15509:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15366:172:0"
											},
											{
												"assignments": [
													1567
												],
												"declarations": [
													{
														"constant": false,
														"id": 1567,
														"mutability": "mutable",
														"name": "contractTokenBalance",
														"nodeType": "VariableDeclaration",
														"scope": 1755,
														"src": "15549:28:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1566,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15549:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1577,
												"initialValue": {
													"arguments": [
														{
															"id": 1575,
															"name": "_gonsPerFragment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "15626:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1568,
																"name": "_gonBalances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1041,
																"src": "15580:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1573,
															"indexExpression": {
																"arguments": [
																	{
																		"id": 1571,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -28,
																		"src": "15601:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_AndrewTateToken_$2465",
																			"typeString": "contract AndrewTateToken"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_AndrewTateToken_$2465",
																			"typeString": "contract AndrewTateToken"
																		}
																	],
																	"id": 1570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15593:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1569,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15593:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15593:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15580:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 376,
														"src": "15580:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15580:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15549:104:0"
											},
											{
												"assignments": [
													1579
												],
												"declarations": [
													{
														"constant": false,
														"id": 1579,
														"mutability": "mutable",
														"name": "amountToLiquify",
														"nodeType": "VariableDeclaration",
														"scope": 1755,
														"src": "15664:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1578,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15664:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1590,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 1588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15796:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1585,
																	"name": "totalFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 968,
																	"src": "15768:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1582,
																			"name": "dynamicLiquidityFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1557,
																			"src": "15729:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1580,
																			"name": "contractTokenBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1567,
																			"src": "15690:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 360,
																		"src": "15690:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15690:59:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 376,
																"src": "15690:77:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15690:87:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1587,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 376,
														"src": "15690:105:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15690:108:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15664:134:0"
											},
											{
												"assignments": [
													1592
												],
												"declarations": [
													{
														"constant": false,
														"id": 1592,
														"mutability": "mutable",
														"name": "amountToSwap",
														"nodeType": "VariableDeclaration",
														"scope": 1755,
														"src": "15809:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1591,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15809:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1597,
												"initialValue": {
													"arguments": [
														{
															"id": 1595,
															"name": "amountToLiquify",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1579,
															"src": "15857:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1593,
															"name": "contractTokenBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1567,
															"src": "15832:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 299,
														"src": "15832:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15832:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15809:64:0"
											},
											{
												"assignments": [
													1602
												],
												"declarations": [
													{
														"constant": false,
														"id": 1602,
														"mutability": "mutable",
														"name": "path",
														"nodeType": "VariableDeclaration",
														"scope": 1755,
														"src": "15886:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 1600,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15886:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1601,
															"nodeType": "ArrayTypeName",
															"src": "15886:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1608,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 1606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15924:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 1605,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "15910:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1603,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15914:7:0",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1604,
															"nodeType": "ArrayTypeName",
															"src": "15914:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 1607,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15910:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15886:40:0"
											},
											{
												"expression": {
													"id": 1616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1609,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1602,
															"src": "15937:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1611,
														"indexExpression": {
															"hexValue": "30",
															"id": 1610,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15942:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15937:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1614,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -28,
																"src": "15955:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_AndrewTateToken_$2465",
																	"typeString": "contract AndrewTateToken"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_AndrewTateToken_$2465",
																	"typeString": "contract AndrewTateToken"
																}
															],
															"id": 1613,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15947:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1612,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15947:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15947:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "15937:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1617,
												"nodeType": "ExpressionStatement",
												"src": "15937:23:0"
											},
											{
												"expression": {
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1618,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1602,
															"src": "15971:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1620,
														"indexExpression": {
															"hexValue": "31",
															"id": 1619,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15976:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15971:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1621,
																"name": "router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 991,
																"src": "15981:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IDEXRouter_$752",
																	"typeString": "contract IDEXRouter"
																}
															},
															"id": 1622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "WETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 665,
															"src": "15981:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																"typeString": "function () pure external returns (address)"
															}
														},
														"id": 1623,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15981:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15971:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1625,
												"nodeType": "ExpressionStatement",
												"src": "15971:23:0"
											},
											{
												"assignments": [
													1627
												],
												"declarations": [
													{
														"constant": false,
														"id": 1627,
														"mutability": "mutable",
														"name": "balanceBefore",
														"nodeType": "VariableDeclaration",
														"scope": 1755,
														"src": "16007:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1626,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16007:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1633,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1630,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -28,
																"src": "16039:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_AndrewTateToken_$2465",
																	"typeString": "contract AndrewTateToken"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_AndrewTateToken_$2465",
																	"typeString": "contract AndrewTateToken"
																}
															],
															"id": 1629,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16031:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1628,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16031:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16031:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"id": 1632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "16031:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16007:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1637,
															"name": "amountToSwap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1592,
															"src": "16137:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 1638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16164:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1639,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1602,
															"src": "16180:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 1642,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "16207:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AndrewTateToken_$2465",
																		"typeString": "contract AndrewTateToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AndrewTateToken_$2465",
																		"typeString": "contract AndrewTateToken"
																	}
																],
																"id": 1641,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "16199:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1640,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "16199:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16199:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"expression": {
																"id": 1644,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "16227:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "16227:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1634,
															"name": "router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "16065:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDEXRouter_$752",
																"typeString": "contract IDEXRouter"
															}
														},
														"id": 1636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "swapExactTokensForETHSupportingFeeOnTransferTokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 751,
														"src": "16065:57:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
														}
													},
													"id": 1646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16065:188:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1647,
												"nodeType": "ExpressionStatement",
												"src": "16065:188:0"
											},
											{
												"assignments": [
													1649
												],
												"declarations": [
													{
														"constant": false,
														"id": 1649,
														"mutability": "mutable",
														"name": "amountETH",
														"nodeType": "VariableDeclaration",
														"scope": 1755,
														"src": "16266:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1648,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16266:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1658,
												"initialValue": {
													"arguments": [
														{
															"id": 1656,
															"name": "balanceBefore",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1627,
															"src": "16312:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1652,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -28,
																		"src": "16294:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_AndrewTateToken_$2465",
																			"typeString": "contract AndrewTateToken"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_AndrewTateToken_$2465",
																			"typeString": "contract AndrewTateToken"
																		}
																	],
																	"id": 1651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16286:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1650,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "16286:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16286:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "16286:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1655,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 299,
														"src": "16286:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16286:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16266:60:0"
											},
											{
												"assignments": [
													1660
												],
												"declarations": [
													{
														"constant": false,
														"id": 1660,
														"mutability": "mutable",
														"name": "totalETHFee",
														"nodeType": "VariableDeclaration",
														"scope": 1755,
														"src": "16339:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1659,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16339:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1668,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "32",
																	"id": 1665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16398:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	}
																],
																"expression": {
																	"id": 1663,
																	"name": "dynamicLiquidityFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1557,
																	"src": "16374:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 376,
																"src": "16374:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16374:26:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1661,
															"name": "totalFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "16361:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1662,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 299,
														"src": "16361:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16361:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16339:62:0"
											},
											{
												"assignments": [
													1670
												],
												"declarations": [
													{
														"constant": false,
														"id": 1670,
														"mutability": "mutable",
														"name": "amountETHLiquidity",
														"nodeType": "VariableDeclaration",
														"scope": 1755,
														"src": "16414:26:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1669,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16414:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1681,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 1679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16541:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1676,
																	"name": "totalETHFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1660,
																	"src": "16510:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1673,
																			"name": "dynamicLiquidityFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1557,
																			"src": "16471:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1671,
																			"name": "amountETH",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1649,
																			"src": "16443:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 360,
																		"src": "16443:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16443:48:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 376,
																"src": "16443:66:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16443:79:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 376,
														"src": "16443:97:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16443:100:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16414:129:0"
											},
											{
												"assignments": [
													1683
												],
												"declarations": [
													{
														"constant": false,
														"id": 1683,
														"mutability": "mutable",
														"name": "amountETHRiskFreeValue",
														"nodeType": "VariableDeclaration",
														"scope": 1755,
														"src": "16554:30:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1682,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16554:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1691,
												"initialValue": {
													"arguments": [
														{
															"id": 1689,
															"name": "totalETHFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1660,
															"src": "16620:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1686,
																	"name": "RiskFreeValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 956,
																	"src": "16601:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1684,
																	"name": "amountETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1649,
																	"src": "16587:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 360,
																"src": "16587:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16587:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 376,
														"src": "16587:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16587:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16554:78:0"
											},
											{
												"assignments": [
													1693
												],
												"declarations": [
													{
														"constant": false,
														"id": 1693,
														"mutability": "mutable",
														"name": "amountETHTreasury",
														"nodeType": "VariableDeclaration",
														"scope": 1755,
														"src": "16643:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1692,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16643:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1701,
												"initialValue": {
													"arguments": [
														{
															"id": 1699,
															"name": "totalETHFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1660,
															"src": "16713:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1696,
																	"name": "Treasury",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "16685:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1694,
																	"name": "amountETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1649,
																	"src": "16671:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1695,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 360,
																"src": "16671:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16671:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1698,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 376,
														"src": "16671:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16671:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16643:92:0"
											},
											{
												"assignments": [
													1703,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1703,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 1755,
														"src": "16749:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1702,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "16749:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1714,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16873:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1706,
																		"name": "TreasuryReceiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 981,
																		"src": "16775:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16767:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 1704,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "16767:8:0",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 1707,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16767:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "16767:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value",
															"gas"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1709,
																"name": "amountETHTreasury",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1693,
																"src": "16819:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "3330303030",
																"id": 1710,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16856:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_30000_by_1",
																	"typeString": "int_const 30000"
																},
																"value": "30000"
															}
														],
														"src": "16767:105:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gasvalue",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16767:109:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16748:128:0"
											},
											{
												"expression": {
													"id": 1727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 1715,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1703,
																"src": "16888:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															null
														],
														"id": 1716,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "16887:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$__$",
															"typeString": "tuple(bool,)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "",
																"id": 1725,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17017:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1719,
																			"name": "RiskFreeValueReceiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 983,
																			"src": "16909:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "16901:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_payable_$",
																			"typeString": "type(address payable)"
																		},
																		"typeName": {
																			"id": 1717,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "16901:8:0",
																			"stateMutability": "payable",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16901:30:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"id": 1721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "call",
																"nodeType": "MemberAccess",
																"src": "16901:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																}
															},
															"id": 1724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"names": [
																"value",
																"gas"
															],
															"nodeType": "FunctionCallOptions",
															"options": [
																{
																	"id": 1722,
																	"name": "amountETHRiskFreeValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1683,
																	"src": "16958:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "3330303030",
																	"id": 1723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17000:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_30000_by_1",
																		"typeString": "int_const 30000"
																	},
																	"value": "30000"
																}
															],
															"src": "16901:115:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gasvalue",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1726,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16901:119:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "tuple(bool,bytes memory)"
														}
													},
													"src": "16887:133:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1728,
												"nodeType": "ExpressionStatement",
												"src": "16887:133:0"
											},
											{
												"expression": {
													"id": 1731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1729,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1703,
														"src": "17033:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1730,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17043:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "17033:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1732,
												"nodeType": "ExpressionStatement",
												"src": "17033:15:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1733,
														"name": "amountToLiquify",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1579,
														"src": "17065:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1734,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17083:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17065:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1754,
												"nodeType": "IfStatement",
												"src": "17061:296:0",
												"trueBody": {
													"id": 1753,
													"nodeType": "Block",
													"src": "17086:271:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1743,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "17177:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_AndrewTateToken_$2465",
																					"typeString": "contract AndrewTateToken"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_AndrewTateToken_$2465",
																					"typeString": "contract AndrewTateToken"
																				}
																			],
																			"id": 1742,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "17169:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1741,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "17169:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1744,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17169:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"id": 1745,
																		"name": "amountToLiquify",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1579,
																		"src": "17201:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 1746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17235:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "30",
																		"id": 1747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17255:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"id": 1748,
																		"name": "autoLiquidityReceiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 979,
																		"src": "17275:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1749,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -4,
																			"src": "17315:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1750,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "17315:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1736,
																			"name": "router",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 991,
																			"src": "17101:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IDEXRouter_$752",
																				"typeString": "contract IDEXRouter"
																			}
																		},
																		"id": 1738,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "addLiquidityETH",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 711,
																		"src": "17101:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
																			"typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
																		}
																	},
																	"id": 1740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 1739,
																			"name": "amountETHLiquidity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1670,
																			"src": "17131:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "17101:49:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$value",
																		"typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
																	}
																},
																"id": 1751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17101:244:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256,uint256)"
																}
															},
															"id": 1752,
															"nodeType": "ExpressionStatement",
															"src": "17101:244:0"
														}
													]
												}
											}
										]
									},
									"id": 1756,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1554,
											"modifierName": {
												"id": 1553,
												"name": "swapping",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1018,
												"src": "15346:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "15346:8:0"
										}
									],
									"name": "swapBack",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15334:2:0"
									},
									"returnParameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15355:0:0"
									},
									"scope": 2465,
									"src": "15317:2047:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1826,
										"nodeType": "Block",
										"src": "17493:424:0",
										"statements": [
											{
												"assignments": [
													1768
												],
												"declarations": [
													{
														"constant": false,
														"id": 1768,
														"mutability": "mutable",
														"name": "_totalFee",
														"nodeType": "VariableDeclaration",
														"scope": 1826,
														"src": "17504:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1767,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17504:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1770,
												"initialValue": {
													"id": 1769,
													"name": "totalFee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 968,
													"src": "17524:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17504:28:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1771,
														"name": "recipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1760,
														"src": "17546:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1772,
														"name": "pair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 993,
														"src": "17559:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17546:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1781,
												"nodeType": "IfStatement",
												"src": "17543:56:0",
												"trueBody": {
													"expression": {
														"id": 1779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1774,
															"name": "_totalFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1768,
															"src": "17565:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"arguments": [
																{
																	"id": 1777,
																	"name": "sellFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 959,
																	"src": "17591:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1775,
																	"name": "_totalFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1768,
																	"src": "17577:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 283,
																"src": "17577:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17577:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "17565:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1780,
													"nodeType": "ExpressionStatement",
													"src": "17565:34:0"
												}
											},
											{
												"assignments": [
													1783
												],
												"declarations": [
													{
														"constant": false,
														"id": 1783,
														"mutability": "mutable",
														"name": "feeAmount",
														"nodeType": "VariableDeclaration",
														"scope": 1826,
														"src": "17612:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1782,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17612:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1791,
												"initialValue": {
													"arguments": [
														{
															"id": 1789,
															"name": "feeDenominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "17661:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1786,
																	"name": "_totalFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1768,
																	"src": "17646:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1784,
																	"name": "gonAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1762,
																	"src": "17632:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 360,
																"src": "17632:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17632:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1788,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 376,
														"src": "17632:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17632:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17612:64:0"
											},
											{
												"expression": {
													"id": 1807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1792,
															"name": "_gonBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "17689:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1797,
														"indexExpression": {
															"arguments": [
																{
																	"id": 1795,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "17710:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AndrewTateToken_$2465",
																		"typeString": "contract AndrewTateToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AndrewTateToken_$2465",
																		"typeString": "contract AndrewTateToken"
																	}
																],
																"id": 1794,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17702:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1793,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17702:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17702:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17689:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1805,
																"name": "feeAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1783,
																"src": "17765:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1798,
																	"name": "_gonBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1041,
																	"src": "17719:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1803,
																"indexExpression": {
																	"arguments": [
																		{
																			"id": 1801,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "17740:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AndrewTateToken_$2465",
																				"typeString": "contract AndrewTateToken"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AndrewTateToken_$2465",
																				"typeString": "contract AndrewTateToken"
																			}
																		],
																		"id": 1800,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "17732:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1799,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "17732:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17732:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17719:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 283,
															"src": "17719:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1806,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17719:66:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17689:96:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1808,
												"nodeType": "ExpressionStatement",
												"src": "17689:96:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1810,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1758,
															"src": "17810:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1813,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "17826:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AndrewTateToken_$2465",
																		"typeString": "contract AndrewTateToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AndrewTateToken_$2465",
																		"typeString": "contract AndrewTateToken"
																	}
																],
																"id": 1812,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17818:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1811,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17818:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17818:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 1817,
																	"name": "_gonsPerFragment",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1037,
																	"src": "17847:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1815,
																	"name": "feeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1783,
																	"src": "17833:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1816,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 376,
																"src": "17833:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17833:31:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1809,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 249,
														"src": "17801:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17801:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1820,
												"nodeType": "EmitStatement",
												"src": "17796:69:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1823,
															"name": "feeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1783,
															"src": "17899:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1821,
															"name": "gonAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1762,
															"src": "17885:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1822,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 299,
														"src": "17885:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17885:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1766,
												"id": 1825,
												"nodeType": "Return",
												"src": "17878:31:0"
											}
										]
									},
									"id": 1827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "takeFee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1758,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "17389:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17389:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1760,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "17405:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17405:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "gonAmount",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "17424:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17424:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17388:54:0"
									},
									"returnParameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "17479:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17479:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17478:9:0"
									},
									"scope": 2465,
									"src": "17372:545:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1888,
										"nodeType": "Block",
										"src": "18078:480:0",
										"statements": [
											{
												"assignments": [
													1839
												],
												"declarations": [
													{
														"constant": false,
														"id": 1839,
														"mutability": "mutable",
														"name": "oldValue",
														"nodeType": "VariableDeclaration",
														"scope": 1888,
														"src": "18089:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1838,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18089:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1846,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1840,
															"name": "_allowedFragments",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "18108:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1843,
														"indexExpression": {
															"expression": {
																"id": 1841,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "18126:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "18126:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "18108:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1845,
													"indexExpression": {
														"id": 1844,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1829,
														"src": "18138:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "18108:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18089:57:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1847,
														"name": "subtractedValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1831,
														"src": "18161:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1848,
														"name": "oldValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1839,
														"src": "18180:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18161:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1872,
													"nodeType": "Block",
													"src": "18265:129:0",
													"statements": [
														{
															"expression": {
																"id": 1870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1860,
																			"name": "_allowedFragments",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1047,
																			"src": "18280:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1864,
																		"indexExpression": {
																			"expression": {
																				"id": 1861,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -15,
																				"src": "18298:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1862,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "18298:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "18280:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1865,
																	"indexExpression": {
																		"id": 1863,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1829,
																		"src": "18310:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "18280:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1868,
																			"name": "subtractedValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1831,
																			"src": "18352:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1866,
																			"name": "oldValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1839,
																			"src": "18321:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 299,
																		"src": "18321:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1869,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18321:61:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18280:102:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1871,
															"nodeType": "ExpressionStatement",
															"src": "18280:102:0"
														}
													]
												},
												"id": 1873,
												"nodeType": "IfStatement",
												"src": "18157:237:0",
												"trueBody": {
													"id": 1859,
													"nodeType": "Block",
													"src": "18190:69:0",
													"statements": [
														{
															"expression": {
																"id": 1857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1850,
																			"name": "_allowedFragments",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1047,
																			"src": "18205:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1854,
																		"indexExpression": {
																			"expression": {
																				"id": 1851,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -15,
																				"src": "18223:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1852,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "18223:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "18205:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1855,
																	"indexExpression": {
																		"id": 1853,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1829,
																		"src": "18235:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "18205:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1856,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18246:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "18205:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1858,
															"nodeType": "ExpressionStatement",
															"src": "18205:42:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1875,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "18432:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "18432:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1877,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1829,
															"src": "18457:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 1878,
																	"name": "_allowedFragments",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1047,
																	"src": "18479:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 1881,
																"indexExpression": {
																	"expression": {
																		"id": 1879,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "18497:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "18497:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "18479:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1883,
															"indexExpression": {
																"id": 1882,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1829,
																"src": "18509:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18479:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1874,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "18409:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18409:119:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1885,
												"nodeType": "EmitStatement",
												"src": "18404:124:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1886,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "18546:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1837,
												"id": 1887,
												"nodeType": "Return",
												"src": "18539:11:0"
											}
										]
									},
									"functionSelector": "a457c2d7",
									"id": 1889,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1834,
											"modifierName": {
												"id": 1833,
												"name": "initialDistributionLock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 911,
												"src": "18025:23:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "18025:23:0"
										}
									],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "17956:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17956:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1831,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "17973:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17973:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17955:42:0"
									},
									"returnParameters": {
										"id": 1837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "18067:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1835,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18067:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18066:6:0"
									},
									"scope": 2465,
									"src": "17929:629:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1931,
										"nodeType": "Block",
										"src": "18710:295:0",
										"statements": [
											{
												"expression": {
													"id": 1915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1900,
																"name": "_allowedFragments",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1047,
																"src": "18721:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1904,
															"indexExpression": {
																"expression": {
																	"id": 1901,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "18739:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "18739:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18721:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1905,
														"indexExpression": {
															"id": 1903,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1891,
															"src": "18751:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18721:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1913,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1893,
																"src": "18829:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1906,
																		"name": "_allowedFragments",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1047,
																		"src": "18762:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 1909,
																	"indexExpression": {
																		"expression": {
																			"id": 1907,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "18780:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "18780:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "18762:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1911,
																"indexExpression": {
																	"id": 1910,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1891,
																	"src": "18806:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "18762:62:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 283,
															"src": "18762:66:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1914,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18762:78:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18721:119:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1916,
												"nodeType": "ExpressionStatement",
												"src": "18721:119:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1918,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "18879:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "18879:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1920,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1891,
															"src": "18904:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 1921,
																	"name": "_allowedFragments",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1047,
																	"src": "18926:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 1924,
																"indexExpression": {
																	"expression": {
																		"id": 1922,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "18944:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "18944:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "18926:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1926,
															"indexExpression": {
																"id": 1925,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1891,
																"src": "18956:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18926:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1917,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "18856:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18856:119:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1928,
												"nodeType": "EmitStatement",
												"src": "18851:124:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "18993:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1899,
												"id": 1930,
												"nodeType": "Return",
												"src": "18986:11:0"
											}
										]
									},
									"functionSelector": "39509351",
									"id": 1932,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1896,
											"modifierName": {
												"id": 1895,
												"name": "initialDistributionLock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 911,
												"src": "18657:23:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "18657:23:0"
										}
									],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "18593:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18593:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1893,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "18610:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18610:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18592:37:0"
									},
									"returnParameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "18699:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1897,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18699:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18698:6:0"
									},
									"scope": 2465,
									"src": "18566:439:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										230
									],
									"body": {
										"id": 1962,
										"nodeType": "Block",
										"src": "19160:139:0",
										"statements": [
											{
												"expression": {
													"id": 1951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1944,
																"name": "_allowedFragments",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1047,
																"src": "19171:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1948,
															"indexExpression": {
																"expression": {
																	"id": 1945,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "19189:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "19189:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "19171:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1949,
														"indexExpression": {
															"id": 1947,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1934,
															"src": "19201:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19171:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1950,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1936,
														"src": "19212:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19171:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1952,
												"nodeType": "ExpressionStatement",
												"src": "19171:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1954,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "19242:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "19242:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1956,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1934,
															"src": "19254:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1957,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1936,
															"src": "19263:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1953,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "19233:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19233:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1959,
												"nodeType": "EmitStatement",
												"src": "19228:41:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1960,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "19287:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1943,
												"id": 1961,
												"nodeType": "Return",
												"src": "19280:11:0"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 1963,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1940,
											"modifierName": {
												"id": 1939,
												"name": "initialDistributionLock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 911,
												"src": "19107:23:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "19107:23:0"
										}
									],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1938,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "19089:8:0"
									},
									"parameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "19030:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19030:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "19047:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19047:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19029:32:0"
									},
									"returnParameters": {
										"id": 1943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "19149:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1941,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19149:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19148:6:0"
									},
									"scope": 2465,
									"src": "19013:286:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1974,
										"nodeType": "Block",
										"src": "19375:45:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1970,
														"name": "_isFeeExempt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 895,
														"src": "19393:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1972,
													"indexExpression": {
														"id": 1971,
														"name": "_addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1965,
														"src": "19406:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "19393:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1969,
												"id": 1973,
												"nodeType": "Return",
												"src": "19386:26:0"
											}
										]
									},
									"functionSelector": "d4399790",
									"id": 1975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkFeeExempt",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "_addr",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "19331:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19330:15:0"
									},
									"returnParameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "19369:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1967,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19369:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19368:6:0"
									},
									"scope": 2465,
									"src": "19307:113:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1984,
										"nodeType": "Block",
										"src": "19489:53:0",
										"statements": [
											{
												"expression": {
													"id": 1982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1980,
														"name": "initialDistributionFinished",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "19500:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1981,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19530:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "19500:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1983,
												"nodeType": "ExpressionStatement",
												"src": "19500:34:0"
											}
										]
									},
									"functionSelector": "2be6937d",
									"id": 1985,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1978,
											"modifierName": {
												"id": 1977,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 800,
												"src": "19479:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "19479:9:0"
										}
									],
									"name": "setInitialDistributionFinished",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19467:2:0"
									},
									"returnParameters": {
										"id": 1979,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19489:0:0"
									},
									"scope": 2465,
									"src": "19428:114:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1998,
										"nodeType": "Block",
										"src": "19608:46:0",
										"statements": [
											{
												"expression": {
													"id": 1996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1992,
															"name": "allowTransfer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "19619:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1994,
														"indexExpression": {
															"id": 1993,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1987,
															"src": "19633:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19619:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1995,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19642:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "19619:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1997,
												"nodeType": "ExpressionStatement",
												"src": "19619:27:0"
											}
										]
									},
									"functionSelector": "d5938aac",
									"id": 1999,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1990,
											"modifierName": {
												"id": 1989,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 800,
												"src": "19598:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "19598:9:0"
										}
									],
									"name": "enableTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "_addr",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "19574:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19574:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19573:15:0"
									},
									"returnParameters": {
										"id": 1991,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19608:0:0"
									},
									"scope": 2465,
									"src": "19550:104:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2012,
										"nodeType": "Block",
										"src": "19718:45:0",
										"statements": [
											{
												"expression": {
													"id": 2010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2006,
															"name": "_isFeeExempt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "19729:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2008,
														"indexExpression": {
															"id": 2007,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2001,
															"src": "19742:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19729:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2009,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19751:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "19729:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2011,
												"nodeType": "ExpressionStatement",
												"src": "19729:26:0"
											}
										]
									},
									"functionSelector": "749796a5",
									"id": 2013,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2004,
											"modifierName": {
												"id": 2003,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 800,
												"src": "19708:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "19708:9:0"
										}
									],
									"name": "setFeeExempt",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2001,
												"mutability": "mutable",
												"name": "_addr",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "19684:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2000,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19683:15:0"
									},
									"returnParameters": {
										"id": 2005,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19718:0:0"
									},
									"scope": 2465,
									"src": "19662:101:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2037,
										"nodeType": "Block",
										"src": "19849:79:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2028,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 2024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2022,
																		"name": "pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 993,
																		"src": "19868:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 2023,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2015,
																		"src": "19876:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "19868:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 2027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2025,
																		"name": "pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 993,
																		"src": "19884:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 2026,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2017,
																		"src": "19892:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "19884:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "19868:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 2029,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "19867:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"id": 2033,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "19900:19:0",
																"subExpression": {
																	"baseExpression": {
																		"id": 2030,
																		"name": "_isFeeExempt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 895,
																		"src": "19901:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 2032,
																	"indexExpression": {
																		"id": 2031,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2015,
																		"src": "19914:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "19901:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 2034,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "19899:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "19867:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2021,
												"id": 2036,
												"nodeType": "Return",
												"src": "19860:60:0"
											}
										]
									},
									"id": 2038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "shouldTakeFee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2015,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "19794:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2014,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19794:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "19808:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19808:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19793:26:0"
									},
									"returnParameters": {
										"id": 2021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2020,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "19843:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2019,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19843:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19842:6:0"
									},
									"scope": 2465,
									"src": "19771:157:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2089,
										"nodeType": "Block",
										"src": "20005:326:0",
										"statements": [
											{
												"expression": {
													"id": 2055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2047,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "20016:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2052,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2042,
																		"src": "20056:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2051,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20048:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 2050,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "20048:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2053,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20048:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2048,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1035,
																"src": "20031:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 283,
															"src": "20031:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2054,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20031:33:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20016:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2056,
												"nodeType": "ExpressionStatement",
												"src": "20016:48:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2057,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "20081:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2058,
														"name": "MAX_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "20096:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20081:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2065,
												"nodeType": "IfStatement",
												"src": "20077:83:0",
												"trueBody": {
													"id": 2064,
													"nodeType": "Block",
													"src": "20108:52:0",
													"statements": [
														{
															"expression": {
																"id": 2062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2060,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1035,
																	"src": "20123:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2061,
																	"name": "MAX_SUPPLY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1033,
																	"src": "20138:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20123:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2063,
															"nodeType": "ExpressionStatement",
															"src": "20123:25:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2066,
														"name": "_gonsPerFragment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1037,
														"src": "20172:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2069,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1035,
																"src": "20206:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2067,
																"name": "TOTAL_GONS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1026,
																"src": "20191:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 376,
															"src": "20191:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2070,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20191:28:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20172:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2072,
												"nodeType": "ExpressionStatement",
												"src": "20172:47:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2073,
															"name": "pairContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "20230:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_InterfaceLP_$428",
																"typeString": "contract InterfaceLP"
															}
														},
														"id": 2075,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sync",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 427,
														"src": "20230:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
															"typeString": "function () external"
														}
													},
													"id": 2076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20230:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2077,
												"nodeType": "ExpressionStatement",
												"src": "20230:19:0"
											},
											{
												"expression": {
													"id": 2087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2078,
															"name": "_gonBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "20262:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2080,
														"indexExpression": {
															"id": 2079,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2040,
															"src": "20275:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20262:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2085,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2042,
																"src": "20316:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2081,
																	"name": "_gonBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1041,
																	"src": "20288:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2083,
																"indexExpression": {
																	"id": 2082,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2040,
																	"src": "20301:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "20288:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2084,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 283,
															"src": "20288:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2086,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20288:35:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20262:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2088,
												"nodeType": "ExpressionStatement",
												"src": "20262:61:0"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 2090,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2045,
											"modifierName": {
												"id": 2044,
												"name": "onlyMinter",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 545,
												"src": "19994:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "19994:10:0"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2040,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 2090,
												"src": "19950:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19950:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2042,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2090,
												"src": "19969:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19969:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19949:35:0"
									},
									"returnParameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20005:0:0"
									},
									"scope": 2465,
									"src": "19936:395:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2115,
										"nodeType": "Block",
										"src": "20466:103:0",
										"statements": [
											{
												"expression": {
													"id": 2103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2101,
														"name": "swapEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "20477:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2102,
														"name": "_enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2092,
														"src": "20491:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "20477:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2104,
												"nodeType": "ExpressionStatement",
												"src": "20477:22:0"
											},
											{
												"expression": {
													"id": 2113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2105,
														"name": "gonSwapThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "20510:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2111,
																"name": "_num",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2094,
																"src": "20556:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 2108,
																		"name": "_denom",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2096,
																		"src": "20544:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2106,
																		"name": "TOTAL_GONS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1026,
																		"src": "20529:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 376,
																	"src": "20529:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20529:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 360,
															"src": "20529:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20529:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20510:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2114,
												"nodeType": "ExpressionStatement",
												"src": "20510:51:0"
											}
										]
									},
									"functionSelector": "d0889358",
									"id": 2116,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2099,
											"modifierName": {
												"id": 2098,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 800,
												"src": "20456:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "20456:9:0"
										}
									],
									"name": "setSwapBackSettings",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2092,
												"mutability": "mutable",
												"name": "_enabled",
												"nodeType": "VariableDeclaration",
												"scope": 2116,
												"src": "20378:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2091,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20378:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2094,
												"mutability": "mutable",
												"name": "_num",
												"nodeType": "VariableDeclaration",
												"scope": 2116,
												"src": "20402:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2093,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20402:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2096,
												"mutability": "mutable",
												"name": "_denom",
												"nodeType": "VariableDeclaration",
												"scope": 2116,
												"src": "20425:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20425:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20367:79:0"
									},
									"returnParameters": {
										"id": 2100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20466:0:0"
									},
									"scope": 2465,
									"src": "20339:230:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2140,
										"nodeType": "Block",
										"src": "20632:173:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2121,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "20663:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "20663:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 2123,
																	"name": "pair",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 993,
																	"src": "20677:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "20663:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"id": 2126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "20698:7:0",
																"subExpression": {
																	"id": 2125,
																	"name": "inSwap",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1006,
																	"src": "20699:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "20663:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"id": 2128,
															"name": "swapEnabled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "20722:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "20663:70:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2137,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 2130,
																"name": "_gonBalances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1041,
																"src": "20750:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 2135,
															"indexExpression": {
																"arguments": [
																	{
																		"id": 2133,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -28,
																		"src": "20771:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_AndrewTateToken_$2465",
																			"typeString": "contract AndrewTateToken"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_AndrewTateToken_$2465",
																			"typeString": "contract AndrewTateToken"
																		}
																	],
																	"id": 2132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20763:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2131,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "20763:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20763:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20750:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 2136,
															"name": "gonSwapThreshold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "20781:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "20750:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "20663:134:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2120,
												"id": 2139,
												"nodeType": "Return",
												"src": "20643:154:0"
											}
										]
									},
									"id": 2141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "shouldSwapBack",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20600:2:0"
									},
									"returnParameters": {
										"id": 2120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2119,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "20626:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2118,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20626:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20625:6:0"
									},
									"scope": 2465,
									"src": "20577:228:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2162,
										"nodeType": "Block",
										"src": "20875:153:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2159,
															"name": "_gonsPerFragment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "20989:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"components": [
																{
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 2153,
																				"name": "_gonBalances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1041,
																				"src": "20946:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2155,
																			"indexExpression": {
																				"id": 2154,
																				"name": "ZERO",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 977,
																				"src": "20959:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "20946:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 2148,
																						"name": "_gonBalances",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1041,
																						"src": "20922:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																							"typeString": "mapping(address => uint256)"
																						}
																					},
																					"id": 2150,
																					"indexExpression": {
																						"id": 2149,
																						"name": "DEAD",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 974,
																						"src": "20935:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "20922:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2146,
																					"name": "TOTAL_GONS",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1026,
																					"src": "20907:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2147,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 299,
																				"src": "20907:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2151,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "20907:34:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 299,
																		"src": "20907:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20907:58:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2157,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "20906:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 376,
														"src": "20906:64:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20906:114:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2145,
												"id": 2161,
												"nodeType": "Return",
												"src": "20886:134:0"
											}
										]
									},
									"functionSelector": "2b112e49",
									"id": 2163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCirculatingSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20842:2:0"
									},
									"returnParameters": {
										"id": 2145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2144,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2163,
												"src": "20866:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20866:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20865:9:0"
									},
									"scope": 2465,
									"src": "20813:215:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2180,
										"nodeType": "Block",
										"src": "21117:91:0",
										"statements": [
											{
												"expression": {
													"id": 2174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2172,
														"name": "targetLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "21128:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2173,
														"name": "target",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2165,
														"src": "21146:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21128:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2175,
												"nodeType": "ExpressionStatement",
												"src": "21128:24:0"
											},
											{
												"expression": {
													"id": 2178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2176,
														"name": "targetLiquidityDenominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "21163:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2177,
														"name": "accuracy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2167,
														"src": "21192:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21163:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2179,
												"nodeType": "ExpressionStatement",
												"src": "21163:37:0"
											}
										]
									},
									"functionSelector": "201e7991",
									"id": 2181,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2170,
											"modifierName": {
												"id": 2169,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 800,
												"src": "21107:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "21107:9:0"
										}
									],
									"name": "setTargetLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2165,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 2181,
												"src": "21064:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21064:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2167,
												"mutability": "mutable",
												"name": "accuracy",
												"nodeType": "VariableDeclaration",
												"scope": 2181,
												"src": "21080:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21080:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21063:34:0"
									},
									"returnParameters": {
										"id": 2171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21117:0:0"
									},
									"scope": 2465,
									"src": "21036:172:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2192,
										"nodeType": "Block",
										"src": "21269:38:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2189,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2183,
															"src": "21291:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2188,
														"name": "_addMinter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 583,
														"src": "21280:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21280:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2191,
												"nodeType": "ExpressionStatement",
												"src": "21280:19:0"
											}
										]
									},
									"functionSelector": "983b2d56",
									"id": 2193,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2186,
											"modifierName": {
												"id": 2185,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 800,
												"src": "21259:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "21259:9:0"
										}
									],
									"name": "addMinter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2183,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "21235:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21235:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21234:17:0"
									},
									"returnParameters": {
										"id": 2187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21269:0:0"
									},
									"scope": 2465,
									"src": "21216:91:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2204,
										"nodeType": "Block",
										"src": "21371:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2201,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2195,
															"src": "21396:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2200,
														"name": "_removeMinter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "21382:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21382:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2203,
												"nodeType": "ExpressionStatement",
												"src": "21382:22:0"
											}
										]
									},
									"functionSelector": "3092afd5",
									"id": 2205,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2198,
											"modifierName": {
												"id": 2197,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 800,
												"src": "21361:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "21361:9:0"
										}
									],
									"name": "removeMinter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2195,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 2205,
												"src": "21337:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21337:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21336:17:0"
									},
									"returnParameters": {
										"id": 2199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21371:0:0"
									},
									"scope": 2465,
									"src": "21315:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2213,
										"nodeType": "Block",
										"src": "21472:33:0",
										"statements": [
											{
												"expression": {
													"id": 2211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "21490:7:0",
													"subExpression": {
														"id": 2210,
														"name": "inSwap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1006,
														"src": "21491:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2209,
												"id": 2212,
												"nodeType": "Return",
												"src": "21483:14:0"
											}
										]
									},
									"functionSelector": "83b4ac68",
									"id": 2214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isNotInSwap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21440:2:0"
									},
									"returnParameters": {
										"id": 2209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2208,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "21466:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2207,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21466:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21465:6:0"
									},
									"scope": 2465,
									"src": "21420:85:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2249,
										"nodeType": "Block",
										"src": "21634:136:0",
										"statements": [
											{
												"body": {
													"id": 2247,
													"nodeType": "Block",
													"src": "21691:72:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2237,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "21716:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2238,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "21716:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 2239,
																			"name": "recipients",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2217,
																			"src": "21728:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 2241,
																		"indexExpression": {
																			"id": 2240,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2226,
																			"src": "21739:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "21728:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 2242,
																			"name": "values",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2220,
																			"src": "21743:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 2244,
																		"indexExpression": {
																			"id": 2243,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2226,
																			"src": "21750:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "21743:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2236,
																	"name": "_transferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1495,
																	"src": "21702:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) returns (bool)"
																	}
																},
																"id": 2245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21702:51:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2246,
															"nodeType": "ExpressionStatement",
															"src": "21702:51:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2229,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2226,
														"src": "21663:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2230,
															"name": "recipients",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2217,
															"src": "21667:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 2231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "21667:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21663:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2248,
												"initializationExpression": {
													"assignments": [
														2226
													],
													"declarations": [
														{
															"constant": false,
															"id": 2226,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 2248,
															"src": "21648:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2225,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "21648:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2228,
													"initialValue": {
														"hexValue": "30",
														"id": 2227,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21660:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "21648:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 2234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "21686:3:0",
														"subExpression": {
															"id": 2233,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2226,
															"src": "21686:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2235,
													"nodeType": "ExpressionStatement",
													"src": "21686:3:0"
												},
												"nodeType": "ForStatement",
												"src": "21643:120:0"
											}
										]
									},
									"functionSelector": "d37e219d",
									"id": 2250,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2223,
											"modifierName": {
												"id": 2222,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 800,
												"src": "21619:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "21619:9:0"
										}
									],
									"name": "sendPresale",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2217,
												"mutability": "mutable",
												"name": "recipients",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "21534:29:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2215,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "21534:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2216,
													"nodeType": "ArrayTypeName",
													"src": "21534:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2220,
												"mutability": "mutable",
												"name": "values",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "21565:25:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2218,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "21565:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2219,
													"nodeType": "ArrayTypeName",
													"src": "21565:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21533:58:0"
									},
									"returnParameters": {
										"id": 2224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21634:0:0"
									},
									"scope": 2465,
									"src": "21513:257:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2260,
										"nodeType": "Block",
										"src": "21840:64:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2257,
															"name": "_gonsPerFragment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "21879:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2255,
															"name": "gonSwapThreshold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "21858:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2256,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 376,
														"src": "21858:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21858:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2254,
												"id": 2259,
												"nodeType": "Return",
												"src": "21851:45:0"
											}
										]
									},
									"functionSelector": "6d351d1a",
									"id": 2261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkSwapThreshold",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21805:2:0"
									},
									"returnParameters": {
										"id": 2254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2253,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "21831:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21831:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21830:9:0"
									},
									"scope": 2465,
									"src": "21778:126:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2270,
										"nodeType": "Block",
										"src": "21943:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 2265,
																	"name": "pair",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 993,
																	"src": "21966:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2264,
																"name": "InterfaceLP",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 428,
																"src": "21954:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_InterfaceLP_$428_$",
																	"typeString": "type(contract InterfaceLP)"
																}
															},
															"id": 2266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21954:17:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_InterfaceLP_$428",
																"typeString": "contract InterfaceLP"
															}
														},
														"id": 2267,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sync",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 427,
														"src": "21954:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
															"typeString": "function () external"
														}
													},
													"id": 2268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21954:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2269,
												"nodeType": "ExpressionStatement",
												"src": "21954:24:0"
											}
										]
									},
									"functionSelector": "753d02a1",
									"id": 2271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "manualSync",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21931:2:0"
									},
									"returnParameters": {
										"id": 2263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21943:0:0"
									},
									"scope": 2465,
									"src": "21912:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2294,
										"nodeType": "Block",
										"src": "22163:169:0",
										"statements": [
											{
												"expression": {
													"id": 2284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2282,
														"name": "autoLiquidityReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "22174:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2283,
														"name": "_autoLiquidityReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2273,
														"src": "22198:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "22174:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2285,
												"nodeType": "ExpressionStatement",
												"src": "22174:46:0"
											},
											{
												"expression": {
													"id": 2288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2286,
														"name": "TreasuryReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 981,
														"src": "22231:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2287,
														"name": "_TreasuryReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2275,
														"src": "22250:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "22231:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2289,
												"nodeType": "ExpressionStatement",
												"src": "22231:36:0"
											},
											{
												"expression": {
													"id": 2292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2290,
														"name": "RiskFreeValueReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 983,
														"src": "22278:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2291,
														"name": "_RiskFreeValueReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2277,
														"src": "22302:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "22278:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2293,
												"nodeType": "ExpressionStatement",
												"src": "22278:46:0"
											}
										]
									},
									"functionSelector": "d7c01032",
									"id": 2295,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2280,
											"modifierName": {
												"id": 2279,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 800,
												"src": "22153:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "22153:9:0"
										}
									],
									"name": "setFeeReceivers",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2273,
												"mutability": "mutable",
												"name": "_autoLiquidityReceiver",
												"nodeType": "VariableDeclaration",
												"scope": 2295,
												"src": "22029:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2275,
												"mutability": "mutable",
												"name": "_TreasuryReceiver",
												"nodeType": "VariableDeclaration",
												"scope": 2295,
												"src": "22070:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22070:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2277,
												"mutability": "mutable",
												"name": "_RiskFreeValueReceiver",
												"nodeType": "VariableDeclaration",
												"scope": 2295,
												"src": "22106:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22106:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22018:125:0"
									},
									"returnParameters": {
										"id": 2281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22163:0:0"
									},
									"scope": 2465,
									"src": "21994:338:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2348,
										"nodeType": "Block",
										"src": "22537:307:0",
										"statements": [
											{
												"expression": {
													"id": 2312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2310,
														"name": "liquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "22548:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2311,
														"name": "_liquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2297,
														"src": "22563:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22548:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2313,
												"nodeType": "ExpressionStatement",
												"src": "22548:28:0"
											},
											{
												"expression": {
													"id": 2316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2314,
														"name": "RiskFreeValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "22587:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2315,
														"name": "_RiskFreeValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2299,
														"src": "22603:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22587:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2317,
												"nodeType": "ExpressionStatement",
												"src": "22587:30:0"
											},
											{
												"expression": {
													"id": 2320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2318,
														"name": "Treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "22628:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2319,
														"name": "_Treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2301,
														"src": "22639:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22628:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2321,
												"nodeType": "ExpressionStatement",
												"src": "22628:20:0"
											},
											{
												"expression": {
													"id": 2324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2322,
														"name": "sellFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "22659:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2323,
														"name": "_sellFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2303,
														"src": "22669:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22659:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2325,
												"nodeType": "ExpressionStatement",
												"src": "22659:18:0"
											},
											{
												"expression": {
													"id": 2334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2326,
														"name": "totalFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "22688:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2332,
																"name": "RiskFreeValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 956,
																"src": "22730:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 2329,
																		"name": "Treasury",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 953,
																		"src": "22716:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2327,
																		"name": "liquidityFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 950,
																		"src": "22699:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 283,
																	"src": "22699:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22699:26:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 283,
															"src": "22699:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22699:45:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22688:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2335,
												"nodeType": "ExpressionStatement",
												"src": "22688:56:0"
											},
											{
												"expression": {
													"id": 2338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2336,
														"name": "feeDenominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "22755:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2337,
														"name": "_feeDenominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2305,
														"src": "22772:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22755:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2339,
												"nodeType": "ExpressionStatement",
												"src": "22755:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2341,
																"name": "totalFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 968,
																"src": "22806:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2342,
																	"name": "feeDenominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 971,
																	"src": "22817:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22834:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "22817:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22806:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2340,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "22798:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22798:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2347,
												"nodeType": "ExpressionStatement",
												"src": "22798:38:0"
											}
										]
									},
									"functionSelector": "04a66b48",
									"id": 2349,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2308,
											"modifierName": {
												"id": 2307,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 800,
												"src": "22527:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "22527:9:0"
										}
									],
									"name": "setFees",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2297,
												"mutability": "mutable",
												"name": "_liquidityFee",
												"nodeType": "VariableDeclaration",
												"scope": 2349,
												"src": "22367:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22367:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2299,
												"mutability": "mutable",
												"name": "_RiskFreeValue",
												"nodeType": "VariableDeclaration",
												"scope": 2349,
												"src": "22399:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22399:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2301,
												"mutability": "mutable",
												"name": "_Treasury",
												"nodeType": "VariableDeclaration",
												"scope": 2349,
												"src": "22432:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22432:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2303,
												"mutability": "mutable",
												"name": "_sellFee",
												"nodeType": "VariableDeclaration",
												"scope": 2349,
												"src": "22460:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22460:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2305,
												"mutability": "mutable",
												"name": "_feeDenominator",
												"nodeType": "VariableDeclaration",
												"scope": 2349,
												"src": "22487:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22487:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22356:161:0"
									},
									"returnParameters": {
										"id": 2309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22537:0:0"
									},
									"scope": 2465,
									"src": "22340:504:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2379,
										"nodeType": "Block",
										"src": "22937:154:0",
										"statements": [
											{
												"assignments": [
													2359
												],
												"declarations": [
													{
														"constant": false,
														"id": 2359,
														"mutability": "mutable",
														"name": "amountETH",
														"nodeType": "VariableDeclaration",
														"scope": 2379,
														"src": "22948:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2358,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22948:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2365,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 2362,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -28,
																"src": "22976:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_AndrewTateToken_$2465",
																	"typeString": "contract AndrewTateToken"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_AndrewTateToken_$2465",
																	"typeString": "contract AndrewTateToken"
																}
															],
															"id": 2361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22968:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "22968:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2363,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22968:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"id": 2364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "22968:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22948:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2371,
																			"name": "amountETH",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2359,
																			"src": "23037:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2372,
																			"name": "amountPercentage",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2351,
																			"src": "23049:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "23037:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2374,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "23036:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "313030",
																"id": 2375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23069:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "23036:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2368,
																	"name": "adr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2353,
																	"src": "23008:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2367,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "23000:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 2366,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "23000:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 2369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23000:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 2370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "23000:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23000:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2378,
												"nodeType": "ExpressionStatement",
												"src": "23000:83:0"
											}
										]
									},
									"functionSelector": "56a227f2",
									"id": 2380,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2356,
											"modifierName": {
												"id": 2355,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 800,
												"src": "22927:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "22927:9:0"
										}
									],
									"name": "clearStuckBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2351,
												"mutability": "mutable",
												"name": "amountPercentage",
												"nodeType": "VariableDeclaration",
												"scope": 2380,
												"src": "22879:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22879:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2353,
												"mutability": "mutable",
												"name": "adr",
												"nodeType": "VariableDeclaration",
												"scope": 2380,
												"src": "22905:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22905:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22878:39:0"
									},
									"returnParameters": {
										"id": 2357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22937:0:0"
									},
									"scope": 2465,
									"src": "22852:239:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2400,
										"nodeType": "Block",
										"src": "23230:82:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2395,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "23285:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "23285:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2397,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2384,
															"src": "23297:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2392,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2382,
																	"src": "23262:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2391,
																"name": "ERC20Detailed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 655,
																"src": "23248:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$655_$",
																	"typeString": "type(contract ERC20Detailed)"
																}
															},
															"id": 2393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23248:27:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20Detailed_$655",
																"typeString": "contract ERC20Detailed"
															}
														},
														"id": 2394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 221,
														"src": "23248:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23248:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2390,
												"id": 2399,
												"nodeType": "Return",
												"src": "23241:63:0"
											}
										]
									},
									"functionSelector": "33f3d628",
									"id": 2401,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2387,
											"modifierName": {
												"id": 2386,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 800,
												"src": "23183:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "23183:9:0"
										}
									],
									"name": "rescueToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2382,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nodeType": "VariableDeclaration",
												"scope": 2401,
												"src": "23120:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23120:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2384,
												"mutability": "mutable",
												"name": "tokens",
												"nodeType": "VariableDeclaration",
												"scope": 2401,
												"src": "23142:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23142:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23119:38:0"
									},
									"returnParameters": {
										"id": 2390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2389,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 2401,
												"src": "23211:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2388,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23211:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23210:14:0"
									},
									"scope": 2465,
									"src": "23099:213:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2414,
										"nodeType": "Block",
										"src": "23415:45:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2411,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2405,
															"src": "23445:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2408,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2403,
															"src": "23426:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 2410,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "23426:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23426:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2413,
												"nodeType": "ExpressionStatement",
												"src": "23426:26:0"
											}
										]
									},
									"id": 2415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferToAddressETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2403,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 2415,
												"src": "23350:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23350:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2405,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2415,
												"src": "23377:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23377:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23349:43:0"
									},
									"returnParameters": {
										"id": 2407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23415:0:0"
									},
									"scope": 2465,
									"src": "23320:140:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2443,
										"nodeType": "Block",
										"src": "23577:182:0",
										"statements": [
											{
												"assignments": [
													2423
												],
												"declarations": [
													{
														"constant": false,
														"id": 2423,
														"mutability": "mutable",
														"name": "liquidityBalance",
														"nodeType": "VariableDeclaration",
														"scope": 2443,
														"src": "23588:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2422,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23588:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2430,
												"initialValue": {
													"arguments": [
														{
															"id": 2428,
															"name": "_gonsPerFragment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "23638:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 2424,
																"name": "_gonBalances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1041,
																"src": "23615:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 2426,
															"indexExpression": {
																"id": 2425,
																"name": "pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 993,
																"src": "23628:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "23615:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 376,
														"src": "23615:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23615:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23588:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2439,
																"name": "getCirculatingSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2163,
																"src": "23728:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 2440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23728:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "32",
																			"id": 2435,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23720:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			}
																		],
																		"expression": {
																			"id": 2433,
																			"name": "liquidityBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2423,
																			"src": "23699:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 360,
																		"src": "23699:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23699:23:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2431,
																	"name": "accuracy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2417,
																	"src": "23686:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 360,
																"src": "23686:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23686:37:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2438,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 376,
														"src": "23686:41:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23686:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2421,
												"id": 2442,
												"nodeType": "Return",
												"src": "23666:85:0"
											}
										]
									},
									"functionSelector": "d51ed1c8",
									"id": 2444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLiquidityBacking",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2417,
												"mutability": "mutable",
												"name": "accuracy",
												"nodeType": "VariableDeclaration",
												"scope": 2444,
												"src": "23497:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23497:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23496:18:0"
									},
									"returnParameters": {
										"id": 2421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2420,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2444,
												"src": "23563:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23563:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23562:9:0"
									},
									"scope": 2465,
									"src": "23468:291:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2459,
										"nodeType": "Block",
										"src": "23889:64:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2454,
																"name": "accuracy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2448,
																"src": "23927:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2453,
															"name": "getLiquidityBacking",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2444,
															"src": "23907:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 2455,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23907:29:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2456,
														"name": "target",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2446,
														"src": "23939:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23907:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2452,
												"id": 2458,
												"nodeType": "Return",
												"src": "23900:45:0"
											}
										]
									},
									"functionSelector": "1161ae39",
									"id": 2460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOverLiquified",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2446,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 2460,
												"src": "23796:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23796:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2448,
												"mutability": "mutable",
												"name": "accuracy",
												"nodeType": "VariableDeclaration",
												"scope": 2460,
												"src": "23812:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23812:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23795:34:0"
									},
									"returnParameters": {
										"id": 2452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2451,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2460,
												"src": "23878:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2450,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23878:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23877:6:0"
									},
									"scope": 2465,
									"src": "23771:182:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2463,
										"nodeType": "Block",
										"src": "23988:2:0",
										"statements": []
									},
									"id": 2464,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23968:2:0"
									},
									"returnParameters": {
										"id": 2462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23988:0:0"
									},
									"scope": 2465,
									"src": "23961:29:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2466,
							"src": "8436:15557:0"
						}
					],
					"src": "33:23960:0"
				},
				"id": 0
			}
		}
	}
}