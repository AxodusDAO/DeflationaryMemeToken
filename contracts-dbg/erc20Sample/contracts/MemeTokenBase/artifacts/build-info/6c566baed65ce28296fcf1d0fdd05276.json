{
	"id": "6c566baed65ce28296fcf1d0fdd05276",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.2",
	"solcLongVersion": "0.8.2+commit.661d1103",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MemeTokenBase/memetoken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract MemeTokenTest is ERC20, Ownable {\r\n    address public liquidityWallet;\r\n    address public treasuryWallet;\r\n    \r\n    address public constant DEAD = 0x000000000000000000000000000000000000dEaD;\r\n    address public constant ZERO = 0x0000000000000000000000000000000000000000;\r\n\r\n    uint256 public constant INITIAL_SUPPLY = 1000000000 * (10 ** 18); // 1 billion tokens, 18 decimal places\r\n\r\n    uint256 public liquidityFee = 25; // 0.25%\r\n    uint256 public treasuryFee = 50; // 0.5%\r\n    uint256 public sellFee = 5; // 0.05%\r\n    uint256 public burnRate = 20; // 0.20%\r\n\r\n    constructor(address _liquidityWallet, address _treasuryWallet) ERC20(\"[TEST] Deflationary Meme Token]\", \"DMT02\") {\r\n        liquidityWallet = _liquidityWallet;\r\n        treasuryWallet = _treasuryWallet;\r\n        _mint(liquidityWallet, INITIAL_SUPPLY);\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        return super.transfer(recipient, applyFees(msg.sender, recipient, amount));\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\r\n        return super.transferFrom(sender, recipient, applyFees(sender, recipient, amount));\r\n    }\r\n\r\n    function applyFees(address sender, address recipient, uint256 amount) internal returns (uint256) {\r\n        if (recipient == DEAD || recipient == ZERO || sender == liquidityWallet || sender == treasuryWallet) {\r\n            return amount;\r\n        }\r\n\r\n        uint256 liquidityFeeAmount = amount * liquidityFee / 10000;\r\n        uint256 treasuryFeeAmount = amount * treasuryFee / 10000;\r\n        uint256 burnAmount = amount * burnRate / 10000;\r\n\r\n        if (recipient != liquidityWallet) {\r\n            super.transfer(liquidityWallet, liquidityFeeAmount);\r\n        }\r\n\r\n        if (recipient != treasuryWallet) {\r\n            super.transfer(treasuryWallet, treasuryFeeAmount);\r\n        }\r\n\r\n        _burn(sender, burnAmount);\r\n\r\n        uint256 sellFeeAmount = 0;\r\n        if (sender != liquidityWallet && sender != treasuryWallet) {\r\n            sellFeeAmount = amount * sellFee / 10000;\r\n            super.transfer(liquidityWallet, sellFeeAmount);\r\n        }\r\n\r\n        return amount - liquidityFeeAmount - treasuryFeeAmount - burnAmount - sellFeeAmount;\r\n    }\r\n\r\n    function setFees(uint256 _liquidityFee, uint256 _treasuryFee, uint256 _sellFee, uint256 _burnRate) external onlyOwner {\r\n        liquidityFee = _liquidityFee;\r\n        treasuryFee = _treasuryFee;\r\n        sellFee = _sellFee;\r\n        burnRate = _burnRate;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2051  _name */\n  0x03\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  0x04\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_21)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:923   */\ntag_22:\n  0x00\n    /* \"#utility.yul\":121:124   */\n  dup3\n    /* \"#utility.yul\":114:118   */\n  0x1f\n    /* \"#utility.yul\":106:112   */\n  dup4\n    /* \"#utility.yul\":102:119   */\n  add\n    /* \"#utility.yul\":98:125   */\n  slt\n    /* \"#utility.yul\":88:90   */\n  tag_24\n  jumpi\n    /* \"#utility.yul\":143:148   */\n  dup1\n    /* \"#utility.yul\":136:141   */\n  dup2\n    /* \"#utility.yul\":129:149   */\n  revert\n    /* \"#utility.yul\":88:90   */\ntag_24:\n    /* \"#utility.yul\":170:183   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":232:242   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":229:231   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":245:263   */\n  tag_26\n  tag_27\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":320:322   */\n  0x40\n    /* \"#utility.yul\":314:323   */\n  mload\n    /* \"#utility.yul\":288:290   */\n  0x1f\n    /* \"#utility.yul\":374:387   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":370:392   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":394:396   */\n  0x3f\n    /* \"#utility.yul\":366:397   */\n  add\n    /* \"#utility.yul\":362:402   */\n  and\n    /* \"#utility.yul\":350:403   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":418:436   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":438:460   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":415:461   */\n  or\n    /* \"#utility.yul\":412:414   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":464:482   */\n  tag_29\n  tag_27\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":504:514   */\n  dup2\n    /* \"#utility.yul\":500:502   */\n  0x40\n    /* \"#utility.yul\":493:515   */\n  mstore\n    /* \"#utility.yul\":539:541   */\n  dup4\n    /* \"#utility.yul\":531:537   */\n  dup2\n    /* \"#utility.yul\":524:542   */\n  mstore\n    /* \"#utility.yul\":561:565   */\n  0x20\n    /* \"#utility.yul\":551:565   */\n  swap3\n  pop\n    /* \"#utility.yul\":606:609   */\n  dup7\n    /* \"#utility.yul\":601:603   */\n  dup4\n    /* \"#utility.yul\":596:598   */\n  dup6\n    /* \"#utility.yul\":588:594   */\n  dup9\n    /* \"#utility.yul\":584:599   */\n  add\n    /* \"#utility.yul\":580:604   */\n  add\n    /* \"#utility.yul\":577:610   */\n  gt\n    /* \"#utility.yul\":574:576   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":627:632   */\n  dup5\n    /* \"#utility.yul\":620:625   */\n  dup6\n    /* \"#utility.yul\":613:633   */\n  revert\n    /* \"#utility.yul\":574:576   */\ntag_30:\n    /* \"#utility.yul\":653:658   */\n  dup5\n    /* \"#utility.yul\":644:658   */\n  swap2\n  pop\n    /* \"#utility.yul\":667:800   */\ntag_31:\n    /* \"#utility.yul\":681:683   */\n  dup4\n    /* \"#utility.yul\":678:679   */\n  dup3\n    /* \"#utility.yul\":675:684   */\n  lt\n    /* \"#utility.yul\":667:800   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":769:783   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":765:788   */\n  dup4\n  add\n    /* \"#utility.yul\":759:789   */\n  mload\n    /* \"#utility.yul\":738:752   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":734:757   */\n  dup5\n  add\n    /* \"#utility.yul\":727:790   */\n  mstore\n    /* \"#utility.yul\":692:702   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":667:800   */\n  jump(tag_31)\ntag_33:\n    /* \"#utility.yul\":818:820   */\n  dup4\n    /* \"#utility.yul\":815:816   */\n  dup3\n    /* \"#utility.yul\":812:821   */\n  gt\n    /* \"#utility.yul\":809:811   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":877:882   */\n  dup5\n    /* \"#utility.yul\":872:874   */\n  dup4\n    /* \"#utility.yul\":867:869   */\n  dup6\n    /* \"#utility.yul\":859:865   */\n  dup4\n    /* \"#utility.yul\":855:870   */\n  add\n    /* \"#utility.yul\":851:875   */\n  add\n    /* \"#utility.yul\":844:883   */\n  mstore\n    /* \"#utility.yul\":809:811   */\ntag_34:\n    /* \"#utility.yul\":911:917   */\n  swap7\n    /* \"#utility.yul\":78:923   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1520   */\ntag_3:\n  0x00\n  dup1\n    /* \"#utility.yul\":1088:1090   */\n  0x40\n    /* \"#utility.yul\":1076:1085   */\n  dup4\n    /* \"#utility.yul\":1067:1074   */\n  dup6\n    /* \"#utility.yul\":1063:1086   */\n  sub\n    /* \"#utility.yul\":1059:1091   */\n  slt\n    /* \"#utility.yul\":1056:1058   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1109:1115   */\n  dup2\n    /* \"#utility.yul\":1101:1107   */\n  dup3\n    /* \"#utility.yul\":1094:1116   */\n  revert\n    /* \"#utility.yul\":1056:1058   */\ntag_36:\n    /* \"#utility.yul\":1141:1157   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1206:1220   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1203:1205   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1238:1244   */\n  dup4\n    /* \"#utility.yul\":1230:1236   */\n  dup5\n    /* \"#utility.yul\":1223:1245   */\n  revert\n    /* \"#utility.yul\":1203:1205   */\ntag_37:\n    /* \"#utility.yul\":1266:1327   */\n  tag_38\n    /* \"#utility.yul\":1319:1326   */\n  dup7\n    /* \"#utility.yul\":1310:1316   */\n  dup4\n    /* \"#utility.yul\":1299:1308   */\n  dup8\n    /* \"#utility.yul\":1295:1317   */\n  add\n    /* \"#utility.yul\":1266:1327   */\n  tag_22\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1256:1327   */\n  swap4\n  pop\n    /* \"#utility.yul\":1373:1375   */\n  0x20\n    /* \"#utility.yul\":1362:1371   */\n  dup6\n    /* \"#utility.yul\":1358:1376   */\n  add\n    /* \"#utility.yul\":1352:1377   */\n  mload\n    /* \"#utility.yul\":1336:1377   */\n  swap2\n  pop\n    /* \"#utility.yul\":1402:1404   */\n  dup1\n    /* \"#utility.yul\":1392:1400   */\n  dup3\n    /* \"#utility.yul\":1389:1405   */\n  gt\n    /* \"#utility.yul\":1386:1388   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1423:1429   */\n  dup3\n    /* \"#utility.yul\":1415:1421   */\n  dup4\n    /* \"#utility.yul\":1408:1430   */\n  revert\n    /* \"#utility.yul\":1386:1388   */\ntag_39:\n  pop\n    /* \"#utility.yul\":1451:1514   */\n  tag_40\n    /* \"#utility.yul\":1506:1513   */\n  dup6\n    /* \"#utility.yul\":1495:1503   */\n  dup3\n    /* \"#utility.yul\":1484:1493   */\n  dup7\n    /* \"#utility.yul\":1480:1504   */\n  add\n    /* \"#utility.yul\":1451:1514   */\n  tag_22\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1441:1514   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1046:1520   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1525:1905   */\ntag_11:\n    /* \"#utility.yul\":1610:1611   */\n  0x02\n    /* \"#utility.yul\":1600:1612   */\n  dup2\n  div\n    /* \"#utility.yul\":1657:1658   */\n  0x01\n    /* \"#utility.yul\":1647:1659   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1668:1670   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1722:1726   */\n  0x7f\n    /* \"#utility.yul\":1714:1720   */\n  dup3\n    /* \"#utility.yul\":1710:1727   */\n  and\n    /* \"#utility.yul\":1700:1727   */\n  swap2\n  pop\n    /* \"#utility.yul\":1668:1670   */\ntag_42:\n    /* \"#utility.yul\":1775:1777   */\n  0x20\n    /* \"#utility.yul\":1767:1773   */\n  dup3\n    /* \"#utility.yul\":1764:1778   */\n  lt\n    /* \"#utility.yul\":1744:1762   */\n  dup2\n    /* \"#utility.yul\":1741:1779   */\n  eq\n    /* \"#utility.yul\":1738:1740   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1821:1831   */\n  0x4e487b71\n    /* \"#utility.yul\":1816:1819   */\n  0xe0\n    /* \"#utility.yul\":1812:1832   */\n  shl\n    /* \"#utility.yul\":1809:1810   */\n  0x00\n    /* \"#utility.yul\":1802:1833   */\n  mstore\n    /* \"#utility.yul\":1856:1860   */\n  0x22\n    /* \"#utility.yul\":1853:1854   */\n  0x04\n    /* \"#utility.yul\":1846:1861   */\n  mstore\n    /* \"#utility.yul\":1884:1888   */\n  0x24\n    /* \"#utility.yul\":1881:1882   */\n  0x00\n    /* \"#utility.yul\":1874:1889   */\n  revert\n    /* \"#utility.yul\":1738:1740   */\ntag_43:\n  pop\n    /* \"#utility.yul\":1580:1905   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1910:2037   */\ntag_27:\n    /* \"#utility.yul\":1971:1981   */\n  0x4e487b71\n    /* \"#utility.yul\":1966:1969   */\n  0xe0\n    /* \"#utility.yul\":1962:1982   */\n  shl\n    /* \"#utility.yul\":1959:1960   */\n  0x00\n    /* \"#utility.yul\":1952:1983   */\n  mstore\n    /* \"#utility.yul\":2002:2006   */\n  0x41\n    /* \"#utility.yul\":1999:2000   */\n  0x04\n    /* \"#utility.yul\":1992:2007   */\n  mstore\n    /* \"#utility.yul\":2026:2030   */\n  0x24\n    /* \"#utility.yul\":2023:2024   */\n  0x00\n    /* \"#utility.yul\":2016:2031   */\n  revert\n    /* \"#utility.yul\":1942:2037   */\ntag_21:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1445:1459   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1438:1460   */\n      iszero\n        /* \"#utility.yul\":1420:1461   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1408:1410   */\n      0x20\n        /* \"#utility.yul\":1393:1411   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1375:1467   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3342:3354  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":5015:5040   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":5003:5005   */\n      0x20\n        /* \"#utility.yul\":4988:5006   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":4970:5046   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3186:3188  18 */\n      0x12\n        /* \"#utility.yul\":5193:5229   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5181:5183   */\n      0x20\n        /* \"#utility.yul\":5166:5184   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":5148:5235   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2212:2225  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2244:2249  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2237:2249  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4527:4531  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4597:4604  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4606:4612  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4589  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4630:4634  true */\n      0x01\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5300:5304  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5372:5376  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5387:5393  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5371  _spendAllowance */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5414:5418  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5420:5422  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5424:5430  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5413  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5448:5452  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5942:5946  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6049:6059  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      tag_86\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6030  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6059  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6004  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_45:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3493:3500  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_89:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2425:2438  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2457:2464  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2450:2464  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6668:6672  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6668:6672  bool */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      tag_98\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6773  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6758  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6722:6774  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6812:6827  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6792:6808  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6792:6827  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4665:4667   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4647:4668   */\n      mstore\n        /* \"#utility.yul\":4704:4706   */\n      0x25\n        /* \"#utility.yul\":4684:4702   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4677:4707   */\n      mstore\n        /* \"#utility.yul\":4743:4777   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":4723:4741   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4716:4778   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":4794:4812   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4787:4822   */\n      mstore\n        /* \"#utility.yul\":4839:4858   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6912:6917  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6919:6926  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6947:6962  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6928:6944  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6928:6962  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6911  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3819:3823  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3890:3892  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3894:3900  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3882  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4076:4083  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4113  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4129  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10577  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4260:4262   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4242:4263   */\n      mstore\n        /* \"#utility.yul\":4299:4301   */\n      0x24\n        /* \"#utility.yul\":4279:4297   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4272:4302   */\n      mstore\n        /* \"#utility.yul\":4338:4372   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4318:4336   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4311:4373   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4389:4407   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4382:4416   */\n      mstore\n        /* \"#utility.yul\":4433:4452   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4232:4458   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10657  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2686:2688   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2668:2689   */\n      mstore\n        /* \"#utility.yul\":2725:2727   */\n      0x22\n        /* \"#utility.yul\":2705:2723   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2698:2728   */\n      mstore\n        /* \"#utility.yul\":2764:2798   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":2744:2762   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2737:2799   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":2815:2833   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2808:2840   */\n      mstore\n        /* \"#utility.yul\":2857:2876   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":2658:2882   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10718  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10734  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10743  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":5015:5040   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":4988:5006   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11178:11202  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11215:11220  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11222:11229  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11214  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11178:11230  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11244:11260  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11244:11281  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11240:11483  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11325:11331  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11305:11321  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11305:11331  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3089:3091   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3071:3092   */\n      mstore\n        /* \"#utility.yul\":3128:3130   */\n      0x1d\n        /* \"#utility.yul\":3108:3126   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3101:3131   */\n      mstore\n        /* \"#utility.yul\":3167:3198   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":3147:3165   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3140:3199   */\n      mstore\n        /* \"#utility.yul\":3216:3234   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":3061:3240   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11416:11421  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11423:11430  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11451:11457  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11432:11448  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11432:11457  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11415  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7456:8244  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7552:7570  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3854:3856   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3836:3857   */\n      mstore\n        /* \"#utility.yul\":3893:3895   */\n      0x25\n        /* \"#utility.yul\":3873:3891   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3866:3896   */\n      mstore\n        /* \"#utility.yul\":3932:3966   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":3912:3930   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3905:3967   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":3983:4001   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3976:4011   */\n      mstore\n        /* \"#utility.yul\":4028:4047   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3826:4053   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7630:7646  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2282:2284   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2264:2285   */\n      mstore\n        /* \"#utility.yul\":2321:2323   */\n      0x23\n        /* \"#utility.yul\":2301:2319   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2294:2324   */\n      mstore\n        /* \"#utility.yul\":2360:2394   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2340:2358   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2333:2395   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":2411:2429   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2404:2437   */\n      mstore\n        /* \"#utility.yul\":2454:2473   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":2254:2479   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7746:7765  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7801:7822  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3447:3449   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3429:3450   */\n      mstore\n        /* \"#utility.yul\":3486:3488   */\n      0x26\n        /* \"#utility.yul\":3466:3484   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3459:3489   */\n      mstore\n        /* \"#utility.yul\":3525:3559   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":3505:3523   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3498:3560   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":3576:3594   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3569:3605   */\n      mstore\n        /* \"#utility.yul\":3622:3641   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":3419:3647   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7908  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7917:7937  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7937  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8137  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":5015:5040   */\n      dup6\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap1\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":4988:5006   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8200:8237  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":12073:12164  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n      jump\n        /* \"#utility.yul\":14:187   */\n    tag_141:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:113   */\n      tag_89\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":192:388   */\n    tag_44:\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:274   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":325:331   */\n      dup1\n        /* \"#utility.yul\":317:323   */\n      dup2\n        /* \"#utility.yul\":310:332   */\n      revert\n        /* \"#utility.yul\":272:274   */\n    tag_145:\n        /* \"#utility.yul\":353:382   */\n      tag_146\n        /* \"#utility.yul\":372:381   */\n      dup3\n        /* \"#utility.yul\":353:382   */\n      tag_141\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":343:382   */\n      swap4\n        /* \"#utility.yul\":262:388   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":393:663   */\n    tag_60:\n      0x00\n      dup1\n        /* \"#utility.yul\":522:524   */\n      0x40\n        /* \"#utility.yul\":510:519   */\n      dup4\n        /* \"#utility.yul\":501:508   */\n      dup6\n        /* \"#utility.yul\":497:520   */\n      sub\n        /* \"#utility.yul\":493:525   */\n      slt\n        /* \"#utility.yul\":490:492   */\n      iszero\n      tag_148\n      jumpi\n        /* \"#utility.yul\":543:549   */\n      dup1\n        /* \"#utility.yul\":535:541   */\n      dup2\n        /* \"#utility.yul\":528:550   */\n      revert\n        /* \"#utility.yul\":490:492   */\n    tag_148:\n        /* \"#utility.yul\":571:600   */\n      tag_149\n        /* \"#utility.yul\":590:599   */\n      dup4\n        /* \"#utility.yul\":571:600   */\n      tag_141\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":561:600   */\n      swap2\n      pop\n        /* \"#utility.yul\":619:657   */\n      tag_150\n        /* \"#utility.yul\":653:655   */\n      0x20\n        /* \"#utility.yul\":642:651   */\n      dup5\n        /* \"#utility.yul\":638:656   */\n      add\n        /* \"#utility.yul\":619:657   */\n      tag_141\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":609:657   */\n      swap1\n      pop\n        /* \"#utility.yul\":480:663   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":668:1006   */\n    tag_31:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":814:816   */\n      0x60\n        /* \"#utility.yul\":802:811   */\n      dup5\n        /* \"#utility.yul\":793:800   */\n      dup7\n        /* \"#utility.yul\":789:812   */\n      sub\n        /* \"#utility.yul\":785:817   */\n      slt\n        /* \"#utility.yul\":782:784   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":835:841   */\n      dup1\n        /* \"#utility.yul\":827:833   */\n      dup2\n        /* \"#utility.yul\":820:842   */\n      revert\n        /* \"#utility.yul\":782:784   */\n    tag_152:\n        /* \"#utility.yul\":863:892   */\n      tag_153\n        /* \"#utility.yul\":882:891   */\n      dup5\n        /* \"#utility.yul\":863:892   */\n      tag_141\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":853:892   */\n      swap3\n      pop\n        /* \"#utility.yul\":911:949   */\n      tag_154\n        /* \"#utility.yul\":945:947   */\n      0x20\n        /* \"#utility.yul\":934:943   */\n      dup6\n        /* \"#utility.yul\":930:948   */\n      add\n        /* \"#utility.yul\":911:949   */\n      tag_141\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":901:949   */\n      swap2\n      pop\n        /* \"#utility.yul\":996:998   */\n      0x40\n        /* \"#utility.yul\":985:994   */\n      dup5\n        /* \"#utility.yul\":981:999   */\n      add\n        /* \"#utility.yul\":968:1000   */\n      calldataload\n        /* \"#utility.yul\":958:1000   */\n      swap1\n      pop\n        /* \"#utility.yul\":772:1006   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1011:1275   */\n    tag_21:\n      0x00\n      dup1\n        /* \"#utility.yul\":1140:1142   */\n      0x40\n        /* \"#utility.yul\":1128:1137   */\n      dup4\n        /* \"#utility.yul\":1119:1126   */\n      dup6\n        /* \"#utility.yul\":1115:1138   */\n      sub\n        /* \"#utility.yul\":1111:1143   */\n      slt\n        /* \"#utility.yul\":1108:1110   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":1161:1167   */\n      dup2\n        /* \"#utility.yul\":1153:1159   */\n      dup3\n        /* \"#utility.yul\":1146:1168   */\n      revert\n        /* \"#utility.yul\":1108:1110   */\n    tag_156:\n        /* \"#utility.yul\":1189:1218   */\n      tag_157\n        /* \"#utility.yul\":1208:1217   */\n      dup4\n        /* \"#utility.yul\":1189:1218   */\n      tag_141\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1179:1218   */\n      swap5\n        /* \"#utility.yul\":1265:1267   */\n      0x20\n        /* \"#utility.yul\":1250:1268   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1237:1269   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1098:1275   */\n      jump\t// out\n        /* \"#utility.yul\":1472:2075   */\n    tag_18:\n      0x00\n        /* \"#utility.yul\":1613:1615   */\n      0x20\n        /* \"#utility.yul\":1642:1644   */\n      dup1\n        /* \"#utility.yul\":1631:1640   */\n      dup4\n        /* \"#utility.yul\":1624:1645   */\n      mstore\n        /* \"#utility.yul\":1674:1680   */\n      dup4\n        /* \"#utility.yul\":1668:1681   */\n      mload\n        /* \"#utility.yul\":1717:1723   */\n      dup1\n        /* \"#utility.yul\":1712:1714   */\n      dup3\n        /* \"#utility.yul\":1701:1710   */\n      dup6\n        /* \"#utility.yul\":1697:1715   */\n      add\n        /* \"#utility.yul\":1690:1724   */\n      mstore\n        /* \"#utility.yul\":1742:1746   */\n      dup3\n        /* \"#utility.yul\":1755:1895   */\n    tag_160:\n        /* \"#utility.yul\":1769:1775   */\n      dup2\n        /* \"#utility.yul\":1766:1767   */\n      dup2\n        /* \"#utility.yul\":1763:1776   */\n      lt\n        /* \"#utility.yul\":1755:1895   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":1864:1878   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":1860:1883   */\n      dup4\n      add\n        /* \"#utility.yul\":1854:1884   */\n      mload\n        /* \"#utility.yul\":1830:1847   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":1849:1851   */\n      0x40\n        /* \"#utility.yul\":1826:1852   */\n      add\n        /* \"#utility.yul\":1819:1885   */\n      mstore\n        /* \"#utility.yul\":1784:1794   */\n      dup3\n      add\n        /* \"#utility.yul\":1755:1895   */\n      jump(tag_160)\n    tag_162:\n        /* \"#utility.yul\":1913:1919   */\n      dup2\n        /* \"#utility.yul\":1910:1911   */\n      dup2\n        /* \"#utility.yul\":1907:1920   */\n      gt\n        /* \"#utility.yul\":1904:1906   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":1983:1987   */\n      dup4\n        /* \"#utility.yul\":1978:1980   */\n      0x40\n        /* \"#utility.yul\":1969:1975   */\n      dup4\n        /* \"#utility.yul\":1958:1967   */\n      dup8\n        /* \"#utility.yul\":1954:1976   */\n      add\n        /* \"#utility.yul\":1950:1981   */\n      add\n        /* \"#utility.yul\":1943:1988   */\n      mstore\n        /* \"#utility.yul\":1904:1906   */\n    tag_163:\n      pop\n        /* \"#utility.yul\":2059:2061   */\n      0x1f\n        /* \"#utility.yul\":2038:2053   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2034:2063   */\n      and\n        /* \"#utility.yul\":2019:2064   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2066:2068   */\n      0x40\n        /* \"#utility.yul\":2015:2069   */\n      add\n      swap4\n        /* \"#utility.yul\":1593:2075   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5240:5469   */\n    tag_88:\n      0x00\n        /* \"#utility.yul\":5311:5312   */\n      dup3\n        /* \"#utility.yul\":5307:5313   */\n      not\n        /* \"#utility.yul\":5304:5305   */\n      dup3\n        /* \"#utility.yul\":5301:5314   */\n      gt\n        /* \"#utility.yul\":5298:5300   */\n      iszero\n      tag_174\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":5337:5370   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5393:5397   */\n      0x11\n        /* \"#utility.yul\":5390:5391   */\n      0x04\n        /* \"#utility.yul\":5383:5398   */\n      mstore\n        /* \"#utility.yul\":5423:5427   */\n      0x24\n        /* \"#utility.yul\":5344:5347   */\n      dup2\n        /* \"#utility.yul\":5411:5428   */\n      revert\n        /* \"#utility.yul\":5298:5300   */\n    tag_174:\n      pop\n        /* \"#utility.yul\":5454:5463   */\n      add\n      swap1\n        /* \"#utility.yul\":5288:5469   */\n      jump\t// out\n        /* \"#utility.yul\":5474:5854   */\n    tag_65:\n        /* \"#utility.yul\":5559:5560   */\n      0x02\n        /* \"#utility.yul\":5549:5561   */\n      dup2\n      div\n        /* \"#utility.yul\":5606:5607   */\n      0x01\n        /* \"#utility.yul\":5596:5608   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5617:5619   */\n      tag_176\n      jumpi\n        /* \"#utility.yul\":5671:5675   */\n      0x7f\n        /* \"#utility.yul\":5663:5669   */\n      dup3\n        /* \"#utility.yul\":5659:5676   */\n      and\n        /* \"#utility.yul\":5649:5676   */\n      swap2\n      pop\n        /* \"#utility.yul\":5617:5619   */\n    tag_176:\n        /* \"#utility.yul\":5724:5726   */\n      0x20\n        /* \"#utility.yul\":5716:5722   */\n      dup3\n        /* \"#utility.yul\":5713:5727   */\n      lt\n        /* \"#utility.yul\":5693:5711   */\n      dup2\n        /* \"#utility.yul\":5690:5728   */\n      eq\n        /* \"#utility.yul\":5687:5689   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":5770:5780   */\n      0x4e487b71\n        /* \"#utility.yul\":5765:5768   */\n      0xe0\n        /* \"#utility.yul\":5761:5781   */\n      shl\n        /* \"#utility.yul\":5758:5759   */\n      0x00\n        /* \"#utility.yul\":5751:5782   */\n      mstore\n        /* \"#utility.yul\":5805:5809   */\n      0x22\n        /* \"#utility.yul\":5802:5803   */\n      0x04\n        /* \"#utility.yul\":5795:5810   */\n      mstore\n        /* \"#utility.yul\":5833:5837   */\n      0x24\n        /* \"#utility.yul\":5830:5831   */\n      0x00\n        /* \"#utility.yul\":5823:5838   */\n      revert\n        /* \"#utility.yul\":5687:5689   */\n    tag_177:\n      pop\n        /* \"#utility.yul\":5529:5854   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200ea863211cefffd28f961c1d40a162c1600daf4ebeca8e175c062bf4fd4ffd5164736f6c63430008020033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2039:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:845:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "127:24:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "136:5:6"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "143:5:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "129:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "129:20:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "129:20:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "106:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "114:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "102:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "102:17:6"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "121:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "98:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "98:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "91:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "91:35:6"
															},
															"nodeType": "YulIf",
															"src": "88:2:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "160:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "176:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "170:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "170:13:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "164:2:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "192:28:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "210:2:6",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "214:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "206:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "206:10:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "218:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "202:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "202:18:6"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "196:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "243:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "245:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "245:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "245:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "235:2:6"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "239:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "232:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:10:6"
															},
															"nodeType": "YulIf",
															"src": "229:2:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "274:17:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "288:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "284:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "284:7:6"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "278:2:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "300:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "314:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "314:9:6"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "304:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "332:71:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "354:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "378:2:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "382:4:6",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "374:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "374:13:6"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "389:2:6"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "370:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "370:22:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "394:2:6",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "366:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "366:31:6"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "399:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "362:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "362:40:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "350:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "350:53:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "336:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "462:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "464:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "464:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "464:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "421:10:6"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "433:2:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "418:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "418:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "441:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "453:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "438:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "438:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "415:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "415:46:6"
															},
															"nodeType": "YulIf",
															"src": "412:2:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "500:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "504:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "493:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "493:22:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "493:22:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "531:6:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "539:2:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "524:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "524:18:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "524:18:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "551:14:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "561:4:6",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "555:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "611:24:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "620:5:6"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "627:5:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "613:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "613:20:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "613:20:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "588:6:6"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "596:2:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "584:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "584:15:6"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "601:2:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "580:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "580:24:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "606:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "577:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "577:33:6"
															},
															"nodeType": "YulIf",
															"src": "574:2:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "644:14:6",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "653:5:6"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "648:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "713:87:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "742:6:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "750:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "738:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "738:14:6"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "754:2:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "734:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "734:23:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "773:6:6"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "781:1:6"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "769:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "769:14:6"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "785:2:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "765:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "765:23:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "759:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "759:30:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "727:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "727:63:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "727:63:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "678:1:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "681:2:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "675:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "675:9:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "685:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "687:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "696:1:6"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "699:2:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "692:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "692:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "687:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "671:3:6",
																"statements": []
															},
															"src": "667:133:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "830:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "859:6:6"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "867:2:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "855:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "855:15:6"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "872:2:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "851:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "851:24:6"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "877:5:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "844:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "844:39:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "844:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "815:1:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "818:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "812:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "812:9:6"
															},
															"nodeType": "YulIf",
															"src": "809:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "902:15:6",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "911:6:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "902:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "52:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "60:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "68:5:6",
														"type": ""
													}
												],
												"src": "14:909:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1046:474:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1092:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1101:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1109:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1094:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1094:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1094:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1067:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1076:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1063:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1063:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1088:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1059:32:6"
															},
															"nodeType": "YulIf",
															"src": "1056:2:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1127:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1147:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1141:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1141:16:6"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1131:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1166:28:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1184:2:6",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1188:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1180:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1180:10:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1192:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1176:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1176:18:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1170:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1221:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1230:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1238:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1223:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1223:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1223:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1209:6:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1217:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1206:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1206:14:6"
															},
															"nodeType": "YulIf",
															"src": "1203:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1256:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1299:9:6"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1310:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1295:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1295:22:6"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1319:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1266:28:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1266:61:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1336:41:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1362:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1373:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1358:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1358:18:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1352:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1352:25:6"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1340:8:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1406:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1415:6:6"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1423:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1408:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1408:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1408:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1392:8:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1402:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1389:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1389:16:6"
															},
															"nodeType": "YulIf",
															"src": "1386:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1441:73:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1484:9:6"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1495:8:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1480:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1480:24:6"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1506:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1451:28:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1451:63:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1441:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1004:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1015:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1027:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1035:6:6",
														"type": ""
													}
												],
												"src": "928:592:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1580:325:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1590:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1604:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1610:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1600:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1600:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1590:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1621:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1651:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1657:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1647:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1647:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1625:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1698:31:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1700:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1714:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1722:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1710:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1710:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1700:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1678:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1671:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1671:26:6"
															},
															"nodeType": "YulIf",
															"src": "1668:2:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1788:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1809:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1816:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1821:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1812:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1812:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1802:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1802:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1802:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1853:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1856:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1846:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1846:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1846:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1881:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1874:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1874:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1874:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1744:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1767:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1775:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1764:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1764:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1741:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1741:38:6"
															},
															"nodeType": "YulIf",
															"src": "1738:2:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1560:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1569:6:6",
														"type": ""
													}
												],
												"src": "1525:380:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1942:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1959:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1966:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1971:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1962:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1962:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1952:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1952:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1952:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1999:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2002:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1992:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1992:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1992:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2023:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2026:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2016:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2016:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2016:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1910:127:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), array)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(value0, value0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value1, value1) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000ae438038062000ae48339810160408190526200003491620001c1565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b5050506200027b565b828054620000769062000228565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200011f578081fd5b81516001600160401b03808211156200013c576200013c62000265565b604051601f8301601f19908116603f0116810190828211818310171562000167576200016762000265565b8160405283815260209250868385880101111562000183578485fd5b8491505b83821015620001a6578582018301518183018401529082019062000187565b83821115620001b757848385830101525b9695505050505050565b60008060408385031215620001d4578182fd5b82516001600160401b0380821115620001eb578384fd5b620001f9868387016200010e565b935060208501519150808211156200020f578283fd5b506200021e858286016200010e565b9150509250929050565b6002810460018216806200023d57607f821691505b602082108114156200025f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b610859806200028b6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b4114610149578063a457c2d714610151578063a9059cbb14610164578063dd62ed3e14610177576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b661018a565b6040516100c39190610771565b60405180910390f35b6100df6100da366004610748565b61021c565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461070d565b610234565b604051601281526020016100c3565b6100df610131366004610748565b610258565b6100f36101443660046106ba565b61027a565b6100b6610299565b6100df61015f366004610748565b6102a8565b6100df610172366004610748565b610328565b6100f36101853660046106db565b610336565b606060038054610199906107e8565b80601f01602080910402602001604051908101604052809291908181526020018280546101c5906107e8565b80156102125780601f106101e757610100808354040283529160200191610212565b820191906000526020600020905b8154815290600101906020018083116101f557829003601f168201915b5050505050905090565b60003361022a818585610361565b5060019392505050565b600033610242858285610485565b61024d8585856104ff565b506001949350505050565b60003361022a81858561026b8383610336565b61027591906107c4565b610361565b6001600160a01b0381166000908152602081905260409020545b919050565b606060048054610199906107e8565b600033816102b68286610336565b90508381101561031b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61024d8286868403610361565b60003361022a8185856104ff565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103c35760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610312565b6001600160a01b0382166104245760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610312565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104918484610336565b905060001981146104f957818110156104ec5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610312565b6104f98484848403610361565b50505050565b6001600160a01b0383166105635760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610312565b6001600160a01b0382166105c55760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610312565b6001600160a01b0383166000908152602081905260409020548181101561063d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610312565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f9565b80356001600160a01b038116811461029457600080fd5b6000602082840312156106cb578081fd5b6106d4826106a3565b9392505050565b600080604083850312156106ed578081fd5b6106f6836106a3565b9150610704602084016106a3565b90509250929050565b600080600060608486031215610721578081fd5b61072a846106a3565b9250610738602085016106a3565b9150604084013590509250925092565b6000806040838503121561075a578182fd5b610763836106a3565b946020939093013593505050565b6000602080835283518082850152825b8181101561079d57858101830151858201604001528201610781565b818111156107ae5783604083870101525b50601f01601f1916929092016040019392505050565b600082198211156107e357634e487b7160e01b81526011600452602481fd5b500190565b6002810460018216806107fc57607f821691505b6020821081141561081d57634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212200ea863211cefffd28f961c1d40a162c1600daf4ebeca8e175c062bf4fd4ffd5164736f6c63430008020033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xAE4 CODESIZE SUB DUP1 PUSH3 0xAE4 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1C1 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x27B JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x228 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x11F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x13C JUMPI PUSH3 0x13C PUSH3 0x265 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x167 JUMPI PUSH3 0x167 PUSH3 0x265 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x183 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP5 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1A6 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x187 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1B7 JUMPI DUP5 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1D4 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1EB JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH3 0x1F9 DUP7 DUP4 DUP8 ADD PUSH3 0x10E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x20F JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH3 0x21E DUP6 DUP3 DUP7 ADD PUSH3 0x10E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x23D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x25F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x859 DUP1 PUSH3 0x28B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x177 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x18A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x771 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x748 JUMP JUMPDEST PUSH2 0x21C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x70D JUMP JUMPDEST PUSH2 0x234 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x748 JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x6BA JUMP JUMPDEST PUSH2 0x27A JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x299 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0x748 JUMP JUMPDEST PUSH2 0x2A8 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0x748 JUMP JUMPDEST PUSH2 0x328 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0x6DB JUMP JUMPDEST PUSH2 0x336 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x199 SWAP1 PUSH2 0x7E8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1C5 SWAP1 PUSH2 0x7E8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x212 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x212 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x22A DUP2 DUP6 DUP6 PUSH2 0x361 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x242 DUP6 DUP3 DUP6 PUSH2 0x485 JUMP JUMPDEST PUSH2 0x24D DUP6 DUP6 DUP6 PUSH2 0x4FF JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x22A DUP2 DUP6 DUP6 PUSH2 0x26B DUP4 DUP4 PUSH2 0x336 JUMP JUMPDEST PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x7C4 JUMP JUMPDEST PUSH2 0x361 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x199 SWAP1 PUSH2 0x7E8 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2B6 DUP3 DUP7 PUSH2 0x336 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x31B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x24D DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x361 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x22A DUP2 DUP6 DUP6 PUSH2 0x4FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x312 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x424 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x312 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x491 DUP5 DUP5 PUSH2 0x336 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F9 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x312 JUMP JUMPDEST PUSH2 0x4F9 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x361 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x563 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x312 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x312 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x63D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x312 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F9 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6CB JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x6D4 DUP3 PUSH2 0x6A3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6ED JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x6F6 DUP4 PUSH2 0x6A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x704 PUSH1 0x20 DUP5 ADD PUSH2 0x6A3 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x721 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x72A DUP5 PUSH2 0x6A3 JUMP JUMPDEST SWAP3 POP PUSH2 0x738 PUSH1 0x20 DUP6 ADD PUSH2 0x6A3 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x75A JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x763 DUP4 PUSH2 0x6A3 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x79D JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x781 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x7AE JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x7E3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x7FC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x81D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0xA8 PUSH4 0x211CEFFF 0xD2 DUP16 SWAP7 SHR SAR BLOCKHASH LOG1 PUSH3 0xC1600D 0xAF 0x4E 0xBE 0xCA DUP15 OR 0x5C MOD 0x2B DELEGATECALL REVERT 0x4F REVERT MLOAD PUSH5 0x736F6C6343 STOP ADDMOD MUL STOP CALLER ",
							"sourceMap": "1532:11312:1:-:0;;;1980:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2046:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2069:17:1;;;;:7;;:17;;;;;:::i;:::-;;1980:113;;1532:11312;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1532:11312:1;;;-1:-1:-1;1532:11312:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:909:6;;121:3;114:4;106:6;102:17;98:27;88:2;;143:5;136;129:20;88:2;170:13;;-1:-1:-1;;;;;232:10:6;;;229:2;;;245:18;;:::i;:::-;320:2;314:9;288:2;374:13;;-1:-1:-1;;370:22:6;;;394:2;366:31;362:40;350:53;;;418:18;;;438:22;;;415:46;412:2;;;464:18;;:::i;:::-;504:10;500:2;493:22;539:2;531:6;524:18;561:4;551:14;;606:3;601:2;596;588:6;584:15;580:24;577:33;574:2;;;627:5;620;613:20;574:2;653:5;644:14;;667:133;681:2;678:1;675:9;667:133;;;769:14;;;765:23;;759:30;738:14;;;734:23;;727:63;692:10;;;;667:133;;;818:2;815:1;812:9;809:2;;;877:5;872:2;867;859:6;855:15;851:24;844:39;809:2;911:6;78:845;-1:-1:-1;;;;;;78:845:6:o;928:592::-;;;1088:2;1076:9;1067:7;1063:23;1059:32;1056:2;;;1109:6;1101;1094:22;1056:2;1141:16;;-1:-1:-1;;;;;1206:14:6;;;1203:2;;;1238:6;1230;1223:22;1203:2;1266:61;1319:7;1310:6;1299:9;1295:22;1266:61;:::i;:::-;1256:71;;1373:2;1362:9;1358:18;1352:25;1336:41;;1402:2;1392:8;1389:16;1386:2;;;1423:6;1415;1408:22;1386:2;;1451:63;1506:7;1495:8;1484:9;1480:24;1451:63;:::i;:::-;1441:73;;;1046:474;;;;;:::o;1525:380::-;1610:1;1600:12;;1657:1;1647:12;;;1668:2;;1722:4;1714:6;1710:17;1700:27;;1668:2;1775;1767:6;1764:14;1744:18;1741:38;1738:2;;;1821:10;1816:3;1812:20;1809:1;1802:31;1856:4;1853:1;1846:15;1884:4;1881:1;1874:15;1738:2;;1580:325;;;:::o;1910:127::-;1971:10;1966:3;1962:20;1959:1;1952:31;2002:4;1999:1;1992:15;2026:4;2023:1;2016:15;1942:95;1532:11312:1;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5856:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:6"
															},
															"nodeType": "YulIf",
															"src": "111:2:6"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:6",
														"type": ""
													}
												],
												"src": "14:173:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:126:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "317:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "325:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:6"
															},
															"nodeType": "YulIf",
															"src": "272:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "343:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "372:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "353:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "343:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:6",
														"type": ""
													}
												],
												"src": "192:196:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "480:183:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "526:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "535:6:6"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "543:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "528:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "528:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "528:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "501:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "497:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "497:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "522:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "493:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "493:32:6"
															},
															"nodeType": "YulIf",
															"src": "490:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "561:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "590:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "571:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "571:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "561:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "609:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "642:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "653:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "638:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "638:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "619:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "619:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "609:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "438:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "449:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "461:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "469:6:6",
														"type": ""
													}
												],
												"src": "393:270:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "772:234:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "818:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "827:6:6"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "835:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "820:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "820:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "820:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "793:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "802:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "789:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "789:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "814:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "785:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "785:32:6"
															},
															"nodeType": "YulIf",
															"src": "782:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "853:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "882:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "863:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "863:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "853:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "901:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "934:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "945:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "930:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "930:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "911:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "911:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "901:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "958:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "985:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "996:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "981:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "981:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "968:32:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "958:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "722:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "733:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "745:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "753:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "761:6:6",
														"type": ""
													}
												],
												"src": "668:338:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1098:177:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1144:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1153:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1161:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1146:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1146:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1146:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1119:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1128:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1115:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1140:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1111:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1111:32:6"
															},
															"nodeType": "YulIf",
															"src": "1108:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1179:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1208:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1189:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1189:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1179:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1227:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1254:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1265:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1250:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1250:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1237:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1237:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1227:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1056:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1067:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1087:6:6",
														"type": ""
													}
												],
												"src": "1011:264:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1375:92:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1385:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1397:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1408:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1393:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1393:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1385:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1427:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1452:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1445:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1445:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1438:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1438:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1420:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1420:41:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1420:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1344:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1355:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1366:4:6",
														"type": ""
													}
												],
												"src": "1280:187:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1593:482:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1603:12:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1613:2:6",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1607:2:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1631:9:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1642:2:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1624:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1624:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1624:21:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1654:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1674:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1668:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1658:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1701:9:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1712:2:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1697:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1697:18:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1717:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1690:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1690:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1690:34:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1733:13:6",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "1742:4:6"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1737:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1805:90:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1834:9:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1845:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1830:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1830:17:6"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1849:2:6",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1826:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1826:26:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "1868:6:6"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1876:1:6"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1864:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1864:14:6"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1880:2:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1860:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1860:23:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1854:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1854:30:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1819:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1819:66:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1819:66:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1766:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1769:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1763:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1763:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1777:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1779:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1788:1:6"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1791:2:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1784:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1784:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1779:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1759:3:6",
																"statements": []
															},
															"src": "1755:140:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1929:69:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1958:9:6"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1969:6:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1954:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1954:22:6"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1978:2:6",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1950:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1950:31:6"
																				},
																				{
																					"name": "tail",
																					"nodeType": "YulIdentifier",
																					"src": "1983:4:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1943:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1943:45:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1943:45:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1910:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1913:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1907:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1907:13:6"
															},
															"nodeType": "YulIf",
															"src": "1904:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2007:62:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2023:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2042:6:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2050:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2038:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2038:15:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2059:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2055:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2055:7:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2034:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2034:29:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2019:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2019:45:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2066:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2015:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2015:54:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2007:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1562:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1573:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1584:4:6",
														"type": ""
													}
												],
												"src": "1472:603:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2254:225:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2271:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2282:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2264:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2264:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2264:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2305:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2316:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2301:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2301:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2321:2:6",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2294:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2294:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2294:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2344:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2355:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2340:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2340:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2360:34:6",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2333:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2333:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2333:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2415:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2426:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2411:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2411:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2431:5:6",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2404:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2404:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2404:33:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2446:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2458:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2469:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2454:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2454:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2446:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2231:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2245:4:6",
														"type": ""
													}
												],
												"src": "2080:399:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2658:224:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2675:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2686:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2668:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2668:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2668:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2709:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2720:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2705:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2705:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2725:2:6",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2698:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2698:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2698:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2748:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2759:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2744:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2744:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2764:34:6",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2737:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2737:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2737:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2819:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2830:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2815:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2835:4:6",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2808:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2808:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2808:32:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2849:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2861:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2872:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2857:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2857:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2849:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2635:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2649:4:6",
														"type": ""
													}
												],
												"src": "2484:398:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:179:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3078:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3089:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3071:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3071:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3071:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3112:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3123:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3108:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3108:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3128:2:6",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3101:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3101:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3101:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3151:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3162:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3147:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3147:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3167:31:6",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3140:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3140:59:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3140:59:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3208:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3220:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3231:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3216:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3216:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3208:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3038:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3052:4:6",
														"type": ""
													}
												],
												"src": "2887:353:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3419:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3436:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3447:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3429:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3429:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3429:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3470:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3481:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3466:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3466:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3486:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3459:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3459:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3459:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3509:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3520:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3505:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3505:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3525:34:6",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3498:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3498:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3498:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3580:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3591:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3576:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3576:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3596:8:6",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3569:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3569:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3569:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3614:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3626:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3637:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3622:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3622:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3614:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3396:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3410:4:6",
														"type": ""
													}
												],
												"src": "3245:402:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3826:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3843:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3854:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3836:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3836:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3836:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3877:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3888:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3873:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3873:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3893:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3866:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3866:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3866:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3916:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3927:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3912:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3912:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3932:34:6",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3905:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3905:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3905:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3987:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3998:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3983:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3983:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4003:7:6",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3976:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3976:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3976:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4020:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4032:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4043:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4028:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4028:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4020:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3803:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3817:4:6",
														"type": ""
													}
												],
												"src": "3652:401:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4232:226:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4249:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4260:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4242:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4242:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4242:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4283:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4294:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4279:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4279:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4299:2:6",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4272:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4272:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4272:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4322:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4333:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4318:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4318:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4338:34:6",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4311:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4311:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4311:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4393:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4404:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4389:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4389:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4409:6:6",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4382:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4382:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4382:34:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4425:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4437:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4448:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4433:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4433:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4425:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4209:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4223:4:6",
														"type": ""
													}
												],
												"src": "4058:400:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4637:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4654:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4665:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4647:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4647:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4647:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4688:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4699:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4684:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4684:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4704:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4677:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4677:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4677:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4727:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4738:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4723:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4723:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4743:34:6",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4716:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4716:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4716:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4798:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4809:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4794:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4794:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4814:7:6",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4787:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4787:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4787:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4831:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4843:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4854:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4839:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4839:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4831:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4614:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4628:4:6",
														"type": ""
													}
												],
												"src": "4463:401:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4970:76:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4980:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4992:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5003:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4988:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4988:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4980:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5022:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5033:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5015:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5015:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5015:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4939:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4950:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4961:4:6",
														"type": ""
													}
												],
												"src": "4869:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5148:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5158:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5170:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5181:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5166:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5166:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5158:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5200:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5215:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5223:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5211:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5211:17:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5193:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5193:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5193:36:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5117:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5128:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5139:4:6",
														"type": ""
													}
												],
												"src": "5051:184:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5288:181:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5323:115:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sum",
																					"nodeType": "YulIdentifier",
																					"src": "5344:3:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5353:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5358:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5349:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5349:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5337:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5337:33:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5337:33:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5390:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5393:4:6",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5383:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5383:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5383:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sum",
																					"nodeType": "YulIdentifier",
																					"src": "5418:3:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5423:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5411:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5411:17:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5411:17:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5304:1:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5311:1:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5307:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5307:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5301:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5301:13:6"
															},
															"nodeType": "YulIf",
															"src": "5298:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5447:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5458:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5461:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5454:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5454:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5447:3:6"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5271:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5274:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5280:3:6",
														"type": ""
													}
												],
												"src": "5240:229:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5529:325:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5539:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5553:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5559:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5549:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5549:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5539:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5570:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5600:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5606:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5596:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5596:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5574:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5647:31:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5649:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5663:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5671:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5659:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5659:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5649:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5627:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5620:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5620:26:6"
															},
															"nodeType": "YulIf",
															"src": "5617:2:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5737:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5758:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5765:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5770:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5761:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5761:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5751:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5751:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5751:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5802:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5805:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5795:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5795:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5795:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5830:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5833:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5823:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5823:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5823:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5693:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5716:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5724:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5713:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5713:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5690:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5690:38:6"
															},
															"nodeType": "YulIf",
															"src": "5687:2:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5509:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5518:6:6",
														"type": ""
													}
												],
												"src": "5474:380:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b4114610149578063a457c2d714610151578063a9059cbb14610164578063dd62ed3e14610177576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b661018a565b6040516100c39190610771565b60405180910390f35b6100df6100da366004610748565b61021c565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461070d565b610234565b604051601281526020016100c3565b6100df610131366004610748565b610258565b6100f36101443660046106ba565b61027a565b6100b6610299565b6100df61015f366004610748565b6102a8565b6100df610172366004610748565b610328565b6100f36101853660046106db565b610336565b606060038054610199906107e8565b80601f01602080910402602001604051908101604052809291908181526020018280546101c5906107e8565b80156102125780601f106101e757610100808354040283529160200191610212565b820191906000526020600020905b8154815290600101906020018083116101f557829003601f168201915b5050505050905090565b60003361022a818585610361565b5060019392505050565b600033610242858285610485565b61024d8585856104ff565b506001949350505050565b60003361022a81858561026b8383610336565b61027591906107c4565b610361565b6001600160a01b0381166000908152602081905260409020545b919050565b606060048054610199906107e8565b600033816102b68286610336565b90508381101561031b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61024d8286868403610361565b60003361022a8185856104ff565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103c35760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610312565b6001600160a01b0382166104245760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610312565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104918484610336565b905060001981146104f957818110156104ec5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610312565b6104f98484848403610361565b50505050565b6001600160a01b0383166105635760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610312565b6001600160a01b0382166105c55760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610312565b6001600160a01b0383166000908152602081905260409020548181101561063d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610312565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f9565b80356001600160a01b038116811461029457600080fd5b6000602082840312156106cb578081fd5b6106d4826106a3565b9392505050565b600080604083850312156106ed578081fd5b6106f6836106a3565b9150610704602084016106a3565b90509250929050565b600080600060608486031215610721578081fd5b61072a846106a3565b9250610738602085016106a3565b9150604084013590509250925092565b6000806040838503121561075a578182fd5b610763836106a3565b946020939093013593505050565b6000602080835283518082850152825b8181101561079d57858101830151858201604001528201610781565b818111156107ae5783604083870101525b50601f01601f1916929092016040019392505050565b600082198211156107e357634e487b7160e01b81526011600452602481fd5b500190565b6002810460018216806107fc57607f821691505b6020821081141561081d57634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212200ea863211cefffd28f961c1d40a162c1600daf4ebeca8e175c062bf4fd4ffd5164736f6c63430008020033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x177 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x18A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x771 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x748 JUMP JUMPDEST PUSH2 0x21C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x70D JUMP JUMPDEST PUSH2 0x234 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x748 JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x6BA JUMP JUMPDEST PUSH2 0x27A JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x299 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0x748 JUMP JUMPDEST PUSH2 0x2A8 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0x748 JUMP JUMPDEST PUSH2 0x328 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0x6DB JUMP JUMPDEST PUSH2 0x336 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x199 SWAP1 PUSH2 0x7E8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1C5 SWAP1 PUSH2 0x7E8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x212 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x212 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x22A DUP2 DUP6 DUP6 PUSH2 0x361 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x242 DUP6 DUP3 DUP6 PUSH2 0x485 JUMP JUMPDEST PUSH2 0x24D DUP6 DUP6 DUP6 PUSH2 0x4FF JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x22A DUP2 DUP6 DUP6 PUSH2 0x26B DUP4 DUP4 PUSH2 0x336 JUMP JUMPDEST PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x7C4 JUMP JUMPDEST PUSH2 0x361 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x199 SWAP1 PUSH2 0x7E8 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2B6 DUP3 DUP7 PUSH2 0x336 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x31B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x24D DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x361 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x22A DUP2 DUP6 DUP6 PUSH2 0x4FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x312 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x424 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x312 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x491 DUP5 DUP5 PUSH2 0x336 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F9 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x312 JUMP JUMPDEST PUSH2 0x4F9 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x361 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x563 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x312 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x312 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x63D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x312 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F9 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6CB JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x6D4 DUP3 PUSH2 0x6A3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6ED JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x6F6 DUP4 PUSH2 0x6A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x704 PUSH1 0x20 DUP5 ADD PUSH2 0x6A3 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x721 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x72A DUP5 PUSH2 0x6A3 JUMP JUMPDEST SWAP3 POP PUSH2 0x738 PUSH1 0x20 DUP6 ADD PUSH2 0x6A3 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x75A JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x763 DUP4 PUSH2 0x6A3 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x79D JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x781 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x7AE JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x7E3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x7FC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x81D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0xA8 PUSH4 0x211CEFFF 0xD2 DUP16 SWAP7 SHR SAR BLOCKHASH LOG1 PUSH3 0xC1600D 0xAF 0x4E 0xBE 0xCA DUP15 OR 0x5C MOD 0x2B DELEGATECALL REVERT 0x4F REVERT MLOAD PUSH5 0x736F6C6343 STOP ADDMOD MUL STOP CALLER ",
							"sourceMap": "1532:11312:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;1445:14:6;;1438:22;1420:41;;1408:2;1393:18;4444:197:1;1375:92:6;3255:106:1;3342:12;;3255:106;;;5015:25:6;;;5003:2;4988:18;3255:106:1;4970:76:6;5203:256:1;;;;;;:::i;:::-;;:::i;3104:91::-;;;3186:2;5193:36:6;;5181:2;5166:18;3104:91:1;5148:87:6;5854:234:1;;;;;;:::i;:::-;;:::i;3419:125::-;;;;;;:::i;:::-;;:::i;2369:102::-;;;:::i;6575:427::-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;3987:149::-;;;;;;:::i;:::-;;:::i;2158:98::-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:4;4581:32:1;719:10:4;4597:7:1;4606:6;4581:8;:32::i;:::-;-1:-1:-1;4630:4:1;;4444:197;-1:-1:-1;;;4444:197:1:o;5203:256::-;5300:4;719:10:4;5356:38:1;5372:4;719:10:4;5387:6:1;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:1;;5203:256;-1:-1:-1;;;;5203:256:1:o;5854:234::-;5942:4;719:10:4;5996:64:1;719:10:4;6012:7:1;6049:10;6021:25;719:10:4;6012:7:1;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;3419:125::-;-1:-1:-1;;;;;3519:18:1;;3493:7;3519:18;;;;;;;;;;;3419:125;;;;:::o;2369:102::-;2425:13;2457:7;2450:14;;;;;:::i;6575:427::-;6668:4;719:10:4;6668:4:1;6749:25;719:10:4;6766:7:1;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:1;;4665:2:6;6784:85:1;;;4647:21:6;4704:2;4684:18;;;4677:30;4743:34;4723:18;;;4716:62;-1:-1:-1;;;4794:18:6;;;4787:35;4839:19;;6784:85:1;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;719:10:4;3873:28:1;719:10:4;3890:2:1;3894:6;3873:9;:28::i;3987:149::-;-1:-1:-1;;;;;4102:18:1;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;10457:340::-;-1:-1:-1;;;;;10558:19:1;;10550:68;;;;-1:-1:-1;;;10550:68:1;;4260:2:6;10550:68:1;;;4242:21:6;4299:2;4279:18;;;4272:30;4338:34;4318:18;;;4311:62;-1:-1:-1;;;4389:18:6;;;4382:34;4433:19;;10550:68:1;4232:226:6;10550:68:1;-1:-1:-1;;;;;10636:21:1;;10628:68;;;;-1:-1:-1;;;10628:68:1;;2686:2:6;10628:68:1;;;2668:21:6;2725:2;2705:18;;;2698:30;2764:34;2744:18;;;2737:62;-1:-1:-1;;;2815:18:6;;;2808:32;2857:19;;10628:68:1;2658:224:6;10628:68:1;-1:-1:-1;;;;;10707:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;5015:25:6;;;10758:32:1;;4988:18:6;10758:32:1;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:1;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:1;;3089:2:6;11297:68:1;;;3071:21:6;3128:2;3108:18;;;3101:30;3167:31;3147:18;;;3140:59;3216:18;;11297:68:1;3061:179:6;11297:68:1;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11078:411;;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:1;;7544:68;;;;-1:-1:-1;;;7544:68:1;;3854:2:6;7544:68:1;;;3836:21:6;3893:2;3873:18;;;3866:30;3932:34;3912:18;;;3905:62;-1:-1:-1;;;3983:18:6;;;3976:35;4028:19;;7544:68:1;3826:227:6;7544:68:1;-1:-1:-1;;;;;7630:16:1;;7622:64;;;;-1:-1:-1;;;7622:64:1;;2282:2:6;7622:64:1;;;2264:21:6;2321:2;2301:18;;;2294:30;2360:34;2340:18;;;2333:62;-1:-1:-1;;;2411:18:6;;;2404:33;2454:19;;7622:64:1;2254:225:6;7622:64:1;-1:-1:-1;;;;;7768:15:1;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:1;;3447:2:6;7793:72:1;;;3429:21:6;3486:2;3466:18;;;3459:30;3525:34;3505:18;;;3498:62;-1:-1:-1;;;3576:18:6;;;3569:36;3622:19;;7793:72:1;3419:228:6;7793:72:1;-1:-1:-1;;;;;7899:15:1;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;5015:25:6;;;8114:13:1;;8163:26;;4988:18:6;8163:26:1;;;;;;;8200:37;12073:91;14:173:6;82:20;;-1:-1:-1;;;;;131:31:6;;121:42;;111:2;;177:1;174;167:12;192:196;;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;353:29;372:9;353:29;:::i;:::-;343:39;262:126;-1:-1:-1;;;262:126:6:o;393:270::-;;;522:2;510:9;501:7;497:23;493:32;490:2;;;543:6;535;528:22;490:2;571:29;590:9;571:29;:::i;:::-;561:39;;619:38;653:2;642:9;638:18;619:38;:::i;:::-;609:48;;480:183;;;;;:::o;668:338::-;;;;814:2;802:9;793:7;789:23;785:32;782:2;;;835:6;827;820:22;782:2;863:29;882:9;863:29;:::i;:::-;853:39;;911:38;945:2;934:9;930:18;911:38;:::i;:::-;901:48;;996:2;985:9;981:18;968:32;958:42;;772:234;;;;;:::o;1011:264::-;;;1140:2;1128:9;1119:7;1115:23;1111:32;1108:2;;;1161:6;1153;1146:22;1108:2;1189:29;1208:9;1189:29;:::i;:::-;1179:39;1265:2;1250:18;;;;1237:32;;-1:-1:-1;;;1098:177:6:o;1472:603::-;;1613:2;1642;1631:9;1624:21;1674:6;1668:13;1717:6;1712:2;1701:9;1697:18;1690:34;1742:4;1755:140;1769:6;1766:1;1763:13;1755:140;;;1864:14;;;1860:23;;1854:30;1830:17;;;1849:2;1826:26;1819:66;1784:10;;1755:140;;;1913:6;1910:1;1907:13;1904:2;;;1983:4;1978:2;1969:6;1958:9;1954:22;1950:31;1943:45;1904:2;-1:-1:-1;2059:2:6;2038:15;-1:-1:-1;;2034:29:6;2019:45;;;;2066:2;2015:54;;1593:482;-1:-1:-1;;;1593:482:6:o;5240:229::-;;5311:1;5307:6;5304:1;5301:13;5298:2;;;-1:-1:-1;;;5337:33:6;;5393:4;5390:1;5383:15;5423:4;5344:3;5411:17;5298:2;-1:-1:-1;5454:9:6;;5288:181::o;5474:380::-;5559:1;5549:12;;5606:1;5596:12;;;5617:2;;5671:4;5663:6;5659:17;5649:27;;5617:2;5724;5716:6;5713:14;5693:18;5690:38;5687:2;;;5770:10;5765:3;5761:20;5758:1;5751:31;5805:4;5802:1;5795:15;5833:4;5830:1;5823:15;5687:2;;5529:325;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "427400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "22524",
								"balanceOf(address)": "infinite",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "23616",
								"increaseAllowance(address,uint256)": "23578",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1026",
								"transfer(address,uint256)": "44334",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 923,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 14,
									"end": 923,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 14,
									"end": 923,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 124,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 114,
									"end": 118,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 106,
									"end": 112,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 102,
									"end": 119,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 98,
									"end": 125,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 88,
									"end": 90,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 90,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 143,
									"end": 148,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 136,
									"end": 141,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 129,
									"end": 149,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 88,
									"end": 90,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 90,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 170,
									"end": 183,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 170,
									"end": 183,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 232,
									"end": 242,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 232,
									"end": 242,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 232,
									"end": 242,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 229,
									"end": 231,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 229,
									"end": 231,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 229,
									"end": 231,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 245,
									"end": 263,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 245,
									"end": 263,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 245,
									"end": 263,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 245,
									"end": 263,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 245,
									"end": 263,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 320,
									"end": 322,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 314,
									"end": 323,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 288,
									"end": 290,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 374,
									"end": 387,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 374,
									"end": 387,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 370,
									"end": 392,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 370,
									"end": 392,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 370,
									"end": 392,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 394,
									"end": 396,
									"name": "PUSH",
									"source": 6,
									"value": "3F"
								},
								{
									"begin": 366,
									"end": 397,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 362,
									"end": 402,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 350,
									"end": 403,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 350,
									"end": 403,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 350,
									"end": 403,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 418,
									"end": 436,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 418,
									"end": 436,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 418,
									"end": 436,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 438,
									"end": 460,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 438,
									"end": 460,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 438,
									"end": 460,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 415,
									"end": 461,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 412,
									"end": 414,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 412,
									"end": 414,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 464,
									"end": 482,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 464,
									"end": 482,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 464,
									"end": 482,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 464,
									"end": 482,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 464,
									"end": 482,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 504,
									"end": 514,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 500,
									"end": 502,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 493,
									"end": 515,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 539,
									"end": 541,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 531,
									"end": 537,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 524,
									"end": 542,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 561,
									"end": 565,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 551,
									"end": 565,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 551,
									"end": 565,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 606,
									"end": 609,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 601,
									"end": 603,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 596,
									"end": 598,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 588,
									"end": 594,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 584,
									"end": 599,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 580,
									"end": 604,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 577,
									"end": 610,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 574,
									"end": 576,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 574,
									"end": 576,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 574,
									"end": 576,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 627,
									"end": 632,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 620,
									"end": 625,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 613,
									"end": 633,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 574,
									"end": 576,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 574,
									"end": 576,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 653,
									"end": 658,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 644,
									"end": 658,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 644,
									"end": 658,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 667,
									"end": 800,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 667,
									"end": 800,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 681,
									"end": 683,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 678,
									"end": 679,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 675,
									"end": 684,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 667,
									"end": 800,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 667,
									"end": 800,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 667,
									"end": 800,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 769,
									"end": 783,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 769,
									"end": 783,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 769,
									"end": 783,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 765,
									"end": 788,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 765,
									"end": 788,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 759,
									"end": 789,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 738,
									"end": 752,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 738,
									"end": 752,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 738,
									"end": 752,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 734,
									"end": 757,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 734,
									"end": 757,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 727,
									"end": 790,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 692,
									"end": 702,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 692,
									"end": 702,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 692,
									"end": 702,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 692,
									"end": 702,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 667,
									"end": 800,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 667,
									"end": 800,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 667,
									"end": 800,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 667,
									"end": 800,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 818,
									"end": 820,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 815,
									"end": 816,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 812,
									"end": 821,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 809,
									"end": 811,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 809,
									"end": 811,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 809,
									"end": 811,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 877,
									"end": 882,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 872,
									"end": 874,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 867,
									"end": 869,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 859,
									"end": 865,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 855,
									"end": 870,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 851,
									"end": 875,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 844,
									"end": 883,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 809,
									"end": 811,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 809,
									"end": 811,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 911,
									"end": 917,
									"name": "SWAP7",
									"source": 6
								},
								{
									"begin": 78,
									"end": 923,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 78,
									"end": 923,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 928,
									"end": 1520,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 928,
									"end": 1520,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 928,
									"end": 1520,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 928,
									"end": 1520,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1088,
									"end": 1090,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1076,
									"end": 1085,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1067,
									"end": 1074,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1063,
									"end": 1086,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1091,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1058,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1058,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1056,
									"end": 1058,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1109,
									"end": 1115,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1101,
									"end": 1107,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1094,
									"end": 1116,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1058,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1056,
									"end": 1058,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1206,
									"end": 1220,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1206,
									"end": 1220,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1206,
									"end": 1220,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1203,
									"end": 1205,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1203,
									"end": 1205,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1203,
									"end": 1205,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1230,
									"end": 1236,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1223,
									"end": 1245,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1203,
									"end": 1205,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1203,
									"end": 1205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1266,
									"end": 1327,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1319,
									"end": 1326,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1310,
									"end": 1316,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1299,
									"end": 1308,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1295,
									"end": 1317,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1266,
									"end": 1327,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1266,
									"end": 1327,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1266,
									"end": 1327,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1266,
									"end": 1327,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1256,
									"end": 1327,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1256,
									"end": 1327,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1373,
									"end": 1375,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1362,
									"end": 1371,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1376,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1352,
									"end": 1377,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1336,
									"end": 1377,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1336,
									"end": 1377,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1402,
									"end": 1404,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1392,
									"end": 1400,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1389,
									"end": 1405,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1386,
									"end": 1388,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1386,
									"end": 1388,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1386,
									"end": 1388,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1423,
									"end": 1429,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1415,
									"end": 1421,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1408,
									"end": 1430,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1386,
									"end": 1388,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1386,
									"end": 1388,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1386,
									"end": 1388,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1451,
									"end": 1514,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1506,
									"end": 1513,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1495,
									"end": 1503,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1484,
									"end": 1493,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1480,
									"end": 1504,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1451,
									"end": 1514,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1451,
									"end": 1514,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1451,
									"end": 1514,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1451,
									"end": 1514,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1441,
									"end": 1514,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1441,
									"end": 1514,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1441,
									"end": 1514,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1046,
									"end": 1520,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1046,
									"end": 1520,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1046,
									"end": 1520,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1046,
									"end": 1520,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1046,
									"end": 1520,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1046,
									"end": 1520,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1525,
									"end": 1905,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1525,
									"end": 1905,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1611,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1600,
									"end": 1612,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1600,
									"end": 1612,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1657,
									"end": 1658,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1647,
									"end": 1659,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1647,
									"end": 1659,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1647,
									"end": 1659,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1668,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1668,
									"end": 1670,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1722,
									"end": 1726,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 1714,
									"end": 1720,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1727,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1700,
									"end": 1727,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1700,
									"end": 1727,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1668,
									"end": 1670,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1668,
									"end": 1670,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1775,
									"end": 1777,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1767,
									"end": 1773,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1764,
									"end": 1778,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1744,
									"end": 1762,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1741,
									"end": 1779,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1738,
									"end": 1740,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1738,
									"end": 1740,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1738,
									"end": 1740,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1821,
									"end": 1831,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 1816,
									"end": 1819,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1809,
									"end": 1810,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1802,
									"end": 1833,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1856,
									"end": 1860,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1853,
									"end": 1854,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1846,
									"end": 1861,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1881,
									"end": 1882,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1874,
									"end": 1889,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1738,
									"end": 1740,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1738,
									"end": 1740,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1738,
									"end": 1740,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1580,
									"end": 1905,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1580,
									"end": 1905,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1580,
									"end": 1905,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1580,
									"end": 1905,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1910,
									"end": 2037,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 1910,
									"end": 2037,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1971,
									"end": 1981,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 1966,
									"end": 1969,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 1962,
									"end": 1982,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1959,
									"end": 1960,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1952,
									"end": 1983,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2002,
									"end": 2006,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1999,
									"end": 2000,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1992,
									"end": 2007,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2026,
									"end": 2030,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2023,
									"end": 2024,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2016,
									"end": 2031,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1942,
									"end": 2037,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1942,
									"end": 2037,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200ea863211cefffd28f961c1d40a162c1600daf4ebeca8e175c062bf4fd4ffd5164736f6c63430008020033",
									".code": [
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1459,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1445,
											"end": 1459,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1438,
											"end": 1460,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1420,
											"end": 1461,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1420,
											"end": 1461,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1408,
											"end": 1410,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1393,
											"end": 1411,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1375,
											"end": 1467,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5015,
											"end": 5040,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5015,
											"end": 5040,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5015,
											"end": 5040,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5003,
											"end": 5005,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4988,
											"end": 5006,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 4970,
											"end": 5046,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 5193,
											"end": 5229,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5193,
											"end": 5229,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5181,
											"end": 5183,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5166,
											"end": 5184,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 5148,
											"end": 5235,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2244,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4527,
											"end": 4531,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4597,
											"end": 4604,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4581,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4630,
											"end": 4634,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4630,
											"end": 4634,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5300,
											"end": 5304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5372,
											"end": 5376,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5387,
											"end": 5393,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5356,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5414,
											"end": 5418,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5422,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5424,
											"end": 5430,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5404,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5946,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5996,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6059,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5996,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5996,
											"end": 6060,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2457,
											"end": 2464,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6766,
											"end": 6773,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6812,
											"end": 6827,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6808,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4665,
											"end": 4667,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4647,
											"end": 4668,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4704,
											"end": 4706,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 4684,
											"end": 4702,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4684,
											"end": 4702,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4684,
											"end": 4702,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4677,
											"end": 4707,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4743,
											"end": 4777,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4716,
											"end": 4778,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4822,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4839,
											"end": 4858,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4839,
											"end": 4858,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6912,
											"end": 6917,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6919,
											"end": 6926,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6947,
											"end": 6962,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 6944,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 6962,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6903,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3819,
											"end": 3823,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3873,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3890,
											"end": 3892,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3894,
											"end": 3900,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3873,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3873,
											"end": 3901,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4076,
											"end": 4083,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4113,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4260,
											"end": 4262,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4242,
											"end": 4263,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4299,
											"end": 4301,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4279,
											"end": 4297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4279,
											"end": 4297,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4279,
											"end": 4297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4302,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4338,
											"end": 4372,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4318,
											"end": 4336,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4318,
											"end": 4336,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4318,
											"end": 4336,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4311,
											"end": 4373,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4382,
											"end": 4416,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4433,
											"end": 4452,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4433,
											"end": 4452,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4232,
											"end": 4458,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2686,
											"end": 2688,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2668,
											"end": 2689,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2725,
											"end": 2727,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2798,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 2744,
											"end": 2762,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2744,
											"end": 2762,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2762,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2737,
											"end": 2799,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2815,
											"end": 2833,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2815,
											"end": 2833,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2815,
											"end": 2833,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2808,
											"end": 2840,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2857,
											"end": 2876,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2857,
											"end": 2876,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2658,
											"end": 2882,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10718,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5015,
											"end": 5040,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5015,
											"end": 5040,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5015,
											"end": 5040,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4988,
											"end": 5006,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11202,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 11215,
											"end": 11220,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11222,
											"end": 11229,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11205,
											"end": 11214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11244,
											"end": 11260,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11244,
											"end": 11281,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11325,
											"end": 11331,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11305,
											"end": 11321,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3091,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3092,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3128,
											"end": 3130,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 3108,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3108,
											"end": 3126,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3108,
											"end": 3126,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3101,
											"end": 3131,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3167,
											"end": 3198,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 3147,
											"end": 3165,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3147,
											"end": 3165,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3165,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3140,
											"end": 3199,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3216,
											"end": 3234,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3216,
											"end": 3234,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3061,
											"end": 3240,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11416,
											"end": 11421,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11423,
											"end": 11430,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11451,
											"end": 11457,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11432,
											"end": 11448,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11432,
											"end": 11457,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11407,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3854,
											"end": 3856,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3836,
											"end": 3857,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3893,
											"end": 3895,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 3873,
											"end": 3891,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3873,
											"end": 3891,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3873,
											"end": 3891,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3866,
											"end": 3896,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 3966,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 3912,
											"end": 3930,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3912,
											"end": 3930,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3912,
											"end": 3930,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3905,
											"end": 3967,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3983,
											"end": 4001,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3983,
											"end": 4001,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3983,
											"end": 4001,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3976,
											"end": 4011,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4028,
											"end": 4047,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4028,
											"end": 4047,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3826,
											"end": 4053,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2284,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2264,
											"end": 2285,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2321,
											"end": 2323,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2301,
											"end": 2319,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2301,
											"end": 2319,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2301,
											"end": 2319,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2294,
											"end": 2324,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2394,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2395,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2411,
											"end": 2429,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2411,
											"end": 2429,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2411,
											"end": 2429,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2404,
											"end": 2437,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2473,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2454,
											"end": 2473,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2254,
											"end": 2479,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7746,
											"end": 7765,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3447,
											"end": 3449,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3450,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3488,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3466,
											"end": 3484,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3466,
											"end": 3484,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3466,
											"end": 3484,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3459,
											"end": 3489,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3525,
											"end": 3559,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 3505,
											"end": 3523,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3505,
											"end": 3523,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3505,
											"end": 3523,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3560,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3576,
											"end": 3594,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3576,
											"end": 3594,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3576,
											"end": 3594,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3569,
											"end": 3605,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3622,
											"end": 3641,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3622,
											"end": 3641,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3419,
											"end": 3647,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7908,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5015,
											"end": 5040,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5015,
											"end": 5040,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5015,
											"end": 5040,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4988,
											"end": 5006,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 8200,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 111,
											"end": 113,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 192,
											"end": 388,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 192,
											"end": 388,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 192,
											"end": 388,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 272,
											"end": 274,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 272,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 272,
											"end": 274,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 325,
											"end": 331,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 317,
											"end": 323,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 310,
											"end": 332,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 272,
											"end": 274,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 272,
											"end": 274,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 353,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 372,
											"end": 381,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 353,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 353,
											"end": 382,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 353,
											"end": 382,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 353,
											"end": 382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 343,
											"end": 382,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 262,
											"end": 388,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 262,
											"end": 388,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 393,
											"end": 663,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 393,
											"end": 663,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 393,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 393,
											"end": 663,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 522,
											"end": 524,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 501,
											"end": 508,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 497,
											"end": 520,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 493,
											"end": 525,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 490,
											"end": 492,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 490,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 490,
											"end": 492,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 543,
											"end": 549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 535,
											"end": 541,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 528,
											"end": 550,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 490,
											"end": 492,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 490,
											"end": 492,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 571,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 590,
											"end": 599,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 571,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 571,
											"end": 600,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 571,
											"end": 600,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 571,
											"end": 600,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 561,
											"end": 600,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 561,
											"end": 600,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 619,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 653,
											"end": 655,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 642,
											"end": 651,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 638,
											"end": 656,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 619,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 619,
											"end": 657,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 619,
											"end": 657,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 619,
											"end": 657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 609,
											"end": 657,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 609,
											"end": 657,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 480,
											"end": 663,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 480,
											"end": 663,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 480,
											"end": 663,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 480,
											"end": 663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 480,
											"end": 663,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 480,
											"end": 663,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 668,
											"end": 1006,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 668,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 668,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 668,
											"end": 1006,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 668,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 814,
											"end": 816,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 793,
											"end": 800,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 789,
											"end": 812,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 785,
											"end": 817,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 782,
											"end": 784,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 782,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 782,
											"end": 784,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 835,
											"end": 841,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 827,
											"end": 833,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 820,
											"end": 842,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 782,
											"end": 784,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 782,
											"end": 784,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 863,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 882,
											"end": 891,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 863,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 863,
											"end": 892,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 863,
											"end": 892,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 863,
											"end": 892,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 853,
											"end": 892,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 853,
											"end": 892,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 911,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 945,
											"end": 947,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 934,
											"end": 943,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 930,
											"end": 948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 911,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 911,
											"end": 949,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 911,
											"end": 949,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 911,
											"end": 949,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 901,
											"end": 949,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 901,
											"end": 949,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 996,
											"end": 998,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 994,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 981,
											"end": 999,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 968,
											"end": 1000,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 958,
											"end": 1000,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 958,
											"end": 1000,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1011,
											"end": 1275,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 1011,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1011,
											"end": 1275,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1011,
											"end": 1275,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1140,
											"end": 1142,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1128,
											"end": 1137,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1119,
											"end": 1126,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1138,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1161,
											"end": 1167,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1153,
											"end": 1159,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1146,
											"end": 1168,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1179,
											"end": 1218,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1267,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1237,
											"end": 1269,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1237,
											"end": 1269,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1098,
											"end": 1275,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1472,
											"end": 2075,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1472,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1472,
											"end": 2075,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1613,
											"end": 1615,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1642,
											"end": 1644,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 1640,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1645,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1674,
											"end": 1680,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1668,
											"end": 1681,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1717,
											"end": 1723,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1714,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1710,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1697,
											"end": 1715,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1690,
											"end": 1724,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1742,
											"end": 1746,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 1895,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 1755,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1769,
											"end": 1775,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1766,
											"end": 1767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1763,
											"end": 1776,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 1895,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 1755,
											"end": 1895,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1864,
											"end": 1878,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1864,
											"end": 1878,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1864,
											"end": 1878,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1884,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1847,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1847,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1847,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1851,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1826,
											"end": 1852,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1819,
											"end": 1885,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1794,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1794,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 1755,
											"end": 1895,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 1895,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 1755,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 1919,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 1911,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1907,
											"end": 1920,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1904,
											"end": 1906,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1904,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1904,
											"end": 1906,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 1987,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 1980,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 1975,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1967,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1954,
											"end": 1976,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1943,
											"end": 1988,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1904,
											"end": 1906,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1904,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2059,
											"end": 2061,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2038,
											"end": 2053,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2034,
											"end": 2063,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2019,
											"end": 2064,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2019,
											"end": 2064,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2019,
											"end": 2064,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2019,
											"end": 2064,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2068,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2015,
											"end": 2069,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2069,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 2075,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1593,
											"end": 2075,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5240,
											"end": 5469,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 5240,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5240,
											"end": 5469,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5311,
											"end": 5312,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5313,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5304,
											"end": 5305,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5301,
											"end": 5314,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5298,
											"end": 5300,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5298,
											"end": 5300,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 5298,
											"end": 5300,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5337,
											"end": 5370,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5337,
											"end": 5370,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5397,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 5390,
											"end": 5391,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5383,
											"end": 5398,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5423,
											"end": 5427,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5344,
											"end": 5347,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5411,
											"end": 5428,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5298,
											"end": 5300,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 5298,
											"end": 5300,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5454,
											"end": 5463,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5454,
											"end": 5463,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5288,
											"end": 5469,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5474,
											"end": 5854,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 5474,
											"end": 5854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5559,
											"end": 5560,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5549,
											"end": 5561,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5549,
											"end": 5561,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5606,
											"end": 5607,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5596,
											"end": 5608,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5596,
											"end": 5608,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5596,
											"end": 5608,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5617,
											"end": 5619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 5617,
											"end": 5619,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5671,
											"end": 5675,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 5663,
											"end": 5669,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5659,
											"end": 5676,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5649,
											"end": 5676,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5649,
											"end": 5676,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5617,
											"end": 5619,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 5617,
											"end": 5619,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5724,
											"end": 5726,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5716,
											"end": 5722,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5727,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5693,
											"end": 5711,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5690,
											"end": 5728,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5687,
											"end": 5689,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5687,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 5687,
											"end": 5689,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5770,
											"end": 5780,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 5765,
											"end": 5768,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 5761,
											"end": 5781,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 5758,
											"end": 5759,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5751,
											"end": 5782,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5805,
											"end": 5809,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 5802,
											"end": 5803,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5795,
											"end": 5810,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5833,
											"end": 5837,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5830,
											"end": 5831,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5823,
											"end": 5838,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5687,
											"end": 5689,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 5687,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5687,
											"end": 5689,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5529,
											"end": 5854,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5529,
											"end": 5854,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5529,
											"end": 5854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5529,
											"end": 5854,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 128,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 134,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 136,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 140,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MemeTokenBase/memetoken.sol": {
				"MemeTokenTest": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_liquidityWallet",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_treasuryWallet",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEAD",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INITIAL_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ZERO",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "burnRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidityFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidityWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sellFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_liquidityFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_treasuryFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_sellFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_burnRate",
									"type": "uint256"
								}
							],
							"name": "setFees",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasuryFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasuryWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MemeTokenBase/memetoken.sol\":173:2758  contract MemeTokenTest is ERC20, Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/MemeTokenBase/memetoken.sol\":604:606  25 */\n  0x19\n    /* \"contracts/MemeTokenBase/memetoken.sol\":574:606  uint256 public liquidityFee = 25 */\n  0x08\n  sstore\n    /* \"contracts/MemeTokenBase/memetoken.sol\":651:653  50 */\n  0x32\n    /* \"contracts/MemeTokenBase/memetoken.sol\":622:653  uint256 public treasuryFee = 50 */\n  0x09\n  sstore\n    /* \"contracts/MemeTokenBase/memetoken.sol\":693:694  5 */\n  0x05\n    /* \"contracts/MemeTokenBase/memetoken.sol\":668:694  uint256 public sellFee = 5 */\n  0x0a\n  sstore\n    /* \"contracts/MemeTokenBase/memetoken.sol\":736:738  20 */\n  0x14\n    /* \"contracts/MemeTokenBase/memetoken.sol\":710:738  uint256 public burnRate = 20 */\n  0x0b\n  sstore\n    /* \"contracts/MemeTokenBase/memetoken.sol\":756:1014  constructor(address _liquidityWallet, address _treasuryWallet) ERC20(\"[TEST] Deflationary Meme Token]\", \"DMT02\") {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  dup3\n  mstore\n  0x1f\n  dup2\n  mstore\n  0x5b544553545d204465666c6174696f6e617279204d656d6520546f6b656e5d00\n  0x20\n  dup1\n  dup4\n  add\n  swap2\n  dup3\n  mstore\n  dup4\n  mload\n  dup1\n  dup6\n  add\n  swap1\n  swap5\n  mstore\n  0x05\n  dup5\n  mstore\n  shl(0xd9, 0x2226aa1819)\n  swap1\n  dup5\n  add\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  dup2\n  mload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  swap2\n  swap3\n  swap2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  tag_8\n  swap2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2051  _name */\n  0x03\n  swap2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  dup1\n  mload\n  tag_10\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  0x04\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_14)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_12:\n    /* \"contracts/MemeTokenBase/memetoken.sol\":880:895  liquidityWallet */\n  0x06\n    /* \"contracts/MemeTokenBase/memetoken.sol\":880:914  liquidityWallet = _liquidityWallet */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  dup1\n  dup6\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap3\n  dup4\n  and\n  or\n  swap3\n  dup4\n  swap1\n  sstore\n    /* \"contracts/MemeTokenBase/memetoken.sol\":925:939  treasuryWallet */\n  0x07\n    /* \"contracts/MemeTokenBase/memetoken.sol\":925:957  treasuryWallet = _treasuryWallet */\n  dup1\n  sload\n  dup6\n  dup4\n  and\n  swap4\n  and\n  swap3\n  swap1\n  swap3\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/MemeTokenBase/memetoken.sol\":968:1006  _mint(liquidityWallet, INITIAL_SUPPLY) */\n  tag_17\n  swap2\n    /* \"contracts/MemeTokenBase/memetoken.sol\":974:989  liquidityWallet */\n  and\n    /* \"contracts/MemeTokenBase/memetoken.sol\":503:526  1000000000 * (10 ** 18) */\n  0x033b2e3c9fd0803ce8000000\n    /* \"contracts/MemeTokenBase/memetoken.sol\":968:973  _mint */\n  tag_18\n    /* \"contracts/MemeTokenBase/memetoken.sol\":968:1006  _mint(liquidityWallet, INITIAL_SUPPLY) */\n  jump\t// in\ntag_17:\n    /* \"contracts/MemeTokenBase/memetoken.sol\":756:1014  constructor(address _liquidityWallet, address _treasuryWallet) ERC20(\"[TEST] Deflationary Meme Token]\", \"DMT02\") {\r... */\n  pop\n  pop\n    /* \"contracts/MemeTokenBase/memetoken.sol\":173:2758  contract MemeTokenTest is ERC20, Ownable {\r... */\n  jump(tag_47)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8520:9055  function _mint(address account, uint256 amount) internal virtual {... */\ntag_18:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8603:8624  account != address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_23\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":706:708   */\n  0x20\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":688:709   */\n  mstore\n    /* \"#utility.yul\":745:747   */\n  0x1f\n    /* \"#utility.yul\":725:743   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":718:748   */\n  mstore\n    /* \"#utility.yul\":784:817   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":764:782   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":757:818   */\n  mstore\n    /* \"#utility.yul\":835:853   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_23:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8747:8753  amount */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8731:8743  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8731:8753  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_28\n  swap2\n  swap1\n  tag_29\n  jump\t// in\ntag_28:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8899:8917  _balances[account] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8899:8908  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8899:8917  _balances[account] */\n  dup2\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8899:8927  _balances[account] += amount */\n  dup1\n  sload\n  dup7\n  add\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n  mload\n    /* \"#utility.yul\":1010:1035   */\n  dup5\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap2\n    /* \"#utility.yul\":983:1001   */\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8520:9055  function _mint(address account, uint256 amount) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/MemeTokenBase/memetoken.sol\":173:2758  contract MemeTokenTest is ERC20, Ownable {\r... */\ntag_9:\n  dup3\n  dup1\n  sload\n  tag_36\n  swap1\n  tag_37\n  jump\t// in\ntag_36:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_39\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_42)\ntag_39:\n  dup3\n  0x1f\n  lt\n  tag_40\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_42)\ntag_40:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_42\n  jumpi\n  swap2\n  dup3\n  add\ntag_41:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_42\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_41)\ntag_42:\n  pop\n  tag_43\n  swap3\n  swap2\n  pop\n  tag_44\n  jump\t// in\ntag_43:\n  pop\n  swap1\n  jump\t// out\ntag_44:\ntag_45:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_43\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_45)\n    /* \"#utility.yul\":14:191   */\ntag_48:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:117   */\n  tag_50\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:117   */\ntag_50:\n    /* \"#utility.yul\":74:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:499   */\ntag_3:\n  0x00\n  dup1\n    /* \"#utility.yul\":336:338   */\n  0x40\n    /* \"#utility.yul\":324:333   */\n  dup4\n    /* \"#utility.yul\":315:322   */\n  dup6\n    /* \"#utility.yul\":311:334   */\n  sub\n    /* \"#utility.yul\":307:339   */\n  slt\n    /* \"#utility.yul\":304:306   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":357:363   */\n  dup2\n    /* \"#utility.yul\":349:355   */\n  dup3\n    /* \"#utility.yul\":342:364   */\n  revert\n    /* \"#utility.yul\":304:306   */\ntag_52:\n    /* \"#utility.yul\":385:425   */\n  tag_53\n    /* \"#utility.yul\":415:424   */\n  dup4\n    /* \"#utility.yul\":385:425   */\n  tag_48\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":375:425   */\n  swap2\n  pop\n    /* \"#utility.yul\":444:493   */\n  tag_54\n    /* \"#utility.yul\":489:491   */\n  0x20\n    /* \"#utility.yul\":478:487   */\n  dup5\n    /* \"#utility.yul\":474:492   */\n  add\n    /* \"#utility.yul\":444:493   */\n  tag_48\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":434:493   */\n  swap1\n  pop\n    /* \"#utility.yul\":294:499   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1046:1275   */\ntag_29:\n  0x00\n    /* \"#utility.yul\":1117:1118   */\n  dup3\n    /* \"#utility.yul\":1113:1119   */\n  not\n    /* \"#utility.yul\":1110:1111   */\n  dup3\n    /* \"#utility.yul\":1107:1120   */\n  gt\n    /* \"#utility.yul\":1104:1106   */\n  iszero\n  tag_58\n  jumpi\n  shl(0xe0, 0x4e487b71)\n    /* \"#utility.yul\":1143:1176   */\n  dup2\n  mstore\n    /* \"#utility.yul\":1199:1203   */\n  0x11\n    /* \"#utility.yul\":1196:1197   */\n  0x04\n    /* \"#utility.yul\":1189:1204   */\n  mstore\n    /* \"#utility.yul\":1229:1233   */\n  0x24\n    /* \"#utility.yul\":1150:1153   */\n  dup2\n    /* \"#utility.yul\":1217:1234   */\n  revert\n    /* \"#utility.yul\":1104:1106   */\ntag_58:\n  pop\n    /* \"#utility.yul\":1260:1269   */\n  add\n  swap1\n    /* \"#utility.yul\":1094:1275   */\n  jump\t// out\n    /* \"#utility.yul\":1280:1660   */\ntag_37:\n    /* \"#utility.yul\":1365:1366   */\n  0x02\n    /* \"#utility.yul\":1355:1367   */\n  dup2\n  div\n    /* \"#utility.yul\":1412:1413   */\n  0x01\n    /* \"#utility.yul\":1402:1414   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1423:1425   */\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1477:1481   */\n  0x7f\n    /* \"#utility.yul\":1469:1475   */\n  dup3\n    /* \"#utility.yul\":1465:1482   */\n  and\n    /* \"#utility.yul\":1455:1482   */\n  swap2\n  pop\n    /* \"#utility.yul\":1423:1425   */\ntag_60:\n    /* \"#utility.yul\":1530:1532   */\n  0x20\n    /* \"#utility.yul\":1522:1528   */\n  dup3\n    /* \"#utility.yul\":1519:1533   */\n  lt\n    /* \"#utility.yul\":1499:1517   */\n  dup2\n    /* \"#utility.yul\":1496:1534   */\n  eq\n    /* \"#utility.yul\":1493:1495   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":1576:1586   */\n  0x4e487b71\n    /* \"#utility.yul\":1571:1574   */\n  0xe0\n    /* \"#utility.yul\":1567:1587   */\n  shl\n    /* \"#utility.yul\":1564:1565   */\n  0x00\n    /* \"#utility.yul\":1557:1588   */\n  mstore\n    /* \"#utility.yul\":1611:1615   */\n  0x22\n    /* \"#utility.yul\":1608:1609   */\n  0x04\n    /* \"#utility.yul\":1601:1616   */\n  mstore\n    /* \"#utility.yul\":1639:1643   */\n  0x24\n    /* \"#utility.yul\":1636:1637   */\n  0x00\n    /* \"#utility.yul\":1629:1644   */\n  revert\n    /* \"#utility.yul\":1493:1495   */\ntag_61:\n  pop\n    /* \"#utility.yul\":1335:1660   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_47:\n    /* \"contracts/MemeTokenBase/memetoken.sol\":173:2758  contract MemeTokenTest is ERC20, Ownable {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MemeTokenBase/memetoken.sol\":173:2758  contract MemeTokenTest is ERC20, Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xbed99850\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xcc32d176\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xd4698016\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x70a08231\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x98118cb4\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x2ff2e9dc\n      gt\n      tag_29\n      jumpi\n      dup1\n      0x2ff2e9dc\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x4626402b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x58fa63ca\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x6fcba377\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x03fd2a45\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2b14ca56\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/MemeTokenBase/memetoken.sol\":300:373  address public constant DEAD = 0x000000000000000000000000000000000000dEaD */\n    tag_3:\n      tag_30\n        /* \"contracts/MemeTokenBase/memetoken.sol\":331:373  0x000000000000000000000000000000000000dEaD */\n      0xdead\n        /* \"contracts/MemeTokenBase/memetoken.sol\":300:373  address public constant DEAD = 0x000000000000000000000000000000000000dEaD */\n      dup2\n      jump\n    tag_30:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1844:1876   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1826:1877   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1814:1816   */\n      0x20\n        /* \"#utility.yul\":1799:1817   */\n      add\n        /* \"contracts/MemeTokenBase/memetoken.sol\":300:373  address public constant DEAD = 0x000000000000000000000000000000000000dEaD */\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_5:\n      tag_38\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n        /* \"#utility.yul\":2053:2067   */\n      swap1\n      iszero\n        /* \"#utility.yul\":2046:2068   */\n      iszero\n        /* \"#utility.yul\":2028:2069   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2016:2018   */\n      0x20\n        /* \"#utility.yul\":2001:2019   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_32\n        /* \"#utility.yul\":1983:2075   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_6:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3342:3354  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_44:\n      mload(0x40)\n        /* \"#utility.yul\":7196:7221   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":7184:7186   */\n      0x20\n        /* \"#utility.yul\":7169:7187   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_32\n        /* \"#utility.yul\":7151:7227   */\n      jump\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1207:1412  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\r... */\n    tag_7:\n      tag_38\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n        /* \"contracts/MemeTokenBase/memetoken.sol\":668:694  uint256 public sellFee = 5 */\n    tag_8:\n      tag_44\n      sload(0x0a)\n      dup2\n      jump\n        /* \"contracts/MemeTokenBase/memetoken.sol\":462:526  uint256 public constant INITIAL_SUPPLY = 1000000000 * (10 ** 18) */\n    tag_9:\n      tag_44\n        /* \"contracts/MemeTokenBase/memetoken.sol\":503:526  1000000000 * (10 ** 18) */\n      0x033b2e3c9fd0803ce8000000\n        /* \"contracts/MemeTokenBase/memetoken.sol\":462:526  uint256 public constant INITIAL_SUPPLY = 1000000000 * (10 ** 18) */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n    tag_10:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3186:3188  18 */\n      0x12\n        /* \"#utility.yul\":7374:7410   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7362:7364   */\n      0x20\n        /* \"#utility.yul\":7347:7365   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n      tag_32\n        /* \"#utility.yul\":7329:7416   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_38\n      tag_64\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n        /* \"contracts/MemeTokenBase/memetoken.sol\":258:287  address public treasuryWallet */\n    tag_12:\n      sload(0x07)\n      tag_30\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/MemeTokenBase/memetoken.sol\":380:453  address public constant ZERO = 0x0000000000000000000000000000000000000000 */\n    tag_13:\n      tag_30\n        /* \"contracts/MemeTokenBase/memetoken.sol\":411:453  0x0000000000000000000000000000000000000000 */\n      0x00\n        /* \"contracts/MemeTokenBase/memetoken.sol\":380:453  address public constant ZERO = 0x0000000000000000000000000000000000000000 */\n      dup2\n      jump\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2493:2755  function setFees(uint256 _liquidityFee, uint256 _treasuryFee, uint256 _sellFee, uint256 _burnRate) external onlyOwner {\r... */\n    tag_14:\n      tag_73\n      tag_74\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_15:\n      tag_44\n      tag_78\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_16:\n      tag_73\n      tag_83\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      jump(tag_30)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_18:\n      tag_34\n      tag_88\n      jump\t// in\n        /* \"contracts/MemeTokenBase/memetoken.sol\":574:606  uint256 public liquidityFee = 25 */\n    tag_19:\n      tag_44\n      sload(0x08)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_20:\n      tag_38\n      tag_94\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1022:1199  function transfer(address recipient, uint256 amount) public override returns (bool) {\r... */\n    tag_21:\n      tag_38\n      tag_98\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n        /* \"contracts/MemeTokenBase/memetoken.sol\":710:738  uint256 public burnRate = 20 */\n    tag_22:\n      tag_44\n      sload(0x0b)\n      dup2\n      jump\n        /* \"contracts/MemeTokenBase/memetoken.sol\":622:653  uint256 public treasuryFee = 50 */\n    tag_23:\n      tag_44\n      sload(0x09)\n      dup2\n      jump\n        /* \"contracts/MemeTokenBase/memetoken.sol\":221:251  address public liquidityWallet */\n    tag_24:\n      sload(0x06)\n      tag_30\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_25:\n      tag_44\n      tag_111\n      calldatasize\n      0x04\n      tag_112\n      jump\t// in\n    tag_111:\n      tag_113\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_26:\n      tag_73\n      tag_116\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_116:\n      tag_117\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2212:2225  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2244:2249  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2237:2249  return _name */\n      dup1\n      sload\n      tag_119\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_121\n      swap1\n      tag_120\n      jump\t// in\n    tag_121:\n      dup1\n      iszero\n      tag_122\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_123\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_122)\n    tag_123:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_124:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_124\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_122:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4527:4531  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      tag_128\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4597:4604  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4606:4612  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4589  _approve */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_128:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4630:4634  true */\n      0x01\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1207:1412  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\r... */\n    tag_51:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1305:1309  bool */\n      0x00\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1329:1404  super.transferFrom(sender, recipient, applyFees(sender, recipient, amount)) */\n      tag_132\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1348:1354  sender */\n      dup5\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1356:1365  recipient */\n      dup5\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1367:1403  applyFees(sender, recipient, amount) */\n      tag_133\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1377:1383  sender */\n      dup8\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1385:1394  recipient */\n      dup8\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1396:1402  amount */\n      dup8\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1367:1376  applyFees */\n      tag_134\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1367:1403  applyFees(sender, recipient, amount) */\n      jump\t// in\n    tag_133:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1329:1347  super.transferFrom */\n      tag_135\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1329:1404  super.transferFrom(sender, recipient, applyFees(sender, recipient, amount)) */\n      jump\t// in\n    tag_132:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1322:1404  return super.transferFrom(sender, recipient, applyFees(sender, recipient, amount)) */\n      swap1\n      pop\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1207:1412  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\r... */\n    tag_131:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5942:5946  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_128\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6049:6059  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      tag_140\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6030  allowance */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6059  allowance(owner, spender) + addedValue */\n      tag_141\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6004  _approve */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2493:2755  function setFees(uint256 _liquidityFee, uint256 _treasuryFee, uint256 _sellFee, uint256 _burnRate) external onlyOwner {\r... */\n    tag_76:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_144:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2622:2634  liquidityFee */\n      0x08\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2622:2650  liquidityFee = _liquidityFee */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2661:2672  treasuryFee */\n      0x09\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2661:2687  treasuryFee = _treasuryFee */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2698:2705  sellFee */\n      0x0a\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2698:2716  sellFee = _sellFee */\n      sstore\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2727:2735  burnRate */\n      0x0b\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2727:2747  burnRate = _burnRate */\n      sstore\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2493:2755  function setFees(uint256 _liquidityFee, uint256 _treasuryFee, uint256 _sellFee, uint256 _burnRate) external onlyOwner {\r... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_80:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3493:3500  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_147:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1915:1916  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1906  _transferOwnership */\n      tag_152\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2425:2438  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2457:2464  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2450:2464  return _symbol */\n      dup1\n      sload\n      tag_119\n      swap1\n      tag_120\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6668:6672  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6668:6672  bool */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      tag_162\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6773  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6758  allowance */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6722:6774  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6812:6827  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6792:6808  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6792:6827  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6846:6848   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6828:6849   */\n      mstore\n        /* \"#utility.yul\":6885:6887   */\n      0x25\n        /* \"#utility.yul\":6865:6883   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6858:6888   */\n      mstore\n        /* \"#utility.yul\":6924:6958   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":6904:6922   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6897:6959   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":6975:6993   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6968:7003   */\n      mstore\n        /* \"#utility.yul\":7020:7039   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6912:6917  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6919:6926  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6947:6962  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6928:6944  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6928:6962  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6911  _approve */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_166:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6991:6995  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1022:1199  function transfer(address recipient, uint256 amount) public override returns (bool) {\r... */\n    tag_99:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1100:1104  bool */\n      0x00\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1124:1191  super.transfer(recipient, applyFees(msg.sender, recipient, amount)) */\n      tag_131\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1139:1148  recipient */\n      dup4\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1150:1190  applyFees(msg.sender, recipient, amount) */\n      tag_169\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1160:1170  msg.sender */\n      caller\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1172:1181  recipient */\n      dup7\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1183:1189  amount */\n      dup7\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1150:1159  applyFees */\n      tag_134\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1150:1190  applyFees(msg.sender, recipient, amount) */\n      jump\t// in\n    tag_169:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1124:1138  super.transfer */\n      tag_170\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1124:1191  super.transfer(recipient, applyFees(msg.sender, recipient, amount)) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_113:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4076:4083  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4113  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4129  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_173:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3697:3699   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3679:3700   */\n      mstore\n        /* \"#utility.yul\":3736:3738   */\n      0x26\n        /* \"#utility.yul\":3716:3734   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3709:3739   */\n      mstore\n        /* \"#utility.yul\":3775:3809   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":3755:3773   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3748:3810   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":3826:3844   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3819:3855   */\n      mstore\n        /* \"#utility.yul\":3872:3891   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_164\n        /* \"#utility.yul\":3669:3897   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_175:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      tag_178\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2256:2264  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2255  _transferOwnership */\n      tag_152\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_129:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10577  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6441:6443   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6423:6444   */\n      mstore\n        /* \"#utility.yul\":6480:6482   */\n      0x24\n        /* \"#utility.yul\":6460:6478   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":6453:6483   */\n      mstore\n        /* \"#utility.yul\":6519:6553   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":6499:6517   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6492:6554   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":6570:6588   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6563:6597   */\n      mstore\n        /* \"#utility.yul\":6614:6633   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_164\n        /* \"#utility.yul\":6413:6639   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_181:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10657  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4104:4106   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4086:4107   */\n      mstore\n        /* \"#utility.yul\":4143:4145   */\n      0x22\n        /* \"#utility.yul\":4123:4141   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4116:4146   */\n      mstore\n        /* \"#utility.yul\":4182:4216   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4162:4180   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4155:4217   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4233:4251   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4226:4258   */\n      mstore\n        /* \"#utility.yul\":4275:4294   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_164\n        /* \"#utility.yul\":4076:4300   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_184:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10718  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10734  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10743  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":7196:7221   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":7169:7187   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1420:2485  function applyFees(address sender, address recipient, uint256 amount) internal returns (uint256) {\r... */\n    tag_134:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1508:1515  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1532:1549  recipient == DEAD */\n      dup4\n      and\n        /* \"contracts/MemeTokenBase/memetoken.sol\":331:373  0x000000000000000000000000000000000000dEaD */\n      0xdead\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1532:1549  recipient == DEAD */\n      eq\n      dup1\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1532:1570  recipient == DEAD || recipient == ZERO */\n      tag_189\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1553:1570  recipient == ZERO */\n      dup4\n      and\n      iszero\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1532:1570  recipient == DEAD || recipient == ZERO */\n    tag_189:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1532:1599  recipient == DEAD || recipient == ZERO || sender == liquidityWallet */\n      dup1\n      tag_190\n      jumpi\n      pop\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1584:1599  liquidityWallet */\n      sload(0x06)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1574:1599  sender == liquidityWallet */\n      dup6\n      dup2\n      and\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1584:1599  liquidityWallet */\n      swap2\n      and\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1574:1599  sender == liquidityWallet */\n      eq\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1532:1599  recipient == DEAD || recipient == ZERO || sender == liquidityWallet */\n    tag_190:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1532:1627  recipient == DEAD || recipient == ZERO || sender == liquidityWallet || sender == treasuryWallet */\n      dup1\n      tag_191\n      jumpi\n      pop\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1613:1627  treasuryWallet */\n      sload(0x07)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1603:1627  sender == treasuryWallet */\n      dup6\n      dup2\n      and\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1613:1627  treasuryWallet */\n      swap2\n      and\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1603:1627  sender == treasuryWallet */\n      eq\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1532:1627  recipient == DEAD || recipient == ZERO || sender == liquidityWallet || sender == treasuryWallet */\n    tag_191:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1528:1669  if (recipient == DEAD || recipient == ZERO || sender == liquidityWallet || sender == treasuryWallet) {\r... */\n      iszero\n      tag_192\n      jumpi\n      pop\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1651:1657  amount */\n      dup1\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1644:1657  return amount */\n      jump(tag_131)\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1528:1669  if (recipient == DEAD || recipient == ZERO || sender == liquidityWallet || sender == treasuryWallet) {\r... */\n    tag_192:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1681:1707  uint256 liquidityFeeAmount */\n      0x00\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1734:1739  10000 */\n      0x2710\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1719:1731  liquidityFee */\n      sload(0x08)\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1710:1716  amount */\n      dup5\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1710:1731  amount * liquidityFee */\n      tag_193\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1710:1739  amount * liquidityFee / 10000 */\n      tag_195\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1681:1739  uint256 liquidityFeeAmount = amount * liquidityFee / 10000 */\n      swap1\n      pop\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1750:1775  uint256 treasuryFeeAmount */\n      0x00\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1801:1806  10000 */\n      0x2710\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1787:1798  treasuryFee */\n      sload(0x09)\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1778:1784  amount */\n      dup6\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1778:1798  amount * treasuryFee */\n      tag_197\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_197:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1778:1806  amount * treasuryFee / 10000 */\n      tag_198\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_198:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1750:1806  uint256 treasuryFeeAmount = amount * treasuryFee / 10000 */\n      swap1\n      pop\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1817:1835  uint256 burnAmount */\n      0x00\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1858:1863  10000 */\n      0x2710\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1847:1855  burnRate */\n      sload(0x0b)\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1838:1844  amount */\n      dup7\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1838:1855  amount * burnRate */\n      tag_199\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_199:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1838:1863  amount * burnRate / 10000 */\n      tag_200\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_200:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1893:1908  liquidityWallet */\n      sload(0x06)\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1817:1863  uint256 burnAmount = amount * burnRate / 10000 */\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1880:1908  recipient != liquidityWallet */\n      dup8\n      dup2\n      and\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1893:1908  liquidityWallet */\n      swap2\n      and\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1880:1908  recipient != liquidityWallet */\n      eq\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1876:1988  if (recipient != liquidityWallet) {\r... */\n      tag_201\n      jumpi\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1940:1955  liquidityWallet */\n      sload(0x06)\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1925:1976  super.transfer(liquidityWallet, liquidityFeeAmount) */\n      tag_202\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1940:1955  liquidityWallet */\n      and\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1957:1975  liquidityFeeAmount */\n      dup5\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1925:1939  super.transfer */\n      tag_170\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1925:1976  super.transfer(liquidityWallet, liquidityFeeAmount) */\n      jump\t// in\n    tag_202:\n      pop\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1876:1988  if (recipient != liquidityWallet) {\r... */\n    tag_201:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2017:2031  treasuryWallet */\n      sload(0x07)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2004:2031  recipient != treasuryWallet */\n      dup8\n      dup2\n      and\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2017:2031  treasuryWallet */\n      swap2\n      and\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2004:2031  recipient != treasuryWallet */\n      eq\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2000:2109  if (recipient != treasuryWallet) {\r... */\n      tag_203\n      jumpi\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2063:2077  treasuryWallet */\n      sload(0x07)\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2048:2097  super.transfer(treasuryWallet, treasuryFeeAmount) */\n      tag_204\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2063:2077  treasuryWallet */\n      and\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2079:2096  treasuryFeeAmount */\n      dup4\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2048:2062  super.transfer */\n      tag_170\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2048:2097  super.transfer(treasuryWallet, treasuryFeeAmount) */\n      jump\t// in\n    tag_204:\n      pop\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2000:2109  if (recipient != treasuryWallet) {\r... */\n    tag_203:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2121:2146  _burn(sender, burnAmount) */\n      tag_205\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2127:2133  sender */\n      dup8\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2135:2145  burnAmount */\n      dup3\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2121:2126  _burn */\n      tag_206\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2121:2146  _burn(sender, burnAmount) */\n      jump\t// in\n    tag_205:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2209:2224  liquidityWallet */\n      sload(0x06)\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2159:2180  uint256 sellFeeAmount */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2199:2224  sender != liquidityWallet */\n      dup10\n      dup2\n      and\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2209:2224  liquidityWallet */\n      swap2\n      and\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2199:2224  sender != liquidityWallet */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2199:2252  sender != liquidityWallet && sender != treasuryWallet */\n      tag_207\n      jumpi\n      pop\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2238:2252  treasuryWallet */\n      sload(0x07)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2228:2252  sender != treasuryWallet */\n      dup10\n      dup2\n      and\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2238:2252  treasuryWallet */\n      swap2\n      and\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2228:2252  sender != treasuryWallet */\n      eq\n      iszero\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2199:2252  sender != liquidityWallet && sender != treasuryWallet */\n    tag_207:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2195:2382  if (sender != liquidityWallet && sender != treasuryWallet) {\r... */\n      iszero\n      tag_208\n      jumpi\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2304:2309  10000 */\n      0x2710\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2294:2301  sellFee */\n      sload(0x0a)\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2285:2291  amount */\n      dup8\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2285:2301  amount * sellFee */\n      tag_209\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_209:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2285:2309  amount * sellFee / 10000 */\n      tag_210\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_210:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2339:2354  liquidityWallet */\n      sload(0x06)\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2269:2309  sellFeeAmount = amount * sellFee / 10000 */\n      swap1\n      swap2\n      pop\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2324:2370  super.transfer(liquidityWallet, sellFeeAmount) */\n      tag_211\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2339:2354  liquidityWallet */\n      and\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2269:2309  sellFeeAmount = amount * sellFee / 10000 */\n      dup3\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2324:2338  super.transfer */\n      tag_170\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2324:2370  super.transfer(liquidityWallet, sellFeeAmount) */\n      jump\t// in\n    tag_211:\n      pop\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2195:2382  if (sender != liquidityWallet && sender != treasuryWallet) {\r... */\n    tag_208:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2464:2477  sellFeeAmount */\n      dup1\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2451:2461  burnAmount */\n      dup3\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2431:2448  treasuryFeeAmount */\n      dup5\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2401:2428  amount - liquidityFeeAmount */\n      tag_212\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2410:2428  liquidityFeeAmount */\n      dup8\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2401:2407  amount */\n      dup11\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2401:2428  amount - liquidityFeeAmount */\n      tag_213\n      jump\t// in\n    tag_212:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2401:2448  amount - liquidityFeeAmount - treasuryFeeAmount */\n      tag_214\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_214:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2401:2461  amount - liquidityFeeAmount - treasuryFeeAmount - burnAmount */\n      tag_215\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_215:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2401:2477  amount - liquidityFeeAmount - treasuryFeeAmount - burnAmount - sellFeeAmount */\n      tag_216\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_216:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2394:2477  return amount - liquidityFeeAmount - treasuryFeeAmount - burnAmount - sellFeeAmount */\n      swap9\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1420:2485  function applyFees(address sender, address recipient, uint256 amount) internal returns (uint256) {\r... */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5300:5304  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      tag_219\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5372:5376  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5387:5393  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5371  _spendAllowance */\n      tag_220\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5414:5418  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5420:5422  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5424:5430  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5413  _transfer */\n      tag_222\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_145:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5272:5274   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5254:5275   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5291:5309   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5284:5314   */\n      mstore\n        /* \"#utility.yul\":5350:5384   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":5330:5348   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5323:5385   */\n      mstore\n        /* \"#utility.yul\":5402:5420   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_164\n        /* \"#utility.yul\":5244:5426   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3819:3823  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      tag_128\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3890:3892  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3894:3900  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3882  _transfer */\n      tag_222\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9375:10034  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_206:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9458:9479  account != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9450:9517  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_234\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5633:5635   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9450:9517  require(account != address(0), \"ERC20: burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5615:5636   */\n      mstore\n        /* \"#utility.yul\":5672:5674   */\n      0x21\n        /* \"#utility.yul\":5652:5670   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5645:5675   */\n      mstore\n        /* \"#utility.yul\":5711:5745   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":5691:5709   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5684:5746   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":5762:5780   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5755:5786   */\n      mstore\n        /* \"#utility.yul\":5803:5822   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9450:9517  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_164\n        /* \"#utility.yul\":5605:5828   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9450:9517  require(account != address(0), \"ERC20: burn from the zero address\") */\n    tag_234:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9613:9631  _balances[account] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9588:9610  uint256 accountBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9613:9631  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9649:9673  accountBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9641:9712  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_239\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3294:3296   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9641:9712  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3276:3297   */\n      mstore\n        /* \"#utility.yul\":3333:3335   */\n      0x22\n        /* \"#utility.yul\":3313:3331   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3306:3336   */\n      mstore\n        /* \"#utility.yul\":3372:3406   */\n      0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e\n        /* \"#utility.yul\":3352:3370   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3345:3407   */\n      mstore\n      shl(0xf0, 0x6365)\n        /* \"#utility.yul\":3423:3441   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3416:3448   */\n      mstore\n        /* \"#utility.yul\":3465:3484   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9641:9712  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_164\n        /* \"#utility.yul\":3266:3490   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9641:9712  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n    tag_239:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9746:9764  _balances[account] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9746:9755  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9746:9764  _balances[account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9767:9790  accountBalance - amount */\n      dup7\n      dup7\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9746:9790  _balances[account] = accountBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9883:9895  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9883:9905  _totalSupply -= amount */\n      dup1\n      sload\n      dup8\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9931:9968  Transfer(account, address(0), amount) */\n      mload\n        /* \"#utility.yul\":7196:7221   */\n      dup6\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9746:9755  _balances */\n      swap2\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9746:9764  _balances[account] */\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9931:9968  Transfer(account, address(0), amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":7169:7187   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9931:9968  Transfer(account, address(0), amount) */\n      tag_187\n        /* \"#utility.yul\":7151:7227   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11178:11202  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      tag_246\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11215:11220  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11222:11229  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11214  allowance */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      jump\t// in\n    tag_246:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11178:11230  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11244:11260  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11244:11281  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11240:11483  if (currentAllowance != type(uint256).max) {... */\n      tag_251\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11325:11331  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11305:11321  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11305:11331  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_248\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4507:4509   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4489:4510   */\n      mstore\n        /* \"#utility.yul\":4546:4548   */\n      0x1d\n        /* \"#utility.yul\":4526:4544   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4519:4549   */\n      mstore\n        /* \"#utility.yul\":4585:4616   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4565:4583   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4558:4617   */\n      mstore\n        /* \"#utility.yul\":4634:4652   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_164\n        /* \"#utility.yul\":4479:4658   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      tag_251\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11416:11421  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11423:11430  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11451:11457  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11432:11448  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11432:11457  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11415  _approve */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7456:8244  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_222:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7552:7570  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_253\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6035:6037   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6017:6038   */\n      mstore\n        /* \"#utility.yul\":6074:6076   */\n      0x25\n        /* \"#utility.yul\":6054:6072   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6047:6077   */\n      mstore\n        /* \"#utility.yul\":6113:6147   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":6093:6111   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6086:6148   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":6164:6182   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6157:6192   */\n      mstore\n        /* \"#utility.yul\":6209:6228   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_164\n        /* \"#utility.yul\":6007:6234   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_253:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7630:7646  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_256\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2890:2892   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2872:2893   */\n      mstore\n        /* \"#utility.yul\":2929:2931   */\n      0x23\n        /* \"#utility.yul\":2909:2927   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2902:2932   */\n      mstore\n        /* \"#utility.yul\":2968:3002   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2948:2966   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2941:3003   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":3019:3037   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3012:3045   */\n      mstore\n        /* \"#utility.yul\":3062:3081   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_164\n        /* \"#utility.yul\":2862:3087   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_256:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7746:7765  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7801:7822  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_260\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4865:4867   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4847:4868   */\n      mstore\n        /* \"#utility.yul\":4904:4906   */\n      0x26\n        /* \"#utility.yul\":4884:4902   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4877:4907   */\n      mstore\n        /* \"#utility.yul\":4943:4977   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":4923:4941   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4916:4978   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":4994:5012   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4987:5023   */\n      mstore\n        /* \"#utility.yul\":5040:5059   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_164\n        /* \"#utility.yul\":4837:5065   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_260:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7908  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7917:7937  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7937  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8137  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":7196:7221   */\n      dup6\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap1\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":7169:7187   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8200:8237  _afterTokenTransfer(from, to, amount) */\n      tag_251\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9375:10034  function _burn(address account, uint256 amount) internal virtual {... */\n      jump\n        /* \"#utility.yul\":14:187   */\n    tag_268:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:113   */\n      tag_147\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":192:388   */\n    tag_79:\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:274   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":325:331   */\n      dup1\n        /* \"#utility.yul\":317:323   */\n      dup2\n        /* \"#utility.yul\":310:332   */\n      revert\n        /* \"#utility.yul\":272:274   */\n    tag_272:\n        /* \"#utility.yul\":353:382   */\n      tag_131\n        /* \"#utility.yul\":372:381   */\n      dup3\n        /* \"#utility.yul\":353:382   */\n      tag_268\n      jump\t// in\n        /* \"#utility.yul\":393:663   */\n    tag_112:\n      0x00\n      dup1\n        /* \"#utility.yul\":522:524   */\n      0x40\n        /* \"#utility.yul\":510:519   */\n      dup4\n        /* \"#utility.yul\":501:508   */\n      dup6\n        /* \"#utility.yul\":497:520   */\n      sub\n        /* \"#utility.yul\":493:525   */\n      slt\n        /* \"#utility.yul\":490:492   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":543:549   */\n      dup1\n        /* \"#utility.yul\":535:541   */\n      dup2\n        /* \"#utility.yul\":528:550   */\n      revert\n        /* \"#utility.yul\":490:492   */\n    tag_275:\n        /* \"#utility.yul\":571:600   */\n      tag_276\n        /* \"#utility.yul\":590:599   */\n      dup4\n        /* \"#utility.yul\":571:600   */\n      tag_268\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":561:600   */\n      swap2\n      pop\n        /* \"#utility.yul\":619:657   */\n      tag_277\n        /* \"#utility.yul\":653:655   */\n      0x20\n        /* \"#utility.yul\":642:651   */\n      dup5\n        /* \"#utility.yul\":638:656   */\n      add\n        /* \"#utility.yul\":619:657   */\n      tag_268\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":609:657   */\n      swap1\n      pop\n        /* \"#utility.yul\":480:663   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":668:1006   */\n    tag_50:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":814:816   */\n      0x60\n        /* \"#utility.yul\":802:811   */\n      dup5\n        /* \"#utility.yul\":793:800   */\n      dup7\n        /* \"#utility.yul\":789:812   */\n      sub\n        /* \"#utility.yul\":785:817   */\n      slt\n        /* \"#utility.yul\":782:784   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":835:841   */\n      dup1\n        /* \"#utility.yul\":827:833   */\n      dup2\n        /* \"#utility.yul\":820:842   */\n      revert\n        /* \"#utility.yul\":782:784   */\n    tag_279:\n        /* \"#utility.yul\":863:892   */\n      tag_280\n        /* \"#utility.yul\":882:891   */\n      dup5\n        /* \"#utility.yul\":863:892   */\n      tag_268\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":853:892   */\n      swap3\n      pop\n        /* \"#utility.yul\":911:949   */\n      tag_281\n        /* \"#utility.yul\":945:947   */\n      0x20\n        /* \"#utility.yul\":934:943   */\n      dup6\n        /* \"#utility.yul\":930:948   */\n      add\n        /* \"#utility.yul\":911:949   */\n      tag_268\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":901:949   */\n      swap2\n      pop\n        /* \"#utility.yul\":996:998   */\n      0x40\n        /* \"#utility.yul\":985:994   */\n      dup5\n        /* \"#utility.yul\":981:999   */\n      add\n        /* \"#utility.yul\":968:1000   */\n      calldataload\n        /* \"#utility.yul\":958:1000   */\n      swap1\n      pop\n        /* \"#utility.yul\":772:1006   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1011:1275   */\n    tag_40:\n      0x00\n      dup1\n        /* \"#utility.yul\":1140:1142   */\n      0x40\n        /* \"#utility.yul\":1128:1137   */\n      dup4\n        /* \"#utility.yul\":1119:1126   */\n      dup6\n        /* \"#utility.yul\":1115:1138   */\n      sub\n        /* \"#utility.yul\":1111:1143   */\n      slt\n        /* \"#utility.yul\":1108:1110   */\n      iszero\n      tag_283\n      jumpi\n        /* \"#utility.yul\":1161:1167   */\n      dup2\n        /* \"#utility.yul\":1153:1159   */\n      dup3\n        /* \"#utility.yul\":1146:1168   */\n      revert\n        /* \"#utility.yul\":1108:1110   */\n    tag_283:\n        /* \"#utility.yul\":1189:1218   */\n      tag_284\n        /* \"#utility.yul\":1208:1217   */\n      dup4\n        /* \"#utility.yul\":1189:1218   */\n      tag_268\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":1179:1218   */\n      swap5\n        /* \"#utility.yul\":1265:1267   */\n      0x20\n        /* \"#utility.yul\":1250:1268   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1237:1269   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1098:1275   */\n      jump\t// out\n        /* \"#utility.yul\":1280:1675   */\n    tag_75:\n      0x00\n      dup1\n      0x00\n      dup1\n        /* \"#utility.yul\":1443:1446   */\n      0x80\n        /* \"#utility.yul\":1431:1440   */\n      dup6\n        /* \"#utility.yul\":1422:1429   */\n      dup8\n        /* \"#utility.yul\":1418:1441   */\n      sub\n        /* \"#utility.yul\":1414:1447   */\n      slt\n        /* \"#utility.yul\":1411:1413   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":1465:1471   */\n      dup1\n        /* \"#utility.yul\":1457:1463   */\n      dup2\n        /* \"#utility.yul\":1450:1472   */\n      revert\n        /* \"#utility.yul\":1411:1413   */\n    tag_286:\n      pop\n      pop\n        /* \"#utility.yul\":1493:1516   */\n      dup3\n      calldataload\n      swap5\n        /* \"#utility.yul\":1563:1565   */\n      0x20\n        /* \"#utility.yul\":1548:1566   */\n      dup5\n      add\n        /* \"#utility.yul\":1535:1567   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":1614:1616   */\n      0x40\n        /* \"#utility.yul\":1599:1617   */\n      dup5\n      add\n        /* \"#utility.yul\":1586:1618   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":1665:1667   */\n      0x60\n        /* \"#utility.yul\":1650:1668   */\n      add\n        /* \"#utility.yul\":1637:1669   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":1401:1675   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2080:2683   */\n    tag_37:\n      0x00\n        /* \"#utility.yul\":2221:2223   */\n      0x20\n        /* \"#utility.yul\":2250:2252   */\n      dup1\n        /* \"#utility.yul\":2239:2248   */\n      dup4\n        /* \"#utility.yul\":2232:2253   */\n      mstore\n        /* \"#utility.yul\":2282:2288   */\n      dup4\n        /* \"#utility.yul\":2276:2289   */\n      mload\n        /* \"#utility.yul\":2325:2331   */\n      dup1\n        /* \"#utility.yul\":2320:2322   */\n      dup3\n        /* \"#utility.yul\":2309:2318   */\n      dup6\n        /* \"#utility.yul\":2305:2323   */\n      add\n        /* \"#utility.yul\":2298:2332   */\n      mstore\n        /* \"#utility.yul\":2350:2354   */\n      dup3\n        /* \"#utility.yul\":2363:2503   */\n    tag_290:\n        /* \"#utility.yul\":2377:2383   */\n      dup2\n        /* \"#utility.yul\":2374:2375   */\n      dup2\n        /* \"#utility.yul\":2371:2384   */\n      lt\n        /* \"#utility.yul\":2363:2503   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":2472:2486   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":2468:2491   */\n      dup4\n      add\n        /* \"#utility.yul\":2462:2492   */\n      mload\n        /* \"#utility.yul\":2438:2455   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":2457:2459   */\n      0x40\n        /* \"#utility.yul\":2434:2460   */\n      add\n        /* \"#utility.yul\":2427:2493   */\n      mstore\n        /* \"#utility.yul\":2392:2402   */\n      dup3\n      add\n        /* \"#utility.yul\":2363:2503   */\n      jump(tag_290)\n    tag_292:\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2518:2519   */\n      dup2\n        /* \"#utility.yul\":2515:2528   */\n      gt\n        /* \"#utility.yul\":2512:2514   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":2591:2595   */\n      dup4\n        /* \"#utility.yul\":2586:2588   */\n      0x40\n        /* \"#utility.yul\":2577:2583   */\n      dup4\n        /* \"#utility.yul\":2566:2575   */\n      dup8\n        /* \"#utility.yul\":2562:2584   */\n      add\n        /* \"#utility.yul\":2558:2589   */\n      add\n        /* \"#utility.yul\":2551:2596   */\n      mstore\n        /* \"#utility.yul\":2512:2514   */\n    tag_293:\n      pop\n        /* \"#utility.yul\":2667:2669   */\n      0x1f\n        /* \"#utility.yul\":2646:2661   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2642:2671   */\n      and\n        /* \"#utility.yul\":2627:2672   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2674:2676   */\n      0x40\n        /* \"#utility.yul\":2623:2677   */\n      add\n      swap4\n        /* \"#utility.yul\":2201:2683   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7421:7549   */\n    tag_142:\n      0x00\n        /* \"#utility.yul\":7492:7493   */\n      dup3\n        /* \"#utility.yul\":7488:7494   */\n      not\n        /* \"#utility.yul\":7485:7486   */\n      dup3\n        /* \"#utility.yul\":7482:7495   */\n      gt\n        /* \"#utility.yul\":7479:7481   */\n      iszero\n      tag_309\n      jumpi\n        /* \"#utility.yul\":7498:7516   */\n      tag_309\n      tag_310\n      jump\t// in\n    tag_309:\n      pop\n        /* \"#utility.yul\":7534:7543   */\n      add\n      swap1\n        /* \"#utility.yul\":7469:7549   */\n      jump\t// out\n        /* \"#utility.yul\":7554:7771   */\n    tag_196:\n      0x00\n        /* \"#utility.yul\":7620:7621   */\n      dup3\n        /* \"#utility.yul\":7610:7612   */\n      tag_312\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":7645:7676   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7699:7703   */\n      0x12\n        /* \"#utility.yul\":7696:7697   */\n      0x04\n        /* \"#utility.yul\":7689:7704   */\n      mstore\n        /* \"#utility.yul\":7727:7731   */\n      0x24\n        /* \"#utility.yul\":7652:7653   */\n      dup2\n        /* \"#utility.yul\":7717:7732   */\n      revert\n        /* \"#utility.yul\":7610:7612   */\n    tag_312:\n      pop\n        /* \"#utility.yul\":7756:7765   */\n      div\n      swap1\n        /* \"#utility.yul\":7600:7771   */\n      jump\t// out\n        /* \"#utility.yul\":7776:7944   */\n    tag_194:\n      0x00\n        /* \"#utility.yul\":7882:7883   */\n      dup2\n        /* \"#utility.yul\":7878:7879   */\n      0x00\n        /* \"#utility.yul\":7874:7880   */\n      not\n        /* \"#utility.yul\":7870:7884   */\n      div\n        /* \"#utility.yul\":7867:7868   */\n      dup4\n        /* \"#utility.yul\":7864:7885   */\n      gt\n        /* \"#utility.yul\":7859:7860   */\n      dup3\n        /* \"#utility.yul\":7852:7861   */\n      iszero\n        /* \"#utility.yul\":7845:7862   */\n      iszero\n        /* \"#utility.yul\":7841:7886   */\n      and\n        /* \"#utility.yul\":7838:7840   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":7889:7907   */\n      tag_315\n      tag_310\n      jump\t// in\n    tag_315:\n      pop\n        /* \"#utility.yul\":7929:7938   */\n      mul\n      swap1\n        /* \"#utility.yul\":7828:7944   */\n      jump\t// out\n        /* \"#utility.yul\":7949:8074   */\n    tag_213:\n      0x00\n        /* \"#utility.yul\":8017:8018   */\n      dup3\n        /* \"#utility.yul\":8014:8015   */\n      dup3\n        /* \"#utility.yul\":8011:8019   */\n      lt\n        /* \"#utility.yul\":8008:8010   */\n      iszero\n      tag_318\n      jumpi\n        /* \"#utility.yul\":8022:8040   */\n      tag_318\n      tag_310\n      jump\t// in\n    tag_318:\n      pop\n        /* \"#utility.yul\":8059:8068   */\n      sub\n      swap1\n        /* \"#utility.yul\":7998:8074   */\n      jump\t// out\n        /* \"#utility.yul\":8079:8459   */\n    tag_120:\n        /* \"#utility.yul\":8164:8165   */\n      0x02\n        /* \"#utility.yul\":8154:8166   */\n      dup2\n      div\n        /* \"#utility.yul\":8211:8212   */\n      0x01\n        /* \"#utility.yul\":8201:8213   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":8222:8224   */\n      tag_320\n      jumpi\n        /* \"#utility.yul\":8276:8280   */\n      0x7f\n        /* \"#utility.yul\":8268:8274   */\n      dup3\n        /* \"#utility.yul\":8264:8281   */\n      and\n        /* \"#utility.yul\":8254:8281   */\n      swap2\n      pop\n        /* \"#utility.yul\":8222:8224   */\n    tag_320:\n        /* \"#utility.yul\":8329:8331   */\n      0x20\n        /* \"#utility.yul\":8321:8327   */\n      dup3\n        /* \"#utility.yul\":8318:8332   */\n      lt\n        /* \"#utility.yul\":8298:8316   */\n      dup2\n        /* \"#utility.yul\":8295:8333   */\n      eq\n        /* \"#utility.yul\":8292:8294   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":8375:8385   */\n      0x4e487b71\n        /* \"#utility.yul\":8370:8373   */\n      0xe0\n        /* \"#utility.yul\":8366:8386   */\n      shl\n        /* \"#utility.yul\":8363:8364   */\n      0x00\n        /* \"#utility.yul\":8356:8387   */\n      mstore\n        /* \"#utility.yul\":8410:8414   */\n      0x22\n        /* \"#utility.yul\":8407:8408   */\n      0x04\n        /* \"#utility.yul\":8400:8415   */\n      mstore\n        /* \"#utility.yul\":8438:8442   */\n      0x24\n        /* \"#utility.yul\":8435:8436   */\n      0x00\n        /* \"#utility.yul\":8428:8443   */\n      revert\n        /* \"#utility.yul\":8292:8294   */\n    tag_321:\n      pop\n        /* \"#utility.yul\":8134:8459   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8464:8591   */\n    tag_310:\n        /* \"#utility.yul\":8525:8535   */\n      0x4e487b71\n        /* \"#utility.yul\":8520:8523   */\n      0xe0\n        /* \"#utility.yul\":8516:8536   */\n      shl\n        /* \"#utility.yul\":8513:8514   */\n      0x00\n        /* \"#utility.yul\":8506:8537   */\n      mstore\n        /* \"#utility.yul\":8556:8560   */\n      0x11\n        /* \"#utility.yul\":8553:8554   */\n      0x04\n        /* \"#utility.yul\":8546:8561   */\n      mstore\n        /* \"#utility.yul\":8580:8584   */\n      0x24\n        /* \"#utility.yul\":8577:8578   */\n      0x00\n        /* \"#utility.yul\":8570:8585   */\n      revert\n\n    auxdata: 0xa2646970667358221220be0f5bc590489bac12bf62ba11b54632bb224570b8bb421f790bfb8cbb7497a464736f6c63430008020033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1662:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:117:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "154:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "159:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "163:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:50:6"
															},
															"nodeType": "YulIf",
															"src": "115:2:6"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:6",
														"type": ""
													}
												],
												"src": "14:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "294:205:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "340:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "349:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "357:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "342:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "342:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "342:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "315:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "324:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "311:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "311:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "336:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "307:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "307:32:6"
															},
															"nodeType": "YulIf",
															"src": "304:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "375:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "415:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "385:29:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "385:40:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "375:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "434:59:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "478:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "489:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "474:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "474:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "444:29:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "444:49:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "434:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "252:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "263:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "275:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "283:6:6",
														"type": ""
													}
												],
												"src": "196:303:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "678:181:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "695:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "706:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "688:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "688:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "688:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "729:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "740:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "725:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "725:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "745:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "718:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "718:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "718:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "768:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "779:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "764:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "764:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "784:33:6",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "757:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "757:61:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "757:61:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "827:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "839:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "850:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "835:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "827:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "655:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "669:4:6",
														"type": ""
													}
												],
												"src": "504:355:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "965:76:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "975:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "987:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "998:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "983:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "983:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "975:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1017:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1028:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1010:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1010:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1010:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "934:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "945:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "956:4:6",
														"type": ""
													}
												],
												"src": "864:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1094:181:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1129:115:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sum",
																					"nodeType": "YulIdentifier",
																					"src": "1150:3:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1159:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1164:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1155:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1155:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1143:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1143:33:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1143:33:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1196:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1199:4:6",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1189:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1189:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1189:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sum",
																					"nodeType": "YulIdentifier",
																					"src": "1224:3:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1229:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1217:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1217:17:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1217:17:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1110:1:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1117:1:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1113:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1107:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1107:13:6"
															},
															"nodeType": "YulIf",
															"src": "1104:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1253:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1264:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1267:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1260:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1260:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "1253:3:6"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1077:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1080:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "1086:3:6",
														"type": ""
													}
												],
												"src": "1046:229:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1335:325:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1345:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1359:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1365:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1355:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1355:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1376:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1406:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1412:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1402:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1402:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1380:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1453:31:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1455:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1469:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1477:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1465:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1465:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1455:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1433:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1426:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1426:26:6"
															},
															"nodeType": "YulIf",
															"src": "1423:2:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1543:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1564:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1571:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1576:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1567:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1567:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1557:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1557:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1557:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1608:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1611:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1601:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1601:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1601:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1636:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1639:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1629:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1629:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1629:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1499:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1522:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1530:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1519:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1519:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1496:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1496:38:6"
															},
															"nodeType": "YulIf",
															"src": "1493:2:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1315:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1324:6:6",
														"type": ""
													}
												],
												"src": "1280:380:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052601960085560326009556005600a556014600b553480156200002557600080fd5b50604051620012833803806200128383398101604081905262000048916200030d565b604080518082018252601f81527f5b544553545d204465666c6174696f6e617279204d656d6520546f6b656e5d006020808301918252835180850190945260058452642226aa181960d91b908401528151919291620000aa916003916200024a565b508051620000c09060049060208401906200024a565b505050620000dd620000d76200012e60201b60201c565b62000132565b600680546001600160a01b038085166001600160a01b03199283161792839055600780548583169316929092179091556200012691166b033b2e3c9fd0803ce800000062000184565b5050620003a6565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620001df5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620001f3919062000344565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b828054620002589062000369565b90600052602060002090601f0160209004810192826200027c5760008555620002c7565b82601f106200029757805160ff1916838001178555620002c7565b82800160010185558215620002c7579182015b82811115620002c7578251825591602001919060010190620002aa565b50620002d5929150620002d9565b5090565b5b80821115620002d55760008155600101620002da565b80516001600160a01b03811681146200030857600080fd5b919050565b6000806040838503121562000320578182fd5b6200032b83620002f0565b91506200033b60208401620002f0565b90509250929050565b600082198211156200036457634e487b7160e01b81526011600452602481fd5b500190565b6002810460018216806200037e57607f821691505b60208210811415620003a057634e487b7160e01b600052602260045260246000fd5b50919050565b610ecd80620003b66000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c806370a08231116100c3578063a9059cbb1161007c578063a9059cbb1461029e578063bed99850146102b1578063cc32d176146102ba578063d4698016146102c3578063dd62ed3e146102d6578063f2fde38b146102e957610158565b806370a082311461024e578063715018a6146102615780638da5cb5b1461026957806395d89b411461027a57806398118cb414610282578063a457c2d71461028b57610158565b80632ff2e9dc116101155780632ff2e9dc146101e9578063313ce567146101fc578063395093511461020b5780634626402b1461021e57806358fa63ca146102315780636fcba3771461023957610158565b806303fd2a451461015d57806306fdde0314610183578063095ea7b31461019857806318160ddd146101bb57806323b872dd146101cd5780632b14ca56146101e0575b600080fd5b61016661dead81565b6040516001600160a01b0390911681526020015b60405180910390f35b61018b6102fc565b60405161017a9190610d85565b6101ab6101a6366004610d2b565b61038e565b604051901515815260200161017a565b6002545b60405190815260200161017a565b6101ab6101db366004610cf0565b6103a6565b6101bf600a5481565b6101bf6b033b2e3c9fd0803ce800000081565b6040516012815260200161017a565b6101ab610219366004610d2b565b6103c7565b600754610166906001600160a01b031681565b610166600081565b61024c610247366004610d54565b6103e9565b005b6101bf61025c366004610ca4565b610405565b61024c610424565b6005546001600160a01b0316610166565b61018b610438565b6101bf60085481565b6101ab610299366004610d2b565b610447565b6101ab6102ac366004610d2b565b6104d2565b6101bf600b5481565b6101bf60095481565b600654610166906001600160a01b031681565b6101bf6102e4366004610cbe565b6104e8565b61024c6102f7366004610ca4565b610513565b60606003805461030b90610e46565b80601f016020809104026020016040519081016040528092919081815260200182805461033790610e46565b80156103845780601f1061035957610100808354040283529160200191610384565b820191906000526020600020905b81548152906001019060200180831161036757829003601f168201915b5050505050905090565b60003361039c81858561058c565b5060019392505050565b60006103bd84846103b88787876106b1565b610872565b90505b9392505050565b60003361039c8185856103da83836104e8565b6103e49190610dd8565b61058c565b6103f161088b565b600893909355600991909155600a55600b55565b6001600160a01b0381166000908152602081905260409020545b919050565b61042c61088b565b61043660006108e5565b565b60606004805461030b90610e46565b6000338161045582866104e8565b9050838110156104ba5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6104c7828686840361058c565b506001949350505050565b60006103c0836104e33386866106b1565b610937565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61051b61088b565b6001600160a01b0381166105805760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104b1565b610589816108e5565b50565b6001600160a01b0383166105ee5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104b1565b6001600160a01b03821661064f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104b1565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006001600160a01b03831661dead14806106d357506001600160a01b038316155b806106eb57506006546001600160a01b038581169116145b8061070357506007546001600160a01b038581169116145b1561070f5750806103c0565b6000612710600854846107229190610e10565b61072c9190610df0565b90506000612710600954856107419190610e10565b61074b9190610df0565b90506000612710600b54866107609190610e10565b61076a9190610df0565b6006549091506001600160a01b0387811691161461079a57600654610798906001600160a01b031684610937565b505b6007546001600160a01b038781169116146107c7576007546107c5906001600160a01b031683610937565b505b6107d18782610945565b6006546000906001600160a01b0389811691161480159061080057506007546001600160a01b03898116911614155b1561083b57612710600a54876108169190610e10565b6108209190610df0565b600654909150610839906001600160a01b031682610937565b505b808284610848878a610e2f565b6108529190610e2f565b61085c9190610e2f565b6108669190610e2f565b98975050505050505050565b600033610880858285610a6f565b6104c7858585610ae9565b6005546001600160a01b031633146104365760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104b1565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60003361039c818585610ae9565b6001600160a01b0382166109a55760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104b1565b6001600160a01b03821660009081526020819052604090205481811015610a195760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016104b1565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016106a4565b6000610a7b84846104e8565b90506000198114610ae35781811015610ad65760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104b1565b610ae3848484840361058c565b50505050565b6001600160a01b038316610b4d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104b1565b6001600160a01b038216610baf5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104b1565b6001600160a01b03831660009081526020819052604090205481811015610c275760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104b1565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610ae3565b80356001600160a01b038116811461041f57600080fd5b600060208284031215610cb5578081fd5b6103c082610c8d565b60008060408385031215610cd0578081fd5b610cd983610c8d565b9150610ce760208401610c8d565b90509250929050565b600080600060608486031215610d04578081fd5b610d0d84610c8d565b9250610d1b60208501610c8d565b9150604084013590509250925092565b60008060408385031215610d3d578182fd5b610d4683610c8d565b946020939093013593505050565b60008060008060808587031215610d69578081fd5b5050823594602084013594506040840135936060013592509050565b6000602080835283518082850152825b81811015610db157858101830151858201604001528201610d95565b81811115610dc25783604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610deb57610deb610e81565b500190565b600082610e0b57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610e2a57610e2a610e81565b500290565b600082821015610e4157610e41610e81565b500390565b600281046001821680610e5a57607f821691505b60208210811415610e7b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220be0f5bc590489bac12bf62ba11b54632bb224570b8bb421f790bfb8cbb7497a464736f6c63430008020033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x19 PUSH1 0x8 SSTORE PUSH1 0x32 PUSH1 0x9 SSTORE PUSH1 0x5 PUSH1 0xA SSTORE PUSH1 0x14 PUSH1 0xB SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1283 CODESIZE SUB DUP1 PUSH3 0x1283 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x48 SWAP2 PUSH3 0x30D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH32 0x5B544553545D204465666C6174696F6E617279204D656D6520546F6B656E5D00 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0x5 DUP5 MSTORE PUSH5 0x2226AA1819 PUSH1 0xD9 SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD SWAP2 SWAP3 SWAP2 PUSH3 0xAA SWAP2 PUSH1 0x3 SWAP2 PUSH3 0x24A JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0xC0 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x24A JUMP JUMPDEST POP POP POP PUSH3 0xDD PUSH3 0xD7 PUSH3 0x12E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x132 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP3 DUP4 SWAP1 SSTORE PUSH1 0x7 DUP1 SLOAD DUP6 DUP4 AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH3 0x126 SWAP2 AND PUSH12 0x33B2E3C9FD0803CE8000000 PUSH3 0x184 JUMP JUMPDEST POP POP PUSH3 0x3A6 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x1DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x1F3 SWAP2 SWAP1 PUSH3 0x344 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x258 SWAP1 PUSH3 0x369 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x27C JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x2C7 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x297 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2C7 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2C7 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2C7 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2AA JUMP JUMPDEST POP PUSH3 0x2D5 SWAP3 SWAP2 POP PUSH3 0x2D9 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2D5 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2DA JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x320 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH3 0x32B DUP4 PUSH3 0x2F0 JUMP JUMPDEST SWAP2 POP PUSH3 0x33B PUSH1 0x20 DUP5 ADD PUSH3 0x2F0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x364 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x37E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x3A0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xECD DUP1 PUSH3 0x3B6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0xBED99850 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0xCC32D176 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0xD4698016 EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2E9 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x98118CB4 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x28B JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x2FF2E9DC GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x2FF2E9DC EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x4626402B EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x58FA63CA EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x6FCBA377 EQ PUSH2 0x239 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x3FD2A45 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x2B14CA56 EQ PUSH2 0x1E0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x166 PUSH2 0xDEAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0xD85 JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x1A6 CALLDATASIZE PUSH1 0x4 PUSH2 0xD2B JUMP JUMPDEST PUSH2 0x38E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17A JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17A JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x1DB CALLDATASIZE PUSH1 0x4 PUSH2 0xCF0 JUMP JUMPDEST PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH12 0x33B2E3C9FD0803CE8000000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17A JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0xD2B JUMP JUMPDEST PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x166 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x166 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x24C PUSH2 0x247 CALLDATASIZE PUSH1 0x4 PUSH2 0xD54 JUMP JUMPDEST PUSH2 0x3E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BF PUSH2 0x25C CALLDATASIZE PUSH1 0x4 PUSH2 0xCA4 JUMP JUMPDEST PUSH2 0x405 JUMP JUMPDEST PUSH2 0x24C PUSH2 0x424 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x166 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x438 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x299 CALLDATASIZE PUSH1 0x4 PUSH2 0xD2B JUMP JUMPDEST PUSH2 0x447 JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x2AC CALLDATASIZE PUSH1 0x4 PUSH2 0xD2B JUMP JUMPDEST PUSH2 0x4D2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x166 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x2E4 CALLDATASIZE PUSH1 0x4 PUSH2 0xCBE JUMP JUMPDEST PUSH2 0x4E8 JUMP JUMPDEST PUSH2 0x24C PUSH2 0x2F7 CALLDATASIZE PUSH1 0x4 PUSH2 0xCA4 JUMP JUMPDEST PUSH2 0x513 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x30B SWAP1 PUSH2 0xE46 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x337 SWAP1 PUSH2 0xE46 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x384 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x359 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x384 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x367 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x39C DUP2 DUP6 DUP6 PUSH2 0x58C JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BD DUP5 DUP5 PUSH2 0x3B8 DUP8 DUP8 DUP8 PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x872 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x39C DUP2 DUP6 DUP6 PUSH2 0x3DA DUP4 DUP4 PUSH2 0x4E8 JUMP JUMPDEST PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0xDD8 JUMP JUMPDEST PUSH2 0x58C JUMP JUMPDEST PUSH2 0x3F1 PUSH2 0x88B JUMP JUMPDEST PUSH1 0x8 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x9 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0xA SSTORE PUSH1 0xB SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x42C PUSH2 0x88B JUMP JUMPDEST PUSH2 0x436 PUSH1 0x0 PUSH2 0x8E5 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x30B SWAP1 PUSH2 0xE46 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x455 DUP3 DUP7 PUSH2 0x4E8 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4C7 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x58C JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C0 DUP4 PUSH2 0x4E3 CALLER DUP7 DUP7 PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x937 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x51B PUSH2 0x88B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x580 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B1 JUMP JUMPDEST PUSH2 0x589 DUP2 PUSH2 0x8E5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x64F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xDEAD EQ DUP1 PUSH2 0x6D3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO JUMPDEST DUP1 PUSH2 0x6EB JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ JUMPDEST DUP1 PUSH2 0x703 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x70F JUMPI POP DUP1 PUSH2 0x3C0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH1 0x8 SLOAD DUP5 PUSH2 0x722 SWAP2 SWAP1 PUSH2 0xE10 JUMP JUMPDEST PUSH2 0x72C SWAP2 SWAP1 PUSH2 0xDF0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2710 PUSH1 0x9 SLOAD DUP6 PUSH2 0x741 SWAP2 SWAP1 PUSH2 0xE10 JUMP JUMPDEST PUSH2 0x74B SWAP2 SWAP1 PUSH2 0xDF0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2710 PUSH1 0xB SLOAD DUP7 PUSH2 0x760 SWAP2 SWAP1 PUSH2 0xE10 JUMP JUMPDEST PUSH2 0x76A SWAP2 SWAP1 PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 AND EQ PUSH2 0x79A JUMPI PUSH1 0x6 SLOAD PUSH2 0x798 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x937 JUMP JUMPDEST POP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 AND EQ PUSH2 0x7C7 JUMPI PUSH1 0x7 SLOAD PUSH2 0x7C5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x937 JUMP JUMPDEST POP JUMPDEST PUSH2 0x7D1 DUP8 DUP3 PUSH2 0x945 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x800 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x83B JUMPI PUSH2 0x2710 PUSH1 0xA SLOAD DUP8 PUSH2 0x816 SWAP2 SWAP1 PUSH2 0xE10 JUMP JUMPDEST PUSH2 0x820 SWAP2 SWAP1 PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH2 0x839 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH2 0x937 JUMP JUMPDEST POP JUMPDEST DUP1 DUP3 DUP5 PUSH2 0x848 DUP8 DUP11 PUSH2 0xE2F JUMP JUMPDEST PUSH2 0x852 SWAP2 SWAP1 PUSH2 0xE2F JUMP JUMPDEST PUSH2 0x85C SWAP2 SWAP1 PUSH2 0xE2F JUMP JUMPDEST PUSH2 0x866 SWAP2 SWAP1 PUSH2 0xE2F JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x880 DUP6 DUP3 DUP6 PUSH2 0xA6F JUMP JUMPDEST PUSH2 0x4C7 DUP6 DUP6 DUP6 PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x436 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x39C DUP2 DUP6 DUP6 PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xA19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA7B DUP5 DUP5 PUSH2 0x4E8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0xAE3 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xAD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B1 JUMP JUMPDEST PUSH2 0xAE3 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x58C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB4D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBAF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xC27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xAE3 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x41F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCB5 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x3C0 DUP3 PUSH2 0xC8D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCD0 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xCD9 DUP4 PUSH2 0xC8D JUMP JUMPDEST SWAP2 POP PUSH2 0xCE7 PUSH1 0x20 DUP5 ADD PUSH2 0xC8D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD04 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xD0D DUP5 PUSH2 0xC8D JUMP JUMPDEST SWAP3 POP PUSH2 0xD1B PUSH1 0x20 DUP6 ADD PUSH2 0xC8D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD3D JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xD46 DUP4 PUSH2 0xC8D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xD69 JUMPI DUP1 DUP2 REVERT JUMPDEST POP POP DUP3 CALLDATALOAD SWAP5 PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDB1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xD95 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xDC2 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xDEB JUMPI PUSH2 0xDEB PUSH2 0xE81 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xE0B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xE2A JUMPI PUSH2 0xE2A PUSH2 0xE81 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xE41 JUMPI PUSH2 0xE41 PUSH2 0xE81 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xE5A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xE7B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xF JUMPDEST 0xC5 SWAP1 0x48 SWAP12 0xAC SLT 0xBF PUSH3 0xBA11B5 CHAINID ORIGIN 0xBB 0x22 GASLIMIT PUSH17 0xB8BB421F790BFB8CBB7497A464736F6C63 NUMBER STOP ADDMOD MUL STOP CALLER ",
							"sourceMap": "173:2585:5:-:0;;;604:2;574:32;;651:2;622:31;;693:1;668:26;;736:2;710:28;;756:258;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1980:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1980:113:1;;;;2046:13;;1980:113;;;2046:13;;:5;;:13;:::i;:::-;-1:-1:-1;2069:17:1;;;;:7;;:17;;;;;:::i;:::-;;1980:113;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;880:15:5::1;:34:::0;;-1:-1:-1;;;;;880:34:5;;::::1;-1:-1:-1::0;;;;;;880:34:5;;::::1;;::::0;;;;925:14:::1;:32:::0;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;968:38:::1;::::0;974:15:::1;503:23;968:5;:38::i;:::-;756:258:::0;;173:2585;;640:96:4;719:10;640:96;:::o;2426:187:0:-;2518:6;;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2426:187;;:::o;8520:535:1:-;-1:-1:-1;;;;;8603:21:1;;8595:65;;;;-1:-1:-1;;;8595:65:1;;706:2:6;8595:65:1;;;688:21:6;745:2;725:18;;;718:30;784:33;764:18;;;757:61;835:18;;8595:65:1;;;;;;;;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:1;;:9;:18;;;;;;;;;;;:28;;;;;;8952:37;1010:25:6;;;8952:37:1;;983:18:6;8952:37:1;;;;;;;8520:535;;:::o;173:2585:5:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;173:2585:5;;;-1:-1:-1;173:2585:5;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:177:6;93:13;;-1:-1:-1;;;;;135:31:6;;125:42;;115:2;;181:1;178;171:12;115:2;74:117;;;:::o;196:303::-;;;336:2;324:9;315:7;311:23;307:32;304:2;;;357:6;349;342:22;304:2;385:40;415:9;385:40;:::i;:::-;375:50;;444:49;489:2;478:9;474:18;444:49;:::i;:::-;434:59;;294:205;;;;;:::o;1046:229::-;;1117:1;1113:6;1110:1;1107:13;1104:2;;;-1:-1:-1;;;1143:33:6;;1199:4;1196:1;1189:15;1229:4;1150:3;1217:17;1104:2;-1:-1:-1;1260:9:6;;1094:181::o;1280:380::-;1365:1;1355:12;;1412:1;1402:12;;;1423:2;;1477:4;1469:6;1465:17;1455:27;;1423:2;1530;1522:6;1519:14;1499:18;1496:38;1493:2;;;1576:10;1571:3;1567:20;1564:1;1557:31;1611:4;1608:1;1601:15;1639:4;1636:1;1629:15;1493:2;;1335:325;;;:::o;:::-;173:2585:5;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8593:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:6"
															},
															"nodeType": "YulIf",
															"src": "111:2:6"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:6",
														"type": ""
													}
												],
												"src": "14:173:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:126:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "317:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "325:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:6"
															},
															"nodeType": "YulIf",
															"src": "272:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "343:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "372:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "353:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "343:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:6",
														"type": ""
													}
												],
												"src": "192:196:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "480:183:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "526:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "535:6:6"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "543:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "528:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "528:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "528:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "501:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "497:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "497:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "522:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "493:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "493:32:6"
															},
															"nodeType": "YulIf",
															"src": "490:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "561:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "590:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "571:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "571:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "561:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "609:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "642:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "653:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "638:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "638:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "619:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "619:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "609:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "438:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "449:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "461:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "469:6:6",
														"type": ""
													}
												],
												"src": "393:270:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "772:234:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "818:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "827:6:6"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "835:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "820:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "820:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "820:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "793:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "802:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "789:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "789:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "814:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "785:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "785:32:6"
															},
															"nodeType": "YulIf",
															"src": "782:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "853:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "882:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "863:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "863:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "853:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "901:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "934:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "945:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "930:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "930:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "911:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "911:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "901:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "958:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "985:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "996:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "981:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "981:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "968:32:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "958:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "722:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "733:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "745:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "753:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "761:6:6",
														"type": ""
													}
												],
												"src": "668:338:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1098:177:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1144:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1153:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1161:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1146:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1146:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1146:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1119:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1128:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1115:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1140:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1111:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1111:32:6"
															},
															"nodeType": "YulIf",
															"src": "1108:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1179:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1208:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1189:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1189:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1179:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1227:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1254:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1265:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1250:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1250:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1237:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1237:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1227:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1056:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1067:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1087:6:6",
														"type": ""
													}
												],
												"src": "1011:264:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1401:274:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1448:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "1457:6:6"
																				},
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "1465:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1450:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1450:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1450:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1422:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1431:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1418:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1418:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1443:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1414:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1414:33:6"
															},
															"nodeType": "YulIf",
															"src": "1411:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1483:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1506:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1493:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1493:23:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1483:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1525:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1552:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1563:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1548:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1535:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1535:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1525:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1576:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1603:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1614:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1599:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1599:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1586:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1586:32:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1576:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1627:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1654:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1665:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1650:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1650:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1637:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1637:32:6"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1627:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1343:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1354:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1366:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1374:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1382:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1390:6:6",
														"type": ""
													}
												],
												"src": "1280:395:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1781:102:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1791:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1803:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1814:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1799:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1799:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1791:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1833:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1848:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1864:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1869:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1860:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1860:11:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1873:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1856:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1856:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1844:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1844:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1826:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1826:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1826:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1750:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1761:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1772:4:6",
														"type": ""
													}
												],
												"src": "1680:203:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1983:92:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1993:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2005:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2016:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2001:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2001:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1993:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2035:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "2060:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2053:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2053:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2046:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2046:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2028:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2028:41:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2028:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1952:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1963:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1974:4:6",
														"type": ""
													}
												],
												"src": "1888:187:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2201:482:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2211:12:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2221:2:6",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2215:2:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2239:9:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2250:2:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2232:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2232:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2232:21:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2262:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2282:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2276:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2276:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2266:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2309:9:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2320:2:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2305:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2305:18:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2325:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2298:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2298:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2298:34:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2341:13:6",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "2350:4:6"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2345:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2413:90:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "2442:9:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2453:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2438:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2438:17:6"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2457:2:6",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2434:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2434:26:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "2476:6:6"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "2484:1:6"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "2472:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2472:14:6"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "2488:2:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2468:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2468:23:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2462:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2462:30:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2427:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2427:66:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2427:66:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2374:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2377:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2371:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2371:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2385:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2387:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2396:1:6"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2399:2:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2392:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2392:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2387:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2367:3:6",
																"statements": []
															},
															"src": "2363:140:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2537:69:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "2566:9:6"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "2577:6:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2562:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2562:22:6"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2586:2:6",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2558:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2558:31:6"
																				},
																				{
																					"name": "tail",
																					"nodeType": "YulIdentifier",
																					"src": "2591:4:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2551:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2551:45:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2551:45:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2518:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2521:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2515:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2515:13:6"
															},
															"nodeType": "YulIf",
															"src": "2512:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2615:62:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2631:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2650:6:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2658:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2646:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2646:15:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2667:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2663:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2663:7:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2642:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2642:29:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2627:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2627:45:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2674:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2623:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2623:54:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2615:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2170:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2181:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2192:4:6",
														"type": ""
													}
												],
												"src": "2080:603:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2862:225:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2879:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2890:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2872:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2872:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2872:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2913:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2924:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2909:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2909:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2929:2:6",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2902:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2902:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2902:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2952:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2963:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2948:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2948:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2968:34:6",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2941:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2941:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2941:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3023:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3034:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3019:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3019:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3039:5:6",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3012:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3012:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3012:33:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3054:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3066:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3077:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3062:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3062:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3054:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2839:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2853:4:6",
														"type": ""
													}
												],
												"src": "2688:399:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3266:224:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3283:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3294:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3276:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3276:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3276:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3317:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3328:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3313:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3313:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3333:2:6",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3306:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3306:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3306:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3356:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3367:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3352:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3352:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3372:34:6",
																		"type": "",
																		"value": "ERC20: burn amount exceeds balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3345:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3345:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3345:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3427:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3438:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3423:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3423:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3443:4:6",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3416:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3416:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3416:32:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3457:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3469:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3480:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3465:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3465:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3457:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3243:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3257:4:6",
														"type": ""
													}
												],
												"src": "3092:398:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3669:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3686:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3697:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3720:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3731:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3716:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3716:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3736:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3709:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3709:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3709:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3759:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3770:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3755:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3755:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3775:34:6",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3748:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3748:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3748:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3830:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3841:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3826:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3826:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3846:8:6",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3819:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3819:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3819:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3864:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3876:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3887:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3872:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3872:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3864:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3646:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3660:4:6",
														"type": ""
													}
												],
												"src": "3495:402:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4076:224:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4093:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4104:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4086:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4086:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4086:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4127:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4138:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4123:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4123:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4143:2:6",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4116:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4116:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4116:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4166:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4177:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4162:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4162:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4182:34:6",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4155:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4155:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4155:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4237:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4248:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4233:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4233:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4253:4:6",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4226:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4226:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4226:32:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4267:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4279:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4290:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4275:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4275:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4267:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4053:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4067:4:6",
														"type": ""
													}
												],
												"src": "3902:398:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4479:179:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4496:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4507:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4489:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4489:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4489:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4530:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4541:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4526:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4526:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4546:2:6",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4519:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4519:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4519:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4569:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4580:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4565:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4565:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4585:31:6",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4558:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4558:59:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4558:59:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4626:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4638:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4649:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4634:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4634:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4626:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4456:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4470:4:6",
														"type": ""
													}
												],
												"src": "4305:353:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4837:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4854:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4865:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4847:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4847:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4847:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4888:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4899:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4884:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4884:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4904:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4877:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4877:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4877:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4927:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4938:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4923:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4923:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4943:34:6",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4916:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4916:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4916:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4998:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5009:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4994:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4994:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5014:8:6",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4987:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4987:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4987:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5032:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5044:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5055:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5040:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5040:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5032:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4814:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4828:4:6",
														"type": ""
													}
												],
												"src": "4663:402:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5244:182:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5261:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5272:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5254:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5254:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5254:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5295:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5306:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5291:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5291:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5311:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5284:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5284:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5284:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5334:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5345:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5330:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5330:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5350:34:6",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5323:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5323:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5323:62:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5394:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5406:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5417:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5402:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5402:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5394:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5221:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5235:4:6",
														"type": ""
													}
												],
												"src": "5070:356:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5605:223:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5622:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5633:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5615:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5615:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5615:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5656:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5667:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5652:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5652:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5672:2:6",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5645:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5645:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5645:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5695:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5706:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5691:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5691:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5711:34:6",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5684:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5684:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5684:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5766:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5777:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5762:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5762:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5782:3:6",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5755:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5755:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5755:31:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5795:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5807:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5818:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5803:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5803:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5795:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5582:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5596:4:6",
														"type": ""
													}
												],
												"src": "5431:397:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6007:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6024:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6035:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6017:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6017:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6017:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6058:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6069:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6054:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6054:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6074:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6047:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6047:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6047:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6097:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6108:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6093:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6093:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6113:34:6",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6086:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6086:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6086:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6168:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6179:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6164:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6164:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6184:7:6",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6157:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6157:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6157:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6201:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6213:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6224:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6209:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6209:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6201:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5984:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5998:4:6",
														"type": ""
													}
												],
												"src": "5833:401:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6413:226:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6430:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6441:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6423:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6423:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6423:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6464:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6475:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6460:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6460:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6480:2:6",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6453:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6453:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6453:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6503:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6514:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6499:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6499:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6519:34:6",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6492:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6492:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6492:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6574:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6585:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6570:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6570:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6590:6:6",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6563:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6563:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6563:34:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6606:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6618:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6629:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6614:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6614:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6606:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6390:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6404:4:6",
														"type": ""
													}
												],
												"src": "6239:400:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6818:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6835:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6846:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6828:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6828:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6828:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6869:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6880:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6865:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6865:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6885:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6858:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6858:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6858:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6908:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6919:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6904:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6904:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6924:34:6",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6897:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6897:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6897:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6979:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6990:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6975:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6975:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6995:7:6",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6968:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6968:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6968:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7012:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7024:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7035:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7020:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7020:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7012:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6795:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6809:4:6",
														"type": ""
													}
												],
												"src": "6644:401:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7151:76:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7161:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7173:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7184:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7169:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7169:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7161:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7203:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7214:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7196:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7196:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7196:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7120:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7131:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7142:4:6",
														"type": ""
													}
												],
												"src": "7050:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7329:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7339:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7351:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7362:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7347:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7347:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7339:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7381:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7396:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7404:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7392:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7392:17:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7374:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7374:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7374:36:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7298:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7309:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7320:4:6",
														"type": ""
													}
												],
												"src": "7232:184:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7469:80:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7496:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7498:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7498:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7498:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7485:1:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7492:1:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7488:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7488:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7482:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7482:13:6"
															},
															"nodeType": "YulIf",
															"src": "7479:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7527:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7538:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7541:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7534:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7534:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7527:3:6"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7452:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7455:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7461:3:6",
														"type": ""
													}
												],
												"src": "7421:128:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7600:171:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7631:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "7652:1:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7659:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7664:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "7655:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7655:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7645:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7645:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7645:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7696:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7699:4:6",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7689:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7689:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7689:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "7724:1:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7727:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7717:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7717:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7717:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7620:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7613:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7613:9:6"
															},
															"nodeType": "YulIf",
															"src": "7610:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7751:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7760:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7763:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "7756:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7756:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7751:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7585:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7588:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "7594:1:6",
														"type": ""
													}
												],
												"src": "7554:217:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7828:116:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7887:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7889:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7889:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7889:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7859:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7852:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7852:9:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "7845:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7845:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7867:1:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7878:1:6",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "7874:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7874:6:6"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7882:1:6"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "7870:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7870:14:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7864:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7864:21:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7841:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7841:45:6"
															},
															"nodeType": "YulIf",
															"src": "7838:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7918:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7933:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7936:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7929:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7929:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "7918:7:6"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7807:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7810:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "7816:7:6",
														"type": ""
													}
												],
												"src": "7776:168:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7998:76:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8020:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8022:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8022:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8022:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8014:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8017:1:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8011:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8011:8:6"
															},
															"nodeType": "YulIf",
															"src": "8008:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8051:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8063:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8066:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8059:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8059:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "8051:4:6"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7980:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7983:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "7989:4:6",
														"type": ""
													}
												],
												"src": "7949:125:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8134:325:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8144:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8158:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8164:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "8154:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8154:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8144:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8175:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8205:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8211:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8201:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8201:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "8179:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8252:31:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8254:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "8268:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8276:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "8264:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8264:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8254:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8232:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8225:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8225:26:6"
															},
															"nodeType": "YulIf",
															"src": "8222:2:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8342:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8363:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8370:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8375:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "8366:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8366:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8356:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8356:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8356:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8407:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8410:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8400:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8400:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8400:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8435:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8438:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8428:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8428:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8428:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8298:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8321:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8329:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8318:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8318:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "8295:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8295:38:6"
															},
															"nodeType": "YulIf",
															"src": "8292:2:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "8114:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8123:6:6",
														"type": ""
													}
												],
												"src": "8079:380:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8496:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8513:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8520:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8525:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8516:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8516:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8506:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8506:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8506:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8553:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8556:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8546:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8546:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8546:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8577:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8580:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8570:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8570:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8570:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8464:127:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value3, value3) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101585760003560e01c806370a08231116100c3578063a9059cbb1161007c578063a9059cbb1461029e578063bed99850146102b1578063cc32d176146102ba578063d4698016146102c3578063dd62ed3e146102d6578063f2fde38b146102e957610158565b806370a082311461024e578063715018a6146102615780638da5cb5b1461026957806395d89b411461027a57806398118cb414610282578063a457c2d71461028b57610158565b80632ff2e9dc116101155780632ff2e9dc146101e9578063313ce567146101fc578063395093511461020b5780634626402b1461021e57806358fa63ca146102315780636fcba3771461023957610158565b806303fd2a451461015d57806306fdde0314610183578063095ea7b31461019857806318160ddd146101bb57806323b872dd146101cd5780632b14ca56146101e0575b600080fd5b61016661dead81565b6040516001600160a01b0390911681526020015b60405180910390f35b61018b6102fc565b60405161017a9190610d85565b6101ab6101a6366004610d2b565b61038e565b604051901515815260200161017a565b6002545b60405190815260200161017a565b6101ab6101db366004610cf0565b6103a6565b6101bf600a5481565b6101bf6b033b2e3c9fd0803ce800000081565b6040516012815260200161017a565b6101ab610219366004610d2b565b6103c7565b600754610166906001600160a01b031681565b610166600081565b61024c610247366004610d54565b6103e9565b005b6101bf61025c366004610ca4565b610405565b61024c610424565b6005546001600160a01b0316610166565b61018b610438565b6101bf60085481565b6101ab610299366004610d2b565b610447565b6101ab6102ac366004610d2b565b6104d2565b6101bf600b5481565b6101bf60095481565b600654610166906001600160a01b031681565b6101bf6102e4366004610cbe565b6104e8565b61024c6102f7366004610ca4565b610513565b60606003805461030b90610e46565b80601f016020809104026020016040519081016040528092919081815260200182805461033790610e46565b80156103845780601f1061035957610100808354040283529160200191610384565b820191906000526020600020905b81548152906001019060200180831161036757829003601f168201915b5050505050905090565b60003361039c81858561058c565b5060019392505050565b60006103bd84846103b88787876106b1565b610872565b90505b9392505050565b60003361039c8185856103da83836104e8565b6103e49190610dd8565b61058c565b6103f161088b565b600893909355600991909155600a55600b55565b6001600160a01b0381166000908152602081905260409020545b919050565b61042c61088b565b61043660006108e5565b565b60606004805461030b90610e46565b6000338161045582866104e8565b9050838110156104ba5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6104c7828686840361058c565b506001949350505050565b60006103c0836104e33386866106b1565b610937565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61051b61088b565b6001600160a01b0381166105805760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104b1565b610589816108e5565b50565b6001600160a01b0383166105ee5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104b1565b6001600160a01b03821661064f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104b1565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006001600160a01b03831661dead14806106d357506001600160a01b038316155b806106eb57506006546001600160a01b038581169116145b8061070357506007546001600160a01b038581169116145b1561070f5750806103c0565b6000612710600854846107229190610e10565b61072c9190610df0565b90506000612710600954856107419190610e10565b61074b9190610df0565b90506000612710600b54866107609190610e10565b61076a9190610df0565b6006549091506001600160a01b0387811691161461079a57600654610798906001600160a01b031684610937565b505b6007546001600160a01b038781169116146107c7576007546107c5906001600160a01b031683610937565b505b6107d18782610945565b6006546000906001600160a01b0389811691161480159061080057506007546001600160a01b03898116911614155b1561083b57612710600a54876108169190610e10565b6108209190610df0565b600654909150610839906001600160a01b031682610937565b505b808284610848878a610e2f565b6108529190610e2f565b61085c9190610e2f565b6108669190610e2f565b98975050505050505050565b600033610880858285610a6f565b6104c7858585610ae9565b6005546001600160a01b031633146104365760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104b1565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60003361039c818585610ae9565b6001600160a01b0382166109a55760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104b1565b6001600160a01b03821660009081526020819052604090205481811015610a195760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016104b1565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016106a4565b6000610a7b84846104e8565b90506000198114610ae35781811015610ad65760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104b1565b610ae3848484840361058c565b50505050565b6001600160a01b038316610b4d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104b1565b6001600160a01b038216610baf5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104b1565b6001600160a01b03831660009081526020819052604090205481811015610c275760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104b1565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610ae3565b80356001600160a01b038116811461041f57600080fd5b600060208284031215610cb5578081fd5b6103c082610c8d565b60008060408385031215610cd0578081fd5b610cd983610c8d565b9150610ce760208401610c8d565b90509250929050565b600080600060608486031215610d04578081fd5b610d0d84610c8d565b9250610d1b60208501610c8d565b9150604084013590509250925092565b60008060408385031215610d3d578182fd5b610d4683610c8d565b946020939093013593505050565b60008060008060808587031215610d69578081fd5b5050823594602084013594506040840135936060013592509050565b6000602080835283518082850152825b81811015610db157858101830151858201604001528201610d95565b81811115610dc25783604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610deb57610deb610e81565b500190565b600082610e0b57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610e2a57610e2a610e81565b500290565b600082821015610e4157610e41610e81565b500390565b600281046001821680610e5a57607f821691505b60208210811415610e7b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220be0f5bc590489bac12bf62ba11b54632bb224570b8bb421f790bfb8cbb7497a464736f6c63430008020033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0xBED99850 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0xCC32D176 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0xD4698016 EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2E9 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x98118CB4 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x28B JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x2FF2E9DC GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x2FF2E9DC EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x4626402B EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x58FA63CA EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x6FCBA377 EQ PUSH2 0x239 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x3FD2A45 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x2B14CA56 EQ PUSH2 0x1E0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x166 PUSH2 0xDEAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0xD85 JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x1A6 CALLDATASIZE PUSH1 0x4 PUSH2 0xD2B JUMP JUMPDEST PUSH2 0x38E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17A JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17A JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x1DB CALLDATASIZE PUSH1 0x4 PUSH2 0xCF0 JUMP JUMPDEST PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH12 0x33B2E3C9FD0803CE8000000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17A JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0xD2B JUMP JUMPDEST PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x166 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x166 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x24C PUSH2 0x247 CALLDATASIZE PUSH1 0x4 PUSH2 0xD54 JUMP JUMPDEST PUSH2 0x3E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BF PUSH2 0x25C CALLDATASIZE PUSH1 0x4 PUSH2 0xCA4 JUMP JUMPDEST PUSH2 0x405 JUMP JUMPDEST PUSH2 0x24C PUSH2 0x424 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x166 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x438 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x299 CALLDATASIZE PUSH1 0x4 PUSH2 0xD2B JUMP JUMPDEST PUSH2 0x447 JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x2AC CALLDATASIZE PUSH1 0x4 PUSH2 0xD2B JUMP JUMPDEST PUSH2 0x4D2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x166 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x2E4 CALLDATASIZE PUSH1 0x4 PUSH2 0xCBE JUMP JUMPDEST PUSH2 0x4E8 JUMP JUMPDEST PUSH2 0x24C PUSH2 0x2F7 CALLDATASIZE PUSH1 0x4 PUSH2 0xCA4 JUMP JUMPDEST PUSH2 0x513 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x30B SWAP1 PUSH2 0xE46 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x337 SWAP1 PUSH2 0xE46 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x384 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x359 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x384 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x367 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x39C DUP2 DUP6 DUP6 PUSH2 0x58C JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BD DUP5 DUP5 PUSH2 0x3B8 DUP8 DUP8 DUP8 PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x872 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x39C DUP2 DUP6 DUP6 PUSH2 0x3DA DUP4 DUP4 PUSH2 0x4E8 JUMP JUMPDEST PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0xDD8 JUMP JUMPDEST PUSH2 0x58C JUMP JUMPDEST PUSH2 0x3F1 PUSH2 0x88B JUMP JUMPDEST PUSH1 0x8 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x9 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0xA SSTORE PUSH1 0xB SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x42C PUSH2 0x88B JUMP JUMPDEST PUSH2 0x436 PUSH1 0x0 PUSH2 0x8E5 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x30B SWAP1 PUSH2 0xE46 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x455 DUP3 DUP7 PUSH2 0x4E8 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4C7 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x58C JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C0 DUP4 PUSH2 0x4E3 CALLER DUP7 DUP7 PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x937 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x51B PUSH2 0x88B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x580 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B1 JUMP JUMPDEST PUSH2 0x589 DUP2 PUSH2 0x8E5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x64F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xDEAD EQ DUP1 PUSH2 0x6D3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO JUMPDEST DUP1 PUSH2 0x6EB JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ JUMPDEST DUP1 PUSH2 0x703 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x70F JUMPI POP DUP1 PUSH2 0x3C0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH1 0x8 SLOAD DUP5 PUSH2 0x722 SWAP2 SWAP1 PUSH2 0xE10 JUMP JUMPDEST PUSH2 0x72C SWAP2 SWAP1 PUSH2 0xDF0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2710 PUSH1 0x9 SLOAD DUP6 PUSH2 0x741 SWAP2 SWAP1 PUSH2 0xE10 JUMP JUMPDEST PUSH2 0x74B SWAP2 SWAP1 PUSH2 0xDF0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2710 PUSH1 0xB SLOAD DUP7 PUSH2 0x760 SWAP2 SWAP1 PUSH2 0xE10 JUMP JUMPDEST PUSH2 0x76A SWAP2 SWAP1 PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 AND EQ PUSH2 0x79A JUMPI PUSH1 0x6 SLOAD PUSH2 0x798 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x937 JUMP JUMPDEST POP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 AND EQ PUSH2 0x7C7 JUMPI PUSH1 0x7 SLOAD PUSH2 0x7C5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x937 JUMP JUMPDEST POP JUMPDEST PUSH2 0x7D1 DUP8 DUP3 PUSH2 0x945 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x800 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x83B JUMPI PUSH2 0x2710 PUSH1 0xA SLOAD DUP8 PUSH2 0x816 SWAP2 SWAP1 PUSH2 0xE10 JUMP JUMPDEST PUSH2 0x820 SWAP2 SWAP1 PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH2 0x839 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH2 0x937 JUMP JUMPDEST POP JUMPDEST DUP1 DUP3 DUP5 PUSH2 0x848 DUP8 DUP11 PUSH2 0xE2F JUMP JUMPDEST PUSH2 0x852 SWAP2 SWAP1 PUSH2 0xE2F JUMP JUMPDEST PUSH2 0x85C SWAP2 SWAP1 PUSH2 0xE2F JUMP JUMPDEST PUSH2 0x866 SWAP2 SWAP1 PUSH2 0xE2F JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x880 DUP6 DUP3 DUP6 PUSH2 0xA6F JUMP JUMPDEST PUSH2 0x4C7 DUP6 DUP6 DUP6 PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x436 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x39C DUP2 DUP6 DUP6 PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xA19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA7B DUP5 DUP5 PUSH2 0x4E8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0xAE3 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xAD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B1 JUMP JUMPDEST PUSH2 0xAE3 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x58C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB4D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBAF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xC27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xAE3 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x41F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCB5 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x3C0 DUP3 PUSH2 0xC8D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCD0 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xCD9 DUP4 PUSH2 0xC8D JUMP JUMPDEST SWAP2 POP PUSH2 0xCE7 PUSH1 0x20 DUP5 ADD PUSH2 0xC8D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD04 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xD0D DUP5 PUSH2 0xC8D JUMP JUMPDEST SWAP3 POP PUSH2 0xD1B PUSH1 0x20 DUP6 ADD PUSH2 0xC8D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD3D JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xD46 DUP4 PUSH2 0xC8D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xD69 JUMPI DUP1 DUP2 REVERT JUMPDEST POP POP DUP3 CALLDATALOAD SWAP5 PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDB1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xD95 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xDC2 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xDEB JUMPI PUSH2 0xDEB PUSH2 0xE81 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xE0B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xE2A JUMPI PUSH2 0xE2A PUSH2 0xE81 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xE41 JUMPI PUSH2 0xE41 PUSH2 0xE81 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xE5A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xE7B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xF JUMPDEST 0xC5 SWAP1 0x48 SWAP12 0xAC SLT 0xBF PUSH3 0xBA11B5 CHAINID ORIGIN 0xBB 0x22 GASLIMIT PUSH17 0xB8BB421F790BFB8CBB7497A464736F6C63 NUMBER STOP ADDMOD MUL STOP CALLER ",
							"sourceMap": "173:2585:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;300:73;;331:42;300:73;;;;;-1:-1:-1;;;;;1844:32:6;;;1826:51;;1814:2;1799:18;300:73:5;;;;;;;;2158:98:1;;;:::i;:::-;;;;;;;:::i;4444:197::-;;;;;;:::i;:::-;;:::i;:::-;;;2053:14:6;;2046:22;2028:41;;2016:2;2001:18;4444:197:1;1983:92:6;3255:106:1;3342:12;;3255:106;;;7196:25:6;;;7184:2;7169:18;3255:106:1;7151:76:6;1207:205:5;;;;;;:::i;:::-;;:::i;668:26::-;;;;;;462:64;;503:23;462:64;;3104:91:1;;;3186:2;7374:36:6;;7362:2;7347:18;3104:91:1;7329:87:6;5854:234:1;;;;;;:::i;:::-;;:::i;258:29:5:-;;;;;-1:-1:-1;;;;;258:29:5;;;380:73;;411:42;380:73;;2493:262;;;;;;:::i;:::-;;:::i;:::-;;3419:125:1;;;;;;:::i;:::-;;:::i;1824:101:0:-;;;:::i;1201:85::-;1273:6;;-1:-1:-1;;;;;1273:6:0;1201:85;;2369:102:1;;;:::i;574:32:5:-;;;;;;6575:427:1;;;;;;:::i;:::-;;:::i;1022:177:5:-;;;;;;:::i;:::-;;:::i;710:28::-;;;;;;622:31;;;;;;221:30;;;;;-1:-1:-1;;;;;221:30:5;;;3987:149:1;;;;;;:::i;:::-;;:::i;2074:198:0:-;;;;;;:::i;:::-;;:::i;2158:98:1:-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:4;4581:32:1;719:10:4;4597:7:1;4606:6;4581:8;:32::i;:::-;-1:-1:-1;4630:4:1;;4444:197;-1:-1:-1;;;4444:197:1:o;1207:205:5:-;1305:4;1329:75;1348:6;1356:9;1367:36;1377:6;1385:9;1396:6;1367:9;:36::i;:::-;1329:18;:75::i;:::-;1322:82;;1207:205;;;;;;:::o;5854:234:1:-;5942:4;719:10:4;5996:64:1;719:10:4;6012:7:1;6049:10;6021:25;719:10:4;6012:7:1;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;2493:262:5:-;1094:13:0;:11;:13::i;:::-;2622:12:5::1;:28:::0;;;;2661:11:::1;:26:::0;;;;2698:7:::1;:18:::0;2727:8:::1;:20:::0;2493:262::o;3419:125:1:-;-1:-1:-1;;;;;3519:18:1;;3493:7;3519:18;;;;;;;;;;;3419:125;;;;:::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;2369:102:1:-;2425:13;2457:7;2450:14;;;;;:::i;6575:427::-;6668:4;719:10:4;6668:4:1;6749:25;719:10:4;6766:7:1;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:1;;6846:2:6;6784:85:1;;;6828:21:6;6885:2;6865:18;;;6858:30;6924:34;6904:18;;;6897:62;-1:-1:-1;;;6975:18:6;;;6968:35;7020:19;;6784:85:1;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;:::-;-1:-1:-1;6991:4:1;;6575:427;-1:-1:-1;;;;6575:427:1:o;1022:177:5:-;1100:4;1124:67;1139:9;1150:40;1160:10;1172:9;1183:6;1150:9;:40::i;:::-;1124:14;:67::i;3987:149:1:-;-1:-1:-1;;;;;4102:18:1;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;2074:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:0;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:0;;3697:2:6;2154:73:0::1;::::0;::::1;3679:21:6::0;3736:2;3716:18;;;3709:30;3775:34;3755:18;;;3748:62;-1:-1:-1;;;3826:18:6;;;3819:36;3872:19;;2154:73:0::1;3669:228:6::0;2154:73:0::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;10457:340:1:-;-1:-1:-1;;;;;10558:19:1;;10550:68;;;;-1:-1:-1;;;10550:68:1;;6441:2:6;10550:68:1;;;6423:21:6;6480:2;6460:18;;;6453:30;6519:34;6499:18;;;6492:62;-1:-1:-1;;;6570:18:6;;;6563:34;6614:19;;10550:68:1;6413:226:6;10550:68:1;-1:-1:-1;;;;;10636:21:1;;10628:68;;;;-1:-1:-1;;;10628:68:1;;4104:2:6;10628:68:1;;;4086:21:6;4143:2;4123:18;;;4116:30;4182:34;4162:18;;;4155:62;-1:-1:-1;;;4233:18:6;;;4226:32;4275:19;;10628:68:1;4076:224:6;10628:68:1;-1:-1:-1;;;;;10707:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;7196:25:6;;;10758:32:1;;7169:18:6;10758:32:1;;;;;;;;10457:340;;;:::o;1420:1065:5:-;1508:7;-1:-1:-1;;;;;1532:17:5;;331:42;1532:17;;:38;;-1:-1:-1;;;;;;1553:17:5;;;1532:38;:67;;;-1:-1:-1;1584:15:5;;-1:-1:-1;;;;;1574:25:5;;;1584:15;;1574:25;1532:67;:95;;;-1:-1:-1;1613:14:5;;-1:-1:-1;;;;;1603:24:5;;;1613:14;;1603:24;1532:95;1528:141;;;-1:-1:-1;1651:6:5;1644:13;;1528:141;1681:26;1734:5;1719:12;;1710:6;:21;;;;:::i;:::-;:29;;;;:::i;:::-;1681:58;;1750:25;1801:5;1787:11;;1778:6;:20;;;;:::i;:::-;:28;;;;:::i;:::-;1750:56;;1817:18;1858:5;1847:8;;1838:6;:17;;;;:::i;:::-;:25;;;;:::i;:::-;1893:15;;1817:46;;-1:-1:-1;;;;;;1880:28:5;;;1893:15;;1880:28;1876:112;;1940:15;;1925:51;;-1:-1:-1;;;;;1940:15:5;1957:18;1925:14;:51::i;:::-;;1876:112;2017:14;;-1:-1:-1;;;;;2004:27:5;;;2017:14;;2004:27;2000:109;;2063:14;;2048:49;;-1:-1:-1;;;;;2063:14:5;2079:17;2048:14;:49::i;:::-;;2000:109;2121:25;2127:6;2135:10;2121:5;:25::i;:::-;2209:15;;2159:21;;-1:-1:-1;;;;;2199:25:5;;;2209:15;;2199:25;;;;:53;;-1:-1:-1;2238:14:5;;-1:-1:-1;;;;;2228:24:5;;;2238:14;;2228:24;;2199:53;2195:187;;;2304:5;2294:7;;2285:6;:16;;;;:::i;:::-;:24;;;;:::i;:::-;2339:15;;2269:40;;-1:-1:-1;2324:46:5;;-1:-1:-1;;;;;2339:15:5;2269:40;2324:14;:46::i;:::-;;2195:187;2464:13;2451:10;2431:17;2401:27;2410:18;2401:6;:27;:::i;:::-;:47;;;;:::i;:::-;:60;;;;:::i;:::-;:76;;;;:::i;:::-;2394:83;1420:1065;-1:-1:-1;;;;;;;;1420:1065:5:o;5203:256:1:-;5300:4;719:10:4;5356:38:1;5372:4;719:10:4;5387:6:1;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;1359:130:0:-;1273:6;;-1:-1:-1;;;;;1273:6:0;719:10:4;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;5272:2:6;1414:68:0;;;5254:21:6;;;5291:18;;;5284:30;5350:34;5330:18;;;5323:62;5402:18;;1414:68:0;5244:182:6;2426:187:0;2518:6;;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2426:187;;:::o;3740:189:1:-;3819:4;719:10:4;3873:28:1;719:10:4;3890:2:1;3894:6;3873:9;:28::i;9375:659::-;-1:-1:-1;;;;;9458:21:1;;9450:67;;;;-1:-1:-1;;;9450:67:1;;5633:2:6;9450:67:1;;;5615:21:6;5672:2;5652:18;;;5645:30;5711:34;5691:18;;;5684:62;-1:-1:-1;;;5762:18:6;;;5755:31;5803:19;;9450:67:1;5605:223:6;9450:67:1;-1:-1:-1;;;;;9613:18:1;;9588:22;9613:18;;;;;;;;;;;9649:24;;;;9641:71;;;;-1:-1:-1;;;9641:71:1;;3294:2:6;9641:71:1;;;3276:21:6;3333:2;3313:18;;;3306:30;3372:34;3352:18;;;3345:62;-1:-1:-1;;;3423:18:6;;;3416:32;3465:19;;9641:71:1;3266:224:6;9641:71:1;-1:-1:-1;;;;;9746:18:1;;:9;:18;;;;;;;;;;;9767:23;;;9746:44;;9883:12;:22;;;;;;;9931:37;7196:25:6;;;9746:9:1;;:18;9931:37;;7169:18:6;9931:37:1;7151:76:6;11078:411:1;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:1;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:1;;4507:2:6;11297:68:1;;;4489:21:6;4546:2;4526:18;;;4519:30;4585:31;4565:18;;;4558:59;4634:18;;11297:68:1;4479:179:6;11297:68:1;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11078:411;;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:1;;7544:68;;;;-1:-1:-1;;;7544:68:1;;6035:2:6;7544:68:1;;;6017:21:6;6074:2;6054:18;;;6047:30;6113:34;6093:18;;;6086:62;-1:-1:-1;;;6164:18:6;;;6157:35;6209:19;;7544:68:1;6007:227:6;7544:68:1;-1:-1:-1;;;;;7630:16:1;;7622:64;;;;-1:-1:-1;;;7622:64:1;;2890:2:6;7622:64:1;;;2872:21:6;2929:2;2909:18;;;2902:30;2968:34;2948:18;;;2941:62;-1:-1:-1;;;3019:18:6;;;3012:33;3062:19;;7622:64:1;2862:225:6;7622:64:1;-1:-1:-1;;;;;7768:15:1;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:1;;4865:2:6;7793:72:1;;;4847:21:6;4904:2;4884:18;;;4877:30;4943:34;4923:18;;;4916:62;-1:-1:-1;;;4994:18:6;;;4987:36;5040:19;;7793:72:1;4837:228:6;7793:72:1;-1:-1:-1;;;;;7899:15:1;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;7196:25:6;;;8114:13:1;;8163:26;;7169:18:6;8163:26:1;;;;;;;8200:37;9375:659;14:173:6;82:20;;-1:-1:-1;;;;;131:31:6;;121:42;;111:2;;177:1;174;167:12;192:196;;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;353:29;372:9;353:29;:::i;393:270::-;;;522:2;510:9;501:7;497:23;493:32;490:2;;;543:6;535;528:22;490:2;571:29;590:9;571:29;:::i;:::-;561:39;;619:38;653:2;642:9;638:18;619:38;:::i;:::-;609:48;;480:183;;;;;:::o;668:338::-;;;;814:2;802:9;793:7;789:23;785:32;782:2;;;835:6;827;820:22;782:2;863:29;882:9;863:29;:::i;:::-;853:39;;911:38;945:2;934:9;930:18;911:38;:::i;:::-;901:48;;996:2;985:9;981:18;968:32;958:42;;772:234;;;;;:::o;1011:264::-;;;1140:2;1128:9;1119:7;1115:23;1111:32;1108:2;;;1161:6;1153;1146:22;1108:2;1189:29;1208:9;1189:29;:::i;:::-;1179:39;1265:2;1250:18;;;;1237:32;;-1:-1:-1;;;1098:177:6:o;1280:395::-;;;;;1443:3;1431:9;1422:7;1418:23;1414:33;1411:2;;;1465:6;1457;1450:22;1411:2;-1:-1:-1;;1493:23:6;;;1563:2;1548:18;;1535:32;;-1:-1:-1;1614:2:6;1599:18;;1586:32;;1665:2;1650:18;1637:32;;-1:-1:-1;1401:274:6;-1:-1:-1;1401:274:6:o;2080:603::-;;2221:2;2250;2239:9;2232:21;2282:6;2276:13;2325:6;2320:2;2309:9;2305:18;2298:34;2350:4;2363:140;2377:6;2374:1;2371:13;2363:140;;;2472:14;;;2468:23;;2462:30;2438:17;;;2457:2;2434:26;2427:66;2392:10;;2363:140;;;2521:6;2518:1;2515:13;2512:2;;;2591:4;2586:2;2577:6;2566:9;2562:22;2558:31;2551:45;2512:2;-1:-1:-1;2667:2:6;2646:15;-1:-1:-1;;2642:29:6;2627:45;;;;2674:2;2623:54;;2201:482;-1:-1:-1;;;2201:482:6:o;7421:128::-;;7492:1;7488:6;7485:1;7482:13;7479:2;;;7498:18;;:::i;:::-;-1:-1:-1;7534:9:6;;7469:80::o;7554:217::-;;7620:1;7610:2;;-1:-1:-1;;;7645:31:6;;7699:4;7696:1;7689:15;7727:4;7652:1;7717:15;7610:2;-1:-1:-1;7756:9:6;;7600:171::o;7776:168::-;;7882:1;7878;7874:6;7870:14;7867:1;7864:21;7859:1;7852:9;7845:17;7841:45;7838:2;;;7889:18;;:::i;:::-;-1:-1:-1;7929:9:6;;7828:116::o;7949:125::-;;8017:1;8014;8011:8;8008:2;;;8022:18;;:::i;:::-;-1:-1:-1;8059:9:6;;7998:76::o;8079:380::-;8164:1;8154:12;;8211:1;8201:12;;;8222:2;;8276:4;8268:6;8264:17;8254:27;;8222:2;8329;8321:6;8318:14;8298:18;8295:38;8292:2;;;8375:10;8370:3;8366:20;8363:1;8356:31;8410:4;8407:1;8400:15;8438:4;8435:1;8428:15;8292:2;;8134:325;;;:::o;8464:127::-;8525:10;8520:3;8516:20;8513:1;8506:31;8556:4;8553:1;8546:15;8580:4;8577:1;8570:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "757800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEAD()": "229",
								"INITIAL_SUPPLY()": "218",
								"ZERO()": "316",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "22570",
								"balanceOf(address)": "infinite",
								"burnRate()": "1039",
								"decimals()": "222",
								"decreaseAllowance(address,uint256)": "23684",
								"increaseAllowance(address,uint256)": "23646",
								"liquidityFee()": "1106",
								"liquidityWallet()": "1114",
								"name()": "infinite",
								"owner()": "1087",
								"renounceOwnership()": "infinite",
								"sellFee()": "1129",
								"setFees(uint256,uint256,uint256,uint256)": "81308",
								"symbol()": "infinite",
								"totalSupply()": "1071",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "23768",
								"treasuryFee()": "1061",
								"treasuryWallet()": "1115"
							},
							"internal": {
								"applyFees(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 604,
									"end": 606,
									"name": "PUSH",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 574,
									"end": 606,
									"name": "PUSH",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 574,
									"end": 606,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 651,
									"end": 653,
									"name": "PUSH",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 622,
									"end": 653,
									"name": "PUSH",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 622,
									"end": 653,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 693,
									"end": 694,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 668,
									"end": 694,
									"name": "PUSH",
									"source": 5,
									"value": "A"
								},
								{
									"begin": 668,
									"end": 694,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 736,
									"end": 738,
									"name": "PUSH",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 710,
									"end": 738,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 710,
									"end": 738,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "5B544553545D204465666C6174696F6E617279204D656D6520546F6B656E5D00"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2226AA1819"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 880,
									"end": 895,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 880,
									"end": 914,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 880,
									"end": 914,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 880,
									"end": 914,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 880,
									"end": 914,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 880,
									"end": 914,
									"name": "AND",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 880,
									"end": 914,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 880,
									"end": 914,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 880,
									"end": 914,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 880,
									"end": 914,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 880,
									"end": 914,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 880,
									"end": 914,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 880,
									"end": 914,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 880,
									"end": 914,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 925,
									"end": 939,
									"name": "PUSH",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 925,
									"end": 957,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 925,
									"end": 957,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 925,
									"end": 957,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 925,
									"end": 957,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 925,
									"end": 957,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 925,
									"end": 957,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 925,
									"end": 957,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 925,
									"end": 957,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 925,
									"end": 957,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 925,
									"end": 957,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 925,
									"end": 957,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 925,
									"end": 957,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 925,
									"end": 957,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 925,
									"end": 957,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 968,
									"end": 1006,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 968,
									"end": 1006,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 974,
									"end": 989,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 503,
									"end": 526,
									"name": "PUSH",
									"source": 5,
									"value": "33B2E3C9FD0803CE8000000"
								},
								{
									"begin": 968,
									"end": 973,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 968,
									"end": 1006,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 968,
									"end": 1006,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 968,
									"end": 1006,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 8520,
									"end": 9055,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 8520,
									"end": 9055,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8603,
									"end": 8624,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8603,
									"end": 8624,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 706,
									"end": 708,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 688,
									"end": 709,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 745,
									"end": 747,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 725,
									"end": 743,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 725,
									"end": 743,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 725,
									"end": 743,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 718,
									"end": 748,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 784,
									"end": 817,
									"name": "PUSH",
									"source": 6,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 764,
									"end": 782,
									"name": "PUSH",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 764,
									"end": 782,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 764,
									"end": 782,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 757,
									"end": 818,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 835,
									"end": 853,
									"name": "PUSH",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 835,
									"end": 853,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8747,
									"end": 8753,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8731,
									"end": 8743,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 8731,
									"end": 8743,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8908,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1010,
									"end": 1035,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1010,
									"end": 1035,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1010,
									"end": 1035,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "PUSH",
									"source": 1,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 983,
									"end": 1001,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 8520,
									"end": 9055,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8520,
									"end": 9055,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8520,
									"end": 9055,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "tag",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "tag",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 115,
									"end": 117,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 115,
									"end": 117,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 115,
									"end": 117,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 115,
									"end": 117,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 74,
									"end": 191,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 74,
									"end": 191,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 74,
									"end": 191,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 74,
									"end": 191,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 196,
									"end": 499,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 499,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 196,
									"end": 499,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 196,
									"end": 499,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 336,
									"end": 338,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 333,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 315,
									"end": 322,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 311,
									"end": 334,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 307,
									"end": 339,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 304,
									"end": 306,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 304,
									"end": 306,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 304,
									"end": 306,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 357,
									"end": 363,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 349,
									"end": 355,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 342,
									"end": 364,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 304,
									"end": 306,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 304,
									"end": 306,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 385,
									"end": 425,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 415,
									"end": 424,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 385,
									"end": 425,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 385,
									"end": 425,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 385,
									"end": 425,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 385,
									"end": 425,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 375,
									"end": 425,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 375,
									"end": 425,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 444,
									"end": 493,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 489,
									"end": 491,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 478,
									"end": 487,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 474,
									"end": 492,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 444,
									"end": 493,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 444,
									"end": 493,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 444,
									"end": 493,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 444,
									"end": 493,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 434,
									"end": 493,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 434,
									"end": 493,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 294,
									"end": 499,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 294,
									"end": 499,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 294,
									"end": 499,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 294,
									"end": 499,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 294,
									"end": 499,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 294,
									"end": 499,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1046,
									"end": 1275,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1046,
									"end": 1275,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1046,
									"end": 1275,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1117,
									"end": 1118,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1113,
									"end": 1119,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1110,
									"end": 1111,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1107,
									"end": 1120,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1104,
									"end": 1106,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1104,
									"end": 1106,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 1104,
									"end": 1106,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1143,
									"end": 1176,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1143,
									"end": 1176,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1199,
									"end": 1203,
									"name": "PUSH",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1196,
									"end": 1197,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1189,
									"end": 1204,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1229,
									"end": 1233,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1150,
									"end": 1153,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1217,
									"end": 1234,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1104,
									"end": 1106,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 1104,
									"end": 1106,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1260,
									"end": 1269,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1260,
									"end": 1269,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1094,
									"end": 1275,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1280,
									"end": 1660,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1280,
									"end": 1660,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1365,
									"end": 1366,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1355,
									"end": 1367,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1355,
									"end": 1367,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1412,
									"end": 1413,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1402,
									"end": 1414,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1402,
									"end": 1414,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1402,
									"end": 1414,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1423,
									"end": 1425,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1423,
									"end": 1425,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1477,
									"end": 1481,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 1469,
									"end": 1475,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1465,
									"end": 1482,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1455,
									"end": 1482,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1455,
									"end": 1482,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1423,
									"end": 1425,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1423,
									"end": 1425,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1530,
									"end": 1532,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1522,
									"end": 1528,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1519,
									"end": 1533,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1499,
									"end": 1517,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1496,
									"end": 1534,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1493,
									"end": 1495,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1493,
									"end": 1495,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 1493,
									"end": 1495,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1576,
									"end": 1586,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 1571,
									"end": 1574,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 1567,
									"end": 1587,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1564,
									"end": 1565,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1557,
									"end": 1588,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1611,
									"end": 1615,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1608,
									"end": 1609,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1601,
									"end": 1616,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1639,
									"end": 1643,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1636,
									"end": 1637,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1629,
									"end": 1644,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1493,
									"end": 1495,
									"name": "tag",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 1493,
									"end": 1495,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1493,
									"end": 1495,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1335,
									"end": 1660,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1335,
									"end": 1660,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1335,
									"end": 1660,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1335,
									"end": 1660,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1335,
									"end": 1660,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1335,
									"end": 1660,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220be0f5bc590489bac12bf62ba11b54632bb224570b8bb421f790bfb8cbb7497a464736f6c63430008020033",
									".code": [
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "BED99850"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "CC32D176"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "D4698016"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "F2FDE38B"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "715018A6"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "98118CB4"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "A457C2D7"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "2FF2E9DC"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "2FF2E9DC"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "39509351"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "4626402B"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "58FA63CA"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "6FCBA377"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "3FD2A45"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "2B14CA56"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 300,
											"end": 373,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 300,
											"end": 373,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 300,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 331,
											"end": 373,
											"name": "PUSH",
											"source": 5,
											"value": "DEAD"
										},
										{
											"begin": 300,
											"end": 373,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 300,
											"end": 373,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 300,
											"end": 373,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 300,
											"end": 373,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 300,
											"end": 373,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 300,
											"end": 373,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1844,
											"end": 1876,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1876,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1876,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1877,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1877,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 1816,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1799,
											"end": 1817,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 300,
											"end": 373,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 300,
											"end": 373,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 300,
											"end": 373,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 300,
											"end": 373,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 300,
											"end": 373,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 300,
											"end": 373,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 300,
											"end": 373,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 300,
											"end": 373,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 300,
											"end": 373,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2046,
											"end": 2068,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2028,
											"end": 2069,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2028,
											"end": 2069,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2018,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2001,
											"end": 2019,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1983,
											"end": 2075,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7196,
											"end": 7221,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7196,
											"end": 7221,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7196,
											"end": 7221,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7184,
											"end": 7186,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7169,
											"end": 7187,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 7151,
											"end": 7227,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1207,
											"end": 1412,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1207,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1207,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1207,
											"end": 1412,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1412,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1207,
											"end": 1412,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1207,
											"end": 1412,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1207,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1207,
											"end": 1412,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 668,
											"end": 694,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 668,
											"end": 694,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 668,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 668,
											"end": 694,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 668,
											"end": 694,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 668,
											"end": 694,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 668,
											"end": 694,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 462,
											"end": 526,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 462,
											"end": 526,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 462,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 503,
											"end": 526,
											"name": "PUSH",
											"source": 5,
											"value": "33B2E3C9FD0803CE8000000"
										},
										{
											"begin": 462,
											"end": 526,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 462,
											"end": 526,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 7374,
											"end": 7410,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7374,
											"end": 7410,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7362,
											"end": 7364,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7347,
											"end": 7365,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 7329,
											"end": 7416,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 258,
											"end": 287,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 258,
											"end": 287,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 258,
											"end": 287,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 258,
											"end": 287,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 258,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 258,
											"end": 287,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 258,
											"end": 287,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 258,
											"end": 287,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 258,
											"end": 287,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 380,
											"end": 453,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 380,
											"end": 453,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 380,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 380,
											"end": 453,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 380,
											"end": 453,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2493,
											"end": 2755,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 2493,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2493,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2493,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 2493,
											"end": 2755,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2493,
											"end": 2755,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2493,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 2493,
											"end": 2755,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2493,
											"end": 2755,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 2493,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2493,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2493,
											"end": 2755,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2493,
											"end": 2755,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2493,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2493,
											"end": 2755,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 606,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 574,
											"end": 606,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 574,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 574,
											"end": 606,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 574,
											"end": 606,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 574,
											"end": 606,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 574,
											"end": 606,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1022,
											"end": 1199,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1022,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1022,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 1022,
											"end": 1199,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1199,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1022,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1022,
											"end": 1199,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1022,
											"end": 1199,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 1022,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 1022,
											"end": 1199,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 710,
											"end": 738,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 710,
											"end": 738,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 710,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 710,
											"end": 738,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 710,
											"end": 738,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 710,
											"end": 738,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 710,
											"end": 738,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 622,
											"end": 653,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 622,
											"end": 653,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 622,
											"end": 653,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 622,
											"end": 653,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 622,
											"end": 653,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 622,
											"end": 653,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 622,
											"end": 653,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 221,
											"end": 251,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 221,
											"end": 251,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 221,
											"end": 251,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 221,
											"end": 251,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 221,
											"end": 251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 221,
											"end": 251,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 221,
											"end": 251,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 221,
											"end": 251,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 221,
											"end": 251,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2244,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4527,
											"end": 4531,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4597,
											"end": 4604,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4581,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4630,
											"end": 4634,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4630,
											"end": 4634,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1207,
											"end": 1412,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1207,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1305,
											"end": 1309,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1356,
											"end": 1365,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1403,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 1377,
											"end": 1383,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1385,
											"end": 1394,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1396,
											"end": 1402,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 1367,
											"end": 1403,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1367,
											"end": 1403,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 1367,
											"end": 1403,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1329,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 1329,
											"end": 1404,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1329,
											"end": 1404,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1329,
											"end": 1404,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1404,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1404,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1412,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 1207,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1412,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1412,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1412,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1412,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1412,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1412,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5946,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5996,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6059,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5996,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 5996,
											"end": 6060,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2493,
											"end": 2755,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2493,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2622,
											"end": 2634,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2622,
											"end": 2650,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2650,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2650,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2650,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2661,
											"end": 2672,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2661,
											"end": 2687,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2661,
											"end": 2687,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2661,
											"end": 2687,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2661,
											"end": 2687,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2698,
											"end": 2705,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 2735,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 2727,
											"end": 2747,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2493,
											"end": 2755,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1888,
											"end": 1918,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1888,
											"end": 1918,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1888,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2457,
											"end": 2464,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6766,
											"end": 6773,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6812,
											"end": 6827,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6808,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6846,
											"end": 6848,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6828,
											"end": 6849,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6885,
											"end": 6887,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6858,
											"end": 6888,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6924,
											"end": 6958,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 6904,
											"end": 6922,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6904,
											"end": 6922,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6904,
											"end": 6922,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6897,
											"end": 6959,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6975,
											"end": 6993,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6975,
											"end": 6993,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6975,
											"end": 6993,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6968,
											"end": 7003,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7020,
											"end": 7039,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 7020,
											"end": 7039,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 6912,
											"end": 6917,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6919,
											"end": 6926,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6947,
											"end": 6962,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 6944,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 6962,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6903,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6991,
											"end": 6995,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6991,
											"end": 6995,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1022,
											"end": 1199,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 1022,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1100,
											"end": 1104,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1124,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 1139,
											"end": 1148,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1150,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 1160,
											"end": 1170,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1172,
											"end": 1181,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1183,
											"end": 1189,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1150,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 1150,
											"end": 1190,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1150,
											"end": 1190,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 1150,
											"end": 1190,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1124,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 1124,
											"end": 1191,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4076,
											"end": 4083,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4113,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3697,
											"end": 3699,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3679,
											"end": 3700,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3736,
											"end": 3738,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3716,
											"end": 3734,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3716,
											"end": 3734,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3716,
											"end": 3734,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3709,
											"end": 3739,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3775,
											"end": 3809,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 3755,
											"end": 3773,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3755,
											"end": 3773,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3755,
											"end": 3773,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3748,
											"end": 3810,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3826,
											"end": 3844,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3826,
											"end": 3844,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 3844,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3819,
											"end": 3855,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3872,
											"end": 3891,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3872,
											"end": 3891,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 3669,
											"end": 3897,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2256,
											"end": 2264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2237,
											"end": 2265,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2237,
											"end": 2265,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2237,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6441,
											"end": 6443,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6423,
											"end": 6444,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6480,
											"end": 6482,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6460,
											"end": 6478,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6460,
											"end": 6478,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6460,
											"end": 6478,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6483,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6519,
											"end": 6553,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 6499,
											"end": 6517,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6499,
											"end": 6517,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6499,
											"end": 6517,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6492,
											"end": 6554,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6570,
											"end": 6588,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6570,
											"end": 6588,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6570,
											"end": 6588,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6563,
											"end": 6597,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6614,
											"end": 6633,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 6614,
											"end": 6633,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 6413,
											"end": 6639,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4104,
											"end": 4106,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4086,
											"end": 4107,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4145,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 4123,
											"end": 4141,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4123,
											"end": 4141,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4123,
											"end": 4141,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4116,
											"end": 4146,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4182,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4155,
											"end": 4217,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4233,
											"end": 4251,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4233,
											"end": 4251,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4251,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4226,
											"end": 4258,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4275,
											"end": 4294,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4275,
											"end": 4294,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 4076,
											"end": 4300,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10718,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7196,
											"end": 7221,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7196,
											"end": 7221,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7196,
											"end": 7221,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7169,
											"end": 7187,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1420,
											"end": 2485,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 1420,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1508,
											"end": 1515,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1532,
											"end": 1549,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1532,
											"end": 1549,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 331,
											"end": 373,
											"name": "PUSH",
											"source": 5,
											"value": "DEAD"
										},
										{
											"begin": 1532,
											"end": 1549,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1532,
											"end": 1549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1532,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 1532,
											"end": 1570,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1532,
											"end": 1570,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 1532,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1532,
											"end": 1599,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1532,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 1532,
											"end": 1599,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1584,
											"end": 1599,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1584,
											"end": 1599,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1574,
											"end": 1599,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1574,
											"end": 1599,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1574,
											"end": 1599,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1584,
											"end": 1599,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1584,
											"end": 1599,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1574,
											"end": 1599,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1532,
											"end": 1599,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 1532,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1532,
											"end": 1627,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1532,
											"end": 1627,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 1532,
											"end": 1627,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1613,
											"end": 1627,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1613,
											"end": 1627,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1603,
											"end": 1627,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1603,
											"end": 1627,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1603,
											"end": 1627,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1627,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1627,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1603,
											"end": 1627,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1532,
											"end": 1627,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 1532,
											"end": 1627,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1528,
											"end": 1669,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1528,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 1528,
											"end": 1669,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1651,
											"end": 1657,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 1644,
											"end": 1657,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1528,
											"end": 1669,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 1528,
											"end": 1669,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1681,
											"end": 1707,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1734,
											"end": 1739,
											"name": "PUSH",
											"source": 5,
											"value": "2710"
										},
										{
											"begin": 1719,
											"end": 1731,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1719,
											"end": 1731,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 1710,
											"end": 1731,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1731,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 1710,
											"end": 1731,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1710,
											"end": 1731,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 1710,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1739,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 1710,
											"end": 1739,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1739,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1739,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 1710,
											"end": 1739,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1710,
											"end": 1739,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 1710,
											"end": 1739,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1681,
											"end": 1739,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1681,
											"end": 1739,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1775,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1801,
											"end": 1806,
											"name": "PUSH",
											"source": 5,
											"value": "2710"
										},
										{
											"begin": 1787,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1787,
											"end": 1798,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1784,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 1778,
											"end": 1798,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1798,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 1778,
											"end": 1798,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1778,
											"end": 1798,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 1778,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 1778,
											"end": 1806,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1806,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 1778,
											"end": 1806,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1778,
											"end": 1806,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 1778,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1835,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1863,
											"name": "PUSH",
											"source": 5,
											"value": "2710"
										},
										{
											"begin": 1847,
											"end": 1855,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 1847,
											"end": 1855,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1844,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 1838,
											"end": 1855,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1855,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 1838,
											"end": 1855,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1838,
											"end": 1855,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 1838,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1893,
											"end": 1908,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1893,
											"end": 1908,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1863,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1863,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1880,
											"end": 1908,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1880,
											"end": 1908,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1880,
											"end": 1908,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1893,
											"end": 1908,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1893,
											"end": 1908,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1880,
											"end": 1908,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1876,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 1876,
											"end": 1988,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1955,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1940,
											"end": 1955,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1925,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 1925,
											"end": 1976,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1940,
											"end": 1955,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1957,
											"end": 1975,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1925,
											"end": 1939,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 1925,
											"end": 1976,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1925,
											"end": 1976,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 1925,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1925,
											"end": 1976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1876,
											"end": 1988,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 1876,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2004,
											"end": 2031,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2031,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2031,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2031,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 2000,
											"end": 2109,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2063,
											"end": 2077,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2063,
											"end": 2077,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2097,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 2048,
											"end": 2097,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2063,
											"end": 2077,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2079,
											"end": 2096,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2062,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2048,
											"end": 2097,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2048,
											"end": 2097,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 2048,
											"end": 2097,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2097,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2109,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 2000,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2121,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 2127,
											"end": 2133,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2145,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2121,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 2121,
											"end": 2146,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2121,
											"end": 2146,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 2121,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2209,
											"end": 2224,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2209,
											"end": 2224,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2159,
											"end": 2180,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2159,
											"end": 2180,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2209,
											"end": 2224,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2209,
											"end": 2224,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2199,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 2199,
											"end": 2252,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2238,
											"end": 2252,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2238,
											"end": 2252,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2228,
											"end": 2252,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2228,
											"end": 2252,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2228,
											"end": 2252,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2238,
											"end": 2252,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2238,
											"end": 2252,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2228,
											"end": 2252,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2228,
											"end": 2252,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2199,
											"end": 2252,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 2199,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2195,
											"end": 2382,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2195,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 2195,
											"end": 2382,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2309,
											"name": "PUSH",
											"source": 5,
											"value": "2710"
										},
										{
											"begin": 2294,
											"end": 2301,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 2294,
											"end": 2301,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2285,
											"end": 2291,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2285,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 2285,
											"end": 2301,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2285,
											"end": 2301,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2285,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 2285,
											"end": 2301,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2285,
											"end": 2301,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 2285,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2285,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 2285,
											"end": 2309,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2285,
											"end": 2309,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2285,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 2285,
											"end": 2309,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2285,
											"end": 2309,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 2285,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2354,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2339,
											"end": 2354,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2309,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2309,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2324,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 2324,
											"end": 2370,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2339,
											"end": 2354,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2309,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2324,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2324,
											"end": 2370,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2324,
											"end": 2370,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 2324,
											"end": 2370,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2324,
											"end": 2370,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2195,
											"end": 2382,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 2195,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2464,
											"end": 2477,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2461,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2448,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2401,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 2410,
											"end": 2428,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2401,
											"end": 2407,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 2401,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 2401,
											"end": 2428,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2401,
											"end": 2428,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 2401,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2401,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 2401,
											"end": 2448,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2401,
											"end": 2448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2401,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 2401,
											"end": 2448,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2401,
											"end": 2448,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 2401,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2401,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 2401,
											"end": 2461,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2401,
											"end": 2461,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2401,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 2401,
											"end": 2461,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2401,
											"end": 2461,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 2401,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2401,
											"end": 2477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 2401,
											"end": 2477,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2401,
											"end": 2477,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2401,
											"end": 2477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 2401,
											"end": 2477,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2401,
											"end": 2477,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 2401,
											"end": 2477,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2394,
											"end": 2477,
											"name": "SWAP9",
											"source": 5
										},
										{
											"begin": 1420,
											"end": 2485,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1420,
											"end": 2485,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5300,
											"end": 5304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 5372,
											"end": 5376,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5387,
											"end": 5393,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5356,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 5414,
											"end": 5418,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5422,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5424,
											"end": 5430,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5404,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5272,
											"end": 5274,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5254,
											"end": 5275,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5254,
											"end": 5275,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5254,
											"end": 5275,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5291,
											"end": 5309,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5291,
											"end": 5309,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5291,
											"end": 5309,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5314,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5350,
											"end": 5384,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 5330,
											"end": 5348,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5330,
											"end": 5348,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5330,
											"end": 5348,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5323,
											"end": 5385,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5402,
											"end": 5420,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5402,
											"end": 5420,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 5244,
											"end": 5426,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3819,
											"end": 3823,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3873,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3890,
											"end": 3892,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3894,
											"end": 3900,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3873,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 3873,
											"end": 3901,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9375,
											"end": 10034,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 9375,
											"end": 10034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9458,
											"end": 9479,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9458,
											"end": 9479,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5633,
											"end": 5635,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5615,
											"end": 5636,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5672,
											"end": 5674,
											"name": "PUSH",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 5652,
											"end": 5670,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5652,
											"end": 5670,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5652,
											"end": 5670,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5645,
											"end": 5675,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5711,
											"end": 5745,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 5691,
											"end": 5709,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5691,
											"end": 5709,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5691,
											"end": 5709,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5746,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5762,
											"end": 5780,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5762,
											"end": 5780,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5762,
											"end": 5780,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5786,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5803,
											"end": 5822,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 5803,
											"end": 5822,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 5605,
											"end": 5828,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9588,
											"end": 9610,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9649,
											"end": 9673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9649,
											"end": 9673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9649,
											"end": 9673,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9649,
											"end": 9673,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3296,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3276,
											"end": 3297,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3335,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 3313,
											"end": 3331,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3313,
											"end": 3331,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3313,
											"end": 3331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3306,
											"end": 3336,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3372,
											"end": 3406,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
										},
										{
											"begin": 3352,
											"end": 3370,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3352,
											"end": 3370,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3370,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3345,
											"end": 3407,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3423,
											"end": 3441,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3423,
											"end": 3441,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 3441,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3416,
											"end": 3448,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3484,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3465,
											"end": 3484,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 3266,
											"end": 3490,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9767,
											"end": 9790,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9767,
											"end": 9790,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9767,
											"end": 9790,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9790,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9895,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7196,
											"end": 7221,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7196,
											"end": 7221,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7196,
											"end": 7221,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9746,
											"end": 9755,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9755,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7169,
											"end": 7187,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 7151,
											"end": 7227,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11202,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 11215,
											"end": 11220,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11222,
											"end": 11229,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11205,
											"end": 11214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11244,
											"end": 11260,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11244,
											"end": 11281,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11325,
											"end": 11331,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11305,
											"end": 11321,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4507,
											"end": 4509,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4489,
											"end": 4510,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4546,
											"end": 4548,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 4526,
											"end": 4544,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4526,
											"end": 4544,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4544,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4519,
											"end": 4549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4565,
											"end": 4583,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4565,
											"end": 4583,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4565,
											"end": 4583,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4558,
											"end": 4617,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4634,
											"end": 4652,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4634,
											"end": 4652,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 4479,
											"end": 4658,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 11416,
											"end": 11421,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11423,
											"end": 11430,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11451,
											"end": 11457,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11432,
											"end": 11448,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11432,
											"end": 11457,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11407,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6035,
											"end": 6037,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6017,
											"end": 6038,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6074,
											"end": 6076,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 6054,
											"end": 6072,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6054,
											"end": 6072,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6054,
											"end": 6072,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6047,
											"end": 6077,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6113,
											"end": 6147,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 6093,
											"end": 6111,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6093,
											"end": 6111,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6111,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6086,
											"end": 6148,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6164,
											"end": 6182,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6164,
											"end": 6182,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6164,
											"end": 6182,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6157,
											"end": 6192,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6209,
											"end": 6228,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 6209,
											"end": 6228,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 6007,
											"end": 6234,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2890,
											"end": 2892,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 2893,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2929,
											"end": 2931,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2909,
											"end": 2927,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2909,
											"end": 2927,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2909,
											"end": 2927,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 2932,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 3002,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2948,
											"end": 2966,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2948,
											"end": 2966,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2966,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2941,
											"end": 3003,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3019,
											"end": 3037,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3019,
											"end": 3037,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3037,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3012,
											"end": 3045,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3062,
											"end": 3081,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3062,
											"end": 3081,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2862,
											"end": 3087,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7746,
											"end": 7765,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4865,
											"end": 4867,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4847,
											"end": 4868,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4904,
											"end": 4906,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 4884,
											"end": 4902,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4884,
											"end": 4902,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4884,
											"end": 4902,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4877,
											"end": 4907,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4943,
											"end": 4977,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4916,
											"end": 4978,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4994,
											"end": 5012,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4994,
											"end": 5012,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4994,
											"end": 5012,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4987,
											"end": 5023,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5040,
											"end": 5059,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 5040,
											"end": 5059,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 4837,
											"end": 5065,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7908,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7196,
											"end": 7221,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7196,
											"end": 7221,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7196,
											"end": 7221,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7169,
											"end": 7187,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 8200,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 9375,
											"end": 10034,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 111,
											"end": 113,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 192,
											"end": 388,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 192,
											"end": 388,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 192,
											"end": 388,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 272,
											"end": 274,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 272,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 272,
											"end": 274,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 325,
											"end": 331,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 317,
											"end": 323,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 310,
											"end": 332,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 272,
											"end": 274,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 272,
											"end": 274,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 353,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 372,
											"end": 381,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 353,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 353,
											"end": 382,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 393,
											"end": 663,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 393,
											"end": 663,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 393,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 393,
											"end": 663,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 522,
											"end": 524,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 501,
											"end": 508,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 497,
											"end": 520,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 493,
											"end": 525,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 490,
											"end": 492,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 490,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 490,
											"end": 492,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 543,
											"end": 549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 535,
											"end": 541,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 528,
											"end": 550,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 490,
											"end": 492,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 490,
											"end": 492,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 571,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 590,
											"end": 599,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 571,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 571,
											"end": 600,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 571,
											"end": 600,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 571,
											"end": 600,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 561,
											"end": 600,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 561,
											"end": 600,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 619,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 653,
											"end": 655,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 642,
											"end": 651,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 638,
											"end": 656,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 619,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 619,
											"end": 657,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 619,
											"end": 657,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 619,
											"end": 657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 609,
											"end": 657,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 609,
											"end": 657,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 480,
											"end": 663,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 480,
											"end": 663,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 480,
											"end": 663,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 480,
											"end": 663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 480,
											"end": 663,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 480,
											"end": 663,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 668,
											"end": 1006,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 668,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 668,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 668,
											"end": 1006,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 668,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 814,
											"end": 816,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 793,
											"end": 800,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 789,
											"end": 812,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 785,
											"end": 817,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 782,
											"end": 784,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 782,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 782,
											"end": 784,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 835,
											"end": 841,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 827,
											"end": 833,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 820,
											"end": 842,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 782,
											"end": 784,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 782,
											"end": 784,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 863,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 882,
											"end": 891,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 863,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 863,
											"end": 892,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 863,
											"end": 892,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 863,
											"end": 892,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 853,
											"end": 892,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 853,
											"end": 892,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 911,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 945,
											"end": 947,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 934,
											"end": 943,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 930,
											"end": 948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 911,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 911,
											"end": 949,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 911,
											"end": 949,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 911,
											"end": 949,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 901,
											"end": 949,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 901,
											"end": 949,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 996,
											"end": 998,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 994,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 981,
											"end": 999,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 968,
											"end": 1000,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 958,
											"end": 1000,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 958,
											"end": 1000,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1011,
											"end": 1275,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1011,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1011,
											"end": 1275,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1011,
											"end": 1275,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1140,
											"end": 1142,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1128,
											"end": 1137,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1119,
											"end": 1126,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1138,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1161,
											"end": 1167,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1153,
											"end": 1159,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1146,
											"end": 1168,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1179,
											"end": 1218,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1267,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1237,
											"end": 1269,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1237,
											"end": 1269,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1098,
											"end": 1275,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1280,
											"end": 1675,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1280,
											"end": 1675,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1675,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1675,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1675,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1675,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1443,
											"end": 1446,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1431,
											"end": 1440,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1418,
											"end": 1441,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1414,
											"end": 1447,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1411,
											"end": 1413,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1411,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 1411,
											"end": 1413,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1465,
											"end": 1471,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1457,
											"end": 1463,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1411,
											"end": 1413,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 1411,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1493,
											"end": 1516,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1493,
											"end": 1516,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1493,
											"end": 1516,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1565,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1548,
											"end": 1566,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1566,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1567,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1567,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1614,
											"end": 1616,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1599,
											"end": 1617,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1599,
											"end": 1617,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1586,
											"end": 1618,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1586,
											"end": 1618,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1665,
											"end": 1667,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1650,
											"end": 1668,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1637,
											"end": 1669,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1637,
											"end": 1669,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1401,
											"end": 1675,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1401,
											"end": 1675,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2080,
											"end": 2683,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 2080,
											"end": 2683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2080,
											"end": 2683,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2221,
											"end": 2223,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2250,
											"end": 2252,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2239,
											"end": 2248,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2253,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2282,
											"end": 2288,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2276,
											"end": 2289,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2325,
											"end": 2331,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 2322,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2318,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2323,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2298,
											"end": 2332,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2350,
											"end": 2354,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2363,
											"end": 2503,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 2363,
											"end": 2503,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2383,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2375,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2371,
											"end": 2384,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2363,
											"end": 2503,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2363,
											"end": 2503,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 2363,
											"end": 2503,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2472,
											"end": 2486,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2472,
											"end": 2486,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2472,
											"end": 2486,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2468,
											"end": 2491,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2468,
											"end": 2491,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2462,
											"end": 2492,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2457,
											"end": 2459,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2434,
											"end": 2460,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2427,
											"end": 2493,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2392,
											"end": 2402,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2392,
											"end": 2402,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2363,
											"end": 2503,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 2363,
											"end": 2503,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2363,
											"end": 2503,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 2363,
											"end": 2503,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2519,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2515,
											"end": 2528,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2512,
											"end": 2514,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2512,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 2512,
											"end": 2514,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2591,
											"end": 2595,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2586,
											"end": 2588,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2577,
											"end": 2583,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2566,
											"end": 2575,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2584,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2558,
											"end": 2589,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2596,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2512,
											"end": 2514,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 2512,
											"end": 2514,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2667,
											"end": 2669,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2646,
											"end": 2661,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2642,
											"end": 2671,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2627,
											"end": 2672,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2627,
											"end": 2672,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2627,
											"end": 2672,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2627,
											"end": 2672,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2674,
											"end": 2676,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2623,
											"end": 2677,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 2677,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2201,
											"end": 2683,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2201,
											"end": 2683,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7421,
											"end": 7549,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 7421,
											"end": 7549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7421,
											"end": 7549,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7492,
											"end": 7493,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7488,
											"end": 7494,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7485,
											"end": 7486,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7482,
											"end": 7495,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7479,
											"end": 7481,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7479,
											"end": 7481,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 7479,
											"end": 7481,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7498,
											"end": 7516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 7498,
											"end": 7516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 7498,
											"end": 7516,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7498,
											"end": 7516,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 7498,
											"end": 7516,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7534,
											"end": 7543,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7534,
											"end": 7543,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7469,
											"end": 7549,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7554,
											"end": 7771,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 7554,
											"end": 7771,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7554,
											"end": 7771,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7620,
											"end": 7621,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7610,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 7610,
											"end": 7612,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7645,
											"end": 7676,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7645,
											"end": 7676,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7699,
											"end": 7703,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 7696,
											"end": 7697,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7689,
											"end": 7704,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7727,
											"end": 7731,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7652,
											"end": 7653,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7717,
											"end": 7732,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7610,
											"end": 7612,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 7610,
											"end": 7612,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7756,
											"end": 7765,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 7756,
											"end": 7765,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7600,
											"end": 7771,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7776,
											"end": 7944,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 7776,
											"end": 7944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7776,
											"end": 7944,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7882,
											"end": 7883,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7878,
											"end": 7879,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7874,
											"end": 7880,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7870,
											"end": 7884,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 7867,
											"end": 7868,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7864,
											"end": 7885,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7859,
											"end": 7860,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7852,
											"end": 7861,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7845,
											"end": 7862,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7841,
											"end": 7886,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7838,
											"end": 7840,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7838,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 7838,
											"end": 7840,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7889,
											"end": 7907,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 7889,
											"end": 7907,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 7889,
											"end": 7907,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7889,
											"end": 7907,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 7889,
											"end": 7907,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7929,
											"end": 7938,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7929,
											"end": 7938,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7828,
											"end": 7944,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7949,
											"end": 8074,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 7949,
											"end": 8074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 8074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8017,
											"end": 8018,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8014,
											"end": 8015,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8011,
											"end": 8019,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8008,
											"end": 8010,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8008,
											"end": 8010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 8008,
											"end": 8010,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8022,
											"end": 8040,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 8022,
											"end": 8040,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 8022,
											"end": 8040,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8022,
											"end": 8040,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 8022,
											"end": 8040,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8059,
											"end": 8068,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8059,
											"end": 8068,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7998,
											"end": 8074,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8079,
											"end": 8459,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 8079,
											"end": 8459,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8164,
											"end": 8165,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 8154,
											"end": 8166,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8154,
											"end": 8166,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 8211,
											"end": 8212,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8222,
											"end": 8224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 8222,
											"end": 8224,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8276,
											"end": 8280,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 8268,
											"end": 8274,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8264,
											"end": 8281,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8254,
											"end": 8281,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8254,
											"end": 8281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8222,
											"end": 8224,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 8222,
											"end": 8224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8329,
											"end": 8331,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8321,
											"end": 8327,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8318,
											"end": 8332,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8298,
											"end": 8316,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8295,
											"end": 8333,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8292,
											"end": 8294,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8292,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 8292,
											"end": 8294,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8375,
											"end": 8385,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 8370,
											"end": 8373,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 8366,
											"end": 8386,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8364,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8356,
											"end": 8387,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8414,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 8407,
											"end": 8408,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8400,
											"end": 8415,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8438,
											"end": 8442,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8435,
											"end": 8436,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8428,
											"end": 8443,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8292,
											"end": 8294,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 8292,
											"end": 8294,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8292,
											"end": 8294,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8134,
											"end": 8459,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8134,
											"end": 8459,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8134,
											"end": 8459,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8134,
											"end": 8459,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8464,
											"end": 8591,
											"name": "tag",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 8464,
											"end": 8591,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8525,
											"end": 8535,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 8520,
											"end": 8523,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 8516,
											"end": 8536,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 8513,
											"end": 8514,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8506,
											"end": 8537,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8556,
											"end": 8560,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 8553,
											"end": 8554,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8546,
											"end": 8561,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8580,
											"end": 8584,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8577,
											"end": 8578,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8570,
											"end": 8585,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"DEAD()": "03fd2a45",
							"INITIAL_SUPPLY()": "2ff2e9dc",
							"ZERO()": "58fa63ca",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burnRate()": "bed99850",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"liquidityFee()": "98118cb4",
							"liquidityWallet()": "d4698016",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"sellFee()": "2b14ca56",
							"setFees(uint256,uint256,uint256,uint256)": "6fcba377",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"treasuryFee()": "cc32d176",
							"treasuryWallet()": "4626402b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_liquidityWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_treasuryWallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEAD\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZERO\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_liquidityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_treasuryFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sellFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_burnRate\",\"type\":\"uint256\"}],\"name\":\"setFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MemeTokenBase/memetoken.sol\":\"MemeTokenTest\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/MemeTokenBase/memetoken.sol\":{\"keccak256\":\"0x8c19e8f42a28a41fd5886b9afcd0afe725fcc288c871112b3a875c742930fc0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6fafbce65761e4b1922a40d4f751695b4ff03a60cd279903036ee19f749cb98\",\"dweb:/ipfs/Qme2J5sqsdy7rJBBA57j22qcjiHevQHaFz29E4v2aFWNhH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 128,
								"contract": "contracts/MemeTokenBase/memetoken.sol:MemeTokenTest",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 134,
								"contract": "contracts/MemeTokenBase/memetoken.sol:MemeTokenTest",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 136,
								"contract": "contracts/MemeTokenBase/memetoken.sol:MemeTokenTest",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 138,
								"contract": "contracts/MemeTokenBase/memetoken.sol:MemeTokenTest",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 140,
								"contract": "contracts/MemeTokenBase/memetoken.sol:MemeTokenTest",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 7,
								"contract": "contracts/MemeTokenBase/memetoken.sol:MemeTokenTest",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 834,
								"contract": "contracts/MemeTokenBase/memetoken.sol:MemeTokenTest",
								"label": "liquidityWallet",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 836,
								"contract": "contracts/MemeTokenBase/memetoken.sol:MemeTokenTest",
								"label": "treasuryWallet",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 853,
								"contract": "contracts/MemeTokenBase/memetoken.sol:MemeTokenTest",
								"label": "liquidityFee",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 856,
								"contract": "contracts/MemeTokenBase/memetoken.sol:MemeTokenTest",
								"label": "treasuryFee",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 859,
								"contract": "contracts/MemeTokenBase/memetoken.sol:MemeTokenTest",
								"label": "sellFee",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 862,
								"contract": "contracts/MemeTokenBase/memetoken.sol:MemeTokenTest",
								"label": "burnRate",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							824
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 825,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 824,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"contractDependencies": [
								824
							],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								824
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 814,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 814,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1878:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1907:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1907:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1907:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1888:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1888:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1888:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1868:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1868:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1833:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:0:0"
									},
									"scope": 112,
									"src": "1824:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2144:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2162:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2182:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2174:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2174:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2174:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2162:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2186:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2154:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2154:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2256:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2237:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2237:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1931:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2134:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2083:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2109:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2101:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:0"
									},
									"scope": 112,
									"src": "2074:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2489:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2507:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2499:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2499:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2518:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2499:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2534:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2543:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2534:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2534:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2587:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2597:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2566:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2561:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2278:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2435:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2462:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2454:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2453:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:0"
									},
									"scope": 112,
									"src": "2426:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1961:0"
						}
					],
					"src": "102:2514:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							824
						],
						"ERC20": [
							699
						],
						"IERC20": [
							777
						],
						"IERC20Metadata": [
							802
						]
					},
					"id": 700,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 115,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 700,
							"sourceUnit": 778,
							"src": "130:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 116,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 700,
							"sourceUnit": 803,
							"src": "153:41:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 117,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 700,
							"sourceUnit": 825,
							"src": "195:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 119,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 824,
										"src": "1550:7:1"
									},
									"id": 120,
									"nodeType": "InheritanceSpecifier",
									"src": "1550:7:1"
								},
								{
									"baseName": {
										"id": 121,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 777,
										"src": "1559:6:1"
									},
									"id": 122,
									"nodeType": "InheritanceSpecifier",
									"src": "1559:6:1"
								},
								{
									"baseName": {
										"id": 123,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 802,
										"src": "1567:14:1"
									},
									"id": 124,
									"nodeType": "InheritanceSpecifier",
									"src": "1567:14:1"
								}
							],
							"contractDependencies": [
								777,
								802,
								824
							],
							"contractKind": "contract",
							"documentation": {
								"id": 118,
								"nodeType": "StructuredDocumentation",
								"src": "230:1301:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 699,
							"linearizedBaseContracts": [
								699,
								802,
								777,
								824
							],
							"name": "ERC20",
							"nameLocation": "1541:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 128,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1624:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 699,
									"src": "1588:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 127,
										"keyType": {
											"id": 125,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1596:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1588:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 126,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1607:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 134,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1696:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 699,
									"src": "1640:67:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 133,
										"keyType": {
											"id": 129,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1648:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1640:47:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 132,
											"keyType": {
												"id": 130,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1667:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1659:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 131,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 136,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1730:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 699,
									"src": "1714:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 135,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1714:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 138,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1764:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 699,
									"src": "1749:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 137,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1749:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 140,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1790:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 699,
									"src": "1775:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 139,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1775:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "2036:57:1",
										"statements": [
											{
												"expression": {
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 148,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "2046:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 149,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "2054:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2046:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "2046:13:1"
											},
											{
												"expression": {
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 152,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "2069:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 153,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "2079:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2069:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "2069:17:1"
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "1804:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 157,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2006:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1992:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 142,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1992:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2027:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "2013:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 144,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2013:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1991:44:1"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2036:0:1"
									},
									"scope": 699,
									"src": "1980:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										789
									],
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "2227:29:1",
										"statements": [
											{
												"expression": {
													"id": 164,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 138,
													"src": "2244:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 163,
												"id": 165,
												"nodeType": "Return",
												"src": "2237:12:1"
											}
										]
									},
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "2099:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2167:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 160,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2194:8:1"
									},
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2171:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "2212:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 161,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2212:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2211:15:1"
									},
									"scope": 699,
									"src": "2158:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										795
									],
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "2440:31:1",
										"statements": [
											{
												"expression": {
													"id": 174,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 140,
													"src": "2457:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 173,
												"id": 175,
												"nodeType": "Return",
												"src": "2450:14:1"
											}
										]
									},
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "2262:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2378:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 170,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2407:8:1"
									},
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2384:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2425:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 171,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2425:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2424:15:1"
									},
									"scope": 699,
									"src": "2369:102:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										801
									],
									"body": {
										"id": 186,
										"nodeType": "Block",
										"src": "3169:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3186:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 183,
												"id": 185,
												"nodeType": "Return",
												"src": "3179:9:1"
											}
										]
									},
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "2477:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3113:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 180,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3144:8:1"
									},
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3121:2:1"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "3162:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 181,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3162:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3161:7:1"
									},
									"scope": 699,
									"src": "3104:91:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										726
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "3325:36:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 136,
													"src": "3342:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "3335:19:1"
											}
										]
									},
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "3201:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3264:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 190,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3298:8:1"
									},
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3275:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "3316:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3316:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3315:9:1"
									},
									"scope": 699,
									"src": "3255:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										734
									],
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "3502:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 206,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "3519:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 208,
													"indexExpression": {
														"id": 207,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "3529:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3519:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 205,
												"id": 209,
												"nodeType": "Return",
												"src": "3512:25:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "3367:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3428:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 202,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3475:8:1"
									},
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3446:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "3438:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3438:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3437:17:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "3493:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3493:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3492:9:1"
									},
									"scope": 699,
									"src": "3419:125:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										744
									],
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "3825:104:1",
										"statements": [
											{
												"assignments": [
													223
												],
												"declarations": [
													{
														"constant": false,
														"id": 223,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3843:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 235,
														"src": "3835:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 222,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3835:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 226,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 224,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "3851:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3851:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3835:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 228,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "3883:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 229,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "3890:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 230,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "3894:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 227,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "3873:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3873:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "3873:28:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3918:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 221,
												"id": 234,
												"nodeType": "Return",
												"src": "3911:11:1"
											}
										]
									},
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3550:185:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3749:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 218,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3801:8:1"
									},
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3766:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "3758:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3758:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3778:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "3770:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3770:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3757:28:1"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "3819:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 219,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3819:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:6:1"
									},
									"scope": 699,
									"src": "3740:189:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "4085:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 247,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "4102:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 249,
														"indexExpression": {
															"id": 248,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "4114:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4102:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 251,
													"indexExpression": {
														"id": 250,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "4121:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4102:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 246,
												"id": 252,
												"nodeType": "Return",
												"src": "4095:34:1"
											}
										]
									},
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "3935:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3996:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 243,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4058:8:1"
									},
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4014:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "4006:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4029:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "4021:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4021:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:32:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "4076:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4076:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4075:9:1"
									},
									"scope": 699,
									"src": "3987:149:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										764
									],
									"body": {
										"id": 278,
										"nodeType": "Block",
										"src": "4533:108:1",
										"statements": [
											{
												"assignments": [
													266
												],
												"declarations": [
													{
														"constant": false,
														"id": 266,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4551:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 278,
														"src": "4543:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 265,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4543:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 269,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 267,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "4559:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4559:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4543:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 271,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "4590:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 272,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "4597:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 273,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "4606:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 270,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "4581:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4581:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "4581:32:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4630:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 264,
												"id": 277,
												"nodeType": "Return",
												"src": "4623:11:1"
											}
										]
									},
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "4142:297:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4453:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 261,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4509:8:1"
									},
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4469:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "4461:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4461:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4486:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "4478:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4478:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4460:33:1"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "4527:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 262,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4527:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4526:6:1"
									},
									"scope": 699,
									"src": "4444:197:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										776
									],
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "5306:153:1",
										"statements": [
											{
												"assignments": [
													293
												],
												"declarations": [
													{
														"constant": false,
														"id": 293,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5324:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 311,
														"src": "5316:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 292,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5316:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 296,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 294,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "5334:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5334:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5316:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 298,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "5372:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 299,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "5378:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 300,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "5387:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 297,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 676,
														"src": "5356:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5356:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "5356:38:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 304,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "5414:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 305,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "5420:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 306,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "5424:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 303,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "5404:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5404:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "5404:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5448:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 291,
												"id": 310,
												"nodeType": "Return",
												"src": "5441:11:1"
											}
										]
									},
									"documentation": {
										"id": 280,
										"nodeType": "StructuredDocumentation",
										"src": "4647:551:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5212:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 288,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5282:8:1"
									},
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5233:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "5225:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5225:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5247:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "5239:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5239:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5259:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "5251:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5251:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5224:42:1"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "5300:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 289,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5300:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5299:6:1"
									},
									"scope": 699,
									"src": "5203:256:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "5948:140:1",
										"statements": [
											{
												"assignments": [
													323
												],
												"declarations": [
													{
														"constant": false,
														"id": 323,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5966:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 340,
														"src": "5958:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 322,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5958:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 326,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 324,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "5974:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5974:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5958:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 328,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "6005:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 329,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "6012:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 331,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 323,
																		"src": "6031:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 332,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 315,
																		"src": "6038:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 330,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "6021:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6021:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 334,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 317,
																"src": "6049:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6021:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 327,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "5996:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5996:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 337,
												"nodeType": "ExpressionStatement",
												"src": "5996:64:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6077:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 321,
												"id": 339,
												"nodeType": "Return",
												"src": "6070:11:1"
											}
										]
									},
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "5465:384:1",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5863:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5889:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5881:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5881:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5906:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5898:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5880:37:1"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5942:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 319,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5942:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5941:6:1"
									},
									"scope": 699,
									"src": "5854:234:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "6674:328:1",
										"statements": [
											{
												"assignments": [
													352
												],
												"declarations": [
													{
														"constant": false,
														"id": 352,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6692:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 381,
														"src": "6684:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 351,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6684:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 355,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 353,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "6700:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6700:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6684:28:1"
											},
											{
												"assignments": [
													357
												],
												"declarations": [
													{
														"constant": false,
														"id": 357,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6730:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 381,
														"src": "6722:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 356,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6722:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 362,
												"initialValue": {
													"arguments": [
														{
															"id": 359,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "6759:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 360,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "6766:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 358,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "6749:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6749:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6722:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 364,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "6792:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 365,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 346,
																"src": "6812:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6792:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6829:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 363,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6784:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6784:85:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 369,
												"nodeType": "ExpressionStatement",
												"src": "6784:85:1"
											},
											{
												"id": 378,
												"nodeType": "UncheckedBlock",
												"src": "6879:95:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 371,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 352,
																	"src": "6912:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 372,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 344,
																	"src": "6919:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 373,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 357,
																		"src": "6928:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 374,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 346,
																		"src": "6947:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6928:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 370,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 633,
																"src": "6903:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6903:60:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 377,
														"nodeType": "ExpressionStatement",
														"src": "6903:60:1"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6991:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 350,
												"id": 380,
												"nodeType": "Return",
												"src": "6984:11:1"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "6094:476:1",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6584:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6610:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "6602:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6602:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6627:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "6619:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6619:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6601:42:1"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "6668:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 348,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6668:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6667:6:1"
									},
									"scope": 699,
									"src": "6575:427:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "7534:710:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 393,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 385,
																"src": "7552:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7568:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7560:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 394,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7560:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 397,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7560:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7552:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7572:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 392,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7544:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7544:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "7544:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 403,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 387,
																"src": "7630:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7644:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7636:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 404,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7636:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7636:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7630:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7648:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 402,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7622:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7622:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "7622:64:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 413,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "7718:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 414,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "7724:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 415,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "7728:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 412,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 687,
														"src": "7697:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7697:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "7697:38:1"
											},
											{
												"assignments": [
													419
												],
												"declarations": [
													{
														"constant": false,
														"id": 419,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "7754:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 458,
														"src": "7746:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 418,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7746:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 423,
												"initialValue": {
													"baseExpression": {
														"id": 420,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "7768:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 422,
													"indexExpression": {
														"id": 421,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "7778:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7768:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7746:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 425,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 419,
																"src": "7801:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 426,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "7816:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7801:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7824:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 424,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7793:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7793:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "7793:72:1"
											},
											{
												"id": 445,
												"nodeType": "UncheckedBlock",
												"src": "7875:273:1",
												"statements": [
													{
														"expression": {
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 431,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "7899:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 433,
																"indexExpression": {
																	"id": 432,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "7909:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7899:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 434,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "7917:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 435,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 389,
																	"src": "7931:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7917:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7899:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 438,
														"nodeType": "ExpressionStatement",
														"src": "7899:38:1"
													},
													{
														"expression": {
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 439,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "8114:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 441,
																"indexExpression": {
																	"id": 440,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "8124:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8114:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 442,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "8131:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8114:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 444,
														"nodeType": "ExpressionStatement",
														"src": "8114:23:1"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 447,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "8172:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "8178:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 449,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "8182:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 446,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "8163:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8163:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 451,
												"nodeType": "EmitStatement",
												"src": "8158:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 453,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "8220:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "8226:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 455,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "8230:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 452,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "8200:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8200:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "8200:37:1"
											}
										]
									},
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "7008:443:1",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7465:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7483:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "7475:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7475:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7497:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "7489:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7489:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7509:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "7501:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7501:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7474:42:1"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7534:0:1"
									},
									"scope": 699,
									"src": "7456:788:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "8585:470:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 468,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "8603:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8622:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8614:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 469,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8614:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8614:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8603:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8626:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 467,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8595:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8595:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 476,
												"nodeType": "ExpressionStatement",
												"src": "8595:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8700:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8692:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 478,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8692:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8692:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 482,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "8704:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 483,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "8713:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 477,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 687,
														"src": "8671:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8671:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 485,
												"nodeType": "ExpressionStatement",
												"src": "8671:49:1"
											},
											{
												"expression": {
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 486,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "8731:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 487,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "8747:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8731:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "8731:22:1"
											},
											{
												"id": 496,
												"nodeType": "UncheckedBlock",
												"src": "8763:175:1",
												"statements": [
													{
														"expression": {
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 490,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "8899:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 492,
																"indexExpression": {
																	"id": 491,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "8909:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8899:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 493,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "8921:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8899:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 495,
														"nodeType": "ExpressionStatement",
														"src": "8899:28:1"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8969:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8961:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 498,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8961:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8961:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 502,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "8973:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 503,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "8982:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 497,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "8952:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8952:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 505,
												"nodeType": "EmitStatement",
												"src": "8947:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9028:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 508,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9020:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 507,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9020:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9020:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 511,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "9032:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 512,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "9041:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 506,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "9000:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9000:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "9000:48:1"
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "8250:265:1",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8529:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8543:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "8535:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8535:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8560:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "8552:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8552:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8534:33:1"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8585:0:1"
									},
									"scope": 699,
									"src": "8520:535:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 587,
										"nodeType": "Block",
										"src": "9440:594:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 525,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "9458:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9477:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9469:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 526,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9469:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9469:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9458:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9481:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 524,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9450:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9450:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "9450:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "9549:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9566:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9558:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 536,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9558:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9558:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 540,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "9570:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 534,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 687,
														"src": "9528:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9528:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "9528:49:1"
											},
											{
												"assignments": [
													544
												],
												"declarations": [
													{
														"constant": false,
														"id": 544,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9596:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 587,
														"src": "9588:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 543,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9588:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 548,
												"initialValue": {
													"baseExpression": {
														"id": 545,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "9613:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 547,
													"indexExpression": {
														"id": 546,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "9623:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9613:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9588:43:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 550,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 544,
																"src": "9649:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 551,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 521,
																"src": "9667:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9649:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9675:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 549,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9641:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9641:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 555,
												"nodeType": "ExpressionStatement",
												"src": "9641:71:1"
											},
											{
												"id": 568,
												"nodeType": "UncheckedBlock",
												"src": "9722:194:1",
												"statements": [
													{
														"expression": {
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 556,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "9746:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 558,
																"indexExpression": {
																	"id": 557,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 519,
																	"src": "9756:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9746:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 561,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 559,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "9767:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 560,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 521,
																	"src": "9784:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9767:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9746:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 563,
														"nodeType": "ExpressionStatement",
														"src": "9746:44:1"
													},
													{
														"expression": {
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 564,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 136,
																"src": "9883:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 565,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 521,
																"src": "9899:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9883:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 567,
														"nodeType": "ExpressionStatement",
														"src": "9883:22:1"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 570,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "9940:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9957:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9949:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 571,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9949:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9949:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 575,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "9961:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 569,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "9931:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9931:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 577,
												"nodeType": "EmitStatement",
												"src": "9926:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 579,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "9999:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10016:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10008:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 580,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10008:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10008:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 584,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "10020:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 578,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "9979:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9979:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "9979:48:1"
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "9061:309:1",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9384:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9398:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "9390:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9390:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9415:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "9407:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9407:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9389:33:1"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9440:0:1"
									},
									"scope": 699,
									"src": "9375:659:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "10540:257:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 599,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 591,
																"src": "10558:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 602,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10575:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10567:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 600,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10567:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10567:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10558:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10579:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 598,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10550:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10550:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 607,
												"nodeType": "ExpressionStatement",
												"src": "10550:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 609,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "10636:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10655:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10647:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 610,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10647:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 613,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10647:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10636:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10659:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 608,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10628:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10628:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "10628:68:1"
											},
											{
												"expression": {
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 618,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 134,
																"src": "10707:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 621,
															"indexExpression": {
																"id": 619,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 591,
																"src": "10719:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10707:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 622,
														"indexExpression": {
															"id": 620,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "10726:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10707:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 623,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "10737:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10707:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 625,
												"nodeType": "ExpressionStatement",
												"src": "10707:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 627,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "10767:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 628,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "10774:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 629,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "10783:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 626,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "10758:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10758:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 631,
												"nodeType": "EmitStatement",
												"src": "10753:37:1"
											}
										]
									},
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "10040:412:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10466:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10483:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "10475:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10475:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10498:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "10490:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10490:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10515:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "10507:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10474:48:1"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10540:0:1"
									},
									"scope": 699,
									"src": "10457:340:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 675,
										"nodeType": "Block",
										"src": "11168:321:1",
										"statements": [
											{
												"assignments": [
													644
												],
												"declarations": [
													{
														"constant": false,
														"id": 644,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11186:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 675,
														"src": "11178:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 643,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11178:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 649,
												"initialValue": {
													"arguments": [
														{
															"id": 646,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "11215:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 647,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "11222:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 645,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "11205:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11205:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11178:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 650,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "11244:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11269:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 652,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11269:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 651,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11264:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 654,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11264:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 655,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11264:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11244:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 674,
												"nodeType": "IfStatement",
												"src": "11240:243:1",
												"trueBody": {
													"id": 673,
													"nodeType": "Block",
													"src": "11283:200:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 658,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 644,
																			"src": "11305:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 659,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 640,
																			"src": "11325:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11305:26:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11333:31:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 657,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11297:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11297:68:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 663,
															"nodeType": "ExpressionStatement",
															"src": "11297:68:1"
														},
														{
															"id": 672,
															"nodeType": "UncheckedBlock",
															"src": "11379:94:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 665,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 636,
																				"src": "11416:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 666,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 638,
																				"src": "11423:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 669,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 667,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 644,
																					"src": "11432:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 668,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 640,
																					"src": "11451:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11432:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 664,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 633,
																			"src": "11407:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11407:51:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 671,
																	"nodeType": "ExpressionStatement",
																	"src": "11407:51:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "10803:270:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11087:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11111:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "11103:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11103:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11126:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "11118:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11118:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11143:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "11135:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11102:48:1"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11168:0:1"
									},
									"scope": 699,
									"src": "11078:411:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 686,
										"nodeType": "Block",
										"src": "12162:2:1",
										"statements": []
									},
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "11495:573:1",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "12082:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12111:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "12103:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12103:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12125:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "12117:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12117:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12137:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "12129:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12129:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12102:42:1"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12162:0:1"
									},
									"scope": 699,
									"src": "12073:91:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 697,
										"nodeType": "Block",
										"src": "12840:2:1",
										"statements": []
									},
									"documentation": {
										"id": 688,
										"nodeType": "StructuredDocumentation",
										"src": "12170:577:1",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12761:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12789:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "12781:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12781:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12803:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "12795:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12795:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12815:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "12807:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12807:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12780:42:1"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12840:0:1"
									},
									"scope": 699,
									"src": "12752:90:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 700,
							"src": "1532:11312:1"
						}
					],
					"src": "105:12740:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							777
						]
					},
					"id": 778,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 701,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 702,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 777,
							"linearizedBaseContracts": [
								777
							],
							"name": "IERC20",
							"nameLocation": "212:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 711,
									"name": "Transfer",
									"nameLocation": "394:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "403:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "425:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "445:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:2"
									},
									"src": "388:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 712,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 720,
									"name": "Approval",
									"nameLocation": "625:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "634:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "657:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "682:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:2"
									},
									"src": "619:78:2"
								},
								{
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 726,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 777,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 727,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 734,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 777,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 735,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 744,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "1211:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "1223:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:2"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "1257:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 741,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:2"
									},
									"scope": 777,
									"src": "1193:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "1557:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "1572:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:2"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "1612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:2"
									},
									"scope": 777,
									"src": "1538:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 755,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 764,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "2291:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "2308:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:2"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "2342:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 761,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:2"
									},
									"scope": 777,
									"src": "2274:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 765,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 776,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "2668:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "2682:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "2694:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:2"
									},
									"returnParameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "2728:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 773,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:2"
									},
									"scope": 777,
									"src": "2646:88:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 778,
							"src": "202:2534:2"
						}
					],
					"src": "106:2631:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							777
						],
						"IERC20Metadata": [
							802
						]
					},
					"id": 803,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 779,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 780,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 803,
							"sourceUnit": 778,
							"src": "135:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 782,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 777,
										"src": "305:6:3"
									},
									"id": 783,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:3"
								}
							],
							"contractDependencies": [
								777
							],
							"contractKind": "interface",
							"documentation": {
								"id": 781,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 802,
							"linearizedBaseContracts": [
								802,
								777
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 784,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 789,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:3"
									},
									"returnParameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "416:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 786,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:3"
									},
									"scope": 802,
									"src": "377:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 790,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 795,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:3"
									},
									"returnParameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "539:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 792,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:3"
									},
									"scope": 802,
									"src": "498:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 796,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 801,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:3"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "673:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 798,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:3"
									},
									"scope": 802,
									"src": "630:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 803,
							"src": "277:405:3"
						}
					],
					"src": "110:573:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							824
						]
					},
					"id": 825,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 804,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 805,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 824,
							"linearizedBaseContracts": [
								824
							],
							"name": "Context",
							"nameLocation": "626:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 813,
										"nodeType": "Block",
										"src": "702:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 810,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 809,
												"id": 812,
												"nodeType": "Return",
												"src": "712:17:4"
											}
										]
									},
									"id": 814,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:4"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:4"
									},
									"scope": 824,
									"src": "640:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 822,
										"nodeType": "Block",
										"src": "809:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 819,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 818,
												"id": 821,
												"nodeType": "Return",
												"src": "819:15:4"
											}
										]
									},
									"id": 823,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:4"
									},
									"returnParameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "793:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 816,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:4"
									},
									"scope": 824,
									"src": "742:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 825,
							"src": "608:235:4"
						}
					],
					"src": "86:758:4"
				},
				"id": 4
			},
			"contracts/MemeTokenBase/memetoken.sol": {
				"ast": {
					"absolutePath": "contracts/MemeTokenBase/memetoken.sol",
					"exportedSymbols": {
						"Context": [
							824
						],
						"ERC20": [
							699
						],
						"IERC20": [
							777
						],
						"IERC20Metadata": [
							802
						],
						"MemeTokenTest": [
							1086
						],
						"Ownable": [
							112
						]
					},
					"id": 1087,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 826,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 827,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1087,
							"sourceUnit": 700,
							"src": "60:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 828,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1087,
							"sourceUnit": 113,
							"src": "117:52:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 829,
										"name": "ERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 699,
										"src": "199:5:5"
									},
									"id": 830,
									"nodeType": "InheritanceSpecifier",
									"src": "199:5:5"
								},
								{
									"baseName": {
										"id": 831,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "206:7:5"
									},
									"id": 832,
									"nodeType": "InheritanceSpecifier",
									"src": "206:7:5"
								}
							],
							"contractDependencies": [
								112,
								699,
								777,
								802,
								824
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1086,
							"linearizedBaseContracts": [
								1086,
								112,
								699,
								802,
								777,
								824
							],
							"name": "MemeTokenTest",
							"nameLocation": "182:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "d4698016",
									"id": 834,
									"mutability": "mutable",
									"name": "liquidityWallet",
									"nameLocation": "236:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 1086,
									"src": "221:30:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 833,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "221:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4626402b",
									"id": 836,
									"mutability": "mutable",
									"name": "treasuryWallet",
									"nameLocation": "273:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 1086,
									"src": "258:29:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 835,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "258:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "03fd2a45",
									"id": 839,
									"mutability": "constant",
									"name": "DEAD",
									"nameLocation": "324:4:5",
									"nodeType": "VariableDeclaration",
									"scope": 1086,
									"src": "300:73:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 837,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "300:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303064456144",
										"id": 838,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "331:42:5",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x000000000000000000000000000000000000dEaD"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "58fa63ca",
									"id": 842,
									"mutability": "constant",
									"name": "ZERO",
									"nameLocation": "404:4:5",
									"nodeType": "VariableDeclaration",
									"scope": 1086,
									"src": "380:73:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 840,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "380:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
										"id": 841,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "411:42:5",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x0000000000000000000000000000000000000000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "2ff2e9dc",
									"id": 850,
									"mutability": "constant",
									"name": "INITIAL_SUPPLY",
									"nameLocation": "486:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 1086,
									"src": "462:64:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 843,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "462:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										},
										"id": 849,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31303030303030303030",
											"id": 844,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "503:10:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											},
											"value": "1000000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 845,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "517:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "3138",
														"id": 846,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "523:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "517:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													}
												}
											],
											"id": 848,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "516:10:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "503:23:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "98118cb4",
									"id": 853,
									"mutability": "mutable",
									"name": "liquidityFee",
									"nameLocation": "589:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 1086,
									"src": "574:32:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 851,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "574:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3235",
										"id": 852,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "604:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_25_by_1",
											"typeString": "int_const 25"
										},
										"value": "25"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cc32d176",
									"id": 856,
									"mutability": "mutable",
									"name": "treasuryFee",
									"nameLocation": "637:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1086,
									"src": "622:31:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 854,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "622:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3530",
										"id": 855,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "651:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "50"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2b14ca56",
									"id": 859,
									"mutability": "mutable",
									"name": "sellFee",
									"nameLocation": "683:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1086,
									"src": "668:26:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 857,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "668:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 858,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "693:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bed99850",
									"id": 862,
									"mutability": "mutable",
									"name": "burnRate",
									"nameLocation": "725:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1086,
									"src": "710:28:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 860,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "710:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 861,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "736:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 886,
										"nodeType": "Block",
										"src": "869:145:5",
										"statements": [
											{
												"expression": {
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 873,
														"name": "liquidityWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "880:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 874,
														"name": "_liquidityWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "898:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "880:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 876,
												"nodeType": "ExpressionStatement",
												"src": "880:34:5"
											},
											{
												"expression": {
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 877,
														"name": "treasuryWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "925:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 878,
														"name": "_treasuryWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "942:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "925:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 880,
												"nodeType": "ExpressionStatement",
												"src": "925:32:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 882,
															"name": "liquidityWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "974:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 883,
															"name": "INITIAL_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "991:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 881,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "968:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "968:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 885,
												"nodeType": "ExpressionStatement",
												"src": "968:38:5"
											}
										]
									},
									"id": 887,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5b544553545d204465666c6174696f6e617279204d656d6520546f6b656e5d",
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "825:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_06a03c6a94f62f6099c33e40e2f644169f2a458226c8f13e269c15cb536468bd",
														"typeString": "literal_string \"[TEST] Deflationary Meme Token]\""
													},
													"value": "[TEST] Deflationary Meme Token]"
												},
												{
													"hexValue": "444d543032",
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "860:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_52ad25466b583936c82a31d5c7d0127253ab937aeeeba56b6115eb69320826a3",
														"typeString": "literal_string \"DMT02\""
													},
													"value": "DMT02"
												}
											],
											"id": 871,
											"modifierName": {
												"id": 868,
												"name": "ERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 699,
												"src": "819:5:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "819:49:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "_liquidityWallet",
												"nameLocation": "776:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "768:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "768:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "_treasuryWallet",
												"nameLocation": "802:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "794:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "794:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "767:51:5"
									},
									"returnParameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "869:0:5"
									},
									"scope": 1086,
									"src": "756:258:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										236
									],
									"body": {
										"id": 908,
										"nodeType": "Block",
										"src": "1106:93:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 899,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "1139:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 901,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1160:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 902,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1160:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 903,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 889,
																	"src": "1172:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 904,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 891,
																	"src": "1183:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 900,
																"name": "applyFees",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1055,
																"src": "1150:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (address,address,uint256) returns (uint256)"
																}
															},
															"id": 905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1150:40:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 897,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1124:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_MemeTokenTest_$1086_$",
																"typeString": "type(contract super MemeTokenTest)"
															}
														},
														"id": 898,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 236,
														"src": "1124:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1124:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 896,
												"id": 907,
												"nodeType": "Return",
												"src": "1117:74:5"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1031:8:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 893,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1082:8:5"
									},
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1048:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1040:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1040:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1067:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1059:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1059:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:35:5"
									},
									"returnParameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1100:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 894,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1100:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1099:6:5"
									},
									"scope": 1086,
									"src": "1022:177:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										312
									],
									"body": {
										"id": 932,
										"nodeType": "Block",
										"src": "1311:101:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 923,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "1348:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 924,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "1356:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 926,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "1377:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 927,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "1385:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 928,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 915,
																	"src": "1396:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 925,
																"name": "applyFees",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1055,
																"src": "1367:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (address,address,uint256) returns (uint256)"
																}
															},
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1367:36:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 921,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1329:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_MemeTokenTest_$1086_$",
																"typeString": "type(contract super MemeTokenTest)"
															}
														},
														"id": 922,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 312,
														"src": "1329:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1329:75:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 920,
												"id": 931,
												"nodeType": "Return",
												"src": "1322:82:5"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 933,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1216:12:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 917,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1287:8:5"
									},
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1237:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "1229:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1229:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1253:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "1245:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1245:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1272:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "1264:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1264:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1228:51:5"
									},
									"returnParameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "1305:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 918,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1305:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1304:6:5"
									},
									"scope": 1086,
									"src": "1207:205:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1054,
										"nodeType": "Block",
										"src": "1517:968:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 954,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 944,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 937,
																	"src": "1532:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 945,
																	"name": "DEAD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 839,
																	"src": "1545:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1532:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 947,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 937,
																	"src": "1553:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 948,
																	"name": "ZERO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 842,
																	"src": "1566:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1553:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1532:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 951,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 935,
																"src": "1574:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 952,
																"name": "liquidityWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 834,
																"src": "1584:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1574:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1532:67:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 957,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 955,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "1603:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 956,
															"name": "treasuryWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "1613:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "1603:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1532:95:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 962,
												"nodeType": "IfStatement",
												"src": "1528:141:5",
												"trueBody": {
													"id": 961,
													"nodeType": "Block",
													"src": "1629:40:5",
													"statements": [
														{
															"expression": {
																"id": 959,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 939,
																"src": "1651:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 943,
															"id": 960,
															"nodeType": "Return",
															"src": "1644:13:5"
														}
													]
												}
											},
											{
												"assignments": [
													964
												],
												"declarations": [
													{
														"constant": false,
														"id": 964,
														"mutability": "mutable",
														"name": "liquidityFeeAmount",
														"nameLocation": "1689:18:5",
														"nodeType": "VariableDeclaration",
														"scope": 1054,
														"src": "1681:26:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 963,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1681:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 970,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 967,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 965,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "1710:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 966,
															"name": "liquidityFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "1719:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1710:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 968,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1734:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "1710:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1681:58:5"
											},
											{
												"assignments": [
													972
												],
												"declarations": [
													{
														"constant": false,
														"id": 972,
														"mutability": "mutable",
														"name": "treasuryFeeAmount",
														"nameLocation": "1758:17:5",
														"nodeType": "VariableDeclaration",
														"scope": 1054,
														"src": "1750:25:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 971,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1750:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 978,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 975,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 973,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "1778:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 974,
															"name": "treasuryFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "1787:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1778:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 976,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1801:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "1778:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1750:56:5"
											},
											{
												"assignments": [
													980
												],
												"declarations": [
													{
														"constant": false,
														"id": 980,
														"mutability": "mutable",
														"name": "burnAmount",
														"nameLocation": "1825:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1054,
														"src": "1817:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 979,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1817:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 986,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 983,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 981,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "1838:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 982,
															"name": "burnRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 862,
															"src": "1847:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1838:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 984,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1858:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "1838:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1817:46:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 987,
														"name": "recipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "1880:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 988,
														"name": "liquidityWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "1893:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1880:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 998,
												"nodeType": "IfStatement",
												"src": "1876:112:5",
												"trueBody": {
													"id": 997,
													"nodeType": "Block",
													"src": "1910:78:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 993,
																		"name": "liquidityWallet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 834,
																		"src": "1940:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 994,
																		"name": "liquidityFeeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 964,
																		"src": "1957:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 990,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "1925:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_MemeTokenTest_$1086_$",
																			"typeString": "type(contract super MemeTokenTest)"
																		}
																	},
																	"id": 992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 236,
																	"src": "1925:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) returns (bool)"
																	}
																},
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1925:51:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 996,
															"nodeType": "ExpressionStatement",
															"src": "1925:51:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 999,
														"name": "recipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "2004:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1000,
														"name": "treasuryWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "2017:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2004:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1010,
												"nodeType": "IfStatement",
												"src": "2000:109:5",
												"trueBody": {
													"id": 1009,
													"nodeType": "Block",
													"src": "2033:76:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1005,
																		"name": "treasuryWallet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 836,
																		"src": "2063:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1006,
																		"name": "treasuryFeeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 972,
																		"src": "2079:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1002,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "2048:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_MemeTokenTest_$1086_$",
																			"typeString": "type(contract super MemeTokenTest)"
																		}
																	},
																	"id": 1004,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 236,
																	"src": "2048:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) returns (bool)"
																	}
																},
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:49:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1008,
															"nodeType": "ExpressionStatement",
															"src": "2048:49:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1012,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "2127:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1013,
															"name": "burnAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "2135:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1011,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "2121:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2121:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1015,
												"nodeType": "ExpressionStatement",
												"src": "2121:25:5"
											},
											{
												"assignments": [
													1017
												],
												"declarations": [
													{
														"constant": false,
														"id": 1017,
														"mutability": "mutable",
														"name": "sellFeeAmount",
														"nameLocation": "2167:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 1054,
														"src": "2159:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1016,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2159:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1019,
												"initialValue": {
													"hexValue": "30",
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2183:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2159:25:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1022,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1020,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "2199:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1021,
															"name": "liquidityWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "2209:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2199:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1025,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1023,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "2228:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1024,
															"name": "treasuryWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "2238:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2228:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2199:53:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1043,
												"nodeType": "IfStatement",
												"src": "2195:187:5",
												"trueBody": {
													"id": 1042,
													"nodeType": "Block",
													"src": "2254:128:5",
													"statements": [
														{
															"expression": {
																"id": 1033,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1027,
																	"name": "sellFeeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1017,
																	"src": "2269:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1030,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1028,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 939,
																			"src": "2285:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1029,
																			"name": "sellFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 859,
																			"src": "2294:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2285:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "3130303030",
																		"id": 1031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2304:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "10000"
																	},
																	"src": "2285:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2269:40:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1034,
															"nodeType": "ExpressionStatement",
															"src": "2269:40:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1038,
																		"name": "liquidityWallet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 834,
																		"src": "2339:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1039,
																		"name": "sellFeeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1017,
																		"src": "2356:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1035,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "2324:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_MemeTokenTest_$1086_$",
																			"typeString": "type(contract super MemeTokenTest)"
																		}
																	},
																	"id": 1037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 236,
																	"src": "2324:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) returns (bool)"
																	}
																},
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2324:46:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1041,
															"nodeType": "ExpressionStatement",
															"src": "2324:46:5"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1050,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1046,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1044,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 939,
																	"src": "2401:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1045,
																	"name": "liquidityFeeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 964,
																	"src": "2410:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2401:27:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1047,
																"name": "treasuryFeeAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 972,
																"src": "2431:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2401:47:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1049,
															"name": "burnAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "2451:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2401:60:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1051,
														"name": "sellFeeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "2464:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2401:76:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 943,
												"id": 1053,
												"nodeType": "Return",
												"src": "2394:83:5"
											}
										]
									},
									"id": 1055,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "applyFees",
									"nameLocation": "1429:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1447:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "1439:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1439:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1463:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "1455:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1455:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1482:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "1474:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1474:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1438:51:5"
									},
									"returnParameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "1508:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1508:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1507:9:5"
									},
									"scope": 1086,
									"src": "1420:1065:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1084,
										"nodeType": "Block",
										"src": "2611:144:5",
										"statements": [
											{
												"expression": {
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1068,
														"name": "liquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "2622:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1069,
														"name": "_liquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1057,
														"src": "2637:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2622:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1071,
												"nodeType": "ExpressionStatement",
												"src": "2622:28:5"
											},
											{
												"expression": {
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1072,
														"name": "treasuryFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "2661:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1073,
														"name": "_treasuryFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1059,
														"src": "2675:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2661:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1075,
												"nodeType": "ExpressionStatement",
												"src": "2661:26:5"
											},
											{
												"expression": {
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1076,
														"name": "sellFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 859,
														"src": "2698:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1077,
														"name": "_sellFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "2708:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2698:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1079,
												"nodeType": "ExpressionStatement",
												"src": "2698:18:5"
											},
											{
												"expression": {
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1080,
														"name": "burnRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "2727:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1081,
														"name": "_burnRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1063,
														"src": "2738:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2727:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1083,
												"nodeType": "ExpressionStatement",
												"src": "2727:20:5"
											}
										]
									},
									"functionSelector": "6fcba377",
									"id": 1085,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1066,
											"modifierName": {
												"id": 1065,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2601:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2601:9:5"
										}
									],
									"name": "setFees",
									"nameLocation": "2502:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "_liquidityFee",
												"nameLocation": "2518:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "2510:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2510:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "_treasuryFee",
												"nameLocation": "2541:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "2533:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2533:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "_sellFee",
												"nameLocation": "2563:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "2555:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2555:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "_burnRate",
												"nameLocation": "2581:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "2573:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2573:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2509:82:5"
									},
									"returnParameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2611:0:5"
									},
									"scope": 1086,
									"src": "2493:262:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1087,
							"src": "173:2585:5"
						}
					],
					"src": "33:2727:5"
				},
				"id": 5
			}
		}
	}
}