{
	"id": "481445c60857407850e44ac7d8da4da1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MemeTokenBase/memetoken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract MemeTokenTest is ERC20, Ownable {\r\n    address public liquidityWallet;\r\n    address public treasuryWallet;\r\n    \r\n    address public constant DEAD = 0x000000000000000000000000000000000000dEaD;\r\n    address public constant ZERO = 0x0000000000000000000000000000000000000000;\r\n\r\n    uint256 public constant INITIAL_SUPPLY = 1000000000 * (10 ** 18); // 1 billion tokens, 18 decimal places\r\n\r\n    uint256 public liquidityFee = 25; // 0.25%\r\n    uint256 public treasuryFee = 50; // 0.5%\r\n    uint256 public sellFee = 5; // 0.05%\r\n    uint256 public burnRate = 20; // 0.20%\r\n\r\n    constructor(address _liquidityWallet, address _treasuryWallet) ERC20(\"[TEST] Deflationary Meme Token]\", \"DMT02\") {\r\n        liquidityWallet = _liquidityWallet;\r\n        treasuryWallet = _treasuryWallet;\r\n        _mint(liquidityWallet, INITIAL_SUPPLY);\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        return super.transfer(recipient, applyFees(msg.sender, recipient, amount));\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\r\n        return super.transferFrom(sender, recipient, applyFees(sender, recipient, amount));\r\n    }\r\n\r\n    function applyFees(address sender, address recipient, uint256 amount) internal returns (uint256) {\r\n        if (recipient == DEAD || recipient == ZERO || sender == liquidityWallet || sender == treasuryWallet) {\r\n            return amount;\r\n        }\r\n\r\n        uint256 liquidityFeeAmount = amount * liquidityFee / 10000;\r\n        uint256 treasuryFeeAmount = amount * treasuryFee / 10000;\r\n        uint256 burnAmount = amount * burnRate / 10000;\r\n\r\n        if (recipient != liquidityWallet) {\r\n            super.transfer(liquidityWallet, liquidityFeeAmount);\r\n        }\r\n\r\n        if (recipient != treasuryWallet) {\r\n            super.transfer(treasuryWallet, treasuryFeeAmount);\r\n        }\r\n\r\n        _burn(sender, burnAmount);\r\n\r\n        uint256 sellFeeAmount = 0;\r\n        if (sender != liquidityWallet && sender != treasuryWallet) {\r\n            sellFeeAmount = amount * sellFee / 10000;\r\n            super.transfer(liquidityWallet, sellFeeAmount);\r\n        }\r\n\r\n        return amount - liquidityFeeAmount - treasuryFeeAmount - burnAmount - sellFeeAmount;\r\n    }\r\n\r\n    function setFees(uint256 _liquidityFee, uint256 _treasuryFee, uint256 _sellFee, uint256 _burnRate) external onlyOwner {\r\n        liquidityFee = _liquidityFee;\r\n        treasuryFee = _treasuryFee;\r\n        sellFee = _sellFee;\r\n        burnRate = _burnRate;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2051  _name */\n  0x03\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  0x04\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_21)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:895   */\ntag_22:\n  0x00\n    /* \"#utility.yul\":123:126   */\n  dup3\n    /* \"#utility.yul\":116:120   */\n  0x1f\n    /* \"#utility.yul\":108:114   */\n  dup4\n    /* \"#utility.yul\":104:121   */\n  add\n    /* \"#utility.yul\":100:127   */\n  slt\n    /* \"#utility.yul\":90:92   */\n  tag_24\n  jumpi\n    /* \"#utility.yul\":145:150   */\n  dup1\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":131:151   */\n  revert\n    /* \"#utility.yul\":90:92   */\ntag_24:\n    /* \"#utility.yul\":172:185   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":234:244   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":231:233   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":247:265   */\n  tag_26\n  tag_27\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":296:298   */\n  0x40\n    /* \"#utility.yul\":290:299   */\n  mload\n    /* \"#utility.yul\":318:322   */\n  0x20\n    /* \"#utility.yul\":388:390   */\n  0x1f\n    /* \"#utility.yul\":369:382   */\n  dup5\n  add\n  not(0x1f)\n    /* \"#utility.yul\":365:392   */\n  and\n    /* \"#utility.yul\":353:393   */\n  dup3\n  add\n    /* \"#utility.yul\":349:398   */\n  dup2\n  add\n    /* \"#utility.yul\":413:431   */\n  dup4\n  dup2\n  gt\n    /* \"#utility.yul\":433:455   */\n  dup4\n  dup3\n  lt\n    /* \"#utility.yul\":410:456   */\n  or\n    /* \"#utility.yul\":407:409   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":459:477   */\n  tag_29\n  tag_27\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":495:497   */\n  0x40\n    /* \"#utility.yul\":488:510   */\n  mstore\n    /* \"#utility.yul\":519:537   */\n  dup4\n  dup3\n  mstore\n    /* \"#utility.yul\":556:571   */\n  dup6\n  dup5\n  add\n    /* \"#utility.yul\":552:576   */\n  dup2\n  add\n    /* \"#utility.yul\":549:582   */\n  dup8\n  lt\n    /* \"#utility.yul\":546:548   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":599:604   */\n  dup5\n    /* \"#utility.yul\":592:597   */\n  dup6\n    /* \"#utility.yul\":585:605   */\n  revert\n    /* \"#utility.yul\":546:548   */\ntag_30:\n    /* \"#utility.yul\":625:630   */\n  dup5\n    /* \"#utility.yul\":616:630   */\n  swap3\n  pop\n    /* \"#utility.yul\":639:772   */\ntag_31:\n    /* \"#utility.yul\":653:655   */\n  dup4\n    /* \"#utility.yul\":650:651   */\n  dup4\n    /* \"#utility.yul\":647:656   */\n  lt\n    /* \"#utility.yul\":639:772   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":741:755   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":737:760   */\n  dup2\n  add\n    /* \"#utility.yul\":731:761   */\n  mload\n    /* \"#utility.yul\":710:724   */\n  dup3\n  dup5\n  add\n    /* \"#utility.yul\":706:729   */\n  dup3\n  add\n    /* \"#utility.yul\":699:762   */\n  mstore\n    /* \"#utility.yul\":664:674   */\n  swap2\n  dup3\n  add\n  swap2\n    /* \"#utility.yul\":639:772   */\n  jump(tag_31)\ntag_33:\n    /* \"#utility.yul\":790:792   */\n  dup4\n    /* \"#utility.yul\":787:788   */\n  dup4\n    /* \"#utility.yul\":784:793   */\n  gt\n    /* \"#utility.yul\":781:783   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":849:854   */\n  dup5\n    /* \"#utility.yul\":844:846   */\n  dup2\n    /* \"#utility.yul\":839:841   */\n  dup6\n    /* \"#utility.yul\":831:837   */\n  dup5\n    /* \"#utility.yul\":827:842   */\n  add\n    /* \"#utility.yul\":823:847   */\n  add\n    /* \"#utility.yul\":816:855   */\n  mstore\n    /* \"#utility.yul\":781:783   */\ntag_34:\n  pop\n    /* \"#utility.yul\":883:889   */\n  swap6\n    /* \"#utility.yul\":80:895   */\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":900:1496   */\ntag_3:\n  0x00\n  dup1\n    /* \"#utility.yul\":1060:1062   */\n  0x40\n    /* \"#utility.yul\":1048:1057   */\n  dup4\n    /* \"#utility.yul\":1039:1046   */\n  dup6\n    /* \"#utility.yul\":1035:1058   */\n  sub\n    /* \"#utility.yul\":1031:1063   */\n  slt\n    /* \"#utility.yul\":1028:1030   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1081:1087   */\n  dup2\n    /* \"#utility.yul\":1073:1079   */\n  dup3\n    /* \"#utility.yul\":1066:1088   */\n  revert\n    /* \"#utility.yul\":1028:1030   */\ntag_36:\n    /* \"#utility.yul\":1113:1129   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1178:1192   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1175:1177   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1210:1216   */\n  dup4\n    /* \"#utility.yul\":1202:1208   */\n  dup5\n    /* \"#utility.yul\":1195:1217   */\n  revert\n    /* \"#utility.yul\":1175:1177   */\ntag_37:\n    /* \"#utility.yul\":1238:1301   */\n  tag_38\n    /* \"#utility.yul\":1293:1300   */\n  dup7\n    /* \"#utility.yul\":1284:1290   */\n  dup4\n    /* \"#utility.yul\":1273:1282   */\n  dup8\n    /* \"#utility.yul\":1269:1291   */\n  add\n    /* \"#utility.yul\":1238:1301   */\n  tag_22\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1228:1301   */\n  swap4\n  pop\n    /* \"#utility.yul\":1347:1349   */\n  0x20\n    /* \"#utility.yul\":1336:1345   */\n  dup6\n    /* \"#utility.yul\":1332:1350   */\n  add\n    /* \"#utility.yul\":1326:1351   */\n  mload\n    /* \"#utility.yul\":1310:1351   */\n  swap2\n  pop\n    /* \"#utility.yul\":1376:1378   */\n  dup1\n    /* \"#utility.yul\":1366:1374   */\n  dup3\n    /* \"#utility.yul\":1363:1379   */\n  gt\n    /* \"#utility.yul\":1360:1362   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1397:1403   */\n  dup3\n    /* \"#utility.yul\":1389:1395   */\n  dup4\n    /* \"#utility.yul\":1382:1404   */\n  revert\n    /* \"#utility.yul\":1360:1362   */\ntag_39:\n  pop\n    /* \"#utility.yul\":1425:1490   */\n  tag_40\n    /* \"#utility.yul\":1482:1489   */\n  dup6\n    /* \"#utility.yul\":1471:1479   */\n  dup3\n    /* \"#utility.yul\":1460:1469   */\n  dup7\n    /* \"#utility.yul\":1456:1480   */\n  add\n    /* \"#utility.yul\":1425:1490   */\n  tag_22\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1415:1490   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1018:1496   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1501:1881   */\ntag_11:\n    /* \"#utility.yul\":1586:1587   */\n  0x02\n    /* \"#utility.yul\":1576:1588   */\n  dup2\n  div\n    /* \"#utility.yul\":1633:1634   */\n  0x01\n    /* \"#utility.yul\":1623:1635   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1644:1646   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1698:1702   */\n  0x7f\n    /* \"#utility.yul\":1690:1696   */\n  dup3\n    /* \"#utility.yul\":1686:1703   */\n  and\n    /* \"#utility.yul\":1676:1703   */\n  swap2\n  pop\n    /* \"#utility.yul\":1644:1646   */\ntag_42:\n    /* \"#utility.yul\":1751:1753   */\n  0x20\n    /* \"#utility.yul\":1743:1749   */\n  dup3\n    /* \"#utility.yul\":1740:1754   */\n  lt\n    /* \"#utility.yul\":1720:1738   */\n  dup2\n    /* \"#utility.yul\":1717:1755   */\n  eq\n    /* \"#utility.yul\":1714:1716   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1797:1807   */\n  0x4e487b71\n    /* \"#utility.yul\":1792:1795   */\n  0xe0\n    /* \"#utility.yul\":1788:1808   */\n  shl\n    /* \"#utility.yul\":1785:1786   */\n  0x00\n    /* \"#utility.yul\":1778:1809   */\n  mstore\n    /* \"#utility.yul\":1832:1836   */\n  0x22\n    /* \"#utility.yul\":1829:1830   */\n  0x04\n    /* \"#utility.yul\":1822:1837   */\n  mstore\n    /* \"#utility.yul\":1860:1864   */\n  0x24\n    /* \"#utility.yul\":1857:1858   */\n  0x00\n    /* \"#utility.yul\":1850:1865   */\n  revert\n    /* \"#utility.yul\":1714:1716   */\ntag_43:\n  pop\n    /* \"#utility.yul\":1556:1881   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1886:2013   */\ntag_27:\n    /* \"#utility.yul\":1947:1957   */\n  0x4e487b71\n    /* \"#utility.yul\":1942:1945   */\n  0xe0\n    /* \"#utility.yul\":1938:1958   */\n  shl\n    /* \"#utility.yul\":1935:1936   */\n  0x00\n    /* \"#utility.yul\":1928:1959   */\n  mstore\n    /* \"#utility.yul\":1978:1982   */\n  0x41\n    /* \"#utility.yul\":1975:1976   */\n  0x04\n    /* \"#utility.yul\":1968:1983   */\n  mstore\n    /* \"#utility.yul\":2002:2006   */\n  0x24\n    /* \"#utility.yul\":1999:2000   */\n  0x00\n    /* \"#utility.yul\":1992:2007   */\n  revert\n    /* \"#utility.yul\":1918:2013   */\ntag_21:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2212:2225  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2244:2249  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2237:2249  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4527:4531  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4543:4556  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4559:4571  _msgSender() */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4559:4569  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4559:4571  _msgSender() */\n      jump\t// in\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4543:4571  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4590:4595  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4597:4604  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4606:4612  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4589  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4630:4634  true */\n      0x01\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3342:3354  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5300:5304  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5316:5331  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5334:5346  _msgSender() */\n      tag_77\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5334:5344  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5334:5346  _msgSender() */\n      jump\t// in\n    tag_77:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5316:5346  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5372:5376  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5378:5385  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5387:5393  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5371  _spendAllowance */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5414:5418  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5420:5422  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5424:5430  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5413  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5448:5452  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3186:3188  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5942:5946  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5958:5971  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5974:5986  _msgSender() */\n      tag_84\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5974:5984  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5974:5986  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5958:5986  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6005:6010  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6049:6059  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6031:6036  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6038:6045  spender */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6030  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6059  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6004  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_45:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3493:3500  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_89:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2425:2438  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2457:2464  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2450:2464  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6668:6672  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6684:6697  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6700:6712  _msgSender() */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6700:6710  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6700:6712  _msgSender() */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6684:6712  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6722:6746  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6759:6764  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6773  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6758  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6722:6774  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6812:6827  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6792:6808  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6792:6827  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6912:6917  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6919:6926  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6947:6962  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6928:6944  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6928:6962  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6911  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3819:3823  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3835:3848  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3851:3863  _msgSender() */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3851:3861  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3851:3863  _msgSender() */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3835:3863  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3883:3888  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3890:3892  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3894:3900  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3882  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4076:4083  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4113  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4129  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10577  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_111\n      jump\t// in\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10657  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_114\n      jump\t// in\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10718  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10734  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      swap1\n      swap2\n      mstore\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10743  _allowances[owner][spender] = amount */\n      dup5\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap1\n      tag_115\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10737:10743  amount */\n      dup6\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      tag_28\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11178:11202  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11215:11220  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11222:11229  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11214  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11178:11230  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11244:11260  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11244:11281  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11240:11483  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11325:11331  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11305:11321  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11305:11331  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_121\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11416:11421  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11423:11430  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11451:11457  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11432:11448  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11432:11457  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11415  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7456:8244  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7552:7570  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_126\n      jump\t// in\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7630:7646  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_129\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7697:7735  _beforeTokenTransfer(from, to, amount) */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7718:7722  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7724:7726  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7728:7734  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7697:7717  _beforeTokenTransfer */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7697:7735  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7746:7765  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7801:7822  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_134\n      jump\t// in\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7908  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7917:7937  fromBalance - amount */\n      dup7\n      dup7\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7937  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap3\n      dup7\n      and\n      dup1\n      dup3\n      mstore\n      swap1\n      dup4\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8137  _balances[to] += amount */\n      dup1\n      sload\n      dup7\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      swap2\n      mload\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n      tag_135\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7931:7937  amount */\n      dup7\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      tag_28\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8200:8237  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8220:8224  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8226:8228  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8230:8236  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":12073:12164  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n    tag_131:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:189   */\n    tag_141:\n        /* \"#utility.yul\":84:104   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":133:164   */\n      dup2\n      and\n        /* \"#utility.yul\":123:165   */\n      dup2\n      eq\n        /* \"#utility.yul\":113:115   */\n      tag_89\n      jumpi\n        /* \"#utility.yul\":179:180   */\n      0x00\n        /* \"#utility.yul\":176:177   */\n      dup1\n        /* \"#utility.yul\":169:181   */\n      revert\n        /* \"#utility.yul\":194:392   */\n    tag_44:\n      0x00\n        /* \"#utility.yul\":306:308   */\n      0x20\n        /* \"#utility.yul\":294:303   */\n      dup3\n        /* \"#utility.yul\":285:292   */\n      dup5\n        /* \"#utility.yul\":281:304   */\n      sub\n        /* \"#utility.yul\":277:309   */\n      slt\n        /* \"#utility.yul\":274:276   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":327:333   */\n      dup1\n        /* \"#utility.yul\":319:325   */\n      dup2\n        /* \"#utility.yul\":312:334   */\n      revert\n        /* \"#utility.yul\":274:276   */\n    tag_145:\n        /* \"#utility.yul\":355:386   */\n      tag_146\n        /* \"#utility.yul\":376:385   */\n      dup3\n        /* \"#utility.yul\":355:386   */\n      tag_141\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":345:386   */\n      swap4\n        /* \"#utility.yul\":264:392   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":397:671   */\n    tag_60:\n      0x00\n      dup1\n        /* \"#utility.yul\":526:528   */\n      0x40\n        /* \"#utility.yul\":514:523   */\n      dup4\n        /* \"#utility.yul\":505:512   */\n      dup6\n        /* \"#utility.yul\":501:524   */\n      sub\n        /* \"#utility.yul\":497:529   */\n      slt\n        /* \"#utility.yul\":494:496   */\n      iszero\n      tag_148\n      jumpi\n        /* \"#utility.yul\":547:553   */\n      dup1\n        /* \"#utility.yul\":539:545   */\n      dup2\n        /* \"#utility.yul\":532:554   */\n      revert\n        /* \"#utility.yul\":494:496   */\n    tag_148:\n        /* \"#utility.yul\":575:606   */\n      tag_149\n        /* \"#utility.yul\":596:605   */\n      dup4\n        /* \"#utility.yul\":575:606   */\n      tag_141\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":565:606   */\n      swap2\n      pop\n        /* \"#utility.yul\":625:665   */\n      tag_150\n        /* \"#utility.yul\":661:663   */\n      0x20\n        /* \"#utility.yul\":650:659   */\n      dup5\n        /* \"#utility.yul\":646:664   */\n      add\n        /* \"#utility.yul\":625:665   */\n      tag_141\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":615:665   */\n      swap1\n      pop\n        /* \"#utility.yul\":484:671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":676:1018   */\n    tag_31:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":822:824   */\n      0x60\n        /* \"#utility.yul\":810:819   */\n      dup5\n        /* \"#utility.yul\":801:808   */\n      dup7\n        /* \"#utility.yul\":797:820   */\n      sub\n        /* \"#utility.yul\":793:825   */\n      slt\n        /* \"#utility.yul\":790:792   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":843:849   */\n      dup1\n        /* \"#utility.yul\":835:841   */\n      dup2\n        /* \"#utility.yul\":828:850   */\n      revert\n        /* \"#utility.yul\":790:792   */\n    tag_152:\n        /* \"#utility.yul\":871:902   */\n      tag_153\n        /* \"#utility.yul\":892:901   */\n      dup5\n        /* \"#utility.yul\":871:902   */\n      tag_141\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":861:902   */\n      swap3\n      pop\n        /* \"#utility.yul\":921:961   */\n      tag_154\n        /* \"#utility.yul\":957:959   */\n      0x20\n        /* \"#utility.yul\":946:955   */\n      dup6\n        /* \"#utility.yul\":942:960   */\n      add\n        /* \"#utility.yul\":921:961   */\n      tag_141\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":911:961   */\n      swap2\n      pop\n        /* \"#utility.yul\":1008:1010   */\n      0x40\n        /* \"#utility.yul\":997:1006   */\n      dup5\n        /* \"#utility.yul\":993:1011   */\n      add\n        /* \"#utility.yul\":980:1012   */\n      calldataload\n        /* \"#utility.yul\":970:1012   */\n      swap1\n      pop\n        /* \"#utility.yul\":780:1018   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1023:1289   */\n    tag_21:\n      0x00\n      dup1\n        /* \"#utility.yul\":1152:1154   */\n      0x40\n        /* \"#utility.yul\":1140:1149   */\n      dup4\n        /* \"#utility.yul\":1131:1138   */\n      dup6\n        /* \"#utility.yul\":1127:1150   */\n      sub\n        /* \"#utility.yul\":1123:1155   */\n      slt\n        /* \"#utility.yul\":1120:1122   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":1173:1179   */\n      dup2\n        /* \"#utility.yul\":1165:1171   */\n      dup3\n        /* \"#utility.yul\":1158:1180   */\n      revert\n        /* \"#utility.yul\":1120:1122   */\n    tag_156:\n        /* \"#utility.yul\":1201:1232   */\n      tag_157\n        /* \"#utility.yul\":1222:1231   */\n      dup4\n        /* \"#utility.yul\":1201:1232   */\n      tag_141\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1191:1232   */\n      swap5\n        /* \"#utility.yul\":1279:1281   */\n      0x20\n        /* \"#utility.yul\":1264:1282   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1251:1283   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1110:1289   */\n      jump\t// out\n        /* \"#utility.yul\":1294:1481   */\n    tag_24:\n        /* \"#utility.yul\":1459:1473   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1452:1474   */\n      iszero\n        /* \"#utility.yul\":1434:1475   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1422:1424   */\n      0x20\n        /* \"#utility.yul\":1407:1425   */\n      add\n      swap1\n        /* \"#utility.yul\":1389:1481   */\n      jump\t// out\n        /* \"#utility.yul\":1486:2089   */\n    tag_18:\n      0x00\n        /* \"#utility.yul\":1627:1629   */\n      0x20\n        /* \"#utility.yul\":1656:1658   */\n      dup1\n        /* \"#utility.yul\":1645:1654   */\n      dup4\n        /* \"#utility.yul\":1638:1659   */\n      mstore\n        /* \"#utility.yul\":1688:1694   */\n      dup4\n        /* \"#utility.yul\":1682:1695   */\n      mload\n        /* \"#utility.yul\":1731:1737   */\n      dup1\n        /* \"#utility.yul\":1726:1728   */\n      dup3\n        /* \"#utility.yul\":1715:1724   */\n      dup6\n        /* \"#utility.yul\":1711:1729   */\n      add\n        /* \"#utility.yul\":1704:1738   */\n      mstore\n        /* \"#utility.yul\":1756:1760   */\n      dup3\n        /* \"#utility.yul\":1769:1909   */\n    tag_160:\n        /* \"#utility.yul\":1783:1789   */\n      dup2\n        /* \"#utility.yul\":1780:1781   */\n      dup2\n        /* \"#utility.yul\":1777:1790   */\n      lt\n        /* \"#utility.yul\":1769:1909   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":1878:1892   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":1874:1897   */\n      dup4\n      add\n        /* \"#utility.yul\":1868:1898   */\n      mload\n        /* \"#utility.yul\":1844:1861   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":1863:1865   */\n      0x40\n        /* \"#utility.yul\":1840:1866   */\n      add\n        /* \"#utility.yul\":1833:1899   */\n      mstore\n        /* \"#utility.yul\":1798:1808   */\n      dup3\n      add\n        /* \"#utility.yul\":1769:1909   */\n      jump(tag_160)\n    tag_162:\n        /* \"#utility.yul\":1927:1933   */\n      dup2\n        /* \"#utility.yul\":1924:1925   */\n      dup2\n        /* \"#utility.yul\":1921:1934   */\n      gt\n        /* \"#utility.yul\":1918:1920   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":1997:2001   */\n      dup4\n        /* \"#utility.yul\":1992:1994   */\n      0x40\n        /* \"#utility.yul\":1983:1989   */\n      dup4\n        /* \"#utility.yul\":1972:1981   */\n      dup8\n        /* \"#utility.yul\":1968:1990   */\n      add\n        /* \"#utility.yul\":1964:1995   */\n      add\n        /* \"#utility.yul\":1957:2002   */\n      mstore\n        /* \"#utility.yul\":1918:1920   */\n    tag_163:\n      pop\n        /* \"#utility.yul\":2073:2075   */\n      0x1f\n        /* \"#utility.yul\":2052:2067   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2048:2077   */\n      and\n        /* \"#utility.yul\":2033:2078   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2080:2082   */\n      0x40\n        /* \"#utility.yul\":2029:2083   */\n      add\n      swap4\n        /* \"#utility.yul\":1607:2089   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2094:2493   */\n    tag_129:\n        /* \"#utility.yul\":2296:2298   */\n      0x20\n        /* \"#utility.yul\":2278:2299   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2335:2337   */\n      0x23\n        /* \"#utility.yul\":2315:2333   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2308:2338   */\n      mstore\n        /* \"#utility.yul\":2374:2408   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2369:2371   */\n      0x40\n        /* \"#utility.yul\":2354:2372   */\n      dup3\n      add\n        /* \"#utility.yul\":2347:2409   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":2440:2442   */\n      0x60\n        /* \"#utility.yul\":2425:2443   */\n      dup3\n      add\n        /* \"#utility.yul\":2418:2451   */\n      mstore\n        /* \"#utility.yul\":2483:2486   */\n      0x80\n        /* \"#utility.yul\":2468:2487   */\n      add\n      swap1\n        /* \"#utility.yul\":2268:2493   */\n      jump\t// out\n        /* \"#utility.yul\":2498:2896   */\n    tag_114:\n        /* \"#utility.yul\":2700:2702   */\n      0x20\n        /* \"#utility.yul\":2682:2703   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2739:2741   */\n      0x22\n        /* \"#utility.yul\":2719:2737   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2712:2742   */\n      mstore\n        /* \"#utility.yul\":2778:2812   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":2773:2775   */\n      0x40\n        /* \"#utility.yul\":2758:2776   */\n      dup3\n      add\n        /* \"#utility.yul\":2751:2813   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":2844:2846   */\n      0x60\n        /* \"#utility.yul\":2829:2847   */\n      dup3\n      add\n        /* \"#utility.yul\":2822:2854   */\n      mstore\n        /* \"#utility.yul\":2886:2889   */\n      0x80\n        /* \"#utility.yul\":2871:2890   */\n      add\n      swap1\n        /* \"#utility.yul\":2672:2896   */\n      jump\t// out\n        /* \"#utility.yul\":2901:3254   */\n    tag_121:\n        /* \"#utility.yul\":3103:3105   */\n      0x20\n        /* \"#utility.yul\":3085:3106   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3142:3144   */\n      0x1d\n        /* \"#utility.yul\":3122:3140   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3115:3145   */\n      mstore\n        /* \"#utility.yul\":3181:3212   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":3176:3178   */\n      0x40\n        /* \"#utility.yul\":3161:3179   */\n      dup3\n      add\n        /* \"#utility.yul\":3154:3213   */\n      mstore\n        /* \"#utility.yul\":3245:3247   */\n      0x60\n        /* \"#utility.yul\":3230:3248   */\n      add\n      swap1\n        /* \"#utility.yul\":3075:3254   */\n      jump\t// out\n        /* \"#utility.yul\":3259:3661   */\n    tag_134:\n        /* \"#utility.yul\":3461:3463   */\n      0x20\n        /* \"#utility.yul\":3443:3464   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3500:3502   */\n      0x26\n        /* \"#utility.yul\":3480:3498   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3473:3503   */\n      mstore\n        /* \"#utility.yul\":3539:3573   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":3534:3536   */\n      0x40\n        /* \"#utility.yul\":3519:3537   */\n      dup3\n      add\n        /* \"#utility.yul\":3512:3574   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":3605:3607   */\n      0x60\n        /* \"#utility.yul\":3590:3608   */\n      dup3\n      add\n        /* \"#utility.yul\":3583:3619   */\n      mstore\n        /* \"#utility.yul\":3651:3654   */\n      0x80\n        /* \"#utility.yul\":3636:3655   */\n      add\n      swap1\n        /* \"#utility.yul\":3433:3661   */\n      jump\t// out\n        /* \"#utility.yul\":3666:4067   */\n    tag_126:\n        /* \"#utility.yul\":3868:3870   */\n      0x20\n        /* \"#utility.yul\":3850:3871   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3907:3909   */\n      0x25\n        /* \"#utility.yul\":3887:3905   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3880:3910   */\n      mstore\n        /* \"#utility.yul\":3946:3980   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":3941:3943   */\n      0x40\n        /* \"#utility.yul\":3926:3944   */\n      dup3\n      add\n        /* \"#utility.yul\":3919:3981   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4012:4014   */\n      0x60\n        /* \"#utility.yul\":3997:4015   */\n      dup3\n      add\n        /* \"#utility.yul\":3990:4025   */\n      mstore\n        /* \"#utility.yul\":4057:4060   */\n      0x80\n        /* \"#utility.yul\":4042:4061   */\n      add\n      swap1\n        /* \"#utility.yul\":3840:4067   */\n      jump\t// out\n        /* \"#utility.yul\":4072:4472   */\n    tag_111:\n        /* \"#utility.yul\":4274:4276   */\n      0x20\n        /* \"#utility.yul\":4256:4277   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4313:4315   */\n      0x24\n        /* \"#utility.yul\":4293:4311   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4286:4316   */\n      mstore\n        /* \"#utility.yul\":4352:4386   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4347:4349   */\n      0x40\n        /* \"#utility.yul\":4332:4350   */\n      dup3\n      add\n        /* \"#utility.yul\":4325:4387   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4418:4420   */\n      0x60\n        /* \"#utility.yul\":4403:4421   */\n      dup3\n      add\n        /* \"#utility.yul\":4396:4430   */\n      mstore\n        /* \"#utility.yul\":4462:4465   */\n      0x80\n        /* \"#utility.yul\":4447:4466   */\n      add\n      swap1\n        /* \"#utility.yul\":4246:4472   */\n      jump\t// out\n        /* \"#utility.yul\":4477:4878   */\n    tag_101:\n        /* \"#utility.yul\":4679:4681   */\n      0x20\n        /* \"#utility.yul\":4661:4682   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4718:4720   */\n      0x25\n        /* \"#utility.yul\":4698:4716   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4691:4721   */\n      mstore\n        /* \"#utility.yul\":4757:4791   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":4752:4754   */\n      0x40\n        /* \"#utility.yul\":4737:4755   */\n      dup3\n      add\n        /* \"#utility.yul\":4730:4792   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":4823:4825   */\n      0x60\n        /* \"#utility.yul\":4808:4826   */\n      dup3\n      add\n        /* \"#utility.yul\":4801:4836   */\n      mstore\n        /* \"#utility.yul\":4868:4871   */\n      0x80\n        /* \"#utility.yul\":4853:4872   */\n      add\n      swap1\n        /* \"#utility.yul\":4651:4878   */\n      jump\t// out\n        /* \"#utility.yul\":4883:5060   */\n    tag_28:\n        /* \"#utility.yul\":5029:5054   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":5017:5019   */\n      0x20\n        /* \"#utility.yul\":5002:5020   */\n      add\n      swap1\n        /* \"#utility.yul\":4984:5060   */\n      jump\t// out\n        /* \"#utility.yul\":5065:5249   */\n    tag_37:\n        /* \"#utility.yul\":5237:5241   */\n      0xff\n        /* \"#utility.yul\":5225:5242   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5207:5243   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5195:5197   */\n      0x20\n        /* \"#utility.yul\":5180:5198   */\n      add\n      swap1\n        /* \"#utility.yul\":5162:5249   */\n      jump\t// out\n        /* \"#utility.yul\":5254:5483   */\n    tag_88:\n      0x00\n        /* \"#utility.yul\":5325:5326   */\n      dup3\n        /* \"#utility.yul\":5321:5327   */\n      not\n        /* \"#utility.yul\":5318:5319   */\n      dup3\n        /* \"#utility.yul\":5315:5328   */\n      gt\n        /* \"#utility.yul\":5312:5314   */\n      iszero\n      tag_174\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":5351:5384   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5407:5411   */\n      0x11\n        /* \"#utility.yul\":5404:5405   */\n      0x04\n        /* \"#utility.yul\":5397:5412   */\n      mstore\n        /* \"#utility.yul\":5437:5441   */\n      0x24\n        /* \"#utility.yul\":5358:5361   */\n      dup2\n        /* \"#utility.yul\":5425:5442   */\n      revert\n        /* \"#utility.yul\":5312:5314   */\n    tag_174:\n      pop\n        /* \"#utility.yul\":5468:5477   */\n      add\n      swap1\n        /* \"#utility.yul\":5302:5483   */\n      jump\t// out\n        /* \"#utility.yul\":5488:5868   */\n    tag_65:\n        /* \"#utility.yul\":5573:5574   */\n      0x02\n        /* \"#utility.yul\":5563:5575   */\n      dup2\n      div\n        /* \"#utility.yul\":5620:5621   */\n      0x01\n        /* \"#utility.yul\":5610:5622   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5631:5633   */\n      tag_176\n      jumpi\n        /* \"#utility.yul\":5685:5689   */\n      0x7f\n        /* \"#utility.yul\":5677:5683   */\n      dup3\n        /* \"#utility.yul\":5673:5690   */\n      and\n        /* \"#utility.yul\":5663:5690   */\n      swap2\n      pop\n        /* \"#utility.yul\":5631:5633   */\n    tag_176:\n        /* \"#utility.yul\":5738:5740   */\n      0x20\n        /* \"#utility.yul\":5730:5736   */\n      dup3\n        /* \"#utility.yul\":5727:5741   */\n      lt\n        /* \"#utility.yul\":5707:5725   */\n      dup2\n        /* \"#utility.yul\":5704:5742   */\n      eq\n        /* \"#utility.yul\":5701:5703   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":5784:5794   */\n      0x4e487b71\n        /* \"#utility.yul\":5779:5782   */\n      0xe0\n        /* \"#utility.yul\":5775:5795   */\n      shl\n        /* \"#utility.yul\":5772:5773   */\n      0x00\n        /* \"#utility.yul\":5765:5796   */\n      mstore\n        /* \"#utility.yul\":5819:5823   */\n      0x22\n        /* \"#utility.yul\":5816:5817   */\n      0x04\n        /* \"#utility.yul\":5809:5824   */\n      mstore\n        /* \"#utility.yul\":5847:5851   */\n      0x24\n        /* \"#utility.yul\":5844:5845   */\n      0x00\n        /* \"#utility.yul\":5837:5852   */\n      revert\n        /* \"#utility.yul\":5701:5703   */\n    tag_177:\n      pop\n        /* \"#utility.yul\":5543:5868   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209f4649485dd5f181019aa36a272b7f54a8c0de733cbe5187babca3d89745d85664736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2015:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "80:815:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "129:24:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "138:5:6"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "145:5:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "131:20:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "131:20:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "108:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "116:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "104:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "104:17:6"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "123:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "100:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "93:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:35:6"
															},
															"nodeType": "YulIf",
															"src": "90:2:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "162:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "172:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "172:13:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "166:2:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "194:28:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "212:2:6",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "216:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "208:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "208:10:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "220:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "204:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "204:18:6"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "198:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "245:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "247:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "247:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "247:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "237:2:6"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "241:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "234:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "234:10:6"
															},
															"nodeType": "YulIf",
															"src": "231:2:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "276:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "296:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "290:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "290:9:6"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "280:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "308:14:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "318:4:6",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "312:2:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "331:67:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "357:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "373:2:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "377:4:6",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "369:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "369:13:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "388:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "384:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "384:7:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "365:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "365:27:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "353:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "353:40:6"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "395:2:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "349:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "349:49:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "335:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "457:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "459:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "459:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "459:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "416:10:6"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "428:2:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "413:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "413:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "436:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "448:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "433:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "433:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "410:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "410:46:6"
															},
															"nodeType": "YulIf",
															"src": "407:2:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "495:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "499:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "488:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "488:22:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "488:22:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "526:6:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "534:2:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "519:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "519:18:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "519:18:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "583:24:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "592:5:6"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "599:5:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "585:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "585:20:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "585:20:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "560:6:6"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "568:2:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "556:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "556:15:6"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "573:2:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "552:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "552:24:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "578:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "549:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "549:33:6"
															},
															"nodeType": "YulIf",
															"src": "546:2:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "616:14:6",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "625:5:6"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "620:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "685:87:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "714:6:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "722:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "710:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "710:14:6"
																						},
																						{
																							"name": "_3",
																							"nodeType": "YulIdentifier",
																							"src": "726:2:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "706:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "706:23:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "745:6:6"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "753:1:6"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "741:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "741:14:6"
																								},
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "757:2:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "737:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "737:23:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "731:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "731:30:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "699:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "699:63:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "699:63:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "650:1:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "653:2:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "647:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "647:9:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "657:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "659:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "668:1:6"
																				},
																				{
																					"name": "_3",
																					"nodeType": "YulIdentifier",
																					"src": "671:2:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "664:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "664:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "659:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "643:3:6",
																"statements": []
															},
															"src": "639:133:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "831:6:6"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "839:2:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "827:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "827:15:6"
																						},
																						{
																							"name": "_3",
																							"nodeType": "YulIdentifier",
																							"src": "844:2:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "823:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "823:24:6"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "849:5:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "816:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "816:39:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "816:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "787:1:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "790:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "784:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "784:9:6"
															},
															"nodeType": "YulIf",
															"src": "781:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "874:15:6",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "883:6:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "874:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "54:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "62:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "70:5:6",
														"type": ""
													}
												],
												"src": "14:881:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1018:478:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1064:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1073:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1081:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1066:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1066:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1066:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1039:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1048:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1035:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1035:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1060:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1031:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1031:32:6"
															},
															"nodeType": "YulIf",
															"src": "1028:2:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1099:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1119:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1113:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1113:16:6"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1103:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1138:28:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1156:2:6",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1160:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1152:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1152:10:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1164:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1148:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1148:18:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1142:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1193:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1202:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1210:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1195:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1195:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1195:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1181:6:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1189:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1178:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1178:14:6"
															},
															"nodeType": "YulIf",
															"src": "1175:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1228:73:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1273:9:6"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1284:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1269:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1269:22:6"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1293:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1238:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1238:63:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1228:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1310:41:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1336:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1347:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1332:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1332:18:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1326:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1326:25:6"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1314:8:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1380:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1389:6:6"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1397:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1382:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1382:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1382:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1366:8:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1376:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1363:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1363:16:6"
															},
															"nodeType": "YulIf",
															"src": "1360:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1415:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1460:9:6"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1471:8:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1456:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1456:24:6"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1482:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1425:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1425:65:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1415:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "976:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "987:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "999:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1007:6:6",
														"type": ""
													}
												],
												"src": "900:596:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1556:325:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1566:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1580:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1586:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1576:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1576:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1566:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1597:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1627:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1633:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1623:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1623:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1601:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1674:31:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1676:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1690:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1698:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1686:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1686:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1676:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1654:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1647:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1647:26:6"
															},
															"nodeType": "YulIf",
															"src": "1644:2:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1764:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1785:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1792:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1797:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1788:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1788:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1778:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1778:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1778:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1829:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1832:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1822:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1822:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1822:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1857:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1860:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1850:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1850:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1850:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1720:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1743:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1751:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1740:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1740:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1717:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1717:38:6"
															},
															"nodeType": "YulIf",
															"src": "1714:2:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1536:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1545:6:6",
														"type": ""
													}
												],
												"src": "1501:380:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1918:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1935:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1942:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1947:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1938:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1938:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1928:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1928:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1928:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1975:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1978:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1968:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1968:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1968:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1999:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2002:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1992:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1992:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1992:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1886:127:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let _3 := 0x20\n        let newFreePtr := add(add(memPtr, and(add(_1, 0x1f), not(31))), _3)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), _3), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, _3) }\n        {\n            mstore(add(add(memPtr, i), _3), mload(add(add(offset, i), _3)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _3), array)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(value0, value0) }\n        value0 := abi_decode_t_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value1, value1) }\n        value1 := abi_decode_t_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000b9a38038062000b9a8339810160408190526200003491620001b9565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000273565b828054620000769062000220565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200011f578081fd5b81516001600160401b03808211156200013c576200013c6200025d565b6040516020601f8401601f19168201810183811183821017156200016457620001646200025d565b60405283825285840181018710156200017b578485fd5b8492505b838310156200019e57858301810151828401820152918201916200017f565b83831115620001af57848185840101525b5095945050505050565b60008060408385031215620001cc578182fd5b82516001600160401b0380821115620001e3578384fd5b620001f1868387016200010e565b9350602085015191508082111562000207578283fd5b5062000216858286016200010e565b9150509250929050565b6002810460018216806200023557607f821691505b602082108114156200025757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61091780620002836000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012957806370a082311461013c57806395d89b411461014f578063a457c2d714610157578063a9059cbb1461016a578063dd62ed3e1461017d576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ec57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b6610190565b6040516100c39190610648565b60405180910390f35b6100df6100da366004610614565b610222565b6040516100c3919061063d565b6100f4610244565b6040516100c3919061086b565b6100df61010f3660046105d9565b61024a565b61011c610278565b6040516100c39190610874565b6100df610137366004610614565b61027d565b6100f461014a366004610586565b6102a9565b6100b66102c8565b6100df610165366004610614565b6102d7565b6100df610178366004610614565b610328565b6100f461018b3660046105a7565b610340565b60606003805461019f906108a6565b80601f01602080910402602001604051908101604052809291908181526020018280546101cb906108a6565b80156102185780601f106101ed57610100808354040283529160200191610218565b820191906000526020600020905b8154815290600101906020018083116101fb57829003601f168201915b5050505050905090565b60008061022d61036b565b905061023a81858561036f565b5060019392505050565b60025490565b60008061025561036b565b9050610262858285610423565b61026d85858561046d565b506001949350505050565b601290565b60008061028861036b565b905061023a81858561029a8589610340565b6102a49190610882565b61036f565b6001600160a01b0381166000908152602081905260409020545b919050565b60606004805461019f906108a6565b6000806102e261036b565b905060006102f08286610340565b90508381101561031b5760405162461bcd60e51b815260040161031290610826565b60405180910390fd5b61026d828686840361036f565b60008061033361036b565b905061023a81858561046d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166103955760405162461bcd60e51b8152600401610312906107e2565b6001600160a01b0382166103bb5760405162461bcd60e51b8152600401610312906106de565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061041690859061086b565b60405180910390a3505050565b600061042f8484610340565b90506000198114610467578181101561045a5760405162461bcd60e51b815260040161031290610720565b610467848484840361036f565b50505050565b6001600160a01b0383166104935760405162461bcd60e51b81526004016103129061079d565b6001600160a01b0382166104b95760405162461bcd60e51b81526004016103129061069b565b6104c483838361056a565b6001600160a01b038316600090815260208190526040902054818110156104fd5760405162461bcd60e51b815260040161031290610757565b6001600160a01b0380851660008181526020819052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061055b90869061086b565b60405180910390a36104678484845b505050565b80356001600160a01b03811681146102c357600080fd5b600060208284031215610597578081fd5b6105a08261056f565b9392505050565b600080604083850312156105b9578081fd5b6105c28361056f565b91506105d06020840161056f565b90509250929050565b6000806000606084860312156105ed578081fd5b6105f68461056f565b92506106046020850161056f565b9150604084013590509250925092565b60008060408385031215610626578182fd5b61062f8361056f565b946020939093013593505050565b901515815260200190565b6000602080835283518082850152825b8181101561067457858101830151858201604001528201610658565b818111156106855783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252601d908201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604082015260600190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b90815260200190565b60ff91909116815260200190565b600082198211156108a157634e487b7160e01b81526011600452602481fd5b500190565b6002810460018216806108ba57607f821691505b602082108114156108db57634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212209f4649485dd5f181019aa36a272b7f54a8c0de733cbe5187babca3d89745d85664736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB9A CODESIZE SUB DUP1 PUSH3 0xB9A DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1B9 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x273 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x220 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x11F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x13C JUMPI PUSH3 0x13C PUSH3 0x25D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND DUP3 ADD DUP2 ADD DUP4 DUP2 GT DUP4 DUP3 LT OR ISZERO PUSH3 0x164 JUMPI PUSH3 0x164 PUSH3 0x25D JUMP JUMPDEST PUSH1 0x40 MSTORE DUP4 DUP3 MSTORE DUP6 DUP5 ADD DUP2 ADD DUP8 LT ISZERO PUSH3 0x17B JUMPI DUP5 DUP6 REVERT JUMPDEST DUP5 SWAP3 POP JUMPDEST DUP4 DUP4 LT ISZERO PUSH3 0x19E JUMPI DUP6 DUP4 ADD DUP2 ADD MLOAD DUP3 DUP5 ADD DUP3 ADD MSTORE SWAP2 DUP3 ADD SWAP2 PUSH3 0x17F JUMP JUMPDEST DUP4 DUP4 GT ISZERO PUSH3 0x1AF JUMPI DUP5 DUP2 DUP6 DUP5 ADD ADD MSTORE JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1CC JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1E3 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH3 0x1F1 DUP7 DUP4 DUP8 ADD PUSH3 0x10E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x207 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH3 0x216 DUP6 DUP3 DUP7 ADD PUSH3 0x10E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x235 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x257 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x917 DUP1 PUSH3 0x283 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x17D JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x190 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x648 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x614 JUMP JUMPDEST PUSH2 0x222 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x63D JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x86B JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x5D9 JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH2 0x11C PUSH2 0x278 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x874 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x137 CALLDATASIZE PUSH1 0x4 PUSH2 0x614 JUMP JUMPDEST PUSH2 0x27D JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x586 JUMP JUMPDEST PUSH2 0x2A9 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x2C8 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0x614 JUMP JUMPDEST PUSH2 0x2D7 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0x614 JUMP JUMPDEST PUSH2 0x328 JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0x5A7 JUMP JUMPDEST PUSH2 0x340 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x19F SWAP1 PUSH2 0x8A6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1CB SWAP1 PUSH2 0x8A6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x218 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1ED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x218 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1FB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x22D PUSH2 0x36B JUMP JUMPDEST SWAP1 POP PUSH2 0x23A DUP2 DUP6 DUP6 PUSH2 0x36F JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x255 PUSH2 0x36B JUMP JUMPDEST SWAP1 POP PUSH2 0x262 DUP6 DUP3 DUP6 PUSH2 0x423 JUMP JUMPDEST PUSH2 0x26D DUP6 DUP6 DUP6 PUSH2 0x46D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x288 PUSH2 0x36B JUMP JUMPDEST SWAP1 POP PUSH2 0x23A DUP2 DUP6 DUP6 PUSH2 0x29A DUP6 DUP10 PUSH2 0x340 JUMP JUMPDEST PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x882 JUMP JUMPDEST PUSH2 0x36F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x19F SWAP1 PUSH2 0x8A6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2E2 PUSH2 0x36B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2F0 DUP3 DUP7 PUSH2 0x340 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x31B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x312 SWAP1 PUSH2 0x826 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x26D DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x36F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x333 PUSH2 0x36B JUMP JUMPDEST SWAP1 POP PUSH2 0x23A DUP2 DUP6 DUP6 PUSH2 0x46D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x395 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x312 SWAP1 PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x312 SWAP1 PUSH2 0x6DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x416 SWAP1 DUP6 SWAP1 PUSH2 0x86B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42F DUP5 DUP5 PUSH2 0x340 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x467 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x45A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x312 SWAP1 PUSH2 0x720 JUMP JUMPDEST PUSH2 0x467 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x36F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x493 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x312 SWAP1 PUSH2 0x79D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x312 SWAP1 PUSH2 0x69B JUMP JUMPDEST PUSH2 0x4C4 DUP4 DUP4 DUP4 PUSH2 0x56A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x4FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x312 SWAP1 PUSH2 0x757 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x55B SWAP1 DUP7 SWAP1 PUSH2 0x86B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x467 DUP5 DUP5 DUP5 JUMPDEST POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x597 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x5A0 DUP3 PUSH2 0x56F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5B9 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x5C2 DUP4 PUSH2 0x56F JUMP JUMPDEST SWAP2 POP PUSH2 0x5D0 PUSH1 0x20 DUP5 ADD PUSH2 0x56F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5ED JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x5F6 DUP5 PUSH2 0x56F JUMP JUMPDEST SWAP3 POP PUSH2 0x604 PUSH1 0x20 DUP6 ADD PUSH2 0x56F JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x626 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x62F DUP4 PUSH2 0x56F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x674 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x658 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x685 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x8A1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x8BA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x8DB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 CHAINID 0x49 0x48 0x5D 0xD5 CALL DUP2 ADD SWAP11 LOG3 PUSH11 0x272B7F54A8C0DE733CBE51 DUP8 0xBA 0xBC LOG3 0xD8 SWAP8 GASLIMIT 0xD8 JUMP PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "1532:11312:1:-:0;;;1980:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2046:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2069:17:1;;;;:7;;:17;;;;;:::i;:::-;;1980:113;;1532:11312;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1532:11312:1;;;-1:-1:-1;1532:11312:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:881:6;;123:3;116:4;108:6;104:17;100:27;90:2;;145:5;138;131:20;90:2;172:13;;-1:-1:-1;;;;;234:10:6;;;231:2;;;247:18;;:::i;:::-;296:2;290:9;318:4;388:2;369:13;;-1:-1:-1;;365:27:6;353:40;;349:49;;413:18;;;433:22;;;410:46;407:2;;;459:18;;:::i;:::-;495:2;488:22;519:18;;;556:15;;;552:24;;549:33;-1:-1:-1;546:2:6;;;599:5;592;585:20;546:2;625:5;616:14;;639:133;653:2;650:1;647:9;639:133;;;741:14;;;737:23;;731:30;710:14;;;706:23;;699:63;664:10;;;;639:133;;;790:2;787:1;784:9;781:2;;;849:5;844:2;839;831:6;827:15;823:24;816:39;781:2;-1:-1:-1;883:6:6;80:815;-1:-1:-1;;;;;80:815:6:o;900:596::-;;;1060:2;1048:9;1039:7;1035:23;1031:32;1028:2;;;1081:6;1073;1066:22;1028:2;1113:16;;-1:-1:-1;;;;;1178:14:6;;;1175:2;;;1210:6;1202;1195:22;1175:2;1238:63;1293:7;1284:6;1273:9;1269:22;1238:63;:::i;:::-;1228:73;;1347:2;1336:9;1332:18;1326:25;1310:41;;1376:2;1366:8;1363:16;1360:2;;;1397:6;1389;1382:22;1360:2;;1425:65;1482:7;1471:8;1460:9;1456:24;1425:65;:::i;:::-;1415:75;;;1018:478;;;;;:::o;1501:380::-;1586:1;1576:12;;1633:1;1623:12;;;1644:2;;1698:4;1690:6;1686:17;1676:27;;1644:2;1751;1743:6;1740:14;1720:18;1717:38;1714:2;;;1797:10;1792:3;1788:20;1785:1;1778:31;1832:4;1829:1;1822:15;1860:4;1857:1;1850:15;1714:2;;1556:325;;;:::o;1886:127::-;1947:10;1942:3;1938:20;1935:1;1928:31;1978:4;1975:1;1968:15;2002:4;1999:1;1992:15;1918:95;1532:11312:1;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5870:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "65:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "75:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "97:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "84:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "84:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "75:5:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "167:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "176:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "179:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "169:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "169:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "169:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "126:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "137:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "152:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "157:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "148:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "148:11:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "161:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "144:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "144:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "133:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "133:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "123:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "123:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "116:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "116:50:6"
															},
															"nodeType": "YulIf",
															"src": "113:2:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "44:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "55:5:6",
														"type": ""
													}
												],
												"src": "14:175:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "264:128:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "310:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "319:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "327:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "312:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "312:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "312:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "285:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "294:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "281:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "281:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "306:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "277:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "277:32:6"
															},
															"nodeType": "YulIf",
															"src": "274:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "345:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "376:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "355:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "355:31:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "230:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "241:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "253:6:6",
														"type": ""
													}
												],
												"src": "194:198:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "484:187:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "530:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "539:6:6"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "547:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "532:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "532:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "532:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "505:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "514:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "501:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "501:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "526:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "497:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "497:32:6"
															},
															"nodeType": "YulIf",
															"src": "494:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "565:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "596:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "575:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "575:31:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "565:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "615:50:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "650:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "661:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "646:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "646:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "625:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "625:40:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "615:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "442:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "453:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "465:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "473:6:6",
														"type": ""
													}
												],
												"src": "397:274:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "780:238:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "826:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "835:6:6"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "843:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "828:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "828:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "828:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "801:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "810:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "797:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "797:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "822:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "793:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "793:32:6"
															},
															"nodeType": "YulIf",
															"src": "790:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "861:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "892:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "871:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "871:31:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "861:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "911:50:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "946:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "957:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "942:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "942:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "921:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:40:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "911:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "970:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "997:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1008:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "993:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "993:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "980:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:32:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "970:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "730:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "741:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "753:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "761:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "769:6:6",
														"type": ""
													}
												],
												"src": "676:342:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1110:179:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1156:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1165:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1173:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1158:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1158:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1158:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1131:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1140:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1127:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1127:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1152:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1123:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:32:6"
															},
															"nodeType": "YulIf",
															"src": "1120:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1191:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1222:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1201:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1201:31:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1191:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1241:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1268:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1279:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1264:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1264:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1251:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1241:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1079:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1091:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1099:6:6",
														"type": ""
													}
												],
												"src": "1023:266:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1389:92:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1399:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1411:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1422:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1407:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1407:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1399:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1441:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1466:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1459:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1459:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1452:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1452:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1434:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1434:41:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1434:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1358:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1369:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1380:4:6",
														"type": ""
													}
												],
												"src": "1294:187:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1607:482:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1617:12:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1627:2:6",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1621:2:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1645:9:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1656:2:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1638:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1638:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1638:21:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1668:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1688:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1682:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1682:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1672:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1715:9:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1726:2:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1711:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1711:18:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1731:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1704:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1704:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1704:34:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1747:13:6",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "1756:4:6"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1751:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1819:90:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1848:9:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1859:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1844:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1844:17:6"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1863:2:6",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1840:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1840:26:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "1882:6:6"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1890:1:6"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1878:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1878:14:6"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1894:2:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1874:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1874:23:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1868:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1868:30:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1833:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1833:66:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1833:66:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1780:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1783:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1777:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1777:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1791:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1793:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1802:1:6"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1805:2:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1798:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1798:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1793:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1773:3:6",
																"statements": []
															},
															"src": "1769:140:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1943:69:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1972:9:6"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1983:6:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1968:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1968:22:6"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1992:2:6",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1964:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1964:31:6"
																				},
																				{
																					"name": "tail",
																					"nodeType": "YulIdentifier",
																					"src": "1997:4:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1957:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1957:45:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1957:45:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1924:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1927:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1921:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1921:13:6"
															},
															"nodeType": "YulIf",
															"src": "1918:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2021:62:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2037:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2056:6:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2064:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2052:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2052:15:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2073:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2069:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2069:7:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2048:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2048:29:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2033:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2033:45:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2080:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2029:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2029:54:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2021:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1576:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1587:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1598:4:6",
														"type": ""
													}
												],
												"src": "1486:603:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2268:225:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2285:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2296:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2278:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2278:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2278:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2319:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2330:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2315:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2315:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2335:2:6",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2308:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2308:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2358:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2369:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2354:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2354:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2374:34:6",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2347:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2347:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2347:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2429:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2440:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2425:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2425:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2445:5:6",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2418:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2418:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2418:33:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2460:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2472:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2483:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2468:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2468:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2460:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2245:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2259:4:6",
														"type": ""
													}
												],
												"src": "2094:399:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2672:224:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2689:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2700:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2682:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2682:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2682:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2723:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2734:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2719:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2719:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2739:2:6",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2712:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2712:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2712:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2762:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2773:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2758:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2758:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2778:34:6",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2751:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2751:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2751:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2833:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2844:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2829:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2829:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2849:4:6",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2822:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2822:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2822:32:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2863:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2875:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2886:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2871:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2871:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2863:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2649:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2663:4:6",
														"type": ""
													}
												],
												"src": "2498:398:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3075:179:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3092:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3103:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3085:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3085:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3085:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3126:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3137:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3122:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3122:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3142:2:6",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3115:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3115:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3115:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3165:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3176:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3161:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3161:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3181:31:6",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3154:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3154:59:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3154:59:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3222:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3234:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3245:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3230:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3230:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3222:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3052:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3066:4:6",
														"type": ""
													}
												],
												"src": "2901:353:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3433:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3450:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3461:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3443:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3443:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3443:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3484:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3495:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3480:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3480:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3500:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3473:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3473:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3473:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3523:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3534:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3519:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3519:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3539:34:6",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3512:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3512:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3512:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3594:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3605:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3590:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3590:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3610:8:6",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3583:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3583:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3583:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3628:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3640:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3651:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3636:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3636:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3628:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3410:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3424:4:6",
														"type": ""
													}
												],
												"src": "3259:402:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3840:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3857:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3868:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3850:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3850:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3850:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3891:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3902:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3887:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3887:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3907:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3880:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3880:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3880:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3930:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3941:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3926:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3926:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3946:34:6",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3919:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3919:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3919:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4001:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4012:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3997:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3997:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4017:7:6",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3990:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3990:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3990:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4034:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4046:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4057:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4042:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4042:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4034:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3817:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3831:4:6",
														"type": ""
													}
												],
												"src": "3666:401:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4246:226:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4263:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4274:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4256:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4256:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4256:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4297:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4308:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4293:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4293:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4313:2:6",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4286:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4286:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4286:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4336:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4347:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4332:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4332:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4352:34:6",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4325:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4325:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4325:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4407:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4418:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4403:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4423:6:6",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4396:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4396:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4396:34:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4439:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4451:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4462:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4447:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4447:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4439:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4223:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4237:4:6",
														"type": ""
													}
												],
												"src": "4072:400:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4651:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4668:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4679:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4661:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4661:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4661:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4702:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4713:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4698:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4698:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4718:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4691:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4691:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4691:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4741:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4752:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4737:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4737:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4757:34:6",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4730:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4730:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4730:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4812:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4823:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4808:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4808:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4828:7:6",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4801:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4801:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4801:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4845:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4857:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4868:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4853:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4853:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4845:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4628:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4642:4:6",
														"type": ""
													}
												],
												"src": "4477:401:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4984:76:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4994:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5006:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5017:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5002:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5002:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4994:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5036:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5047:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5029:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5029:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5029:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4953:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4964:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4975:4:6",
														"type": ""
													}
												],
												"src": "4883:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5162:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5172:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5184:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5195:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5180:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5180:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5172:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5214:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5229:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5237:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5225:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5225:17:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5207:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5207:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5207:36:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5131:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5142:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5153:4:6",
														"type": ""
													}
												],
												"src": "5065:184:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5302:181:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5337:115:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sum",
																					"nodeType": "YulIdentifier",
																					"src": "5358:3:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5367:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5372:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5363:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5363:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5351:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5351:33:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5351:33:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5404:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5407:4:6",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5397:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5397:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5397:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sum",
																					"nodeType": "YulIdentifier",
																					"src": "5432:3:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5437:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5425:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5425:17:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5425:17:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5318:1:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5325:1:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5321:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5321:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5315:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5315:13:6"
															},
															"nodeType": "YulIf",
															"src": "5312:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5461:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5472:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5475:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5468:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5468:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5461:3:6"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5285:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5288:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5294:3:6",
														"type": ""
													}
												],
												"src": "5254:229:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5543:325:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5553:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5567:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5573:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5563:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5563:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5553:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5584:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5614:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5620:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5610:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5610:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5588:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5661:31:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5663:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5677:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5685:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5673:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5673:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5663:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5641:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5634:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5634:26:6"
															},
															"nodeType": "YulIf",
															"src": "5631:2:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5751:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5772:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5779:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5784:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5775:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5775:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5765:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5765:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5765:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5816:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5819:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5809:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5809:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5809:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5844:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5847:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5837:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5837:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5837:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5707:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5730:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5738:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5727:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5727:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5704:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5704:38:6"
															},
															"nodeType": "YulIf",
															"src": "5701:2:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5523:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5532:6:6",
														"type": ""
													}
												],
												"src": "5488:380:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012957806370a082311461013c57806395d89b411461014f578063a457c2d714610157578063a9059cbb1461016a578063dd62ed3e1461017d576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ec57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b6610190565b6040516100c39190610648565b60405180910390f35b6100df6100da366004610614565b610222565b6040516100c3919061063d565b6100f4610244565b6040516100c3919061086b565b6100df61010f3660046105d9565b61024a565b61011c610278565b6040516100c39190610874565b6100df610137366004610614565b61027d565b6100f461014a366004610586565b6102a9565b6100b66102c8565b6100df610165366004610614565b6102d7565b6100df610178366004610614565b610328565b6100f461018b3660046105a7565b610340565b60606003805461019f906108a6565b80601f01602080910402602001604051908101604052809291908181526020018280546101cb906108a6565b80156102185780601f106101ed57610100808354040283529160200191610218565b820191906000526020600020905b8154815290600101906020018083116101fb57829003601f168201915b5050505050905090565b60008061022d61036b565b905061023a81858561036f565b5060019392505050565b60025490565b60008061025561036b565b9050610262858285610423565b61026d85858561046d565b506001949350505050565b601290565b60008061028861036b565b905061023a81858561029a8589610340565b6102a49190610882565b61036f565b6001600160a01b0381166000908152602081905260409020545b919050565b60606004805461019f906108a6565b6000806102e261036b565b905060006102f08286610340565b90508381101561031b5760405162461bcd60e51b815260040161031290610826565b60405180910390fd5b61026d828686840361036f565b60008061033361036b565b905061023a81858561046d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166103955760405162461bcd60e51b8152600401610312906107e2565b6001600160a01b0382166103bb5760405162461bcd60e51b8152600401610312906106de565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061041690859061086b565b60405180910390a3505050565b600061042f8484610340565b90506000198114610467578181101561045a5760405162461bcd60e51b815260040161031290610720565b610467848484840361036f565b50505050565b6001600160a01b0383166104935760405162461bcd60e51b81526004016103129061079d565b6001600160a01b0382166104b95760405162461bcd60e51b81526004016103129061069b565b6104c483838361056a565b6001600160a01b038316600090815260208190526040902054818110156104fd5760405162461bcd60e51b815260040161031290610757565b6001600160a01b0380851660008181526020819052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061055b90869061086b565b60405180910390a36104678484845b505050565b80356001600160a01b03811681146102c357600080fd5b600060208284031215610597578081fd5b6105a08261056f565b9392505050565b600080604083850312156105b9578081fd5b6105c28361056f565b91506105d06020840161056f565b90509250929050565b6000806000606084860312156105ed578081fd5b6105f68461056f565b92506106046020850161056f565b9150604084013590509250925092565b60008060408385031215610626578182fd5b61062f8361056f565b946020939093013593505050565b901515815260200190565b6000602080835283518082850152825b8181101561067457858101830151858201604001528201610658565b818111156106855783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252601d908201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604082015260600190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b90815260200190565b60ff91909116815260200190565b600082198211156108a157634e487b7160e01b81526011600452602481fd5b500190565b6002810460018216806108ba57607f821691505b602082108114156108db57634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212209f4649485dd5f181019aa36a272b7f54a8c0de733cbe5187babca3d89745d85664736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x17D JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x190 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x648 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x614 JUMP JUMPDEST PUSH2 0x222 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x63D JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x86B JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x5D9 JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH2 0x11C PUSH2 0x278 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x874 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x137 CALLDATASIZE PUSH1 0x4 PUSH2 0x614 JUMP JUMPDEST PUSH2 0x27D JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x586 JUMP JUMPDEST PUSH2 0x2A9 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x2C8 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0x614 JUMP JUMPDEST PUSH2 0x2D7 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0x614 JUMP JUMPDEST PUSH2 0x328 JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0x5A7 JUMP JUMPDEST PUSH2 0x340 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x19F SWAP1 PUSH2 0x8A6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1CB SWAP1 PUSH2 0x8A6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x218 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1ED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x218 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1FB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x22D PUSH2 0x36B JUMP JUMPDEST SWAP1 POP PUSH2 0x23A DUP2 DUP6 DUP6 PUSH2 0x36F JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x255 PUSH2 0x36B JUMP JUMPDEST SWAP1 POP PUSH2 0x262 DUP6 DUP3 DUP6 PUSH2 0x423 JUMP JUMPDEST PUSH2 0x26D DUP6 DUP6 DUP6 PUSH2 0x46D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x288 PUSH2 0x36B JUMP JUMPDEST SWAP1 POP PUSH2 0x23A DUP2 DUP6 DUP6 PUSH2 0x29A DUP6 DUP10 PUSH2 0x340 JUMP JUMPDEST PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x882 JUMP JUMPDEST PUSH2 0x36F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x19F SWAP1 PUSH2 0x8A6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2E2 PUSH2 0x36B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2F0 DUP3 DUP7 PUSH2 0x340 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x31B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x312 SWAP1 PUSH2 0x826 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x26D DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x36F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x333 PUSH2 0x36B JUMP JUMPDEST SWAP1 POP PUSH2 0x23A DUP2 DUP6 DUP6 PUSH2 0x46D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x395 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x312 SWAP1 PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x312 SWAP1 PUSH2 0x6DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x416 SWAP1 DUP6 SWAP1 PUSH2 0x86B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42F DUP5 DUP5 PUSH2 0x340 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x467 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x45A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x312 SWAP1 PUSH2 0x720 JUMP JUMPDEST PUSH2 0x467 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x36F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x493 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x312 SWAP1 PUSH2 0x79D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x312 SWAP1 PUSH2 0x69B JUMP JUMPDEST PUSH2 0x4C4 DUP4 DUP4 DUP4 PUSH2 0x56A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x4FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x312 SWAP1 PUSH2 0x757 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x55B SWAP1 DUP7 SWAP1 PUSH2 0x86B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x467 DUP5 DUP5 DUP5 JUMPDEST POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x597 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x5A0 DUP3 PUSH2 0x56F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5B9 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x5C2 DUP4 PUSH2 0x56F JUMP JUMPDEST SWAP2 POP PUSH2 0x5D0 PUSH1 0x20 DUP5 ADD PUSH2 0x56F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5ED JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x5F6 DUP5 PUSH2 0x56F JUMP JUMPDEST SWAP3 POP PUSH2 0x604 PUSH1 0x20 DUP6 ADD PUSH2 0x56F JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x626 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x62F DUP4 PUSH2 0x56F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x674 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x658 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x685 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x8A1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x8BA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x8DB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 CHAINID 0x49 0x48 0x5D 0xD5 CALL DUP2 ADD SWAP11 LOG3 PUSH11 0x272B7F54A8C0DE733CBE51 DUP8 0xBA 0xBC LOG3 0xD8 SWAP8 GASLIMIT 0xD8 JUMP PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "1532:11312:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3255:106::-;;;:::i;:::-;;;;;;;:::i;5203:256::-;;;;;;:::i;:::-;;:::i;3104:91::-;;;:::i;:::-;;;;;;;:::i;5854:234::-;;;;;;:::i;:::-;;:::i;3419:125::-;;;;;;:::i;:::-;;:::i;2369:102::-;;;:::i;6575:427::-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;3987:149::-;;;;;;:::i;:::-;;:::i;2158:98::-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;4543:13;4559:12;:10;:12::i;:::-;4543:28;;4581:32;4590:5;4597:7;4606:6;4581:8;:32::i;:::-;-1:-1:-1;4630:4:1;;4444:197;-1:-1:-1;;;4444:197:1:o;3255:106::-;3342:12;;3255:106;:::o;5203:256::-;5300:4;5316:15;5334:12;:10;:12::i;:::-;5316:30;;5356:38;5372:4;5378:7;5387:6;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:1;;5203:256;-1:-1:-1;;;;5203:256:1:o;3104:91::-;3186:2;3104:91;:::o;5854:234::-;5942:4;5958:13;5974:12;:10;:12::i;:::-;5958:28;;5996:64;6005:5;6012:7;6049:10;6021:25;6031:5;6038:7;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;3419:125::-;-1:-1:-1;;;;;3519:18:1;;3493:7;3519:18;;;;;;;;;;;3419:125;;;;:::o;2369:102::-;2425:13;2457:7;2450:14;;;;;:::i;6575:427::-;6668:4;6684:13;6700:12;:10;:12::i;:::-;6684:28;;6722:24;6749:25;6759:5;6766:7;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:1;;;;;;;:::i;:::-;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;3835:13;3851:12;:10;:12::i;:::-;3835:28;;3873;3883:5;3890:2;3894:6;3873:9;:28::i;3987:149::-;-1:-1:-1;;;;;4102:18:1;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;640:96:4:-;719:10;640:96;:::o;10457:340:1:-;-1:-1:-1;;;;;10558:19:1;;10550:68;;;;-1:-1:-1;;;10550:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;10636:21:1;;10628:68;;;;-1:-1:-1;;;10628:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;10707:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;;:36;;;10758:32;;;;;10737:6;;10758:32;:::i;:::-;;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:1;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:1;;;;;;;:::i;:::-;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11078:411;;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:1;;7544:68;;;;-1:-1:-1;;;7544:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;7630:16:1;;7622:64;;;;-1:-1:-1;;;7622:64:1;;;;;;;:::i;:::-;7697:38;7718:4;7724:2;7728:6;7697:20;:38::i;:::-;-1:-1:-1;;;;;7768:15:1;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;7899:15:1;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;;;;;7931:6;;8163:26;:::i;:::-;;;;;;;;8200:37;8220:4;8226:2;8230:6;12073:91;;;;:::o;14:175:6:-;84:20;;-1:-1:-1;;;;;133:31:6;;123:42;;113:2;;179:1;176;169:12;194:198;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;:::-;345:41;264:128;-1:-1:-1;;;264:128:6:o;397:274::-;;;526:2;514:9;505:7;501:23;497:32;494:2;;;547:6;539;532:22;494:2;575:31;596:9;575:31;:::i;:::-;565:41;;625:40;661:2;650:9;646:18;625:40;:::i;:::-;615:50;;484:187;;;;;:::o;676:342::-;;;;822:2;810:9;801:7;797:23;793:32;790:2;;;843:6;835;828:22;790:2;871:31;892:9;871:31;:::i;:::-;861:41;;921:40;957:2;946:9;942:18;921:40;:::i;:::-;911:50;;1008:2;997:9;993:18;980:32;970:42;;780:238;;;;;:::o;1023:266::-;;;1152:2;1140:9;1131:7;1127:23;1123:32;1120:2;;;1173:6;1165;1158:22;1120:2;1201:31;1222:9;1201:31;:::i;:::-;1191:41;1279:2;1264:18;;;;1251:32;;-1:-1:-1;;;1110:179:6:o;1294:187::-;1459:14;;1452:22;1434:41;;1422:2;1407:18;;1389:92::o;1486:603::-;;1627:2;1656;1645:9;1638:21;1688:6;1682:13;1731:6;1726:2;1715:9;1711:18;1704:34;1756:4;1769:140;1783:6;1780:1;1777:13;1769:140;;;1878:14;;;1874:23;;1868:30;1844:17;;;1863:2;1840:26;1833:66;1798:10;;1769:140;;;1927:6;1924:1;1921:13;1918:2;;;1997:4;1992:2;1983:6;1972:9;1968:22;1964:31;1957:45;1918:2;-1:-1:-1;2073:2:6;2052:15;-1:-1:-1;;2048:29:6;2033:45;;;;2080:2;2029:54;;1607:482;-1:-1:-1;;;1607:482:6:o;2094:399::-;2296:2;2278:21;;;2335:2;2315:18;;;2308:30;2374:34;2369:2;2354:18;;2347:62;-1:-1:-1;;;2440:2:6;2425:18;;2418:33;2483:3;2468:19;;2268:225::o;2498:398::-;2700:2;2682:21;;;2739:2;2719:18;;;2712:30;2778:34;2773:2;2758:18;;2751:62;-1:-1:-1;;;2844:2:6;2829:18;;2822:32;2886:3;2871:19;;2672:224::o;2901:353::-;3103:2;3085:21;;;3142:2;3122:18;;;3115:30;3181:31;3176:2;3161:18;;3154:59;3245:2;3230:18;;3075:179::o;3259:402::-;3461:2;3443:21;;;3500:2;3480:18;;;3473:30;3539:34;3534:2;3519:18;;3512:62;-1:-1:-1;;;3605:2:6;3590:18;;3583:36;3651:3;3636:19;;3433:228::o;3666:401::-;3868:2;3850:21;;;3907:2;3887:18;;;3880:30;3946:34;3941:2;3926:18;;3919:62;-1:-1:-1;;;4012:2:6;3997:18;;3990:35;4057:3;4042:19;;3840:227::o;4072:400::-;4274:2;4256:21;;;4313:2;4293:18;;;4286:30;4352:34;4347:2;4332:18;;4325:62;-1:-1:-1;;;4418:2:6;4403:18;;4396:34;4462:3;4447:19;;4246:226::o;4477:401::-;4679:2;4661:21;;;4718:2;4698:18;;;4691:30;4757:34;4752:2;4737:18;;4730:62;-1:-1:-1;;;4823:2:6;4808:18;;4801:35;4868:3;4853:19;;4651:227::o;4883:177::-;5029:25;;;5017:2;5002:18;;4984:76::o;5065:184::-;5237:4;5225:17;;;;5207:36;;5195:2;5180:18;;5162:87::o;5254:229::-;;5325:1;5321:6;5318:1;5315:13;5312:2;;;-1:-1:-1;;;5351:33:6;;5407:4;5404:1;5397:15;5437:4;5358:3;5425:17;5312:2;-1:-1:-1;5468:9:6;;5302:181::o;5488:380::-;5573:1;5563:12;;5620:1;5610:12;;;5631:2;;5685:4;5677:6;5673:17;5663:27;;5631:2;5738;5730:6;5727:14;5707:18;5704:38;5701:2;;;5784:10;5779:3;5775:20;5772:1;5765:31;5819:4;5816:1;5809:15;5847:4;5844:1;5837:15;5701:2;;5543:325;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "465400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "22619",
								"balanceOf(address)": "infinite",
								"decimals()": "329",
								"decreaseAllowance(address,uint256)": "23711",
								"increaseAllowance(address,uint256)": "23673",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1073",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 895,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 14,
									"end": 895,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 14,
									"end": 895,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 123,
									"end": 126,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 116,
									"end": 120,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 108,
									"end": 114,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 104,
									"end": 121,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 100,
									"end": 127,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 90,
									"end": 92,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 90,
									"end": 92,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 145,
									"end": 150,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 131,
									"end": 151,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 90,
									"end": 92,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 90,
									"end": 92,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 172,
									"end": 185,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 172,
									"end": 185,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 234,
									"end": 244,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 234,
									"end": 244,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 234,
									"end": 244,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 231,
									"end": 233,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 231,
									"end": 233,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 231,
									"end": 233,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 247,
									"end": 265,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 247,
									"end": 265,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 247,
									"end": 265,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 247,
									"end": 265,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 247,
									"end": 265,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 296,
									"end": 298,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 290,
									"end": 299,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 318,
									"end": 322,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 390,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 369,
									"end": 382,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 369,
									"end": 382,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 365,
									"end": 392,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 353,
									"end": 393,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 353,
									"end": 393,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 349,
									"end": 398,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 349,
									"end": 398,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 413,
									"end": 431,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 413,
									"end": 431,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 413,
									"end": 431,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 433,
									"end": 455,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 433,
									"end": 455,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 433,
									"end": 455,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 410,
									"end": 456,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 407,
									"end": 409,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 407,
									"end": 409,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 407,
									"end": 409,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 459,
									"end": 477,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 459,
									"end": 477,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 459,
									"end": 477,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 459,
									"end": 477,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 459,
									"end": 477,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 495,
									"end": 497,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 488,
									"end": 510,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 519,
									"end": 537,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 519,
									"end": 537,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 519,
									"end": 537,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 556,
									"end": 571,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 556,
									"end": 571,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 556,
									"end": 571,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 552,
									"end": 576,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 552,
									"end": 576,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 549,
									"end": 582,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 546,
									"end": 548,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 546,
									"end": 548,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 546,
									"end": 548,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 599,
									"end": 604,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 592,
									"end": 597,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 585,
									"end": 605,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 546,
									"end": 548,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 546,
									"end": 548,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 625,
									"end": 630,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 616,
									"end": 630,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 616,
									"end": 630,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 639,
									"end": 772,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 639,
									"end": 772,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 653,
									"end": 655,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 650,
									"end": 651,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 647,
									"end": 656,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 639,
									"end": 772,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 639,
									"end": 772,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 639,
									"end": 772,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 741,
									"end": 755,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 741,
									"end": 755,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 741,
									"end": 755,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 737,
									"end": 760,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 737,
									"end": 760,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 731,
									"end": 761,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 710,
									"end": 724,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 710,
									"end": 724,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 710,
									"end": 724,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 706,
									"end": 729,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 706,
									"end": 729,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 699,
									"end": 762,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 664,
									"end": 674,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 664,
									"end": 674,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 664,
									"end": 674,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 664,
									"end": 674,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 639,
									"end": 772,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 639,
									"end": 772,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 639,
									"end": 772,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 639,
									"end": 772,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 790,
									"end": 792,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 787,
									"end": 788,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 784,
									"end": 793,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 781,
									"end": 783,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 781,
									"end": 783,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 781,
									"end": 783,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 849,
									"end": 854,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 844,
									"end": 846,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 839,
									"end": 841,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 831,
									"end": 837,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 827,
									"end": 842,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 823,
									"end": 847,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 816,
									"end": 855,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 781,
									"end": 783,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 781,
									"end": 783,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 883,
									"end": 889,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 80,
									"end": 895,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 80,
									"end": 895,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 900,
									"end": 1496,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 900,
									"end": 1496,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 900,
									"end": 1496,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 900,
									"end": 1496,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1060,
									"end": 1062,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1048,
									"end": 1057,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1039,
									"end": 1046,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1035,
									"end": 1058,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1031,
									"end": 1063,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 1028,
									"end": 1030,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1028,
									"end": 1030,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1028,
									"end": 1030,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1081,
									"end": 1087,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1073,
									"end": 1079,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1066,
									"end": 1088,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1028,
									"end": 1030,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1028,
									"end": 1030,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1113,
									"end": 1129,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1113,
									"end": 1129,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1178,
									"end": 1192,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1178,
									"end": 1192,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1178,
									"end": 1192,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1175,
									"end": 1177,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1175,
									"end": 1177,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1175,
									"end": 1177,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1210,
									"end": 1216,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1208,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1195,
									"end": 1217,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1175,
									"end": 1177,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1175,
									"end": 1177,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1238,
									"end": 1301,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1284,
									"end": 1290,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1273,
									"end": 1282,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1269,
									"end": 1291,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1238,
									"end": 1301,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1238,
									"end": 1301,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1238,
									"end": 1301,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1238,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1228,
									"end": 1301,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1228,
									"end": 1301,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1347,
									"end": 1349,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1336,
									"end": 1345,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1332,
									"end": 1350,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1351,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1310,
									"end": 1351,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1310,
									"end": 1351,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1376,
									"end": 1378,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1366,
									"end": 1374,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1363,
									"end": 1379,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1360,
									"end": 1362,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1360,
									"end": 1362,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1360,
									"end": 1362,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1397,
									"end": 1403,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1389,
									"end": 1395,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1382,
									"end": 1404,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1360,
									"end": 1362,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1360,
									"end": 1362,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1360,
									"end": 1362,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1425,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1482,
									"end": 1489,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1471,
									"end": 1479,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1460,
									"end": 1469,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1456,
									"end": 1480,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1425,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1425,
									"end": 1490,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1425,
									"end": 1490,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1425,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1415,
									"end": 1490,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1415,
									"end": 1490,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1415,
									"end": 1490,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1018,
									"end": 1496,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1018,
									"end": 1496,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1018,
									"end": 1496,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1018,
									"end": 1496,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1018,
									"end": 1496,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1018,
									"end": 1496,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1501,
									"end": 1881,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1501,
									"end": 1881,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1586,
									"end": 1587,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1576,
									"end": 1588,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1576,
									"end": 1588,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1633,
									"end": 1634,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1623,
									"end": 1635,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1623,
									"end": 1635,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1623,
									"end": 1635,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1644,
									"end": 1646,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1644,
									"end": 1646,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1698,
									"end": 1702,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 1690,
									"end": 1696,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1686,
									"end": 1703,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1676,
									"end": 1703,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1676,
									"end": 1703,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1644,
									"end": 1646,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1644,
									"end": 1646,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1751,
									"end": 1753,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1743,
									"end": 1749,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 1754,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1720,
									"end": 1738,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1717,
									"end": 1755,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1714,
									"end": 1716,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1714,
									"end": 1716,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1714,
									"end": 1716,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1797,
									"end": 1807,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 1792,
									"end": 1795,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 1788,
									"end": 1808,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1785,
									"end": 1786,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1778,
									"end": 1809,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1832,
									"end": 1836,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1829,
									"end": 1830,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1822,
									"end": 1837,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1860,
									"end": 1864,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1857,
									"end": 1858,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1850,
									"end": 1865,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1714,
									"end": 1716,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1714,
									"end": 1716,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1714,
									"end": 1716,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1556,
									"end": 1881,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1556,
									"end": 1881,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1556,
									"end": 1881,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1556,
									"end": 1881,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1886,
									"end": 2013,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 1886,
									"end": 2013,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1947,
									"end": 1957,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 1942,
									"end": 1945,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 1938,
									"end": 1958,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1935,
									"end": 1936,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1928,
									"end": 1959,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1978,
									"end": 1982,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1975,
									"end": 1976,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1968,
									"end": 1983,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2002,
									"end": 2006,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1999,
									"end": 2000,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1992,
									"end": 2007,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1918,
									"end": 2013,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1918,
									"end": 2013,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209f4649485dd5f181019aa36a272b7f54a8c0de733cbe5187babca3d89745d85664736f6c63430008000033",
									".code": [
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2244,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4527,
											"end": 4531,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4543,
											"end": 4556,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4559,
											"end": 4571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4559,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4559,
											"end": 4571,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4559,
											"end": 4571,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4559,
											"end": 4571,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4543,
											"end": 4571,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4543,
											"end": 4571,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4590,
											"end": 4595,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4597,
											"end": 4604,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4581,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4630,
											"end": 4634,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4630,
											"end": 4634,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5300,
											"end": 5304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5316,
											"end": 5331,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5334,
											"end": 5346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 5334,
											"end": 5344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 5334,
											"end": 5346,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5334,
											"end": 5346,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 5334,
											"end": 5346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5316,
											"end": 5346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5316,
											"end": 5346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5372,
											"end": 5376,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5378,
											"end": 5385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5393,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5356,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5414,
											"end": 5418,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5422,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5424,
											"end": 5430,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5404,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5946,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5958,
											"end": 5971,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5974,
											"end": 5986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5974,
											"end": 5984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 5974,
											"end": 5986,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5974,
											"end": 5986,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5974,
											"end": 5986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5958,
											"end": 5986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5958,
											"end": 5986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5996,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 6005,
											"end": 6010,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6059,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 6031,
											"end": 6036,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6045,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5996,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5996,
											"end": 6060,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2457,
											"end": 2464,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6684,
											"end": 6697,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6700,
											"end": 6712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 6700,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 6700,
											"end": 6712,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6700,
											"end": 6712,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 6700,
											"end": 6712,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6684,
											"end": 6712,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6684,
											"end": 6712,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6722,
											"end": 6746,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 6759,
											"end": 6764,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6766,
											"end": 6773,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6812,
											"end": 6827,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6808,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6912,
											"end": 6917,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6919,
											"end": 6926,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6947,
											"end": 6962,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 6944,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 6962,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6903,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3819,
											"end": 3823,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3835,
											"end": 3848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3851,
											"end": 3863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3851,
											"end": 3861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3851,
											"end": 3863,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3851,
											"end": 3863,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3851,
											"end": 3863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3835,
											"end": 3863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3835,
											"end": 3863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3873,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3883,
											"end": 3888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3890,
											"end": 3892,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3894,
											"end": 3900,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3873,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3873,
											"end": 3901,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4076,
											"end": 4083,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4113,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10718,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10737,
											"end": 10743,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10737,
											"end": 10743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11202,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 11215,
											"end": 11220,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11222,
											"end": 11229,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11205,
											"end": 11214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11244,
											"end": 11260,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11244,
											"end": 11281,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11325,
											"end": 11331,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11305,
											"end": 11321,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11416,
											"end": 11421,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11423,
											"end": 11430,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11451,
											"end": 11457,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11432,
											"end": 11448,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11432,
											"end": 11457,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11407,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7697,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 7718,
											"end": 7722,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7724,
											"end": 7726,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7728,
											"end": 7734,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7697,
											"end": 7717,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 7697,
											"end": 7735,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7697,
											"end": 7735,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 7697,
											"end": 7735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7746,
											"end": 7765,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7908,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7931,
											"end": 7937,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7931,
											"end": 7937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 8200,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 8220,
											"end": 8224,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8226,
											"end": 8228,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8230,
											"end": 8236,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 189,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 14,
											"end": 189,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 84,
											"end": 104,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 84,
											"end": 104,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 133,
											"end": 164,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 133,
											"end": 164,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 123,
											"end": 165,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 123,
											"end": 165,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 113,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 113,
											"end": 115,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 179,
											"end": 180,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 177,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 169,
											"end": 181,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 194,
											"end": 392,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 194,
											"end": 392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 194,
											"end": 392,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 308,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 294,
											"end": 303,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 285,
											"end": 292,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 281,
											"end": 304,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 277,
											"end": 309,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 274,
											"end": 276,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 274,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 274,
											"end": 276,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 327,
											"end": 333,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 319,
											"end": 325,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 312,
											"end": 334,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 274,
											"end": 276,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 274,
											"end": 276,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 355,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 376,
											"end": 385,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 355,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 345,
											"end": 386,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 264,
											"end": 392,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 264,
											"end": 392,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 397,
											"end": 671,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 397,
											"end": 671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 397,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 397,
											"end": 671,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 526,
											"end": 528,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 514,
											"end": 523,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 505,
											"end": 512,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 501,
											"end": 524,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 497,
											"end": 529,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 494,
											"end": 496,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 494,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 494,
											"end": 496,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 547,
											"end": 553,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 539,
											"end": 545,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 532,
											"end": 554,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 494,
											"end": 496,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 494,
											"end": 496,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 575,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 596,
											"end": 605,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 575,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 575,
											"end": 606,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 575,
											"end": 606,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 575,
											"end": 606,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 565,
											"end": 606,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 565,
											"end": 606,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 625,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 661,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 650,
											"end": 659,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 646,
											"end": 664,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 625,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 625,
											"end": 665,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 625,
											"end": 665,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 625,
											"end": 665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 615,
											"end": 665,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 615,
											"end": 665,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 484,
											"end": 671,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 484,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 484,
											"end": 671,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 484,
											"end": 671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 484,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 484,
											"end": 671,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 676,
											"end": 1018,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 676,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 676,
											"end": 1018,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 676,
											"end": 1018,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 676,
											"end": 1018,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 824,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 810,
											"end": 819,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 801,
											"end": 808,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 797,
											"end": 820,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 793,
											"end": 825,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 790,
											"end": 792,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 790,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 790,
											"end": 792,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 843,
											"end": 849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 835,
											"end": 841,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 828,
											"end": 850,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 790,
											"end": 792,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 790,
											"end": 792,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 871,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 892,
											"end": 901,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 871,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 871,
											"end": 902,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 871,
											"end": 902,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 871,
											"end": 902,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 861,
											"end": 902,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 861,
											"end": 902,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 921,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 957,
											"end": 959,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 946,
											"end": 955,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 942,
											"end": 960,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 921,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 921,
											"end": 961,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 921,
											"end": 961,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 921,
											"end": 961,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 911,
											"end": 961,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 911,
											"end": 961,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1010,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 997,
											"end": 1006,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1011,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 980,
											"end": 1012,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 970,
											"end": 1012,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 970,
											"end": 1012,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 780,
											"end": 1018,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 780,
											"end": 1018,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 780,
											"end": 1018,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 780,
											"end": 1018,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 780,
											"end": 1018,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 780,
											"end": 1018,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1023,
											"end": 1289,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 1023,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1023,
											"end": 1289,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1023,
											"end": 1289,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1152,
											"end": 1154,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1140,
											"end": 1149,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1131,
											"end": 1138,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1150,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1120,
											"end": 1122,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1120,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1120,
											"end": 1122,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1173,
											"end": 1179,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1165,
											"end": 1171,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1180,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1120,
											"end": 1122,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1120,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1222,
											"end": 1231,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1279,
											"end": 1281,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1282,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1264,
											"end": 1282,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1264,
											"end": 1282,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1264,
											"end": 1282,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1283,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1283,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1110,
											"end": 1289,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1294,
											"end": 1481,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1294,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1459,
											"end": 1473,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1459,
											"end": 1473,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1452,
											"end": 1474,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1434,
											"end": 1475,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1434,
											"end": 1475,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1424,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1407,
											"end": 1425,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1407,
											"end": 1425,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1481,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1486,
											"end": 2089,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1486,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1486,
											"end": 2089,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1627,
											"end": 1629,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1656,
											"end": 1658,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1654,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1659,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1688,
											"end": 1694,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1682,
											"end": 1695,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1726,
											"end": 1728,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1715,
											"end": 1724,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1711,
											"end": 1729,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1704,
											"end": 1738,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1760,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1769,
											"end": 1909,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 1769,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1783,
											"end": 1789,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1780,
											"end": 1781,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1777,
											"end": 1790,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1769,
											"end": 1909,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1769,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 1769,
											"end": 1909,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1878,
											"end": 1892,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1878,
											"end": 1892,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1878,
											"end": 1892,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1897,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1897,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1861,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1861,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1861,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1863,
											"end": 1865,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1840,
											"end": 1866,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1899,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1798,
											"end": 1808,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1798,
											"end": 1808,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1769,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 1769,
											"end": 1909,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1769,
											"end": 1909,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 1769,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 1925,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1921,
											"end": 1934,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1918,
											"end": 1920,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1918,
											"end": 1920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1918,
											"end": 1920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1997,
											"end": 2001,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1992,
											"end": 1994,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1983,
											"end": 1989,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1972,
											"end": 1981,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 1990,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1964,
											"end": 1995,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 2002,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1918,
											"end": 1920,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1918,
											"end": 1920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2073,
											"end": 2075,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2048,
											"end": 2077,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2078,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2078,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2078,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2078,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2080,
											"end": 2082,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2029,
											"end": 2083,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2083,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1607,
											"end": 2089,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1607,
											"end": 2089,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2094,
											"end": 2493,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 2094,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2298,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2278,
											"end": 2299,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2278,
											"end": 2299,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2278,
											"end": 2299,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2335,
											"end": 2337,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2315,
											"end": 2333,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2333,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2333,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2338,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2408,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2369,
											"end": 2371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2347,
											"end": 2409,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2440,
											"end": 2442,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2451,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2486,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2268,
											"end": 2493,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2498,
											"end": 2896,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 2498,
											"end": 2896,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2702,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2682,
											"end": 2703,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2682,
											"end": 2703,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2682,
											"end": 2703,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2739,
											"end": 2741,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2719,
											"end": 2737,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2737,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2737,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 2812,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 2773,
											"end": 2775,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2758,
											"end": 2776,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2776,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2751,
											"end": 2813,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2844,
											"end": 2846,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2829,
											"end": 2847,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2829,
											"end": 2847,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2822,
											"end": 2854,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2886,
											"end": 2889,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2871,
											"end": 2890,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2871,
											"end": 2890,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2896,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2901,
											"end": 3254,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 2901,
											"end": 3254,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3103,
											"end": 3105,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3085,
											"end": 3106,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3085,
											"end": 3106,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3085,
											"end": 3106,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3144,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 3122,
											"end": 3140,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3122,
											"end": 3140,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3122,
											"end": 3140,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3145,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3181,
											"end": 3212,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3161,
											"end": 3179,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3161,
											"end": 3179,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3154,
											"end": 3213,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3247,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3230,
											"end": 3248,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3254,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3259,
											"end": 3661,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 3259,
											"end": 3661,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3461,
											"end": 3463,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3443,
											"end": 3464,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3443,
											"end": 3464,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3443,
											"end": 3464,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3500,
											"end": 3502,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3503,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3539,
											"end": 3573,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 3534,
											"end": 3536,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3512,
											"end": 3574,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3605,
											"end": 3607,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3590,
											"end": 3608,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3590,
											"end": 3608,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3619,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3654,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3636,
											"end": 3655,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3636,
											"end": 3655,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3433,
											"end": 3661,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3666,
											"end": 4067,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 3666,
											"end": 4067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3868,
											"end": 3870,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3850,
											"end": 3871,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 3871,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 3871,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3907,
											"end": 3909,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 3887,
											"end": 3905,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3887,
											"end": 3905,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3887,
											"end": 3905,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 3910,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 3980,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 3941,
											"end": 3943,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3926,
											"end": 3944,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3926,
											"end": 3944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3919,
											"end": 3981,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4012,
											"end": 4014,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3997,
											"end": 4015,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3997,
											"end": 4015,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3990,
											"end": 4025,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4060,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 4042,
											"end": 4061,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4042,
											"end": 4061,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3840,
											"end": 4067,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4072,
											"end": 4472,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 4072,
											"end": 4472,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4274,
											"end": 4276,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4256,
											"end": 4277,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4256,
											"end": 4277,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4256,
											"end": 4277,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4313,
											"end": 4315,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4293,
											"end": 4311,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4293,
											"end": 4311,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4293,
											"end": 4311,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4286,
											"end": 4316,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4352,
											"end": 4386,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4347,
											"end": 4349,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4332,
											"end": 4350,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4332,
											"end": 4350,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4325,
											"end": 4387,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4418,
											"end": 4420,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4396,
											"end": 4430,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4462,
											"end": 4465,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 4447,
											"end": 4466,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4447,
											"end": 4466,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4246,
											"end": 4472,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4477,
											"end": 4878,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 4477,
											"end": 4878,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4679,
											"end": 4681,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4661,
											"end": 4682,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4661,
											"end": 4682,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4661,
											"end": 4682,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 4720,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 4698,
											"end": 4716,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4698,
											"end": 4716,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4698,
											"end": 4716,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4691,
											"end": 4721,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4757,
											"end": 4791,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 4752,
											"end": 4754,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4737,
											"end": 4755,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4755,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4730,
											"end": 4792,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4823,
											"end": 4825,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4808,
											"end": 4826,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4808,
											"end": 4826,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4801,
											"end": 4836,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4868,
											"end": 4871,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 4853,
											"end": 4872,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 4872,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4651,
											"end": 4878,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4883,
											"end": 5060,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 4883,
											"end": 5060,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5029,
											"end": 5054,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5029,
											"end": 5054,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5029,
											"end": 5054,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5017,
											"end": 5019,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5002,
											"end": 5020,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5002,
											"end": 5020,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4984,
											"end": 5060,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5065,
											"end": 5249,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 5065,
											"end": 5249,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5241,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5225,
											"end": 5242,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5242,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5242,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5242,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5207,
											"end": 5243,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5207,
											"end": 5243,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5195,
											"end": 5197,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5180,
											"end": 5198,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5180,
											"end": 5198,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5162,
											"end": 5249,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5254,
											"end": 5483,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 5254,
											"end": 5483,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5254,
											"end": 5483,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5325,
											"end": 5326,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5321,
											"end": 5327,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5318,
											"end": 5319,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5315,
											"end": 5328,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5312,
											"end": 5314,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5312,
											"end": 5314,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 5312,
											"end": 5314,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5351,
											"end": 5384,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5351,
											"end": 5384,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5411,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 5404,
											"end": 5405,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5397,
											"end": 5412,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5437,
											"end": 5441,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5358,
											"end": 5361,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5425,
											"end": 5442,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5312,
											"end": 5314,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 5312,
											"end": 5314,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5468,
											"end": 5477,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5468,
											"end": 5477,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5302,
											"end": 5483,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5488,
											"end": 5868,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 5488,
											"end": 5868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5573,
											"end": 5574,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5563,
											"end": 5575,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5563,
											"end": 5575,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5610,
											"end": 5622,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5610,
											"end": 5622,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5610,
											"end": 5622,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5631,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 5631,
											"end": 5633,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5685,
											"end": 5689,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 5677,
											"end": 5683,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5673,
											"end": 5690,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5663,
											"end": 5690,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5663,
											"end": 5690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5631,
											"end": 5633,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 5631,
											"end": 5633,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5738,
											"end": 5740,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5730,
											"end": 5736,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5727,
											"end": 5741,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5707,
											"end": 5725,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5704,
											"end": 5742,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 5703,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 5703,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 5701,
											"end": 5703,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5784,
											"end": 5794,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 5779,
											"end": 5782,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 5775,
											"end": 5795,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 5772,
											"end": 5773,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5765,
											"end": 5796,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5819,
											"end": 5823,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 5816,
											"end": 5817,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5809,
											"end": 5824,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5847,
											"end": 5851,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5844,
											"end": 5845,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5837,
											"end": 5852,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 5703,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 5701,
											"end": 5703,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 5703,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5543,
											"end": 5868,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5543,
											"end": 5868,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5543,
											"end": 5868,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5543,
											"end": 5868,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 128,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 134,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 136,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 140,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MemeTokenBase/memetoken.sol": {
				"MemeTokenTest": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_liquidityWallet",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_treasuryWallet",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEAD",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INITIAL_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ZERO",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "burnRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidityFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidityWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sellFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_liquidityFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_treasuryFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_sellFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_burnRate",
									"type": "uint256"
								}
							],
							"name": "setFees",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasuryFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasuryWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MemeTokenBase/memetoken.sol\":173:2758  contract MemeTokenTest is ERC20, Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/MemeTokenBase/memetoken.sol\":604:606  25 */\n  0x19\n    /* \"contracts/MemeTokenBase/memetoken.sol\":574:606  uint256 public liquidityFee = 25 */\n  0x08\n  sstore\n    /* \"contracts/MemeTokenBase/memetoken.sol\":651:653  50 */\n  0x32\n    /* \"contracts/MemeTokenBase/memetoken.sol\":622:653  uint256 public treasuryFee = 50 */\n  0x09\n  sstore\n    /* \"contracts/MemeTokenBase/memetoken.sol\":693:694  5 */\n  0x05\n    /* \"contracts/MemeTokenBase/memetoken.sol\":668:694  uint256 public sellFee = 5 */\n  0x0a\n  sstore\n    /* \"contracts/MemeTokenBase/memetoken.sol\":736:738  20 */\n  0x14\n    /* \"contracts/MemeTokenBase/memetoken.sol\":710:738  uint256 public burnRate = 20 */\n  0x0b\n  sstore\n    /* \"contracts/MemeTokenBase/memetoken.sol\":756:1014  constructor(address _liquidityWallet, address _treasuryWallet) ERC20(\"[TEST] Deflationary Meme Token]\", \"DMT02\") {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  dup3\n  mstore\n  0x1f\n  dup2\n  mstore\n  0x5b544553545d204465666c6174696f6e617279204d656d6520546f6b656e5d00\n  0x20\n  dup1\n  dup4\n  add\n  swap2\n  dup3\n  mstore\n  dup4\n  mload\n  dup1\n  dup6\n  add\n  swap1\n  swap5\n  mstore\n  0x05\n  dup5\n  mstore\n  shl(0xd9, 0x2226aa1819)\n  swap1\n  dup5\n  add\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  dup2\n  mload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  swap2\n  swap3\n  swap2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  tag_8\n  swap2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2051  _name */\n  0x03\n  swap2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  dup1\n  mload\n  tag_10\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  0x04\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_14)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_12:\n    /* \"contracts/MemeTokenBase/memetoken.sol\":880:895  liquidityWallet */\n  0x06\n    /* \"contracts/MemeTokenBase/memetoken.sol\":880:914  liquidityWallet = _liquidityWallet */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  dup1\n  dup6\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap3\n  dup4\n  and\n  or\n  swap3\n  dup4\n  swap1\n  sstore\n    /* \"contracts/MemeTokenBase/memetoken.sol\":925:939  treasuryWallet */\n  0x07\n    /* \"contracts/MemeTokenBase/memetoken.sol\":925:957  treasuryWallet = _treasuryWallet */\n  dup1\n  sload\n  dup6\n  dup4\n  and\n  swap4\n  and\n  swap3\n  swap1\n  swap3\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/MemeTokenBase/memetoken.sol\":968:1006  _mint(liquidityWallet, INITIAL_SUPPLY) */\n  tag_17\n  swap2\n    /* \"contracts/MemeTokenBase/memetoken.sol\":974:989  liquidityWallet */\n  and\n    /* \"contracts/MemeTokenBase/memetoken.sol\":503:526  1000000000 * (10 ** 18) */\n  0x033b2e3c9fd0803ce8000000\n    /* \"contracts/MemeTokenBase/memetoken.sol\":968:973  _mint */\n  tag_18\n    /* \"contracts/MemeTokenBase/memetoken.sol\":968:1006  _mint(liquidityWallet, INITIAL_SUPPLY) */\n  jump\t// in\ntag_17:\n    /* \"contracts/MemeTokenBase/memetoken.sol\":756:1014  constructor(address _liquidityWallet, address _treasuryWallet) ERC20(\"[TEST] Deflationary Meme Token]\", \"DMT02\") {\r... */\n  pop\n  pop\n    /* \"contracts/MemeTokenBase/memetoken.sol\":173:2758  contract MemeTokenTest is ERC20, Ownable {\r... */\n  jump(tag_47)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8520:9055  function _mint(address account, uint256 amount) internal virtual {... */\ntag_18:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8603:8624  account != address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_23\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  tag_24\n  swap1\n  tag_25\n  jump\t// in\ntag_24:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_23:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8671:8720  _beforeTokenTransfer(address(0), account, amount) */\n  tag_26\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8700:8701  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8704:8711  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8713:8719  amount */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8671:8691  _beforeTokenTransfer */\n  tag_27\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8671:8720  _beforeTokenTransfer(address(0), account, amount) */\n  jump\t// in\ntag_26:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8747:8753  amount */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8731:8743  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8731:8753  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_28\n  swap2\n  swap1\n  tag_29\n  jump\t// in\ntag_28:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8899:8917  _balances[account] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8899:8908  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8899:8917  _balances[account] */\n  dup2\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  dup1\n  dup3\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8899:8927  _balances[account] += amount */\n  dup1\n  sload\n  dup6\n  add\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n  mload\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap1\n  tag_30\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8921:8927  amount */\n  dup6\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n  tag_31\n  jump\t// in\ntag_30:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9000:9048  _afterTokenTransfer(address(0), account, amount) */\n  tag_32\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9028:9029  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9032:9039  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9041:9047  amount */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9000:9019  _afterTokenTransfer */\n  tag_27\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9000:9048  _afterTokenTransfer(address(0), account, amount) */\n  jump\t// in\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8520:9055  function _mint(address account, uint256 amount) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":12073:12164  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\ntag_27:\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/MemeTokenBase/memetoken.sol\":173:2758  contract MemeTokenTest is ERC20, Ownable {\r... */\ntag_9:\n  dup3\n  dup1\n  sload\n  tag_36\n  swap1\n  tag_37\n  jump\t// in\ntag_36:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_39\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_42)\ntag_39:\n  dup3\n  0x1f\n  lt\n  tag_40\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_42)\ntag_40:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_42\n  jumpi\n  swap2\n  dup3\n  add\ntag_41:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_42\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_41)\ntag_42:\n  pop\n  tag_43\n  swap3\n  swap2\n  pop\n  tag_44\n  jump\t// in\ntag_43:\n  pop\n  swap1\n  jump\t// out\ntag_44:\ntag_45:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_43\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_45)\n    /* \"#utility.yul\":14:193   */\ntag_48:\n    /* \"#utility.yul\":95:108   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":137:168   */\n  dup2\n  and\n    /* \"#utility.yul\":127:169   */\n  dup2\n  eq\n    /* \"#utility.yul\":117:119   */\n  tag_50\n  jumpi\n    /* \"#utility.yul\":183:184   */\n  0x00\n    /* \"#utility.yul\":180:181   */\n  dup1\n    /* \"#utility.yul\":173:185   */\n  revert\n    /* \"#utility.yul\":117:119   */\ntag_50:\n    /* \"#utility.yul\":76:193   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":198:505   */\ntag_3:\n  0x00\n  dup1\n    /* \"#utility.yul\":338:340   */\n  0x40\n    /* \"#utility.yul\":326:335   */\n  dup4\n    /* \"#utility.yul\":317:324   */\n  dup6\n    /* \"#utility.yul\":313:336   */\n  sub\n    /* \"#utility.yul\":309:341   */\n  slt\n    /* \"#utility.yul\":306:308   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":359:365   */\n  dup2\n    /* \"#utility.yul\":351:357   */\n  dup3\n    /* \"#utility.yul\":344:366   */\n  revert\n    /* \"#utility.yul\":306:308   */\ntag_52:\n    /* \"#utility.yul\":387:429   */\n  tag_53\n    /* \"#utility.yul\":419:428   */\n  dup4\n    /* \"#utility.yul\":387:429   */\n  tag_48\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":377:429   */\n  swap2\n  pop\n    /* \"#utility.yul\":448:499   */\n  tag_54\n    /* \"#utility.yul\":495:497   */\n  0x20\n    /* \"#utility.yul\":484:493   */\n  dup5\n    /* \"#utility.yul\":480:498   */\n  add\n    /* \"#utility.yul\":448:499   */\n  tag_48\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":438:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":296:505   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":510:865   */\ntag_25:\n    /* \"#utility.yul\":712:714   */\n  0x20\n    /* \"#utility.yul\":694:715   */\n  dup1\n  dup3\n  mstore\n    /* \"#utility.yul\":751:753   */\n  0x1f\n    /* \"#utility.yul\":731:749   */\n  swap1\n  dup3\n  add\n    /* \"#utility.yul\":724:754   */\n  mstore\n    /* \"#utility.yul\":790:823   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":785:787   */\n  0x40\n    /* \"#utility.yul\":770:788   */\n  dup3\n  add\n    /* \"#utility.yul\":763:824   */\n  mstore\n    /* \"#utility.yul\":856:858   */\n  0x60\n    /* \"#utility.yul\":841:859   */\n  add\n  swap1\n    /* \"#utility.yul\":684:865   */\n  jump\t// out\n    /* \"#utility.yul\":870:1047   */\ntag_31:\n    /* \"#utility.yul\":1016:1041   */\n  swap1\n  dup2\n  mstore\n    /* \"#utility.yul\":1004:1006   */\n  0x20\n    /* \"#utility.yul\":989:1007   */\n  add\n  swap1\n    /* \"#utility.yul\":971:1047   */\n  jump\t// out\n    /* \"#utility.yul\":1052:1281   */\ntag_29:\n  0x00\n    /* \"#utility.yul\":1123:1124   */\n  dup3\n    /* \"#utility.yul\":1119:1125   */\n  not\n    /* \"#utility.yul\":1116:1117   */\n  dup3\n    /* \"#utility.yul\":1113:1126   */\n  gt\n    /* \"#utility.yul\":1110:1112   */\n  iszero\n  tag_58\n  jumpi\n  shl(0xe0, 0x4e487b71)\n    /* \"#utility.yul\":1149:1182   */\n  dup2\n  mstore\n    /* \"#utility.yul\":1205:1209   */\n  0x11\n    /* \"#utility.yul\":1202:1203   */\n  0x04\n    /* \"#utility.yul\":1195:1210   */\n  mstore\n    /* \"#utility.yul\":1235:1239   */\n  0x24\n    /* \"#utility.yul\":1156:1159   */\n  dup2\n    /* \"#utility.yul\":1223:1240   */\n  revert\n    /* \"#utility.yul\":1110:1112   */\ntag_58:\n  pop\n    /* \"#utility.yul\":1266:1275   */\n  add\n  swap1\n    /* \"#utility.yul\":1100:1281   */\n  jump\t// out\n    /* \"#utility.yul\":1286:1666   */\ntag_37:\n    /* \"#utility.yul\":1371:1372   */\n  0x02\n    /* \"#utility.yul\":1361:1373   */\n  dup2\n  div\n    /* \"#utility.yul\":1418:1419   */\n  0x01\n    /* \"#utility.yul\":1408:1420   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1429:1431   */\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1483:1487   */\n  0x7f\n    /* \"#utility.yul\":1475:1481   */\n  dup3\n    /* \"#utility.yul\":1471:1488   */\n  and\n    /* \"#utility.yul\":1461:1488   */\n  swap2\n  pop\n    /* \"#utility.yul\":1429:1431   */\ntag_60:\n    /* \"#utility.yul\":1536:1538   */\n  0x20\n    /* \"#utility.yul\":1528:1534   */\n  dup3\n    /* \"#utility.yul\":1525:1539   */\n  lt\n    /* \"#utility.yul\":1505:1523   */\n  dup2\n    /* \"#utility.yul\":1502:1540   */\n  eq\n    /* \"#utility.yul\":1499:1501   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":1582:1592   */\n  0x4e487b71\n    /* \"#utility.yul\":1577:1580   */\n  0xe0\n    /* \"#utility.yul\":1573:1593   */\n  shl\n    /* \"#utility.yul\":1570:1571   */\n  0x00\n    /* \"#utility.yul\":1563:1594   */\n  mstore\n    /* \"#utility.yul\":1617:1621   */\n  0x22\n    /* \"#utility.yul\":1614:1615   */\n  0x04\n    /* \"#utility.yul\":1607:1622   */\n  mstore\n    /* \"#utility.yul\":1645:1649   */\n  0x24\n    /* \"#utility.yul\":1642:1643   */\n  0x00\n    /* \"#utility.yul\":1635:1650   */\n  revert\n    /* \"#utility.yul\":1499:1501   */\ntag_61:\n  pop\n    /* \"#utility.yul\":1341:1666   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_47:\n    /* \"contracts/MemeTokenBase/memetoken.sol\":173:2758  contract MemeTokenTest is ERC20, Ownable {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MemeTokenBase/memetoken.sol\":173:2758  contract MemeTokenTest is ERC20, Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xbed99850\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xcc32d176\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xd4698016\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x70a08231\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x98118cb4\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x2ff2e9dc\n      gt\n      tag_29\n      jumpi\n      dup1\n      0x2ff2e9dc\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x4626402b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x58fa63ca\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x6fcba377\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x03fd2a45\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2b14ca56\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/MemeTokenBase/memetoken.sol\":300:373  address public constant DEAD = 0x000000000000000000000000000000000000dEaD */\n    tag_3:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_5:\n      tag_38\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_6:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1207:1412  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\r... */\n    tag_7:\n      tag_38\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n        /* \"contracts/MemeTokenBase/memetoken.sol\":668:694  uint256 public sellFee = 5 */\n    tag_8:\n      tag_44\n      tag_54\n      jump\t// in\n        /* \"contracts/MemeTokenBase/memetoken.sol\":462:526  uint256 public constant INITIAL_SUPPLY = 1000000000 * (10 ** 18) */\n    tag_9:\n      tag_44\n      tag_57\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n    tag_10:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_38\n      tag_64\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n        /* \"contracts/MemeTokenBase/memetoken.sol\":258:287  address public treasuryWallet */\n    tag_12:\n      tag_30\n      tag_68\n      jump\t// in\n        /* \"contracts/MemeTokenBase/memetoken.sol\":380:453  address public constant ZERO = 0x0000000000000000000000000000000000000000 */\n    tag_13:\n      tag_30\n      tag_71\n      jump\t// in\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2493:2755  function setFees(uint256 _liquidityFee, uint256 _treasuryFee, uint256 _sellFee, uint256 _burnRate) external onlyOwner {\r... */\n    tag_14:\n      tag_73\n      tag_74\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_15:\n      tag_44\n      tag_78\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_16:\n      tag_73\n      tag_83\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_17:\n      tag_30\n      tag_85\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_18:\n      tag_34\n      tag_88\n      jump\t// in\n        /* \"contracts/MemeTokenBase/memetoken.sol\":574:606  uint256 public liquidityFee = 25 */\n    tag_19:\n      tag_44\n      tag_91\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_20:\n      tag_38\n      tag_94\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1022:1199  function transfer(address recipient, uint256 amount) public override returns (bool) {\r... */\n    tag_21:\n      tag_38\n      tag_98\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n        /* \"contracts/MemeTokenBase/memetoken.sol\":710:738  uint256 public burnRate = 20 */\n    tag_22:\n      tag_44\n      tag_102\n      jump\t// in\n        /* \"contracts/MemeTokenBase/memetoken.sol\":622:653  uint256 public treasuryFee = 50 */\n    tag_23:\n      tag_44\n      tag_105\n      jump\t// in\n        /* \"contracts/MemeTokenBase/memetoken.sol\":221:251  address public liquidityWallet */\n    tag_24:\n      tag_30\n      tag_108\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_25:\n      tag_44\n      tag_111\n      calldatasize\n      0x04\n      tag_112\n      jump\t// in\n    tag_111:\n      tag_113\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_26:\n      tag_73\n      tag_116\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_116:\n      tag_117\n      jump\t// in\n        /* \"contracts/MemeTokenBase/memetoken.sol\":300:373  address public constant DEAD = 0x000000000000000000000000000000000000dEaD */\n    tag_31:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":331:373  0x000000000000000000000000000000000000dEaD */\n      0xdead\n        /* \"contracts/MemeTokenBase/memetoken.sol\":300:373  address public constant DEAD = 0x000000000000000000000000000000000000dEaD */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2212:2225  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2244:2249  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2237:2249  return _name */\n      dup1\n      sload\n      tag_119\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_121\n      swap1\n      tag_120\n      jump\t// in\n    tag_121:\n      dup1\n      iszero\n      tag_122\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_123\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_122)\n    tag_123:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_124:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_124\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_122:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4527:4531  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4543:4556  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4559:4571  _msgSender() */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4559:4569  _msgSender */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4559:4571  _msgSender() */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4543:4571  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      tag_128\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4590:4595  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4597:4604  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4606:4612  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4589  _approve */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_128:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4630:4634  true */\n      0x01\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3342:3354  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1207:1412  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\r... */\n    tag_51:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1305:1309  bool */\n      0x00\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1329:1404  super.transferFrom(sender, recipient, applyFees(sender, recipient, amount)) */\n      tag_132\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1348:1354  sender */\n      dup5\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1356:1365  recipient */\n      dup5\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1367:1403  applyFees(sender, recipient, amount) */\n      tag_133\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1377:1383  sender */\n      dup8\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1385:1394  recipient */\n      dup8\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1396:1402  amount */\n      dup8\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1367:1376  applyFees */\n      tag_134\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1367:1403  applyFees(sender, recipient, amount) */\n      jump\t// in\n    tag_133:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1329:1347  super.transferFrom */\n      tag_135\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1329:1404  super.transferFrom(sender, recipient, applyFees(sender, recipient, amount)) */\n      jump\t// in\n    tag_132:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1322:1404  return super.transferFrom(sender, recipient, applyFees(sender, recipient, amount)) */\n      swap1\n      pop\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1207:1412  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\r... */\n    tag_131:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MemeTokenBase/memetoken.sol\":668:694  uint256 public sellFee = 5 */\n    tag_54:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"contracts/MemeTokenBase/memetoken.sol\":462:526  uint256 public constant INITIAL_SUPPLY = 1000000000 * (10 ** 18) */\n    tag_57:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":503:526  1000000000 * (10 ** 18) */\n      0x033b2e3c9fd0803ce8000000\n        /* \"contracts/MemeTokenBase/memetoken.sol\":462:526  uint256 public constant INITIAL_SUPPLY = 1000000000 * (10 ** 18) */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3186:3188  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5942:5946  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5958:5971  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5974:5986  _msgSender() */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5974:5984  _msgSender */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5974:5986  _msgSender() */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5958:5986  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_128\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6005:6010  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6049:6059  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6031:6036  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6038:6045  spender */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6030  allowance */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6059  allowance(owner, spender) + addedValue */\n      tag_141\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6004  _approve */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"contracts/MemeTokenBase/memetoken.sol\":258:287  address public treasuryWallet */\n    tag_68:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n      dup2\n      jump\t// out\n        /* \"contracts/MemeTokenBase/memetoken.sol\":380:453  address public constant ZERO = 0x0000000000000000000000000000000000000000 */\n    tag_71:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":411:453  0x0000000000000000000000000000000000000000 */\n      0x00\n        /* \"contracts/MemeTokenBase/memetoken.sol\":380:453  address public constant ZERO = 0x0000000000000000000000000000000000000000 */\n      dup2\n      jump\t// out\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2493:2755  function setFees(uint256 _liquidityFee, uint256 _treasuryFee, uint256 _sellFee, uint256 _burnRate) external onlyOwner {\r... */\n    tag_76:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_144:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2622:2634  liquidityFee */\n      0x08\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2622:2650  liquidityFee = _liquidityFee */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2661:2672  treasuryFee */\n      0x09\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2661:2687  treasuryFee = _treasuryFee */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2698:2705  sellFee */\n      0x0a\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2698:2716  sellFee = _sellFee */\n      sstore\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2727:2735  burnRate */\n      0x0b\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2727:2747  burnRate = _burnRate */\n      sstore\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2493:2755  function setFees(uint256 _liquidityFee, uint256 _treasuryFee, uint256 _sellFee, uint256 _burnRate) external onlyOwner {\r... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_80:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3493:3500  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_147:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1915:1916  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1906  _transferOwnership */\n      tag_152\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2425:2438  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2457:2464  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2450:2464  return _symbol */\n      dup1\n      sload\n      tag_119\n      swap1\n      tag_120\n      jump\t// in\n        /* \"contracts/MemeTokenBase/memetoken.sol\":574:606  uint256 public liquidityFee = 25 */\n    tag_91:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6668:6672  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6684:6697  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6700:6712  _msgSender() */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6700:6710  _msgSender */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6700:6712  _msgSender() */\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6684:6712  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6722:6746  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6759:6764  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6773  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6758  allowance */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6722:6774  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6812:6827  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6792:6808  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6792:6827  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6912:6917  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6919:6926  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6947:6962  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6928:6944  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6928:6962  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6911  _approve */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_166:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6991:6995  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1022:1199  function transfer(address recipient, uint256 amount) public override returns (bool) {\r... */\n    tag_99:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1100:1104  bool */\n      0x00\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1124:1191  super.transfer(recipient, applyFees(msg.sender, recipient, amount)) */\n      tag_131\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1139:1148  recipient */\n      dup4\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1150:1190  applyFees(msg.sender, recipient, amount) */\n      tag_169\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1160:1170  msg.sender */\n      caller\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1172:1181  recipient */\n      dup7\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1183:1189  amount */\n      dup7\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1150:1159  applyFees */\n      tag_134\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1150:1190  applyFees(msg.sender, recipient, amount) */\n      jump\t// in\n    tag_169:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1124:1138  super.transfer */\n      tag_170\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1124:1191  super.transfer(recipient, applyFees(msg.sender, recipient, amount)) */\n      jump\t// in\n        /* \"contracts/MemeTokenBase/memetoken.sol\":710:738  uint256 public burnRate = 20 */\n    tag_102:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"contracts/MemeTokenBase/memetoken.sol\":622:653  uint256 public treasuryFee = 50 */\n    tag_105:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/MemeTokenBase/memetoken.sol\":221:251  address public liquidityWallet */\n    tag_108:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_113:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4076:4083  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4113  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4129  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_173:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap1\n      tag_177\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      tag_178\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2256:2264  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2255  _transferOwnership */\n      tag_152\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_129:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10577  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap1\n      tag_183\n      jump\t// in\n    tag_181:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10657  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap1\n      tag_186\n      jump\t// in\n    tag_184:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10718  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10734  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      swap1\n      swap2\n      mstore\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10743  _allowances[owner][spender] = amount */\n      dup5\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap1\n      tag_187\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10737:10743  amount */\n      dup6\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      tag_47\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1420:2485  function applyFees(address sender, address recipient, uint256 amount) internal returns (uint256) {\r... */\n    tag_134:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1508:1515  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1532:1549  recipient == DEAD */\n      dup4\n      and\n        /* \"contracts/MemeTokenBase/memetoken.sol\":331:373  0x000000000000000000000000000000000000dEaD */\n      0xdead\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1532:1549  recipient == DEAD */\n      eq\n      dup1\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1532:1570  recipient == DEAD || recipient == ZERO */\n      tag_189\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1553:1570  recipient == ZERO */\n      dup4\n      and\n      iszero\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1532:1570  recipient == DEAD || recipient == ZERO */\n    tag_189:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1532:1599  recipient == DEAD || recipient == ZERO || sender == liquidityWallet */\n      dup1\n      tag_190\n      jumpi\n      pop\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1584:1599  liquidityWallet */\n      sload(0x06)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1574:1599  sender == liquidityWallet */\n      dup6\n      dup2\n      and\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1584:1599  liquidityWallet */\n      swap2\n      and\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1574:1599  sender == liquidityWallet */\n      eq\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1532:1599  recipient == DEAD || recipient == ZERO || sender == liquidityWallet */\n    tag_190:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1532:1627  recipient == DEAD || recipient == ZERO || sender == liquidityWallet || sender == treasuryWallet */\n      dup1\n      tag_191\n      jumpi\n      pop\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1613:1627  treasuryWallet */\n      sload(0x07)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1603:1627  sender == treasuryWallet */\n      dup6\n      dup2\n      and\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1613:1627  treasuryWallet */\n      swap2\n      and\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1603:1627  sender == treasuryWallet */\n      eq\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1532:1627  recipient == DEAD || recipient == ZERO || sender == liquidityWallet || sender == treasuryWallet */\n    tag_191:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1528:1669  if (recipient == DEAD || recipient == ZERO || sender == liquidityWallet || sender == treasuryWallet) {\r... */\n      iszero\n      tag_192\n      jumpi\n      pop\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1651:1657  amount */\n      dup1\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1644:1657  return amount */\n      jump(tag_131)\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1528:1669  if (recipient == DEAD || recipient == ZERO || sender == liquidityWallet || sender == treasuryWallet) {\r... */\n    tag_192:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1681:1707  uint256 liquidityFeeAmount */\n      0x00\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1734:1739  10000 */\n      0x2710\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1719:1731  liquidityFee */\n      sload(0x08)\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1710:1716  amount */\n      dup5\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1710:1731  amount * liquidityFee */\n      tag_193\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1710:1739  amount * liquidityFee / 10000 */\n      tag_195\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1681:1739  uint256 liquidityFeeAmount = amount * liquidityFee / 10000 */\n      swap1\n      pop\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1750:1775  uint256 treasuryFeeAmount */\n      0x00\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1801:1806  10000 */\n      0x2710\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1787:1798  treasuryFee */\n      sload(0x09)\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1778:1784  amount */\n      dup6\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1778:1798  amount * treasuryFee */\n      tag_197\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_197:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1778:1806  amount * treasuryFee / 10000 */\n      tag_198\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_198:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1750:1806  uint256 treasuryFeeAmount = amount * treasuryFee / 10000 */\n      swap1\n      pop\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1817:1835  uint256 burnAmount */\n      0x00\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1858:1863  10000 */\n      0x2710\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1847:1855  burnRate */\n      sload(0x0b)\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1838:1844  amount */\n      dup7\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1838:1855  amount * burnRate */\n      tag_199\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_199:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1838:1863  amount * burnRate / 10000 */\n      tag_200\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_200:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1893:1908  liquidityWallet */\n      sload(0x06)\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1817:1863  uint256 burnAmount = amount * burnRate / 10000 */\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1880:1908  recipient != liquidityWallet */\n      dup8\n      dup2\n      and\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1893:1908  liquidityWallet */\n      swap2\n      and\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1880:1908  recipient != liquidityWallet */\n      eq\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1876:1988  if (recipient != liquidityWallet) {\r... */\n      tag_201\n      jumpi\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1940:1955  liquidityWallet */\n      sload(0x06)\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1925:1976  super.transfer(liquidityWallet, liquidityFeeAmount) */\n      tag_202\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1940:1955  liquidityWallet */\n      and\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1957:1975  liquidityFeeAmount */\n      dup5\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1925:1939  super.transfer */\n      tag_170\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1925:1976  super.transfer(liquidityWallet, liquidityFeeAmount) */\n      jump\t// in\n    tag_202:\n      pop\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1876:1988  if (recipient != liquidityWallet) {\r... */\n    tag_201:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2017:2031  treasuryWallet */\n      sload(0x07)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2004:2031  recipient != treasuryWallet */\n      dup8\n      dup2\n      and\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2017:2031  treasuryWallet */\n      swap2\n      and\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2004:2031  recipient != treasuryWallet */\n      eq\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2000:2109  if (recipient != treasuryWallet) {\r... */\n      tag_203\n      jumpi\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2063:2077  treasuryWallet */\n      sload(0x07)\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2048:2097  super.transfer(treasuryWallet, treasuryFeeAmount) */\n      tag_204\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2063:2077  treasuryWallet */\n      and\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2079:2096  treasuryFeeAmount */\n      dup4\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2048:2062  super.transfer */\n      tag_170\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2048:2097  super.transfer(treasuryWallet, treasuryFeeAmount) */\n      jump\t// in\n    tag_204:\n      pop\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2000:2109  if (recipient != treasuryWallet) {\r... */\n    tag_203:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2121:2146  _burn(sender, burnAmount) */\n      tag_205\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2127:2133  sender */\n      dup8\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2135:2145  burnAmount */\n      dup3\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2121:2126  _burn */\n      tag_206\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2121:2146  _burn(sender, burnAmount) */\n      jump\t// in\n    tag_205:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2209:2224  liquidityWallet */\n      sload(0x06)\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2159:2180  uint256 sellFeeAmount */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2199:2224  sender != liquidityWallet */\n      dup10\n      dup2\n      and\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2209:2224  liquidityWallet */\n      swap2\n      and\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2199:2224  sender != liquidityWallet */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2199:2252  sender != liquidityWallet && sender != treasuryWallet */\n      tag_207\n      jumpi\n      pop\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2238:2252  treasuryWallet */\n      sload(0x07)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2228:2252  sender != treasuryWallet */\n      dup10\n      dup2\n      and\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2238:2252  treasuryWallet */\n      swap2\n      and\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2228:2252  sender != treasuryWallet */\n      eq\n      iszero\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2199:2252  sender != liquidityWallet && sender != treasuryWallet */\n    tag_207:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2195:2382  if (sender != liquidityWallet && sender != treasuryWallet) {\r... */\n      iszero\n      tag_208\n      jumpi\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2304:2309  10000 */\n      0x2710\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2294:2301  sellFee */\n      sload(0x0a)\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2285:2291  amount */\n      dup8\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2285:2301  amount * sellFee */\n      tag_209\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_209:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2285:2309  amount * sellFee / 10000 */\n      tag_210\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_210:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2339:2354  liquidityWallet */\n      sload(0x06)\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2269:2309  sellFeeAmount = amount * sellFee / 10000 */\n      swap1\n      swap2\n      pop\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2324:2370  super.transfer(liquidityWallet, sellFeeAmount) */\n      tag_211\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2339:2354  liquidityWallet */\n      and\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2269:2309  sellFeeAmount = amount * sellFee / 10000 */\n      dup3\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2324:2338  super.transfer */\n      tag_170\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2324:2370  super.transfer(liquidityWallet, sellFeeAmount) */\n      jump\t// in\n    tag_211:\n      pop\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2195:2382  if (sender != liquidityWallet && sender != treasuryWallet) {\r... */\n    tag_208:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2464:2477  sellFeeAmount */\n      dup1\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2451:2461  burnAmount */\n      dup3\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2431:2448  treasuryFeeAmount */\n      dup5\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2401:2428  amount - liquidityFeeAmount */\n      tag_212\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2410:2428  liquidityFeeAmount */\n      dup8\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2401:2407  amount */\n      dup11\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2401:2428  amount - liquidityFeeAmount */\n      tag_213\n      jump\t// in\n    tag_212:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2401:2448  amount - liquidityFeeAmount - treasuryFeeAmount */\n      tag_214\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_214:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2401:2461  amount - liquidityFeeAmount - treasuryFeeAmount - burnAmount */\n      tag_215\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_215:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2401:2477  amount - liquidityFeeAmount - treasuryFeeAmount - burnAmount - sellFeeAmount */\n      tag_216\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_216:\n        /* \"contracts/MemeTokenBase/memetoken.sol\":2394:2477  return amount - liquidityFeeAmount - treasuryFeeAmount - burnAmount - sellFeeAmount */\n      swap9\n        /* \"contracts/MemeTokenBase/memetoken.sol\":1420:2485  function applyFees(address sender, address recipient, uint256 amount) internal returns (uint256) {\r... */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5300:5304  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5316:5331  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5334:5346  _msgSender() */\n      tag_218\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5334:5344  _msgSender */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5334:5346  _msgSender() */\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5316:5346  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      tag_219\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5372:5376  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5378:5385  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5387:5393  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5371  _spendAllowance */\n      tag_220\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5414:5418  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5420:5422  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5424:5430  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5413  _transfer */\n      tag_222\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_145:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_224\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_224:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_225\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_225:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap1\n      tag_228\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3819:3823  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3835:3848  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3851:3863  _msgSender() */\n      tag_231\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3851:3861  _msgSender */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3851:3863  _msgSender() */\n      jump\t// in\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3835:3863  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      tag_128\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3883:3888  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3890:3892  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3894:3900  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3882  _transfer */\n      tag_222\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9375:10034  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_206:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9458:9479  account != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9450:9517  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_234\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap1\n      tag_236\n      jump\t// in\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9528:9577  _beforeTokenTransfer(account, address(0), amount) */\n      tag_237\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9549:9556  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9566:9567  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9570:9576  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9528:9548  _beforeTokenTransfer */\n      tag_243\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9528:9577  _beforeTokenTransfer(account, address(0), amount) */\n      jump\t// in\n    tag_237:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9613:9631  _balances[account] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9588:9610  uint256 accountBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9613:9631  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9649:9673  accountBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9641:9712  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_239\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap1\n      tag_241\n      jump\t// in\n    tag_239:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9746:9764  _balances[account] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9746:9755  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9746:9764  _balances[account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9767:9790  accountBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9746:9790  _balances[account] = accountBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9883:9895  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9883:9905  _totalSupply -= amount */\n      dup1\n      sload\n      dup7\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9931:9968  Transfer(account, address(0), amount) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9746:9755  _balances */\n      swap1\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9746:9764  _balances[account] */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9931:9968  Transfer(account, address(0), amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n      tag_242\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9784:9790  amount */\n      dup7\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9931:9968  Transfer(account, address(0), amount) */\n      tag_47\n      jump\t// in\n    tag_242:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9979:10027  _afterTokenTransfer(account, address(0), amount) */\n      tag_243\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9999:10006  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10016:10017  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10020:10026  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9979:10027  _afterTokenTransfer(account, address(0), amount) */\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9375:10034  function _burn(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11178:11202  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      tag_246\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11215:11220  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11222:11229  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11214  allowance */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      jump\t// in\n    tag_246:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11178:11230  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11244:11260  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11244:11281  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11240:11483  if (currentAllowance != type(uint256).max) {... */\n      tag_251\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11325:11331  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11305:11321  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11305:11331  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_248\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap1\n      tag_250\n      jump\t// in\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      tag_251\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11416:11421  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11423:11430  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11451:11457  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11432:11448  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11432:11457  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11415  _approve */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7456:8244  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_222:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7552:7570  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_253\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap1\n      tag_255\n      jump\t// in\n    tag_253:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7630:7646  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_256\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap1\n      tag_258\n      jump\t// in\n    tag_256:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7697:7735  _beforeTokenTransfer(from, to, amount) */\n      tag_259\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7718:7722  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7724:7726  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7728:7734  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7697:7717  _beforeTokenTransfer */\n      tag_243\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7697:7735  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_259:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7746:7765  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7801:7822  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_260\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap1\n      tag_262\n      jump\t// in\n    tag_260:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7908  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7917:7937  fromBalance - amount */\n      dup7\n      dup7\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7937  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap3\n      dup7\n      and\n      dup1\n      dup3\n      mstore\n      swap1\n      dup4\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8137  _balances[to] += amount */\n      dup1\n      sload\n      dup7\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      swap2\n      mload\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n      tag_263\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7931:7937  amount */\n      dup7\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      tag_47\n      jump\t// in\n    tag_263:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8200:8237  _afterTokenTransfer(from, to, amount) */\n      tag_251\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8220:8224  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8226:8228  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8230:8236  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8200:8219  _afterTokenTransfer */\n      tag_243\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8200:8237  _afterTokenTransfer(from, to, amount) */\n      jump\t// in\n        /* \"#utility.yul\":14:189   */\n    tag_268:\n        /* \"#utility.yul\":84:104   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":133:164   */\n      dup2\n      and\n        /* \"#utility.yul\":123:165   */\n      dup2\n      eq\n        /* \"#utility.yul\":113:115   */\n      tag_147\n      jumpi\n        /* \"#utility.yul\":179:180   */\n      0x00\n        /* \"#utility.yul\":176:177   */\n      dup1\n        /* \"#utility.yul\":169:181   */\n      revert\n        /* \"#utility.yul\":194:392   */\n    tag_79:\n      0x00\n        /* \"#utility.yul\":306:308   */\n      0x20\n        /* \"#utility.yul\":294:303   */\n      dup3\n        /* \"#utility.yul\":285:292   */\n      dup5\n        /* \"#utility.yul\":281:304   */\n      sub\n        /* \"#utility.yul\":277:309   */\n      slt\n        /* \"#utility.yul\":274:276   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":327:333   */\n      dup1\n        /* \"#utility.yul\":319:325   */\n      dup2\n        /* \"#utility.yul\":312:334   */\n      revert\n        /* \"#utility.yul\":274:276   */\n    tag_272:\n        /* \"#utility.yul\":355:386   */\n      tag_131\n        /* \"#utility.yul\":376:385   */\n      dup3\n        /* \"#utility.yul\":355:386   */\n      tag_268\n      jump\t// in\n        /* \"#utility.yul\":397:671   */\n    tag_112:\n      0x00\n      dup1\n        /* \"#utility.yul\":526:528   */\n      0x40\n        /* \"#utility.yul\":514:523   */\n      dup4\n        /* \"#utility.yul\":505:512   */\n      dup6\n        /* \"#utility.yul\":501:524   */\n      sub\n        /* \"#utility.yul\":497:529   */\n      slt\n        /* \"#utility.yul\":494:496   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":547:553   */\n      dup1\n        /* \"#utility.yul\":539:545   */\n      dup2\n        /* \"#utility.yul\":532:554   */\n      revert\n        /* \"#utility.yul\":494:496   */\n    tag_275:\n        /* \"#utility.yul\":575:606   */\n      tag_276\n        /* \"#utility.yul\":596:605   */\n      dup4\n        /* \"#utility.yul\":575:606   */\n      tag_268\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":565:606   */\n      swap2\n      pop\n        /* \"#utility.yul\":625:665   */\n      tag_277\n        /* \"#utility.yul\":661:663   */\n      0x20\n        /* \"#utility.yul\":650:659   */\n      dup5\n        /* \"#utility.yul\":646:664   */\n      add\n        /* \"#utility.yul\":625:665   */\n      tag_268\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":615:665   */\n      swap1\n      pop\n        /* \"#utility.yul\":484:671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":676:1018   */\n    tag_50:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":822:824   */\n      0x60\n        /* \"#utility.yul\":810:819   */\n      dup5\n        /* \"#utility.yul\":801:808   */\n      dup7\n        /* \"#utility.yul\":797:820   */\n      sub\n        /* \"#utility.yul\":793:825   */\n      slt\n        /* \"#utility.yul\":790:792   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":843:849   */\n      dup1\n        /* \"#utility.yul\":835:841   */\n      dup2\n        /* \"#utility.yul\":828:850   */\n      revert\n        /* \"#utility.yul\":790:792   */\n    tag_279:\n        /* \"#utility.yul\":871:902   */\n      tag_280\n        /* \"#utility.yul\":892:901   */\n      dup5\n        /* \"#utility.yul\":871:902   */\n      tag_268\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":861:902   */\n      swap3\n      pop\n        /* \"#utility.yul\":921:961   */\n      tag_281\n        /* \"#utility.yul\":957:959   */\n      0x20\n        /* \"#utility.yul\":946:955   */\n      dup6\n        /* \"#utility.yul\":942:960   */\n      add\n        /* \"#utility.yul\":921:961   */\n      tag_268\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":911:961   */\n      swap2\n      pop\n        /* \"#utility.yul\":1008:1010   */\n      0x40\n        /* \"#utility.yul\":997:1006   */\n      dup5\n        /* \"#utility.yul\":993:1011   */\n      add\n        /* \"#utility.yul\":980:1012   */\n      calldataload\n        /* \"#utility.yul\":970:1012   */\n      swap1\n      pop\n        /* \"#utility.yul\":780:1018   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1023:1289   */\n    tag_40:\n      0x00\n      dup1\n        /* \"#utility.yul\":1152:1154   */\n      0x40\n        /* \"#utility.yul\":1140:1149   */\n      dup4\n        /* \"#utility.yul\":1131:1138   */\n      dup6\n        /* \"#utility.yul\":1127:1150   */\n      sub\n        /* \"#utility.yul\":1123:1155   */\n      slt\n        /* \"#utility.yul\":1120:1122   */\n      iszero\n      tag_283\n      jumpi\n        /* \"#utility.yul\":1173:1179   */\n      dup2\n        /* \"#utility.yul\":1165:1171   */\n      dup3\n        /* \"#utility.yul\":1158:1180   */\n      revert\n        /* \"#utility.yul\":1120:1122   */\n    tag_283:\n        /* \"#utility.yul\":1201:1232   */\n      tag_284\n        /* \"#utility.yul\":1222:1231   */\n      dup4\n        /* \"#utility.yul\":1201:1232   */\n      tag_268\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":1191:1232   */\n      swap5\n        /* \"#utility.yul\":1279:1281   */\n      0x20\n        /* \"#utility.yul\":1264:1282   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1251:1283   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1110:1289   */\n      jump\t// out\n        /* \"#utility.yul\":1294:1689   */\n    tag_75:\n      0x00\n      dup1\n      0x00\n      dup1\n        /* \"#utility.yul\":1457:1460   */\n      0x80\n        /* \"#utility.yul\":1445:1454   */\n      dup6\n        /* \"#utility.yul\":1436:1443   */\n      dup8\n        /* \"#utility.yul\":1432:1455   */\n      sub\n        /* \"#utility.yul\":1428:1461   */\n      slt\n        /* \"#utility.yul\":1425:1427   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":1479:1485   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      dup2\n        /* \"#utility.yul\":1464:1486   */\n      revert\n        /* \"#utility.yul\":1425:1427   */\n    tag_286:\n      pop\n      pop\n        /* \"#utility.yul\":1507:1530   */\n      dup3\n      calldataload\n      swap5\n        /* \"#utility.yul\":1577:1579   */\n      0x20\n        /* \"#utility.yul\":1562:1580   */\n      dup5\n      add\n        /* \"#utility.yul\":1549:1581   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":1628:1630   */\n      0x40\n        /* \"#utility.yul\":1613:1631   */\n      dup5\n      add\n        /* \"#utility.yul\":1600:1632   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":1679:1681   */\n      0x60\n        /* \"#utility.yul\":1664:1682   */\n      add\n        /* \"#utility.yul\":1651:1683   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":1415:1689   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1694:1897   */\n    tag_33:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1858:1890   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1840:1891   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1828:1830   */\n      0x20\n        /* \"#utility.yul\":1813:1831   */\n      add\n      swap1\n        /* \"#utility.yul\":1795:1897   */\n      jump\t// out\n        /* \"#utility.yul\":1902:2089   */\n    tag_43:\n        /* \"#utility.yul\":2067:2081   */\n      swap1\n      iszero\n        /* \"#utility.yul\":2060:2082   */\n      iszero\n        /* \"#utility.yul\":2042:2083   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2030:2032   */\n      0x20\n        /* \"#utility.yul\":2015:2033   */\n      add\n      swap1\n        /* \"#utility.yul\":1997:2089   */\n      jump\t// out\n        /* \"#utility.yul\":2094:2697   */\n    tag_37:\n      0x00\n        /* \"#utility.yul\":2235:2237   */\n      0x20\n        /* \"#utility.yul\":2264:2266   */\n      dup1\n        /* \"#utility.yul\":2253:2262   */\n      dup4\n        /* \"#utility.yul\":2246:2267   */\n      mstore\n        /* \"#utility.yul\":2296:2302   */\n      dup4\n        /* \"#utility.yul\":2290:2303   */\n      mload\n        /* \"#utility.yul\":2339:2345   */\n      dup1\n        /* \"#utility.yul\":2334:2336   */\n      dup3\n        /* \"#utility.yul\":2323:2332   */\n      dup6\n        /* \"#utility.yul\":2319:2337   */\n      add\n        /* \"#utility.yul\":2312:2346   */\n      mstore\n        /* \"#utility.yul\":2364:2368   */\n      dup3\n        /* \"#utility.yul\":2377:2517   */\n    tag_290:\n        /* \"#utility.yul\":2391:2397   */\n      dup2\n        /* \"#utility.yul\":2388:2389   */\n      dup2\n        /* \"#utility.yul\":2385:2398   */\n      lt\n        /* \"#utility.yul\":2377:2517   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":2486:2500   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":2482:2505   */\n      dup4\n      add\n        /* \"#utility.yul\":2476:2506   */\n      mload\n        /* \"#utility.yul\":2452:2469   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":2471:2473   */\n      0x40\n        /* \"#utility.yul\":2448:2474   */\n      add\n        /* \"#utility.yul\":2441:2507   */\n      mstore\n        /* \"#utility.yul\":2406:2416   */\n      dup3\n      add\n        /* \"#utility.yul\":2377:2517   */\n      jump(tag_290)\n    tag_292:\n        /* \"#utility.yul\":2535:2541   */\n      dup2\n        /* \"#utility.yul\":2532:2533   */\n      dup2\n        /* \"#utility.yul\":2529:2542   */\n      gt\n        /* \"#utility.yul\":2526:2528   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":2605:2609   */\n      dup4\n        /* \"#utility.yul\":2600:2602   */\n      0x40\n        /* \"#utility.yul\":2591:2597   */\n      dup4\n        /* \"#utility.yul\":2580:2589   */\n      dup8\n        /* \"#utility.yul\":2576:2598   */\n      add\n        /* \"#utility.yul\":2572:2603   */\n      add\n        /* \"#utility.yul\":2565:2610   */\n      mstore\n        /* \"#utility.yul\":2526:2528   */\n    tag_293:\n      pop\n        /* \"#utility.yul\":2681:2683   */\n      0x1f\n        /* \"#utility.yul\":2660:2675   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2656:2685   */\n      and\n        /* \"#utility.yul\":2641:2686   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2688:2690   */\n      0x40\n        /* \"#utility.yul\":2637:2691   */\n      add\n      swap4\n        /* \"#utility.yul\":2215:2697   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2702:3101   */\n    tag_258:\n        /* \"#utility.yul\":2904:2906   */\n      0x20\n        /* \"#utility.yul\":2886:2907   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2943:2945   */\n      0x23\n        /* \"#utility.yul\":2923:2941   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2916:2946   */\n      mstore\n        /* \"#utility.yul\":2982:3016   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2977:2979   */\n      0x40\n        /* \"#utility.yul\":2962:2980   */\n      dup3\n      add\n        /* \"#utility.yul\":2955:3017   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":3048:3050   */\n      0x60\n        /* \"#utility.yul\":3033:3051   */\n      dup3\n      add\n        /* \"#utility.yul\":3026:3059   */\n      mstore\n        /* \"#utility.yul\":3091:3094   */\n      0x80\n        /* \"#utility.yul\":3076:3095   */\n      add\n      swap1\n        /* \"#utility.yul\":2876:3101   */\n      jump\t// out\n        /* \"#utility.yul\":3106:3504   */\n    tag_241:\n        /* \"#utility.yul\":3308:3310   */\n      0x20\n        /* \"#utility.yul\":3290:3311   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3347:3349   */\n      0x22\n        /* \"#utility.yul\":3327:3345   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3320:3350   */\n      mstore\n        /* \"#utility.yul\":3386:3420   */\n      0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e\n        /* \"#utility.yul\":3381:3383   */\n      0x40\n        /* \"#utility.yul\":3366:3384   */\n      dup3\n      add\n        /* \"#utility.yul\":3359:3421   */\n      mstore\n      shl(0xf0, 0x6365)\n        /* \"#utility.yul\":3452:3454   */\n      0x60\n        /* \"#utility.yul\":3437:3455   */\n      dup3\n      add\n        /* \"#utility.yul\":3430:3462   */\n      mstore\n        /* \"#utility.yul\":3494:3497   */\n      0x80\n        /* \"#utility.yul\":3479:3498   */\n      add\n      swap1\n        /* \"#utility.yul\":3280:3504   */\n      jump\t// out\n        /* \"#utility.yul\":3509:3911   */\n    tag_177:\n        /* \"#utility.yul\":3711:3713   */\n      0x20\n        /* \"#utility.yul\":3693:3714   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3750:3752   */\n      0x26\n        /* \"#utility.yul\":3730:3748   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3723:3753   */\n      mstore\n        /* \"#utility.yul\":3789:3823   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":3784:3786   */\n      0x40\n        /* \"#utility.yul\":3769:3787   */\n      dup3\n      add\n        /* \"#utility.yul\":3762:3824   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":3855:3857   */\n      0x60\n        /* \"#utility.yul\":3840:3858   */\n      dup3\n      add\n        /* \"#utility.yul\":3833:3869   */\n      mstore\n        /* \"#utility.yul\":3901:3904   */\n      0x80\n        /* \"#utility.yul\":3886:3905   */\n      add\n      swap1\n        /* \"#utility.yul\":3683:3911   */\n      jump\t// out\n        /* \"#utility.yul\":3916:4314   */\n    tag_186:\n        /* \"#utility.yul\":4118:4120   */\n      0x20\n        /* \"#utility.yul\":4100:4121   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4157:4159   */\n      0x22\n        /* \"#utility.yul\":4137:4155   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4130:4160   */\n      mstore\n        /* \"#utility.yul\":4196:4230   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4191:4193   */\n      0x40\n        /* \"#utility.yul\":4176:4194   */\n      dup3\n      add\n        /* \"#utility.yul\":4169:4231   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4262:4264   */\n      0x60\n        /* \"#utility.yul\":4247:4265   */\n      dup3\n      add\n        /* \"#utility.yul\":4240:4272   */\n      mstore\n        /* \"#utility.yul\":4304:4307   */\n      0x80\n        /* \"#utility.yul\":4289:4308   */\n      add\n      swap1\n        /* \"#utility.yul\":4090:4314   */\n      jump\t// out\n        /* \"#utility.yul\":4319:4672   */\n    tag_250:\n        /* \"#utility.yul\":4521:4523   */\n      0x20\n        /* \"#utility.yul\":4503:4524   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4560:4562   */\n      0x1d\n        /* \"#utility.yul\":4540:4558   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4533:4563   */\n      mstore\n        /* \"#utility.yul\":4599:4630   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4594:4596   */\n      0x40\n        /* \"#utility.yul\":4579:4597   */\n      dup3\n      add\n        /* \"#utility.yul\":4572:4631   */\n      mstore\n        /* \"#utility.yul\":4663:4665   */\n      0x60\n        /* \"#utility.yul\":4648:4666   */\n      add\n      swap1\n        /* \"#utility.yul\":4493:4672   */\n      jump\t// out\n        /* \"#utility.yul\":4677:5079   */\n    tag_262:\n        /* \"#utility.yul\":4879:4881   */\n      0x20\n        /* \"#utility.yul\":4861:4882   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4918:4920   */\n      0x26\n        /* \"#utility.yul\":4898:4916   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4891:4921   */\n      mstore\n        /* \"#utility.yul\":4957:4991   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":4952:4954   */\n      0x40\n        /* \"#utility.yul\":4937:4955   */\n      dup3\n      add\n        /* \"#utility.yul\":4930:4992   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5023:5025   */\n      0x60\n        /* \"#utility.yul\":5008:5026   */\n      dup3\n      add\n        /* \"#utility.yul\":5001:5037   */\n      mstore\n        /* \"#utility.yul\":5069:5072   */\n      0x80\n        /* \"#utility.yul\":5054:5073   */\n      add\n      swap1\n        /* \"#utility.yul\":4851:5079   */\n      jump\t// out\n        /* \"#utility.yul\":5084:5440   */\n    tag_228:\n        /* \"#utility.yul\":5286:5288   */\n      0x20\n        /* \"#utility.yul\":5268:5289   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5305:5323   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":5298:5328   */\n      mstore\n        /* \"#utility.yul\":5364:5398   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":5359:5361   */\n      0x40\n        /* \"#utility.yul\":5344:5362   */\n      dup3\n      add\n        /* \"#utility.yul\":5337:5399   */\n      mstore\n        /* \"#utility.yul\":5431:5433   */\n      0x60\n        /* \"#utility.yul\":5416:5434   */\n      add\n      swap1\n        /* \"#utility.yul\":5258:5440   */\n      jump\t// out\n        /* \"#utility.yul\":5445:5842   */\n    tag_236:\n        /* \"#utility.yul\":5647:5649   */\n      0x20\n        /* \"#utility.yul\":5629:5650   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5686:5688   */\n      0x21\n        /* \"#utility.yul\":5666:5684   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5659:5689   */\n      mstore\n        /* \"#utility.yul\":5725:5759   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":5720:5722   */\n      0x40\n        /* \"#utility.yul\":5705:5723   */\n      dup3\n      add\n        /* \"#utility.yul\":5698:5760   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":5791:5793   */\n      0x60\n        /* \"#utility.yul\":5776:5794   */\n      dup3\n      add\n        /* \"#utility.yul\":5769:5800   */\n      mstore\n        /* \"#utility.yul\":5832:5835   */\n      0x80\n        /* \"#utility.yul\":5817:5836   */\n      add\n      swap1\n        /* \"#utility.yul\":5619:5842   */\n      jump\t// out\n        /* \"#utility.yul\":5847:6248   */\n    tag_255:\n        /* \"#utility.yul\":6049:6051   */\n      0x20\n        /* \"#utility.yul\":6031:6052   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6088:6090   */\n      0x25\n        /* \"#utility.yul\":6068:6086   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6061:6091   */\n      mstore\n        /* \"#utility.yul\":6127:6161   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":6122:6124   */\n      0x40\n        /* \"#utility.yul\":6107:6125   */\n      dup3\n      add\n        /* \"#utility.yul\":6100:6162   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":6193:6195   */\n      0x60\n        /* \"#utility.yul\":6178:6196   */\n      dup3\n      add\n        /* \"#utility.yul\":6171:6206   */\n      mstore\n        /* \"#utility.yul\":6238:6241   */\n      0x80\n        /* \"#utility.yul\":6223:6242   */\n      add\n      swap1\n        /* \"#utility.yul\":6021:6248   */\n      jump\t// out\n        /* \"#utility.yul\":6253:6653   */\n    tag_183:\n        /* \"#utility.yul\":6455:6457   */\n      0x20\n        /* \"#utility.yul\":6437:6458   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6494:6496   */\n      0x24\n        /* \"#utility.yul\":6474:6492   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6467:6497   */\n      mstore\n        /* \"#utility.yul\":6533:6567   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":6528:6530   */\n      0x40\n        /* \"#utility.yul\":6513:6531   */\n      dup3\n      add\n        /* \"#utility.yul\":6506:6568   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":6599:6601   */\n      0x60\n        /* \"#utility.yul\":6584:6602   */\n      dup3\n      add\n        /* \"#utility.yul\":6577:6611   */\n      mstore\n        /* \"#utility.yul\":6643:6646   */\n      0x80\n        /* \"#utility.yul\":6628:6647   */\n      add\n      swap1\n        /* \"#utility.yul\":6427:6653   */\n      jump\t// out\n        /* \"#utility.yul\":6658:7059   */\n    tag_165:\n        /* \"#utility.yul\":6860:6862   */\n      0x20\n        /* \"#utility.yul\":6842:6863   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6899:6901   */\n      0x25\n        /* \"#utility.yul\":6879:6897   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6872:6902   */\n      mstore\n        /* \"#utility.yul\":6938:6972   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":6933:6935   */\n      0x40\n        /* \"#utility.yul\":6918:6936   */\n      dup3\n      add\n        /* \"#utility.yul\":6911:6973   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":7004:7006   */\n      0x60\n        /* \"#utility.yul\":6989:7007   */\n      dup3\n      add\n        /* \"#utility.yul\":6982:7017   */\n      mstore\n        /* \"#utility.yul\":7049:7052   */\n      0x80\n        /* \"#utility.yul\":7034:7053   */\n      add\n      swap1\n        /* \"#utility.yul\":6832:7059   */\n      jump\t// out\n        /* \"#utility.yul\":7064:7241   */\n    tag_47:\n        /* \"#utility.yul\":7210:7235   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":7198:7200   */\n      0x20\n        /* \"#utility.yul\":7183:7201   */\n      add\n      swap1\n        /* \"#utility.yul\":7165:7241   */\n      jump\t// out\n        /* \"#utility.yul\":7246:7430   */\n    tag_62:\n        /* \"#utility.yul\":7418:7422   */\n      0xff\n        /* \"#utility.yul\":7406:7423   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":7388:7424   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7376:7378   */\n      0x20\n        /* \"#utility.yul\":7361:7379   */\n      add\n      swap1\n        /* \"#utility.yul\":7343:7430   */\n      jump\t// out\n        /* \"#utility.yul\":7435:7563   */\n    tag_142:\n      0x00\n        /* \"#utility.yul\":7506:7507   */\n      dup3\n        /* \"#utility.yul\":7502:7508   */\n      not\n        /* \"#utility.yul\":7499:7500   */\n      dup3\n        /* \"#utility.yul\":7496:7509   */\n      gt\n        /* \"#utility.yul\":7493:7495   */\n      iszero\n      tag_309\n      jumpi\n        /* \"#utility.yul\":7512:7530   */\n      tag_309\n      tag_310\n      jump\t// in\n    tag_309:\n      pop\n        /* \"#utility.yul\":7548:7557   */\n      add\n      swap1\n        /* \"#utility.yul\":7483:7563   */\n      jump\t// out\n        /* \"#utility.yul\":7568:7785   */\n    tag_196:\n      0x00\n        /* \"#utility.yul\":7634:7635   */\n      dup3\n        /* \"#utility.yul\":7624:7626   */\n      tag_312\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":7659:7690   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7713:7717   */\n      0x12\n        /* \"#utility.yul\":7710:7711   */\n      0x04\n        /* \"#utility.yul\":7703:7718   */\n      mstore\n        /* \"#utility.yul\":7741:7745   */\n      0x24\n        /* \"#utility.yul\":7666:7667   */\n      dup2\n        /* \"#utility.yul\":7731:7746   */\n      revert\n        /* \"#utility.yul\":7624:7626   */\n    tag_312:\n      pop\n        /* \"#utility.yul\":7770:7779   */\n      div\n      swap1\n        /* \"#utility.yul\":7614:7785   */\n      jump\t// out\n        /* \"#utility.yul\":7790:7958   */\n    tag_194:\n      0x00\n        /* \"#utility.yul\":7896:7897   */\n      dup2\n        /* \"#utility.yul\":7892:7893   */\n      0x00\n        /* \"#utility.yul\":7888:7894   */\n      not\n        /* \"#utility.yul\":7884:7898   */\n      div\n        /* \"#utility.yul\":7881:7882   */\n      dup4\n        /* \"#utility.yul\":7878:7899   */\n      gt\n        /* \"#utility.yul\":7873:7874   */\n      dup3\n        /* \"#utility.yul\":7866:7875   */\n      iszero\n        /* \"#utility.yul\":7859:7876   */\n      iszero\n        /* \"#utility.yul\":7855:7900   */\n      and\n        /* \"#utility.yul\":7852:7854   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":7903:7921   */\n      tag_315\n      tag_310\n      jump\t// in\n    tag_315:\n      pop\n        /* \"#utility.yul\":7943:7952   */\n      mul\n      swap1\n        /* \"#utility.yul\":7842:7958   */\n      jump\t// out\n        /* \"#utility.yul\":7963:8088   */\n    tag_213:\n      0x00\n        /* \"#utility.yul\":8031:8032   */\n      dup3\n        /* \"#utility.yul\":8028:8029   */\n      dup3\n        /* \"#utility.yul\":8025:8033   */\n      lt\n        /* \"#utility.yul\":8022:8024   */\n      iszero\n      tag_318\n      jumpi\n        /* \"#utility.yul\":8036:8054   */\n      tag_318\n      tag_310\n      jump\t// in\n    tag_318:\n      pop\n        /* \"#utility.yul\":8073:8082   */\n      sub\n      swap1\n        /* \"#utility.yul\":8012:8088   */\n      jump\t// out\n        /* \"#utility.yul\":8093:8473   */\n    tag_120:\n        /* \"#utility.yul\":8178:8179   */\n      0x02\n        /* \"#utility.yul\":8168:8180   */\n      dup2\n      div\n        /* \"#utility.yul\":8225:8226   */\n      0x01\n        /* \"#utility.yul\":8215:8227   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":8236:8238   */\n      tag_320\n      jumpi\n        /* \"#utility.yul\":8290:8294   */\n      0x7f\n        /* \"#utility.yul\":8282:8288   */\n      dup3\n        /* \"#utility.yul\":8278:8295   */\n      and\n        /* \"#utility.yul\":8268:8295   */\n      swap2\n      pop\n        /* \"#utility.yul\":8236:8238   */\n    tag_320:\n        /* \"#utility.yul\":8343:8345   */\n      0x20\n        /* \"#utility.yul\":8335:8341   */\n      dup3\n        /* \"#utility.yul\":8332:8346   */\n      lt\n        /* \"#utility.yul\":8312:8330   */\n      dup2\n        /* \"#utility.yul\":8309:8347   */\n      eq\n        /* \"#utility.yul\":8306:8308   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":8389:8399   */\n      0x4e487b71\n        /* \"#utility.yul\":8384:8387   */\n      0xe0\n        /* \"#utility.yul\":8380:8400   */\n      shl\n        /* \"#utility.yul\":8377:8378   */\n      0x00\n        /* \"#utility.yul\":8370:8401   */\n      mstore\n        /* \"#utility.yul\":8424:8428   */\n      0x22\n        /* \"#utility.yul\":8421:8422   */\n      0x04\n        /* \"#utility.yul\":8414:8429   */\n      mstore\n        /* \"#utility.yul\":8452:8456   */\n      0x24\n        /* \"#utility.yul\":8449:8450   */\n      0x00\n        /* \"#utility.yul\":8442:8457   */\n      revert\n        /* \"#utility.yul\":8306:8308   */\n    tag_321:\n      pop\n        /* \"#utility.yul\":8148:8473   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8478:8605   */\n    tag_310:\n        /* \"#utility.yul\":8539:8549   */\n      0x4e487b71\n        /* \"#utility.yul\":8534:8537   */\n      0xe0\n        /* \"#utility.yul\":8530:8550   */\n      shl\n        /* \"#utility.yul\":8527:8528   */\n      0x00\n        /* \"#utility.yul\":8520:8551   */\n      mstore\n        /* \"#utility.yul\":8570:8574   */\n      0x11\n        /* \"#utility.yul\":8567:8568   */\n      0x04\n        /* \"#utility.yul\":8560:8575   */\n      mstore\n        /* \"#utility.yul\":8594:8598   */\n      0x24\n        /* \"#utility.yul\":8591:8592   */\n      0x00\n        /* \"#utility.yul\":8584:8599   */\n      revert\n\n    auxdata: 0xa26469706673582212204a851a61138207b7b30acd8c15c6c704dffb8f849ebef39e36349bba769e4fc964736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1668:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "76:117:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "86:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "101:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "95:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "95:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "171:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "180:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "183:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "173:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "173:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "173:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "130:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "141:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "156:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "161:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "152:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "152:11:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "165:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "148:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "148:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "137:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "137:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "127:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "127:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:50:6"
															},
															"nodeType": "YulIf",
															"src": "117:2:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "55:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "66:5:6",
														"type": ""
													}
												],
												"src": "14:179:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "296:209:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "342:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "351:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "359:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "344:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "344:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "344:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "317:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "326:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "313:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "313:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "338:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "309:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "309:32:6"
															},
															"nodeType": "YulIf",
															"src": "306:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "377:52:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "419:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "387:31:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "387:42:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "377:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "438:61:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "484:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "495:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "480:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "448:31:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "448:51:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "438:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "254:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "265:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "277:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "285:6:6",
														"type": ""
													}
												],
												"src": "198:307:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "684:181:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "701:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "712:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "694:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "694:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "694:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "735:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "746:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "731:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "731:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "751:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "724:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "724:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "724:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "774:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "785:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "770:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "770:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "790:33:6",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "763:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:61:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "763:61:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "833:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "845:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "856:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "841:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "841:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "833:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "661:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "675:4:6",
														"type": ""
													}
												],
												"src": "510:355:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "971:76:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "981:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "993:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1004:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "989:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "989:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "981:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1023:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1034:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1016:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1016:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1016:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "940:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "951:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "962:4:6",
														"type": ""
													}
												],
												"src": "870:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1100:181:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1135:115:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sum",
																					"nodeType": "YulIdentifier",
																					"src": "1156:3:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1165:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1170:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1161:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1161:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1149:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1149:33:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1149:33:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1202:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1205:4:6",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1195:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1195:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1195:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sum",
																					"nodeType": "YulIdentifier",
																					"src": "1230:3:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1235:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1223:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1223:17:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1223:17:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1116:1:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1123:1:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1119:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1119:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1113:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1113:13:6"
															},
															"nodeType": "YulIf",
															"src": "1110:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1259:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1270:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1273:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1266:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1266:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "1259:3:6"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1083:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1086:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "1092:3:6",
														"type": ""
													}
												],
												"src": "1052:229:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1341:325:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1351:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1365:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1371:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1361:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1361:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1351:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1382:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1412:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1418:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1408:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1408:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1386:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1459:31:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1461:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1475:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1483:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1471:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1471:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1461:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1439:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1432:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1432:26:6"
															},
															"nodeType": "YulIf",
															"src": "1429:2:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1549:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1570:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1577:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1582:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1573:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1573:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1563:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1563:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1563:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1614:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1617:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1607:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1607:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1607:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1642:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1645:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1635:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1635:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1635:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1505:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1528:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1536:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1525:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1525:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1502:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1502:38:6"
															},
															"nodeType": "YulIf",
															"src": "1499:2:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1321:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1330:6:6",
														"type": ""
													}
												],
												"src": "1286:380:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address_fromMemory(headStart)\n        value1 := abi_decode_t_address_fromMemory(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052601960085560326009556005600a556014600b553480156200002557600080fd5b50604051620014103803806200141083398101604081905262000048916200030e565b604080518082018252601f81527f5b544553545d204465666c6174696f6e617279204d656d6520546f6b656e5d006020808301918252835180850190945260058452642226aa181960d91b908401528151919291620000aa916003916200024b565b508051620000c09060049060208401906200024b565b505050620000dd620000d76200012e60201b60201c565b62000132565b600680546001600160a01b038085166001600160a01b03199283161792839055600780548583169316929092179091556200012691166b033b2e3c9fd0803ce800000062000184565b5050620003e7565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620001b65760405162461bcd60e51b8152600401620001ad9062000345565b60405180910390fd5b620001c46000838362000246565b8060026000828254620001d8919062000385565b90915550506001600160a01b038216600081815260208190526040808220805485019055517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906200022c9085906200037c565b60405180910390a3620002426000838362000246565b5050565b505050565b8280546200025990620003aa565b90600052602060002090601f0160209004810192826200027d5760008555620002c8565b82601f106200029857805160ff1916838001178555620002c8565b82800160010185558215620002c8579182015b82811115620002c8578251825591602001919060010190620002ab565b50620002d6929150620002da565b5090565b5b80821115620002d65760008155600101620002db565b80516001600160a01b03811681146200030957600080fd5b919050565b6000806040838503121562000321578182fd5b6200032c83620002f1565b91506200033c60208401620002f1565b90509250929050565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60008219821115620003a557634e487b7160e01b81526011600452602481fd5b500190565b600281046001821680620003bf57607f821691505b60208210811415620003e157634e487b7160e01b600052602260045260246000fd5b50919050565b61101980620003f76000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c806370a08231116100c3578063a9059cbb1161007c578063a9059cbb1461027b578063bed998501461028e578063cc32d17614610296578063d46980161461029e578063dd62ed3e146102a6578063f2fde38b146102b957610158565b806370a0823114610235578063715018a6146102485780638da5cb5b1461025057806395d89b411461025857806398118cb414610260578063a457c2d71461026857610158565b80632ff2e9dc116101155780632ff2e9dc146101e0578063313ce567146101e857806339509351146101fd5780634626402b1461021057806358fa63ca146102185780636fcba3771461022057610158565b806303fd2a451461015d57806306fdde031461017b578063095ea7b31461019057806318160ddd146101b057806323b872dd146101c55780632b14ca56146101d8575b600080fd5b6101656102cc565b6040516101729190610bcd565b60405180910390f35b6101836102d2565b6040516101729190610bec565b6101a361019e366004610b73565b610364565b6040516101729190610be1565b6101b8610386565b6040516101729190610f0d565b6101a36101d3366004610b38565b61038c565b6101b86103ad565b6101b86103b3565b6101f06103c3565b6040516101729190610f16565b6101a361020b366004610b73565b6103c8565b6101656103f4565b610165610403565b61023361022e366004610b9c565b610408565b005b6101b8610243366004610aec565b610424565b610233610443565b610165610457565b610183610466565b6101b8610475565b6101a3610276366004610b73565b61047b565b6101a3610289366004610b73565b6104d7565b6101b86104ed565b6101b86104f3565b6101656104f9565b6101b86102b4366004610b06565b610508565b6102336102c7366004610aec565b610533565b61dead81565b6060600380546102e190610f92565b80601f016020809104026020016040519081016040528092919081815260200182805461030d90610f92565b801561035a5780601f1061032f5761010080835404028352916020019161035a565b820191906000526020600020905b81548152906001019060200180831161033d57829003601f168201915b5050505050905090565b60008061036f61056d565b905061037c818585610571565b5060019392505050565b60025490565b60006103a3848461039e878787610625565b6107e6565b90505b9392505050565b600a5481565b6b033b2e3c9fd0803ce800000081565b601290565b6000806103d361056d565b905061037c8185856103e58589610508565b6103ef9190610f24565b610571565b6007546001600160a01b031681565b600081565b610410610809565b600893909355600991909155600a55600b55565b6001600160a01b0381166000908152602081905260409020545b919050565b61044b610809565b6104556000610848565b565b6005546001600160a01b031690565b6060600480546102e190610f92565b60085481565b60008061048661056d565b905060006104948286610508565b9050838110156104bf5760405162461bcd60e51b81526004016104b690610ec8565b60405180910390fd5b6104cc8286868403610571565b506001949350505050565b60006103a6836104e8338686610625565b61089a565b600b5481565b60095481565b6006546001600160a01b031681565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61053b610809565b6001600160a01b0381166105615760405162461bcd60e51b81526004016104b690610cc4565b61056a81610848565b50565b3390565b6001600160a01b0383166105975760405162461bcd60e51b81526004016104b690610e84565b6001600160a01b0382166105bd5760405162461bcd60e51b81526004016104b690610d0a565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610618908590610f0d565b60405180910390a3505050565b60006001600160a01b03831661dead148061064757506001600160a01b038316155b8061065f57506006546001600160a01b038581169116145b8061067757506007546001600160a01b038581169116145b156106835750806103a6565b6000612710600854846106969190610f5c565b6106a09190610f3c565b90506000612710600954856106b59190610f5c565b6106bf9190610f3c565b90506000612710600b54866106d49190610f5c565b6106de9190610f3c565b6006549091506001600160a01b0387811691161461070e5760065461070c906001600160a01b03168461089a565b505b6007546001600160a01b0387811691161461073b57600754610739906001600160a01b03168361089a565b505b61074587826108b2565b6006546000906001600160a01b0389811691161480159061077457506007546001600160a01b03898116911614155b156107af57612710600a548761078a9190610f5c565b6107949190610f3c565b6006549091506107ad906001600160a01b03168261089a565b505b8082846107bc878a610f7b565b6107c69190610f7b565b6107d09190610f7b565b6107da9190610f7b565b98975050505050505050565b6000806107f161056d565b90506107fe85828561098a565b6104cc8585856109d4565b61081161056d565b6001600160a01b0316610822610457565b6001600160a01b0316146104555760405162461bcd60e51b81526004016104b690610dc9565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000806108a561056d565b905061037c8185856109d4565b6001600160a01b0382166108d85760405162461bcd60e51b81526004016104b690610dfe565b6108e482600083610985565b6001600160a01b0382166000908152602081905260409020548181101561091d5760405162461bcd60e51b81526004016104b690610c82565b6001600160a01b0383166000818152602081905260408082208585039055600280548690039055519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610975908690610f0d565b60405180910390a3610985836000845b505050565b60006109968484610508565b905060001981146109ce57818110156109c15760405162461bcd60e51b81526004016104b690610d4c565b6109ce8484848403610571565b50505050565b6001600160a01b0383166109fa5760405162461bcd60e51b81526004016104b690610e3f565b6001600160a01b038216610a205760405162461bcd60e51b81526004016104b690610c3f565b610a2b838383610985565b6001600160a01b03831660009081526020819052604090205481811015610a645760405162461bcd60e51b81526004016104b690610d83565b6001600160a01b0380851660008181526020819052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610ac2908690610f0d565b60405180910390a36109ce848484610985565b80356001600160a01b038116811461043e57600080fd5b600060208284031215610afd578081fd5b6103a682610ad5565b60008060408385031215610b18578081fd5b610b2183610ad5565b9150610b2f60208401610ad5565b90509250929050565b600080600060608486031215610b4c578081fd5b610b5584610ad5565b9250610b6360208501610ad5565b9150604084013590509250925092565b60008060408385031215610b85578182fd5b610b8e83610ad5565b946020939093013593505050565b60008060008060808587031215610bb1578081fd5b5050823594602084013594506040840135936060013592509050565b6001600160a01b0391909116815260200190565b901515815260200190565b6000602080835283518082850152825b81811015610c1857858101830151858201604001528201610bfc565b81811115610c295783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252601d908201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604082015260600190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b90815260200190565b60ff91909116815260200190565b60008219821115610f3757610f37610fcd565b500190565b600082610f5757634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610f7657610f76610fcd565b500290565b600082821015610f8d57610f8d610fcd565b500390565b600281046001821680610fa657607f821691505b60208210811415610fc757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212204a851a61138207b7b30acd8c15c6c704dffb8f849ebef39e36349bba769e4fc964736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x19 PUSH1 0x8 SSTORE PUSH1 0x32 PUSH1 0x9 SSTORE PUSH1 0x5 PUSH1 0xA SSTORE PUSH1 0x14 PUSH1 0xB SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1410 CODESIZE SUB DUP1 PUSH3 0x1410 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x48 SWAP2 PUSH3 0x30E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH32 0x5B544553545D204465666C6174696F6E617279204D656D6520546F6B656E5D00 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0x5 DUP5 MSTORE PUSH5 0x2226AA1819 PUSH1 0xD9 SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD SWAP2 SWAP3 SWAP2 PUSH3 0xAA SWAP2 PUSH1 0x3 SWAP2 PUSH3 0x24B JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0xC0 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x24B JUMP JUMPDEST POP POP POP PUSH3 0xDD PUSH3 0xD7 PUSH3 0x12E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x132 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP3 DUP4 SWAP1 SSTORE PUSH1 0x7 DUP1 SLOAD DUP6 DUP4 AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH3 0x126 SWAP2 AND PUSH12 0x33B2E3C9FD0803CE8000000 PUSH3 0x184 JUMP JUMPDEST POP POP PUSH3 0x3E7 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x1B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1AD SWAP1 PUSH3 0x345 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x1C4 PUSH1 0x0 DUP4 DUP4 PUSH3 0x246 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x1D8 SWAP2 SWAP1 PUSH3 0x385 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD DUP6 ADD SWAP1 SSTORE MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH3 0x22C SWAP1 DUP6 SWAP1 PUSH3 0x37C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x242 PUSH1 0x0 DUP4 DUP4 PUSH3 0x246 JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x259 SWAP1 PUSH3 0x3AA JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x27D JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x2C8 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x298 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2C8 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2C8 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2C8 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2AB JUMP JUMPDEST POP PUSH3 0x2D6 SWAP3 SWAP2 POP PUSH3 0x2DA JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2D6 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2DB JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x321 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH3 0x32C DUP4 PUSH3 0x2F1 JUMP JUMPDEST SWAP2 POP PUSH3 0x33C PUSH1 0x20 DUP5 ADD PUSH3 0x2F1 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x3A5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x3BF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x3E1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1019 DUP1 PUSH3 0x3F7 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0xBED99850 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0xCC32D176 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0xD4698016 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2B9 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x98118CB4 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x268 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x2FF2E9DC GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x2FF2E9DC EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x4626402B EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x58FA63CA EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x6FCBA377 EQ PUSH2 0x220 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x3FD2A45 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x2B14CA56 EQ PUSH2 0x1D8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x165 PUSH2 0x2CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0xBCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH2 0x2D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0xBEC JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x19E CALLDATASIZE PUSH1 0x4 PUSH2 0xB73 JUMP JUMPDEST PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0xBE1 JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x386 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0xF0D JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x1D3 CALLDATASIZE PUSH1 0x4 PUSH2 0xB38 JUMP JUMPDEST PUSH2 0x38C JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x3AD JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x3B3 JUMP JUMPDEST PUSH2 0x1F0 PUSH2 0x3C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0xF16 JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x20B CALLDATASIZE PUSH1 0x4 PUSH2 0xB73 JUMP JUMPDEST PUSH2 0x3C8 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x3F4 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x403 JUMP JUMPDEST PUSH2 0x233 PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x408 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B8 PUSH2 0x243 CALLDATASIZE PUSH1 0x4 PUSH2 0xAEC JUMP JUMPDEST PUSH2 0x424 JUMP JUMPDEST PUSH2 0x233 PUSH2 0x443 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x457 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x466 JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x475 JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x276 CALLDATASIZE PUSH1 0x4 PUSH2 0xB73 JUMP JUMPDEST PUSH2 0x47B JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x289 CALLDATASIZE PUSH1 0x4 PUSH2 0xB73 JUMP JUMPDEST PUSH2 0x4D7 JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x4ED JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x4F3 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x4F9 JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x2B4 CALLDATASIZE PUSH1 0x4 PUSH2 0xB06 JUMP JUMPDEST PUSH2 0x508 JUMP JUMPDEST PUSH2 0x233 PUSH2 0x2C7 CALLDATASIZE PUSH1 0x4 PUSH2 0xAEC JUMP JUMPDEST PUSH2 0x533 JUMP JUMPDEST PUSH2 0xDEAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2E1 SWAP1 PUSH2 0xF92 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x30D SWAP1 PUSH2 0xF92 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x35A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x32F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x35A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x33D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x36F PUSH2 0x56D JUMP JUMPDEST SWAP1 POP PUSH2 0x37C DUP2 DUP6 DUP6 PUSH2 0x571 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A3 DUP5 DUP5 PUSH2 0x39E DUP8 DUP8 DUP8 PUSH2 0x625 JUMP JUMPDEST PUSH2 0x7E6 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH12 0x33B2E3C9FD0803CE8000000 DUP2 JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3D3 PUSH2 0x56D JUMP JUMPDEST SWAP1 POP PUSH2 0x37C DUP2 DUP6 DUP6 PUSH2 0x3E5 DUP6 DUP10 PUSH2 0x508 JUMP JUMPDEST PUSH2 0x3EF SWAP2 SWAP1 PUSH2 0xF24 JUMP JUMPDEST PUSH2 0x571 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x410 PUSH2 0x809 JUMP JUMPDEST PUSH1 0x8 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x9 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0xA SSTORE PUSH1 0xB SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x44B PUSH2 0x809 JUMP JUMPDEST PUSH2 0x455 PUSH1 0x0 PUSH2 0x848 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2E1 SWAP1 PUSH2 0xF92 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x486 PUSH2 0x56D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x494 DUP3 DUP7 PUSH2 0x508 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B6 SWAP1 PUSH2 0xEC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4CC DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x571 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A6 DUP4 PUSH2 0x4E8 CALLER DUP7 DUP7 PUSH2 0x625 JUMP JUMPDEST PUSH2 0x89A JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x53B PUSH2 0x809 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x561 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B6 SWAP1 PUSH2 0xCC4 JUMP JUMPDEST PUSH2 0x56A DUP2 PUSH2 0x848 JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x597 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B6 SWAP1 PUSH2 0xE84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B6 SWAP1 PUSH2 0xD0A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x618 SWAP1 DUP6 SWAP1 PUSH2 0xF0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xDEAD EQ DUP1 PUSH2 0x647 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO JUMPDEST DUP1 PUSH2 0x65F JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ JUMPDEST DUP1 PUSH2 0x677 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x683 JUMPI POP DUP1 PUSH2 0x3A6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH1 0x8 SLOAD DUP5 PUSH2 0x696 SWAP2 SWAP1 PUSH2 0xF5C JUMP JUMPDEST PUSH2 0x6A0 SWAP2 SWAP1 PUSH2 0xF3C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2710 PUSH1 0x9 SLOAD DUP6 PUSH2 0x6B5 SWAP2 SWAP1 PUSH2 0xF5C JUMP JUMPDEST PUSH2 0x6BF SWAP2 SWAP1 PUSH2 0xF3C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2710 PUSH1 0xB SLOAD DUP7 PUSH2 0x6D4 SWAP2 SWAP1 PUSH2 0xF5C JUMP JUMPDEST PUSH2 0x6DE SWAP2 SWAP1 PUSH2 0xF3C JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 AND EQ PUSH2 0x70E JUMPI PUSH1 0x6 SLOAD PUSH2 0x70C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x89A JUMP JUMPDEST POP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 AND EQ PUSH2 0x73B JUMPI PUSH1 0x7 SLOAD PUSH2 0x739 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x89A JUMP JUMPDEST POP JUMPDEST PUSH2 0x745 DUP8 DUP3 PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x774 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x7AF JUMPI PUSH2 0x2710 PUSH1 0xA SLOAD DUP8 PUSH2 0x78A SWAP2 SWAP1 PUSH2 0xF5C JUMP JUMPDEST PUSH2 0x794 SWAP2 SWAP1 PUSH2 0xF3C JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH2 0x7AD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH2 0x89A JUMP JUMPDEST POP JUMPDEST DUP1 DUP3 DUP5 PUSH2 0x7BC DUP8 DUP11 PUSH2 0xF7B JUMP JUMPDEST PUSH2 0x7C6 SWAP2 SWAP1 PUSH2 0xF7B JUMP JUMPDEST PUSH2 0x7D0 SWAP2 SWAP1 PUSH2 0xF7B JUMP JUMPDEST PUSH2 0x7DA SWAP2 SWAP1 PUSH2 0xF7B JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7F1 PUSH2 0x56D JUMP JUMPDEST SWAP1 POP PUSH2 0x7FE DUP6 DUP3 DUP6 PUSH2 0x98A JUMP JUMPDEST PUSH2 0x4CC DUP6 DUP6 DUP6 PUSH2 0x9D4 JUMP JUMPDEST PUSH2 0x811 PUSH2 0x56D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x822 PUSH2 0x457 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x455 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B6 SWAP1 PUSH2 0xDC9 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8A5 PUSH2 0x56D JUMP JUMPDEST SWAP1 POP PUSH2 0x37C DUP2 DUP6 DUP6 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B6 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH2 0x8E4 DUP3 PUSH1 0x0 DUP4 PUSH2 0x985 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x91D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B6 SWAP1 PUSH2 0xC82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP7 SWAP1 SUB SWAP1 SSTORE MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x975 SWAP1 DUP7 SWAP1 PUSH2 0xF0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x985 DUP4 PUSH1 0x0 DUP5 JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x996 DUP5 DUP5 PUSH2 0x508 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x9CE JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x9C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B6 SWAP1 PUSH2 0xD4C JUMP JUMPDEST PUSH2 0x9CE DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x571 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x9FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B6 SWAP1 PUSH2 0xE3F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B6 SWAP1 PUSH2 0xC3F JUMP JUMPDEST PUSH2 0xA2B DUP4 DUP4 DUP4 PUSH2 0x985 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xA64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B6 SWAP1 PUSH2 0xD83 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0xAC2 SWAP1 DUP7 SWAP1 PUSH2 0xF0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x9CE DUP5 DUP5 DUP5 PUSH2 0x985 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x43E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAFD JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x3A6 DUP3 PUSH2 0xAD5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB18 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xB21 DUP4 PUSH2 0xAD5 JUMP JUMPDEST SWAP2 POP PUSH2 0xB2F PUSH1 0x20 DUP5 ADD PUSH2 0xAD5 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB4C JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xB55 DUP5 PUSH2 0xAD5 JUMP JUMPDEST SWAP3 POP PUSH2 0xB63 PUSH1 0x20 DUP6 ADD PUSH2 0xAD5 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB85 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xB8E DUP4 PUSH2 0xAD5 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xBB1 JUMPI DUP1 DUP2 REVERT JUMPDEST POP POP DUP3 CALLDATALOAD SWAP5 PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC18 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xBFC JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xC29 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xF37 JUMPI PUSH2 0xF37 PUSH2 0xFCD JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xF57 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xF76 JUMPI PUSH2 0xF76 PUSH2 0xFCD JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xF8D JUMPI PUSH2 0xF8D PUSH2 0xFCD JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xFA6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xFC7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A DUP6 BYTE PUSH2 0x1382 SMOD 0xB7 0xB3 EXP 0xCD DUP13 ISZERO 0xC6 0xC7 DIV 0xDF 0xFB DUP16 DUP5 SWAP15 0xBE RETURN SWAP15 CALLDATASIZE CALLVALUE SWAP12 0xBA PUSH23 0x9E4FC964736F6C63430008000033000000000000000000 ",
							"sourceMap": "173:2585:5:-:0;;;604:2;574:32;;651:2;622:31;;693:1;668:26;;736:2;710:28;;756:258;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1980:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1980:113:1;;;;2046:13;;1980:113;;;2046:13;;:5;;:13;:::i;:::-;-1:-1:-1;2069:17:1;;;;:7;;:17;;;;;:::i;:::-;;1980:113;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;880:15:5::1;:34:::0;;-1:-1:-1;;;;;880:34:5;;::::1;-1:-1:-1::0;;;;;;880:34:5;;::::1;;::::0;;;;925:14:::1;:32:::0;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;968:38:::1;::::0;974:15:::1;503:23;968:5;:38::i;:::-;756:258:::0;;173:2585;;640:96:4;719:10;640:96;:::o;2426:187:0:-;2518:6;;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2426:187;;:::o;8520:535:1:-;-1:-1:-1;;;;;8603:21:1;;8595:65;;;;-1:-1:-1;;;8595:65:1;;;;;;;:::i;:::-;;;;;;;;;8671:49;8700:1;8704:7;8713:6;8671:20;:49::i;:::-;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:1;;:9;:18;;;;;;;;;;;:28;;;;;;8952:37;;;;;8921:6;;8952:37;:::i;:::-;;;;;;;;9000:48;9028:1;9032:7;9041:6;9000:19;:48::i;:::-;8520:535;;:::o;12073:91::-;;;;:::o;173:2585:5:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;173:2585:5;;;-1:-1:-1;173:2585:5;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:179:6;95:13;;-1:-1:-1;;;;;137:31:6;;127:42;;117:2;;183:1;180;173:12;117:2;76:117;;;:::o;198:307::-;;;338:2;326:9;317:7;313:23;309:32;306:2;;;359:6;351;344:22;306:2;387:42;419:9;387:42;:::i;:::-;377:52;;448:51;495:2;484:9;480:18;448:51;:::i;:::-;438:61;;296:209;;;;;:::o;510:355::-;712:2;694:21;;;751:2;731:18;;;724:30;790:33;785:2;770:18;;763:61;856:2;841:18;;684:181::o;870:177::-;1016:25;;;1004:2;989:18;;971:76::o;1052:229::-;;1123:1;1119:6;1116:1;1113:13;1110:2;;;-1:-1:-1;;;1149:33:6;;1205:4;1202:1;1195:15;1235:4;1156:3;1223:17;1110:2;-1:-1:-1;1266:9:6;;1100:181::o;1286:380::-;1371:1;1361:12;;1418:1;1408:12;;;1429:2;;1483:4;1475:6;1471:17;1461:27;;1429:2;1536;1528:6;1525:14;1505:18;1502:38;1499:2;;;1582:10;1577:3;1573:20;1570:1;1563:31;1617:4;1614:1;1607:15;1645:4;1642:1;1635:15;1499:2;;1341:325;;;:::o;:::-;173:2585:5;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8607:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "65:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "75:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "97:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "84:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "84:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "75:5:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "167:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "176:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "179:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "169:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "169:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "169:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "126:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "137:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "152:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "157:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "148:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "148:11:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "161:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "144:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "144:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "133:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "133:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "123:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "123:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "116:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "116:50:6"
															},
															"nodeType": "YulIf",
															"src": "113:2:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "44:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "55:5:6",
														"type": ""
													}
												],
												"src": "14:175:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "264:128:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "310:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "319:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "327:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "312:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "312:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "312:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "285:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "294:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "281:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "281:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "306:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "277:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "277:32:6"
															},
															"nodeType": "YulIf",
															"src": "274:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "345:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "376:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "355:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "355:31:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "230:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "241:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "253:6:6",
														"type": ""
													}
												],
												"src": "194:198:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "484:187:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "530:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "539:6:6"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "547:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "532:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "532:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "532:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "505:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "514:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "501:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "501:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "526:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "497:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "497:32:6"
															},
															"nodeType": "YulIf",
															"src": "494:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "565:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "596:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "575:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "575:31:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "565:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "615:50:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "650:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "661:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "646:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "646:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "625:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "625:40:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "615:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "442:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "453:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "465:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "473:6:6",
														"type": ""
													}
												],
												"src": "397:274:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "780:238:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "826:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "835:6:6"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "843:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "828:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "828:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "828:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "801:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "810:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "797:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "797:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "822:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "793:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "793:32:6"
															},
															"nodeType": "YulIf",
															"src": "790:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "861:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "892:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "871:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "871:31:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "861:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "911:50:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "946:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "957:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "942:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "942:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "921:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:40:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "911:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "970:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "997:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1008:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "993:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "993:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "980:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:32:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "970:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "730:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "741:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "753:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "761:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "769:6:6",
														"type": ""
													}
												],
												"src": "676:342:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1110:179:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1156:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1165:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1173:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1158:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1158:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1158:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1131:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1140:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1127:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1127:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1152:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1123:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:32:6"
															},
															"nodeType": "YulIf",
															"src": "1120:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1191:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1222:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1201:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1201:31:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1191:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1241:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1268:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1279:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1264:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1264:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1251:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1241:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1079:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1091:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1099:6:6",
														"type": ""
													}
												],
												"src": "1023:266:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1415:274:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1462:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "1471:6:6"
																				},
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "1479:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1464:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1464:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1464:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1436:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1445:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1432:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1432:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1457:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1428:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1428:33:6"
															},
															"nodeType": "YulIf",
															"src": "1425:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1497:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1520:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1507:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1507:23:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1497:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1539:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1566:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1577:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1562:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1562:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1549:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1549:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1539:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1590:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1617:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1628:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1613:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1613:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1600:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1600:32:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1590:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1641:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1668:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1679:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1664:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1664:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1651:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1651:32:6"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1641:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1357:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1368:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1380:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1388:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1396:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1404:6:6",
														"type": ""
													}
												],
												"src": "1294:395:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1795:102:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1805:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1817:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1828:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1813:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1813:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1805:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1847:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1862:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1878:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1883:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1874:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1874:11:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1887:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1870:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1870:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1858:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1858:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1840:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1840:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1840:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1764:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1775:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1786:4:6",
														"type": ""
													}
												],
												"src": "1694:203:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1997:92:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2007:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2019:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2030:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2015:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2015:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2007:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2049:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "2074:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2067:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2067:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2060:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2060:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2042:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2042:41:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2042:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1966:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1977:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1988:4:6",
														"type": ""
													}
												],
												"src": "1902:187:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2215:482:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2225:12:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2235:2:6",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2229:2:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2253:9:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2264:2:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2246:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2246:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2246:21:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2276:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2296:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2290:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2290:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2280:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2323:9:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2334:2:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2319:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2319:18:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2339:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2312:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2312:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2312:34:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2355:13:6",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "2364:4:6"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2359:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2427:90:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "2456:9:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2467:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2452:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2452:17:6"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2471:2:6",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2448:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2448:26:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "2490:6:6"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "2498:1:6"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "2486:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2486:14:6"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "2502:2:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2482:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2482:23:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2476:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2476:30:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2441:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2441:66:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2441:66:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2388:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2391:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2385:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2385:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2399:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2401:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2410:1:6"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2413:2:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2406:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2406:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2401:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2381:3:6",
																"statements": []
															},
															"src": "2377:140:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2551:69:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "2580:9:6"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "2591:6:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2576:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2576:22:6"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2600:2:6",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2572:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2572:31:6"
																				},
																				{
																					"name": "tail",
																					"nodeType": "YulIdentifier",
																					"src": "2605:4:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2565:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2565:45:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2565:45:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2532:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2535:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2529:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2529:13:6"
															},
															"nodeType": "YulIf",
															"src": "2526:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2629:62:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2645:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2664:6:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2672:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2660:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2660:15:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2681:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2677:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2677:7:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2656:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2656:29:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2641:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2641:45:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2688:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2637:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2637:54:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2629:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2184:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2195:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2206:4:6",
														"type": ""
													}
												],
												"src": "2094:603:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2876:225:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2893:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2904:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2886:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2886:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2886:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2927:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2938:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2923:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2923:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2943:2:6",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2916:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2916:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2916:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2966:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2977:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2962:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2962:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2982:34:6",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2955:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2955:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2955:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3037:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3048:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3033:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3033:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3053:5:6",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3026:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3026:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3026:33:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3068:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3080:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3091:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3076:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3076:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3068:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2853:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2867:4:6",
														"type": ""
													}
												],
												"src": "2702:399:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3280:224:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3297:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3308:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3290:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3290:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3290:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3331:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3342:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3327:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3327:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3347:2:6",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3320:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3320:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3320:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3370:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3381:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3366:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3366:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3386:34:6",
																		"type": "",
																		"value": "ERC20: burn amount exceeds balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3359:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3359:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3359:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3441:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3452:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3437:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3437:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3457:4:6",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3430:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3430:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3430:32:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3471:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3483:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3494:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3479:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3479:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3471:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3257:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3271:4:6",
														"type": ""
													}
												],
												"src": "3106:398:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3683:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3700:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3711:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3693:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3693:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3693:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3734:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3745:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3730:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3730:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3750:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3723:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3723:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3723:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3773:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3784:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3769:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3769:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3789:34:6",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3762:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3762:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3762:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3844:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3855:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3840:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3840:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3860:8:6",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3833:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3833:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3833:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3878:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3890:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3901:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3886:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3886:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3878:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3660:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3674:4:6",
														"type": ""
													}
												],
												"src": "3509:402:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4090:224:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4107:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4118:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4100:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4100:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4100:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4141:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4152:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4137:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4137:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4157:2:6",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4130:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4130:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4130:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4180:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4191:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4176:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4176:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4196:34:6",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4169:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4169:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4169:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4251:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4262:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4247:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4247:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4267:4:6",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4240:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4240:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4240:32:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4281:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4293:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4304:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4289:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4289:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4281:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4067:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4081:4:6",
														"type": ""
													}
												],
												"src": "3916:398:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4493:179:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4510:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4521:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4503:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4503:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4503:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4544:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4555:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4540:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4540:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4560:2:6",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4533:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4533:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4533:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4583:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4594:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4579:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4579:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4599:31:6",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4572:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4572:59:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4572:59:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4640:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4652:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4663:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4648:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4648:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4640:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4470:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4484:4:6",
														"type": ""
													}
												],
												"src": "4319:353:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4851:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4868:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4879:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4861:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4861:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4861:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4902:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4913:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4898:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4898:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4918:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4891:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4891:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4891:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4941:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4952:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4937:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4937:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4957:34:6",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4930:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4930:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4930:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5012:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5023:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5008:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5008:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5028:8:6",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5001:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5001:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5001:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5046:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5058:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5069:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5054:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5054:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5046:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4828:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4842:4:6",
														"type": ""
													}
												],
												"src": "4677:402:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5258:182:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5275:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5286:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5268:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5268:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5268:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5309:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5320:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5305:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5305:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5325:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5298:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5298:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5298:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5348:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5359:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5344:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5344:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5364:34:6",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5337:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5337:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5337:62:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5408:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5420:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5431:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5416:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5416:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5408:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5235:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5249:4:6",
														"type": ""
													}
												],
												"src": "5084:356:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5619:223:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5636:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5647:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5629:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5629:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5629:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5670:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5681:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5666:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5666:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5686:2:6",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5659:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5659:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5659:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5709:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5720:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5705:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5705:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5725:34:6",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5698:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5698:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5698:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5780:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5791:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5776:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5776:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5796:3:6",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5769:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5769:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5769:31:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5809:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5821:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5832:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5817:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5817:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5809:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5596:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5610:4:6",
														"type": ""
													}
												],
												"src": "5445:397:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6021:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6038:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6049:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6031:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6031:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6031:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6072:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6083:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6068:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6068:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6088:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6061:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6061:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6061:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6111:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6122:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6107:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6107:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6127:34:6",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6100:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6100:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6100:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6182:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6193:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6178:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6178:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6198:7:6",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6171:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6171:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6171:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6215:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6227:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6238:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6223:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6223:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6215:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5998:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6012:4:6",
														"type": ""
													}
												],
												"src": "5847:401:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6427:226:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6444:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6455:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6437:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6437:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6437:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6478:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6489:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6474:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6474:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6494:2:6",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6467:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6467:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6467:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6517:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6528:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6513:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6513:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6533:34:6",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6506:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6506:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6506:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6588:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6599:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6584:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6584:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6604:6:6",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6577:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6577:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6577:34:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6620:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6632:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6643:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6628:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6628:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6620:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6404:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6418:4:6",
														"type": ""
													}
												],
												"src": "6253:400:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6832:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6849:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6860:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6842:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6842:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6842:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6883:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6894:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6879:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6879:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6899:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6872:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6872:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6872:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6922:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6933:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6918:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6918:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6938:34:6",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6911:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6911:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6911:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6993:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7004:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6989:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6989:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7009:7:6",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6982:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6982:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6982:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7026:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7038:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7049:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7034:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7034:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7026:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6809:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6823:4:6",
														"type": ""
													}
												],
												"src": "6658:401:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7165:76:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7175:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7187:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7198:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7183:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7183:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7175:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7217:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7228:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7210:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7210:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7210:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7134:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7145:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7156:4:6",
														"type": ""
													}
												],
												"src": "7064:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7343:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7353:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7365:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7376:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7361:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7361:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7353:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7395:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7410:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7418:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7406:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7406:17:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7388:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7388:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7388:36:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7312:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7323:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7334:4:6",
														"type": ""
													}
												],
												"src": "7246:184:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7483:80:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7510:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7512:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7512:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7512:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7499:1:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7506:1:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7502:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7502:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7496:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7496:13:6"
															},
															"nodeType": "YulIf",
															"src": "7493:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7541:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7552:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7555:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7548:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7548:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7541:3:6"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7466:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7469:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7475:3:6",
														"type": ""
													}
												],
												"src": "7435:128:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7614:171:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7645:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "7666:1:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7673:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7678:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "7669:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7669:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7659:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7659:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7659:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7710:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7713:4:6",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7703:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7703:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7703:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "7738:1:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7741:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7731:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7731:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7731:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7634:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7627:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7627:9:6"
															},
															"nodeType": "YulIf",
															"src": "7624:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7765:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7774:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7777:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "7770:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7770:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7765:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7599:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7602:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "7608:1:6",
														"type": ""
													}
												],
												"src": "7568:217:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7842:116:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7901:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7903:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7903:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7903:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7873:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7866:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7866:9:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "7859:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7859:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7881:1:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7892:1:6",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "7888:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7888:6:6"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7896:1:6"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "7884:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7884:14:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7878:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7878:21:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7855:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7855:45:6"
															},
															"nodeType": "YulIf",
															"src": "7852:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7932:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7947:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7950:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7943:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7943:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "7932:7:6"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7821:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7824:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "7830:7:6",
														"type": ""
													}
												],
												"src": "7790:168:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8012:76:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8034:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8036:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8036:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8036:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8028:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8031:1:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8025:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8025:8:6"
															},
															"nodeType": "YulIf",
															"src": "8022:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8065:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8077:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8080:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8073:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8073:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "8065:4:6"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7994:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7997:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "8003:4:6",
														"type": ""
													}
												],
												"src": "7963:125:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8148:325:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8158:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8172:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8178:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "8168:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8168:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8158:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8189:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8219:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8225:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8215:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8215:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "8193:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8266:31:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8268:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "8282:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8290:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "8278:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8278:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8268:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8246:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8239:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8239:26:6"
															},
															"nodeType": "YulIf",
															"src": "8236:2:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8356:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8377:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8384:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8389:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "8380:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8380:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8370:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8370:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8370:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8421:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8424:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8414:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8414:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8414:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8449:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8452:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8442:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8442:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8442:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8312:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8335:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8343:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8332:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8332:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "8309:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8309:38:6"
															},
															"nodeType": "YulIf",
															"src": "8306:2:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "8128:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8137:6:6",
														"type": ""
													}
												],
												"src": "8093:380:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8510:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8527:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8534:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8539:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8530:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8530:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8520:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8520:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8520:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8567:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8570:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8560:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8560:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8560:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8591:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8594:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8584:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8584:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8584:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8478:127:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value3, value3) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0xBED99850 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0xCC32D176 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0xD4698016 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2B9 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x98118CB4 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x268 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x2FF2E9DC GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x2FF2E9DC EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x4626402B EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x58FA63CA EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x6FCBA377 EQ PUSH2 0x220 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x3FD2A45 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x2B14CA56 EQ PUSH2 0x1D8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x165 PUSH2 0x2CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0xBCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH2 0x2D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0xBEC JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x19E CALLDATASIZE PUSH1 0x4 PUSH2 0xB73 JUMP JUMPDEST PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0xBE1 JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x386 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0xF0D JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x1D3 CALLDATASIZE PUSH1 0x4 PUSH2 0xB38 JUMP JUMPDEST PUSH2 0x38C JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x3AD JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x3B3 JUMP JUMPDEST PUSH2 0x1F0 PUSH2 0x3C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0xF16 JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x20B CALLDATASIZE PUSH1 0x4 PUSH2 0xB73 JUMP JUMPDEST PUSH2 0x3C8 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x3F4 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x403 JUMP JUMPDEST PUSH2 0x233 PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x408 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B8 PUSH2 0x243 CALLDATASIZE PUSH1 0x4 PUSH2 0xAEC JUMP JUMPDEST PUSH2 0x424 JUMP JUMPDEST PUSH2 0x233 PUSH2 0x443 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x457 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x466 JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x475 JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x276 CALLDATASIZE PUSH1 0x4 PUSH2 0xB73 JUMP JUMPDEST PUSH2 0x47B JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x289 CALLDATASIZE PUSH1 0x4 PUSH2 0xB73 JUMP JUMPDEST PUSH2 0x4D7 JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x4ED JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x4F3 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x4F9 JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x2B4 CALLDATASIZE PUSH1 0x4 PUSH2 0xB06 JUMP JUMPDEST PUSH2 0x508 JUMP JUMPDEST PUSH2 0x233 PUSH2 0x2C7 CALLDATASIZE PUSH1 0x4 PUSH2 0xAEC JUMP JUMPDEST PUSH2 0x533 JUMP JUMPDEST PUSH2 0xDEAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2E1 SWAP1 PUSH2 0xF92 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x30D SWAP1 PUSH2 0xF92 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x35A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x32F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x35A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x33D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x36F PUSH2 0x56D JUMP JUMPDEST SWAP1 POP PUSH2 0x37C DUP2 DUP6 DUP6 PUSH2 0x571 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A3 DUP5 DUP5 PUSH2 0x39E DUP8 DUP8 DUP8 PUSH2 0x625 JUMP JUMPDEST PUSH2 0x7E6 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH12 0x33B2E3C9FD0803CE8000000 DUP2 JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3D3 PUSH2 0x56D JUMP JUMPDEST SWAP1 POP PUSH2 0x37C DUP2 DUP6 DUP6 PUSH2 0x3E5 DUP6 DUP10 PUSH2 0x508 JUMP JUMPDEST PUSH2 0x3EF SWAP2 SWAP1 PUSH2 0xF24 JUMP JUMPDEST PUSH2 0x571 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x410 PUSH2 0x809 JUMP JUMPDEST PUSH1 0x8 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x9 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0xA SSTORE PUSH1 0xB SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x44B PUSH2 0x809 JUMP JUMPDEST PUSH2 0x455 PUSH1 0x0 PUSH2 0x848 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2E1 SWAP1 PUSH2 0xF92 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x486 PUSH2 0x56D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x494 DUP3 DUP7 PUSH2 0x508 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B6 SWAP1 PUSH2 0xEC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4CC DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x571 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A6 DUP4 PUSH2 0x4E8 CALLER DUP7 DUP7 PUSH2 0x625 JUMP JUMPDEST PUSH2 0x89A JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x53B PUSH2 0x809 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x561 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B6 SWAP1 PUSH2 0xCC4 JUMP JUMPDEST PUSH2 0x56A DUP2 PUSH2 0x848 JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x597 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B6 SWAP1 PUSH2 0xE84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B6 SWAP1 PUSH2 0xD0A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x618 SWAP1 DUP6 SWAP1 PUSH2 0xF0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xDEAD EQ DUP1 PUSH2 0x647 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO JUMPDEST DUP1 PUSH2 0x65F JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ JUMPDEST DUP1 PUSH2 0x677 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x683 JUMPI POP DUP1 PUSH2 0x3A6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH1 0x8 SLOAD DUP5 PUSH2 0x696 SWAP2 SWAP1 PUSH2 0xF5C JUMP JUMPDEST PUSH2 0x6A0 SWAP2 SWAP1 PUSH2 0xF3C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2710 PUSH1 0x9 SLOAD DUP6 PUSH2 0x6B5 SWAP2 SWAP1 PUSH2 0xF5C JUMP JUMPDEST PUSH2 0x6BF SWAP2 SWAP1 PUSH2 0xF3C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2710 PUSH1 0xB SLOAD DUP7 PUSH2 0x6D4 SWAP2 SWAP1 PUSH2 0xF5C JUMP JUMPDEST PUSH2 0x6DE SWAP2 SWAP1 PUSH2 0xF3C JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 AND EQ PUSH2 0x70E JUMPI PUSH1 0x6 SLOAD PUSH2 0x70C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x89A JUMP JUMPDEST POP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 AND EQ PUSH2 0x73B JUMPI PUSH1 0x7 SLOAD PUSH2 0x739 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x89A JUMP JUMPDEST POP JUMPDEST PUSH2 0x745 DUP8 DUP3 PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x774 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x7AF JUMPI PUSH2 0x2710 PUSH1 0xA SLOAD DUP8 PUSH2 0x78A SWAP2 SWAP1 PUSH2 0xF5C JUMP JUMPDEST PUSH2 0x794 SWAP2 SWAP1 PUSH2 0xF3C JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH2 0x7AD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH2 0x89A JUMP JUMPDEST POP JUMPDEST DUP1 DUP3 DUP5 PUSH2 0x7BC DUP8 DUP11 PUSH2 0xF7B JUMP JUMPDEST PUSH2 0x7C6 SWAP2 SWAP1 PUSH2 0xF7B JUMP JUMPDEST PUSH2 0x7D0 SWAP2 SWAP1 PUSH2 0xF7B JUMP JUMPDEST PUSH2 0x7DA SWAP2 SWAP1 PUSH2 0xF7B JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7F1 PUSH2 0x56D JUMP JUMPDEST SWAP1 POP PUSH2 0x7FE DUP6 DUP3 DUP6 PUSH2 0x98A JUMP JUMPDEST PUSH2 0x4CC DUP6 DUP6 DUP6 PUSH2 0x9D4 JUMP JUMPDEST PUSH2 0x811 PUSH2 0x56D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x822 PUSH2 0x457 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x455 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B6 SWAP1 PUSH2 0xDC9 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8A5 PUSH2 0x56D JUMP JUMPDEST SWAP1 POP PUSH2 0x37C DUP2 DUP6 DUP6 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B6 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH2 0x8E4 DUP3 PUSH1 0x0 DUP4 PUSH2 0x985 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x91D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B6 SWAP1 PUSH2 0xC82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP7 SWAP1 SUB SWAP1 SSTORE MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x975 SWAP1 DUP7 SWAP1 PUSH2 0xF0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x985 DUP4 PUSH1 0x0 DUP5 JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x996 DUP5 DUP5 PUSH2 0x508 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x9CE JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x9C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B6 SWAP1 PUSH2 0xD4C JUMP JUMPDEST PUSH2 0x9CE DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x571 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x9FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B6 SWAP1 PUSH2 0xE3F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B6 SWAP1 PUSH2 0xC3F JUMP JUMPDEST PUSH2 0xA2B DUP4 DUP4 DUP4 PUSH2 0x985 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xA64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B6 SWAP1 PUSH2 0xD83 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0xAC2 SWAP1 DUP7 SWAP1 PUSH2 0xF0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x9CE DUP5 DUP5 DUP5 PUSH2 0x985 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x43E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAFD JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x3A6 DUP3 PUSH2 0xAD5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB18 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xB21 DUP4 PUSH2 0xAD5 JUMP JUMPDEST SWAP2 POP PUSH2 0xB2F PUSH1 0x20 DUP5 ADD PUSH2 0xAD5 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB4C JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xB55 DUP5 PUSH2 0xAD5 JUMP JUMPDEST SWAP3 POP PUSH2 0xB63 PUSH1 0x20 DUP6 ADD PUSH2 0xAD5 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB85 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xB8E DUP4 PUSH2 0xAD5 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xBB1 JUMPI DUP1 DUP2 REVERT JUMPDEST POP POP DUP3 CALLDATALOAD SWAP5 PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC18 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xBFC JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xC29 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xF37 JUMPI PUSH2 0xF37 PUSH2 0xFCD JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xF57 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xF76 JUMPI PUSH2 0xF76 PUSH2 0xFCD JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xF8D JUMPI PUSH2 0xF8D PUSH2 0xFCD JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xFA6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xFC7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A DUP6 BYTE PUSH2 0x1382 SMOD 0xB7 0xB3 EXP 0xCD DUP13 ISZERO 0xC6 0xC7 DIV 0xDF 0xFB DUP16 DUP5 SWAP15 0xBE RETURN SWAP15 CALLDATASIZE CALLVALUE SWAP12 0xBA PUSH23 0x9E4FC964736F6C63430008000033000000000000000000 ",
							"sourceMap": "173:2585:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;300:73;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2158:98:1;;;:::i;:::-;;;;;;;:::i;4444:197::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3255:106::-;;;:::i;:::-;;;;;;;:::i;1207:205:5:-;;;;;;:::i;:::-;;:::i;668:26::-;;;:::i;462:64::-;;;:::i;3104:91:1:-;;;:::i;:::-;;;;;;;:::i;5854:234::-;;;;;;:::i;:::-;;:::i;258:29:5:-;;;:::i;380:73::-;;;:::i;2493:262::-;;;;;;:::i;:::-;;:::i;:::-;;3419:125:1;;;;;;:::i;:::-;;:::i;1824:101:0:-;;;:::i;1201:85::-;;;:::i;2369:102:1:-;;;:::i;574:32:5:-;;;:::i;6575:427:1:-;;;;;;:::i;:::-;;:::i;1022:177:5:-;;;;;;:::i;:::-;;:::i;710:28::-;;;:::i;622:31::-;;;:::i;221:30::-;;;:::i;3987:149:1:-;;;;;;:::i;:::-;;:::i;2074:198:0:-;;;;;;:::i;:::-;;:::i;300:73:5:-;331:42;300:73;:::o;2158:98:1:-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;4543:13;4559:12;:10;:12::i;:::-;4543:28;;4581:32;4590:5;4597:7;4606:6;4581:8;:32::i;:::-;-1:-1:-1;4630:4:1;;4444:197;-1:-1:-1;;;4444:197:1:o;3255:106::-;3342:12;;3255:106;:::o;1207:205:5:-;1305:4;1329:75;1348:6;1356:9;1367:36;1377:6;1385:9;1396:6;1367:9;:36::i;:::-;1329:18;:75::i;:::-;1322:82;;1207:205;;;;;;:::o;668:26::-;;;;:::o;462:64::-;503:23;462:64;:::o;3104:91:1:-;3186:2;3104:91;:::o;5854:234::-;5942:4;5958:13;5974:12;:10;:12::i;:::-;5958:28;;5996:64;6005:5;6012:7;6049:10;6021:25;6031:5;6038:7;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;258:29:5:-;;;-1:-1:-1;;;;;258:29:5;;:::o;380:73::-;411:42;380:73;:::o;2493:262::-;1094:13:0;:11;:13::i;:::-;2622:12:5::1;:28:::0;;;;2661:11:::1;:26:::0;;;;2698:7:::1;:18:::0;2727:8:::1;:20:::0;2493:262::o;3419:125:1:-;-1:-1:-1;;;;;3519:18:1;;3493:7;3519:18;;;;;;;;;;;3419:125;;;;:::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;1201:85::-;1273:6;;-1:-1:-1;;;;;1273:6:0;1201:85;:::o;2369:102:1:-;2425:13;2457:7;2450:14;;;;;:::i;574:32:5:-;;;;:::o;6575:427:1:-;6668:4;6684:13;6700:12;:10;:12::i;:::-;6684:28;;6722:24;6749:25;6759:5;6766:7;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:1;;;;;;;:::i;:::-;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;:::-;-1:-1:-1;6991:4:1;;6575:427;-1:-1:-1;;;;6575:427:1:o;1022:177:5:-;1100:4;1124:67;1139:9;1150:40;1160:10;1172:9;1183:6;1150:9;:40::i;:::-;1124:14;:67::i;710:28::-;;;;:::o;622:31::-;;;;:::o;221:30::-;;;-1:-1:-1;;;;;221:30:5;;:::o;3987:149:1:-;-1:-1:-1;;;;;4102:18:1;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;2074:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:0;::::1;2154:73;;;;-1:-1:-1::0;;;2154:73:0::1;;;;;;;:::i;:::-;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;640:96:4:-;719:10;640:96;:::o;10457:340:1:-;-1:-1:-1;;;;;10558:19:1;;10550:68;;;;-1:-1:-1;;;10550:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;10636:21:1;;10628:68;;;;-1:-1:-1;;;10628:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;10707:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;;:36;;;10758:32;;;;;10737:6;;10758:32;:::i;:::-;;;;;;;;10457:340;;;:::o;1420:1065:5:-;1508:7;-1:-1:-1;;;;;1532:17:5;;331:42;1532:17;;:38;;-1:-1:-1;;;;;;1553:17:5;;;1532:38;:67;;;-1:-1:-1;1584:15:5;;-1:-1:-1;;;;;1574:25:5;;;1584:15;;1574:25;1532:67;:95;;;-1:-1:-1;1613:14:5;;-1:-1:-1;;;;;1603:24:5;;;1613:14;;1603:24;1532:95;1528:141;;;-1:-1:-1;1651:6:5;1644:13;;1528:141;1681:26;1734:5;1719:12;;1710:6;:21;;;;:::i;:::-;:29;;;;:::i;:::-;1681:58;;1750:25;1801:5;1787:11;;1778:6;:20;;;;:::i;:::-;:28;;;;:::i;:::-;1750:56;;1817:18;1858:5;1847:8;;1838:6;:17;;;;:::i;:::-;:25;;;;:::i;:::-;1893:15;;1817:46;;-1:-1:-1;;;;;;1880:28:5;;;1893:15;;1880:28;1876:112;;1940:15;;1925:51;;-1:-1:-1;;;;;1940:15:5;1957:18;1925:14;:51::i;:::-;;1876:112;2017:14;;-1:-1:-1;;;;;2004:27:5;;;2017:14;;2004:27;2000:109;;2063:14;;2048:49;;-1:-1:-1;;;;;2063:14:5;2079:17;2048:14;:49::i;:::-;;2000:109;2121:25;2127:6;2135:10;2121:5;:25::i;:::-;2209:15;;2159:21;;-1:-1:-1;;;;;2199:25:5;;;2209:15;;2199:25;;;;:53;;-1:-1:-1;2238:14:5;;-1:-1:-1;;;;;2228:24:5;;;2238:14;;2228:24;;2199:53;2195:187;;;2304:5;2294:7;;2285:6;:16;;;;:::i;:::-;:24;;;;:::i;:::-;2339:15;;2269:40;;-1:-1:-1;2324:46:5;;-1:-1:-1;;;;;2339:15:5;2269:40;2324:14;:46::i;:::-;;2195:187;2464:13;2451:10;2431:17;2401:27;2410:18;2401:6;:27;:::i;:::-;:47;;;;:::i;:::-;:60;;;;:::i;:::-;:76;;;;:::i;:::-;2394:83;1420:1065;-1:-1:-1;;;;;;;;1420:1065:5:o;5203:256:1:-;5300:4;5316:15;5334:12;:10;:12::i;:::-;5316:30;;5356:38;5372:4;5378:7;5387:6;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;1359:130:0:-;1433:12;:10;:12::i;:::-;-1:-1:-1;;;;;1422:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1422:23:0;;1414:68;;;;-1:-1:-1;;;1414:68:0;;;;;;;:::i;2426:187::-;2518:6;;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2426:187;;:::o;3740:189:1:-;3819:4;3835:13;3851:12;:10;:12::i;:::-;3835:28;;3873;3883:5;3890:2;3894:6;3873:9;:28::i;9375:659::-;-1:-1:-1;;;;;9458:21:1;;9450:67;;;;-1:-1:-1;;;9450:67:1;;;;;;;:::i;:::-;9528:49;9549:7;9566:1;9570:6;9528:20;:49::i;:::-;-1:-1:-1;;;;;9613:18:1;;9588:22;9613:18;;;;;;;;;;;9649:24;;;;9641:71;;;;-1:-1:-1;;;9641:71:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;9746:18:1;;:9;:18;;;;;;;;;;;9767:23;;;9746:44;;9883:12;:22;;;;;;;9931:37;9746:9;;:18;9931:37;;;;9784:6;;9931:37;:::i;:::-;;;;;;;;9979:48;9999:7;10016:1;10020:6;9979:48;9375:659;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:1;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:1;;;;;;;:::i;:::-;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11078:411;;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:1;;7544:68;;;;-1:-1:-1;;;7544:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;7630:16:1;;7622:64;;;;-1:-1:-1;;;7622:64:1;;;;;;;:::i;:::-;7697:38;7718:4;7724:2;7728:6;7697:20;:38::i;:::-;-1:-1:-1;;;;;7768:15:1;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;7899:15:1;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;;;;;7931:6;;8163:26;:::i;:::-;;;;;;;;8200:37;8220:4;8226:2;8230:6;8200:19;:37::i;14:175:6:-;84:20;;-1:-1:-1;;;;;133:31:6;;123:42;;113:2;;179:1;176;169:12;194:198;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;397:274::-;;;526:2;514:9;505:7;501:23;497:32;494:2;;;547:6;539;532:22;494:2;575:31;596:9;575:31;:::i;:::-;565:41;;625:40;661:2;650:9;646:18;625:40;:::i;:::-;615:50;;484:187;;;;;:::o;676:342::-;;;;822:2;810:9;801:7;797:23;793:32;790:2;;;843:6;835;828:22;790:2;871:31;892:9;871:31;:::i;:::-;861:41;;921:40;957:2;946:9;942:18;921:40;:::i;:::-;911:50;;1008:2;997:9;993:18;980:32;970:42;;780:238;;;;;:::o;1023:266::-;;;1152:2;1140:9;1131:7;1127:23;1123:32;1120:2;;;1173:6;1165;1158:22;1120:2;1201:31;1222:9;1201:31;:::i;:::-;1191:41;1279:2;1264:18;;;;1251:32;;-1:-1:-1;;;1110:179:6:o;1294:395::-;;;;;1457:3;1445:9;1436:7;1432:23;1428:33;1425:2;;;1479:6;1471;1464:22;1425:2;-1:-1:-1;;1507:23:6;;;1577:2;1562:18;;1549:32;;-1:-1:-1;1628:2:6;1613:18;;1600:32;;1679:2;1664:18;1651:32;;-1:-1:-1;1415:274:6;-1:-1:-1;1415:274:6:o;1694:203::-;-1:-1:-1;;;;;1858:32:6;;;;1840:51;;1828:2;1813:18;;1795:102::o;1902:187::-;2067:14;;2060:22;2042:41;;2030:2;2015:18;;1997:92::o;2094:603::-;;2235:2;2264;2253:9;2246:21;2296:6;2290:13;2339:6;2334:2;2323:9;2319:18;2312:34;2364:4;2377:140;2391:6;2388:1;2385:13;2377:140;;;2486:14;;;2482:23;;2476:30;2452:17;;;2471:2;2448:26;2441:66;2406:10;;2377:140;;;2535:6;2532:1;2529:13;2526:2;;;2605:4;2600:2;2591:6;2580:9;2576:22;2572:31;2565:45;2526:2;-1:-1:-1;2681:2:6;2660:15;-1:-1:-1;;2656:29:6;2641:45;;;;2688:2;2637:54;;2215:482;-1:-1:-1;;;2215:482:6:o;2702:399::-;2904:2;2886:21;;;2943:2;2923:18;;;2916:30;2982:34;2977:2;2962:18;;2955:62;-1:-1:-1;;;3048:2:6;3033:18;;3026:33;3091:3;3076:19;;2876:225::o;3106:398::-;3308:2;3290:21;;;3347:2;3327:18;;;3320:30;3386:34;3381:2;3366:18;;3359:62;-1:-1:-1;;;3452:2:6;3437:18;;3430:32;3494:3;3479:19;;3280:224::o;3509:402::-;3711:2;3693:21;;;3750:2;3730:18;;;3723:30;3789:34;3784:2;3769:18;;3762:62;-1:-1:-1;;;3855:2:6;3840:18;;3833:36;3901:3;3886:19;;3683:228::o;3916:398::-;4118:2;4100:21;;;4157:2;4137:18;;;4130:30;4196:34;4191:2;4176:18;;4169:62;-1:-1:-1;;;4262:2:6;4247:18;;4240:32;4304:3;4289:19;;4090:224::o;4319:353::-;4521:2;4503:21;;;4560:2;4540:18;;;4533:30;4599:31;4594:2;4579:18;;4572:59;4663:2;4648:18;;4493:179::o;4677:402::-;4879:2;4861:21;;;4918:2;4898:18;;;4891:30;4957:34;4952:2;4937:18;;4930:62;-1:-1:-1;;;5023:2:6;5008:18;;5001:36;5069:3;5054:19;;4851:228::o;5084:356::-;5286:2;5268:21;;;5305:18;;;5298:30;5364:34;5359:2;5344:18;;5337:62;5431:2;5416:18;;5258:182::o;5445:397::-;5647:2;5629:21;;;5686:2;5666:18;;;5659:30;5725:34;5720:2;5705:18;;5698:62;-1:-1:-1;;;5791:2:6;5776:18;;5769:31;5832:3;5817:19;;5619:223::o;5847:401::-;6049:2;6031:21;;;6088:2;6068:18;;;6061:30;6127:34;6122:2;6107:18;;6100:62;-1:-1:-1;;;6193:2:6;6178:18;;6171:35;6238:3;6223:19;;6021:227::o;6253:400::-;6455:2;6437:21;;;6494:2;6474:18;;;6467:30;6533:34;6528:2;6513:18;;6506:62;-1:-1:-1;;;6599:2:6;6584:18;;6577:34;6643:3;6628:19;;6427:226::o;6658:401::-;6860:2;6842:21;;;6899:2;6879:18;;;6872:30;6938:34;6933:2;6918:18;;6911:62;-1:-1:-1;;;7004:2:6;6989:18;;6982:35;7049:3;7034:19;;6832:227::o;7064:177::-;7210:25;;;7198:2;7183:18;;7165:76::o;7246:184::-;7418:4;7406:17;;;;7388:36;;7376:2;7361:18;;7343:87::o;7435:128::-;;7506:1;7502:6;7499:1;7496:13;7493:2;;;7512:18;;:::i;:::-;-1:-1:-1;7548:9:6;;7483:80::o;7568:217::-;;7634:1;7624:2;;-1:-1:-1;;;7659:31:6;;7713:4;7710:1;7703:15;7741:4;7666:1;7731:15;7624:2;-1:-1:-1;7770:9:6;;7614:171::o;7790:168::-;;7896:1;7892;7888:6;7884:14;7881:1;7878:21;7873:1;7866:9;7859:17;7855:45;7852:2;;;7903:18;;:::i;:::-;-1:-1:-1;7943:9:6;;7842:116::o;7963:125::-;;8031:1;8028;8025:8;8022:2;;;8036:18;;:::i;:::-;-1:-1:-1;8073:9:6;;8012:76::o;8093:380::-;8178:1;8168:12;;8225:1;8215:12;;;8236:2;;8290:4;8282:6;8278:17;8268:27;;8236:2;8343;8335:6;8332:14;8312:18;8309:38;8306:2;;;8389:10;8384:3;8380:20;8377:1;8370:31;8424:4;8421:1;8414:15;8452:4;8449:1;8442:15;8306:2;;8148:325;;;:::o;8478:127::-;8539:10;8534:3;8530:20;8527:1;8520:31;8570:4;8567:1;8560:15;8594:4;8591:1;8584:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "824200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEAD()": "276",
								"INITIAL_SUPPLY()": "251",
								"ZERO()": "363",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "22664",
								"balanceOf(address)": "infinite",
								"burnRate()": "1072",
								"decimals()": "285",
								"decreaseAllowance(address,uint256)": "23778",
								"increaseAllowance(address,uint256)": "23740",
								"liquidityFee()": "1139",
								"liquidityWallet()": "1158",
								"name()": "infinite",
								"owner()": "1137",
								"renounceOwnership()": "infinite",
								"sellFee()": "1162",
								"setFees(uint256,uint256,uint256,uint256)": "81398",
								"symbol()": "infinite",
								"totalSupply()": "1118",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "23858",
								"treasuryFee()": "1094",
								"treasuryWallet()": "1159"
							},
							"internal": {
								"applyFees(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 604,
									"end": 606,
									"name": "PUSH",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 574,
									"end": 606,
									"name": "PUSH",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 574,
									"end": 606,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 651,
									"end": 653,
									"name": "PUSH",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 622,
									"end": 653,
									"name": "PUSH",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 622,
									"end": 653,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 693,
									"end": 694,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 668,
									"end": 694,
									"name": "PUSH",
									"source": 5,
									"value": "A"
								},
								{
									"begin": 668,
									"end": 694,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 736,
									"end": 738,
									"name": "PUSH",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 710,
									"end": 738,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 710,
									"end": 738,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "5B544553545D204465666C6174696F6E617279204D656D6520546F6B656E5D00"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2226AA1819"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 880,
									"end": 895,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 880,
									"end": 914,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 880,
									"end": 914,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 880,
									"end": 914,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 880,
									"end": 914,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 880,
									"end": 914,
									"name": "AND",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 880,
									"end": 914,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 880,
									"end": 914,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 880,
									"end": 914,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 880,
									"end": 914,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 880,
									"end": 914,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 880,
									"end": 914,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 880,
									"end": 914,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 880,
									"end": 914,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 925,
									"end": 939,
									"name": "PUSH",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 925,
									"end": 957,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 925,
									"end": 957,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 925,
									"end": 957,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 925,
									"end": 957,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 925,
									"end": 957,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 925,
									"end": 957,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 925,
									"end": 957,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 925,
									"end": 957,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 925,
									"end": 957,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 925,
									"end": 957,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 925,
									"end": 957,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 925,
									"end": 957,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 925,
									"end": 957,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 925,
									"end": 957,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 968,
									"end": 1006,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 968,
									"end": 1006,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 974,
									"end": 989,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 503,
									"end": 526,
									"name": "PUSH",
									"source": 5,
									"value": "33B2E3C9FD0803CE8000000"
								},
								{
									"begin": 968,
									"end": 973,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 968,
									"end": 1006,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 968,
									"end": 1006,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 968,
									"end": 1006,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 756,
									"end": 1014,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 8520,
									"end": 9055,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 8520,
									"end": 9055,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8603,
									"end": 8624,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8603,
									"end": 8624,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8671,
									"end": 8720,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 8700,
									"end": 8701,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8704,
									"end": 8711,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8713,
									"end": 8719,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8671,
									"end": 8691,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 8671,
									"end": 8720,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 8671,
									"end": 8720,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 8671,
									"end": 8720,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8747,
									"end": 8753,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8731,
									"end": 8743,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 8731,
									"end": 8743,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8908,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "PUSH",
									"source": 1,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8921,
									"end": 8927,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 8921,
									"end": 8927,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 9000,
									"end": 9048,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 9028,
									"end": 9029,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9032,
									"end": 9039,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9041,
									"end": 9047,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9000,
									"end": 9019,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 9000,
									"end": 9048,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 9000,
									"end": 9048,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 9000,
									"end": 9048,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8520,
									"end": 9055,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8520,
									"end": 9055,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8520,
									"end": 9055,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 12073,
									"end": 12164,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 12073,
									"end": 12164,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12073,
									"end": 12164,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12073,
									"end": 12164,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12073,
									"end": 12164,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12073,
									"end": 12164,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "tag",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "tag",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 14,
									"end": 193,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 14,
									"end": 193,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 95,
									"end": 108,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 95,
									"end": 108,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 137,
									"end": 168,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 137,
									"end": 168,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 127,
									"end": 169,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 127,
									"end": 169,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 117,
									"end": 119,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 117,
									"end": 119,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 183,
									"end": 184,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 180,
									"end": 181,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 173,
									"end": 185,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 117,
									"end": 119,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 117,
									"end": 119,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 76,
									"end": 193,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 76,
									"end": 193,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 76,
									"end": 193,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 76,
									"end": 193,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 198,
									"end": 505,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 198,
									"end": 505,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 198,
									"end": 505,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 505,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 338,
									"end": 340,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 326,
									"end": 335,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 317,
									"end": 324,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 313,
									"end": 336,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 309,
									"end": 341,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 306,
									"end": 308,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 306,
									"end": 308,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 306,
									"end": 308,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 359,
									"end": 365,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 351,
									"end": 357,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 344,
									"end": 366,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 306,
									"end": 308,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 306,
									"end": 308,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 387,
									"end": 429,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 419,
									"end": 428,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 387,
									"end": 429,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 387,
									"end": 429,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 387,
									"end": 429,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 387,
									"end": 429,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 377,
									"end": 429,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 377,
									"end": 429,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 448,
									"end": 499,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 495,
									"end": 497,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 484,
									"end": 493,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 480,
									"end": 498,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 448,
									"end": 499,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 448,
									"end": 499,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 448,
									"end": 499,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 448,
									"end": 499,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 438,
									"end": 499,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 438,
									"end": 499,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 296,
									"end": 505,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 296,
									"end": 505,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 296,
									"end": 505,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 296,
									"end": 505,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 296,
									"end": 505,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 296,
									"end": 505,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 510,
									"end": 865,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 510,
									"end": 865,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 712,
									"end": 714,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 694,
									"end": 715,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 694,
									"end": 715,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 694,
									"end": 715,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 731,
									"end": 749,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 731,
									"end": 749,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 731,
									"end": 749,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 724,
									"end": 754,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 790,
									"end": 823,
									"name": "PUSH",
									"source": 6,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 785,
									"end": 787,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 770,
									"end": 788,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 763,
									"end": 824,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 856,
									"end": 858,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 841,
									"end": 859,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 841,
									"end": 859,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 684,
									"end": 865,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 870,
									"end": 1047,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 870,
									"end": 1047,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1016,
									"end": 1041,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1016,
									"end": 1041,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1016,
									"end": 1041,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1004,
									"end": 1006,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 989,
									"end": 1007,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 989,
									"end": 1007,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 971,
									"end": 1047,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1052,
									"end": 1281,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1052,
									"end": 1281,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1052,
									"end": 1281,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1123,
									"end": 1124,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1119,
									"end": 1125,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1116,
									"end": 1117,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1113,
									"end": 1126,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1110,
									"end": 1112,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1110,
									"end": 1112,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 1110,
									"end": 1112,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1149,
									"end": 1182,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1149,
									"end": 1182,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 1209,
									"name": "PUSH",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1202,
									"end": 1203,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1195,
									"end": 1210,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1235,
									"end": 1239,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1156,
									"end": 1159,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1223,
									"end": 1240,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1110,
									"end": 1112,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 1110,
									"end": 1112,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1266,
									"end": 1275,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1266,
									"end": 1275,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1100,
									"end": 1281,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1286,
									"end": 1666,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1286,
									"end": 1666,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1372,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1361,
									"end": 1373,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1361,
									"end": 1373,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1418,
									"end": 1419,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1408,
									"end": 1420,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1408,
									"end": 1420,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1408,
									"end": 1420,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1429,
									"end": 1431,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1429,
									"end": 1431,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1483,
									"end": 1487,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 1475,
									"end": 1481,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1471,
									"end": 1488,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1461,
									"end": 1488,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1461,
									"end": 1488,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1429,
									"end": 1431,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1429,
									"end": 1431,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1536,
									"end": 1538,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1528,
									"end": 1534,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1525,
									"end": 1539,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1505,
									"end": 1523,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1502,
									"end": 1540,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1499,
									"end": 1501,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1499,
									"end": 1501,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 1499,
									"end": 1501,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1592,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 1577,
									"end": 1580,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 1573,
									"end": 1593,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1570,
									"end": 1571,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1563,
									"end": 1594,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1617,
									"end": 1621,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1614,
									"end": 1615,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1607,
									"end": 1622,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1645,
									"end": 1649,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1642,
									"end": 1643,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1635,
									"end": 1650,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1499,
									"end": 1501,
									"name": "tag",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 1499,
									"end": 1501,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1499,
									"end": 1501,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1341,
									"end": 1666,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1341,
									"end": 1666,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1341,
									"end": 1666,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1341,
									"end": 1666,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1341,
									"end": 1666,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1341,
									"end": 1666,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 173,
									"end": 2758,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204a851a61138207b7b30acd8c15c6c704dffb8f849ebef39e36349bba769e4fc964736f6c63430008000033",
									".code": [
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "BED99850"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "CC32D176"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "D4698016"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "F2FDE38B"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "715018A6"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "98118CB4"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "A457C2D7"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "2FF2E9DC"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "2FF2E9DC"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "39509351"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "4626402B"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "58FA63CA"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "6FCBA377"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "3FD2A45"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "2B14CA56"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 2758,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 300,
											"end": 373,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 300,
											"end": 373,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 300,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 300,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 300,
											"end": 373,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 300,
											"end": 373,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 300,
											"end": 373,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 300,
											"end": 373,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 300,
											"end": 373,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 300,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 300,
											"end": 373,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 300,
											"end": 373,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 300,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 300,
											"end": 373,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 300,
											"end": 373,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 300,
											"end": 373,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 300,
											"end": 373,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 300,
											"end": 373,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 300,
											"end": 373,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 300,
											"end": 373,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 300,
											"end": 373,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 300,
											"end": 373,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 300,
											"end": 373,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1207,
											"end": 1412,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1207,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1207,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1207,
											"end": 1412,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1412,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1207,
											"end": 1412,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1207,
											"end": 1412,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1207,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1207,
											"end": 1412,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 668,
											"end": 694,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 668,
											"end": 694,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 668,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 668,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 668,
											"end": 694,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 462,
											"end": 526,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 462,
											"end": 526,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 462,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 462,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 462,
											"end": 526,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 258,
											"end": 287,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 258,
											"end": 287,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 258,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 258,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 258,
											"end": 287,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 380,
											"end": 453,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 380,
											"end": 453,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 380,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 380,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 380,
											"end": 453,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2493,
											"end": 2755,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 2493,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2493,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2493,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 2493,
											"end": 2755,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2493,
											"end": 2755,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2493,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 2493,
											"end": 2755,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2493,
											"end": 2755,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 2493,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2493,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2493,
											"end": 2755,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2493,
											"end": 2755,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2493,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2493,
											"end": 2755,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 606,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 574,
											"end": 606,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 574,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 574,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 574,
											"end": 606,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1022,
											"end": 1199,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1022,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1022,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 1022,
											"end": 1199,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1199,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1022,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1022,
											"end": 1199,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1022,
											"end": 1199,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 1022,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 1022,
											"end": 1199,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 710,
											"end": 738,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 710,
											"end": 738,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 710,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 710,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 710,
											"end": 738,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 622,
											"end": 653,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 622,
											"end": 653,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 622,
											"end": 653,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 622,
											"end": 653,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 622,
											"end": 653,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 221,
											"end": 251,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 221,
											"end": 251,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 221,
											"end": 251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 221,
											"end": 251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 221,
											"end": 251,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 300,
											"end": 373,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 300,
											"end": 373,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 331,
											"end": 373,
											"name": "PUSH",
											"source": 5,
											"value": "DEAD"
										},
										{
											"begin": 300,
											"end": 373,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 300,
											"end": 373,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2244,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4527,
											"end": 4531,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4543,
											"end": 4556,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4559,
											"end": 4571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 4559,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 4559,
											"end": 4571,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4559,
											"end": 4571,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 4559,
											"end": 4571,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4543,
											"end": 4571,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4543,
											"end": 4571,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 4590,
											"end": 4595,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4597,
											"end": 4604,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4581,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4630,
											"end": 4634,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4630,
											"end": 4634,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1207,
											"end": 1412,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1207,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1305,
											"end": 1309,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1356,
											"end": 1365,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1403,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 1377,
											"end": 1383,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1385,
											"end": 1394,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1396,
											"end": 1402,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 1367,
											"end": 1403,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1367,
											"end": 1403,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 1367,
											"end": 1403,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1329,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 1329,
											"end": 1404,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1329,
											"end": 1404,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1329,
											"end": 1404,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1404,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1404,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1412,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 1207,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1412,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1412,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1412,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1412,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1412,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1412,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 668,
											"end": 694,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 668,
											"end": 694,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 668,
											"end": 694,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 668,
											"end": 694,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 668,
											"end": 694,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 668,
											"end": 694,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 462,
											"end": 526,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 462,
											"end": 526,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 503,
											"end": 526,
											"name": "PUSH",
											"source": 5,
											"value": "33B2E3C9FD0803CE8000000"
										},
										{
											"begin": 462,
											"end": 526,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 462,
											"end": 526,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5946,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5958,
											"end": 5971,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5974,
											"end": 5986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 5974,
											"end": 5984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 5974,
											"end": 5986,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5974,
											"end": 5986,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 5974,
											"end": 5986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5958,
											"end": 5986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5958,
											"end": 5986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5996,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 6005,
											"end": 6010,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6059,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 6031,
											"end": 6036,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6045,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5996,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 5996,
											"end": 6060,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 258,
											"end": 287,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 258,
											"end": 287,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 258,
											"end": 287,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 258,
											"end": 287,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 258,
											"end": 287,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 258,
											"end": 287,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 258,
											"end": 287,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 380,
											"end": 453,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 380,
											"end": 453,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 380,
											"end": 453,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 380,
											"end": 453,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2493,
											"end": 2755,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2493,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2622,
											"end": 2634,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2622,
											"end": 2650,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2650,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2650,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2650,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2661,
											"end": 2672,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2661,
											"end": 2687,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2661,
											"end": 2687,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2661,
											"end": 2687,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2661,
											"end": 2687,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2698,
											"end": 2705,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 2735,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 2727,
											"end": 2747,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2493,
											"end": 2755,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1888,
											"end": 1918,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1888,
											"end": 1918,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1888,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2457,
											"end": 2464,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 606,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 574,
											"end": 606,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 574,
											"end": 606,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 574,
											"end": 606,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 574,
											"end": 606,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 574,
											"end": 606,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6684,
											"end": 6697,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6700,
											"end": 6712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 6700,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 6700,
											"end": 6712,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6700,
											"end": 6712,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 6700,
											"end": 6712,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6684,
											"end": 6712,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6684,
											"end": 6712,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6722,
											"end": 6746,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 6759,
											"end": 6764,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6766,
											"end": 6773,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6812,
											"end": 6827,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6808,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 6912,
											"end": 6917,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6919,
											"end": 6926,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6947,
											"end": 6962,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 6944,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 6962,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6903,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6991,
											"end": 6995,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6991,
											"end": 6995,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1022,
											"end": 1199,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 1022,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1100,
											"end": 1104,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1124,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 1139,
											"end": 1148,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1150,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 1160,
											"end": 1170,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1172,
											"end": 1181,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1183,
											"end": 1189,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1150,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 1150,
											"end": 1190,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1150,
											"end": 1190,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 1150,
											"end": 1190,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1124,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 1124,
											"end": 1191,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 710,
											"end": 738,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 710,
											"end": 738,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 710,
											"end": 738,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 710,
											"end": 738,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 710,
											"end": 738,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 710,
											"end": 738,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 622,
											"end": 653,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 622,
											"end": 653,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 622,
											"end": 653,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 622,
											"end": 653,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 622,
											"end": 653,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 622,
											"end": 653,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 221,
											"end": 251,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 221,
											"end": 251,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 221,
											"end": 251,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 221,
											"end": 251,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 221,
											"end": 251,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 221,
											"end": 251,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 221,
											"end": 251,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4076,
											"end": 4083,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4113,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2256,
											"end": 2264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2237,
											"end": 2265,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2237,
											"end": 2265,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2237,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10718,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10737,
											"end": 10743,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10737,
											"end": 10743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1420,
											"end": 2485,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 1420,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1508,
											"end": 1515,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1532,
											"end": 1549,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1532,
											"end": 1549,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 331,
											"end": 373,
											"name": "PUSH",
											"source": 5,
											"value": "DEAD"
										},
										{
											"begin": 1532,
											"end": 1549,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1532,
											"end": 1549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1532,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 1532,
											"end": 1570,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1532,
											"end": 1570,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 1532,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1532,
											"end": 1599,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1532,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 1532,
											"end": 1599,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1584,
											"end": 1599,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1584,
											"end": 1599,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1574,
											"end": 1599,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1574,
											"end": 1599,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1574,
											"end": 1599,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1584,
											"end": 1599,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1584,
											"end": 1599,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1574,
											"end": 1599,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1532,
											"end": 1599,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 1532,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1532,
											"end": 1627,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1532,
											"end": 1627,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 1532,
											"end": 1627,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1613,
											"end": 1627,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1613,
											"end": 1627,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1603,
											"end": 1627,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1603,
											"end": 1627,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1603,
											"end": 1627,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1627,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1627,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1603,
											"end": 1627,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1532,
											"end": 1627,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 1532,
											"end": 1627,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1528,
											"end": 1669,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1528,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 1528,
											"end": 1669,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1651,
											"end": 1657,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 1644,
											"end": 1657,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1528,
											"end": 1669,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 1528,
											"end": 1669,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1681,
											"end": 1707,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1734,
											"end": 1739,
											"name": "PUSH",
											"source": 5,
											"value": "2710"
										},
										{
											"begin": 1719,
											"end": 1731,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1719,
											"end": 1731,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 1710,
											"end": 1731,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1731,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 1710,
											"end": 1731,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1710,
											"end": 1731,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 1710,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1739,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 1710,
											"end": 1739,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1739,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1739,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 1710,
											"end": 1739,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1710,
											"end": 1739,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 1710,
											"end": 1739,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1681,
											"end": 1739,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1681,
											"end": 1739,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1775,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1801,
											"end": 1806,
											"name": "PUSH",
											"source": 5,
											"value": "2710"
										},
										{
											"begin": 1787,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1787,
											"end": 1798,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1784,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 1778,
											"end": 1798,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1798,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 1778,
											"end": 1798,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1778,
											"end": 1798,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 1778,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 1778,
											"end": 1806,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1806,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 1778,
											"end": 1806,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1778,
											"end": 1806,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 1778,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1835,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1863,
											"name": "PUSH",
											"source": 5,
											"value": "2710"
										},
										{
											"begin": 1847,
											"end": 1855,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 1847,
											"end": 1855,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1844,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 1838,
											"end": 1855,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1855,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 1838,
											"end": 1855,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1838,
											"end": 1855,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 1838,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1893,
											"end": 1908,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1893,
											"end": 1908,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1863,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1863,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1880,
											"end": 1908,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1880,
											"end": 1908,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1880,
											"end": 1908,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1893,
											"end": 1908,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1893,
											"end": 1908,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1880,
											"end": 1908,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1876,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 1876,
											"end": 1988,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1955,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1940,
											"end": 1955,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1925,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 1925,
											"end": 1976,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1940,
											"end": 1955,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1957,
											"end": 1975,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1925,
											"end": 1939,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 1925,
											"end": 1976,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1925,
											"end": 1976,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 1925,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1925,
											"end": 1976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1876,
											"end": 1988,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 1876,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2004,
											"end": 2031,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2031,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2031,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2031,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 2000,
											"end": 2109,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2063,
											"end": 2077,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2063,
											"end": 2077,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2097,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 2048,
											"end": 2097,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2063,
											"end": 2077,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2079,
											"end": 2096,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2062,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2048,
											"end": 2097,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2048,
											"end": 2097,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 2048,
											"end": 2097,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2097,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2109,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 2000,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2121,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 2127,
											"end": 2133,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2145,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2121,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 2121,
											"end": 2146,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2121,
											"end": 2146,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 2121,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2209,
											"end": 2224,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2209,
											"end": 2224,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2159,
											"end": 2180,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2159,
											"end": 2180,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2209,
											"end": 2224,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2209,
											"end": 2224,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2199,
											"end": 2224,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2199,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 2199,
											"end": 2252,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2238,
											"end": 2252,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2238,
											"end": 2252,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2228,
											"end": 2252,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2228,
											"end": 2252,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2228,
											"end": 2252,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2238,
											"end": 2252,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2238,
											"end": 2252,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2228,
											"end": 2252,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2228,
											"end": 2252,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2199,
											"end": 2252,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 2199,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2195,
											"end": 2382,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2195,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 2195,
											"end": 2382,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2309,
											"name": "PUSH",
											"source": 5,
											"value": "2710"
										},
										{
											"begin": 2294,
											"end": 2301,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 2294,
											"end": 2301,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2285,
											"end": 2291,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2285,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 2285,
											"end": 2301,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2285,
											"end": 2301,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2285,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 2285,
											"end": 2301,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2285,
											"end": 2301,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 2285,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2285,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 2285,
											"end": 2309,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2285,
											"end": 2309,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2285,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 2285,
											"end": 2309,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2285,
											"end": 2309,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 2285,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2354,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2339,
											"end": 2354,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2309,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2309,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2324,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 2324,
											"end": 2370,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2339,
											"end": 2354,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2309,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2324,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2324,
											"end": 2370,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2324,
											"end": 2370,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 2324,
											"end": 2370,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2324,
											"end": 2370,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2195,
											"end": 2382,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 2195,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2464,
											"end": 2477,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2461,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2448,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2401,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 2410,
											"end": 2428,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2401,
											"end": 2407,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 2401,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 2401,
											"end": 2428,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2401,
											"end": 2428,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 2401,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2401,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 2401,
											"end": 2448,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2401,
											"end": 2448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2401,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 2401,
											"end": 2448,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2401,
											"end": 2448,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 2401,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2401,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 2401,
											"end": 2461,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2401,
											"end": 2461,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2401,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 2401,
											"end": 2461,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2401,
											"end": 2461,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 2401,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2401,
											"end": 2477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 2401,
											"end": 2477,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2401,
											"end": 2477,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2401,
											"end": 2477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 2401,
											"end": 2477,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2401,
											"end": 2477,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 2401,
											"end": 2477,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2394,
											"end": 2477,
											"name": "SWAP9",
											"source": 5
										},
										{
											"begin": 1420,
											"end": 2485,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1420,
											"end": 2485,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5300,
											"end": 5304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5316,
											"end": 5331,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5334,
											"end": 5346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 5334,
											"end": 5344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 5334,
											"end": 5346,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5334,
											"end": 5346,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 5334,
											"end": 5346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5316,
											"end": 5346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5316,
											"end": 5346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 5372,
											"end": 5376,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5378,
											"end": 5385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5393,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5356,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 5414,
											"end": 5418,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5422,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5424,
											"end": 5430,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5404,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3819,
											"end": 3823,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3835,
											"end": 3848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3851,
											"end": 3863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 3851,
											"end": 3861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 3851,
											"end": 3863,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3851,
											"end": 3863,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 3851,
											"end": 3863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3835,
											"end": 3863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3835,
											"end": 3863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3873,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 3883,
											"end": 3888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3890,
											"end": 3892,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3894,
											"end": 3900,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3873,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 3873,
											"end": 3901,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9375,
											"end": 10034,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 9375,
											"end": 10034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9458,
											"end": 9479,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9458,
											"end": 9479,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9528,
											"end": 9577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 9549,
											"end": 9556,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9566,
											"end": 9567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9570,
											"end": 9576,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9528,
											"end": 9548,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 9528,
											"end": 9577,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9528,
											"end": 9577,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 9528,
											"end": 9577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9588,
											"end": 9610,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9649,
											"end": 9673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9649,
											"end": 9673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9649,
											"end": 9673,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9649,
											"end": 9673,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9767,
											"end": 9790,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9767,
											"end": 9790,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9767,
											"end": 9790,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9790,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9895,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9755,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9755,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9784,
											"end": 9790,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9784,
											"end": 9790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 9979,
											"end": 10027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 9999,
											"end": 10006,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10016,
											"end": 10017,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10020,
											"end": 10026,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9979,
											"end": 10027,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 9979,
											"end": 10027,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9375,
											"end": 10034,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9375,
											"end": 10034,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9375,
											"end": 10034,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9375,
											"end": 10034,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11202,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 11215,
											"end": 11220,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11222,
											"end": 11229,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11205,
											"end": 11214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11244,
											"end": 11260,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11244,
											"end": 11281,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11325,
											"end": 11331,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11305,
											"end": 11321,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 11416,
											"end": 11421,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11423,
											"end": 11430,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11451,
											"end": 11457,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11432,
											"end": 11448,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11432,
											"end": 11457,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11407,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7697,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 7718,
											"end": 7722,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7724,
											"end": 7726,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7728,
											"end": 7734,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7697,
											"end": 7717,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 7697,
											"end": 7735,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7697,
											"end": 7735,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 7697,
											"end": 7735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7746,
											"end": 7765,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7908,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7931,
											"end": 7937,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7931,
											"end": 7937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 8200,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 8220,
											"end": 8224,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8226,
											"end": 8228,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8230,
											"end": 8236,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8200,
											"end": 8219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 8200,
											"end": 8237,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 189,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 14,
											"end": 189,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 84,
											"end": 104,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 84,
											"end": 104,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 133,
											"end": 164,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 133,
											"end": 164,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 123,
											"end": 165,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 123,
											"end": 165,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 113,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 113,
											"end": 115,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 179,
											"end": 180,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 177,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 169,
											"end": 181,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 194,
											"end": 392,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 194,
											"end": 392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 194,
											"end": 392,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 308,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 294,
											"end": 303,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 285,
											"end": 292,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 281,
											"end": 304,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 277,
											"end": 309,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 274,
											"end": 276,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 274,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 274,
											"end": 276,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 327,
											"end": 333,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 319,
											"end": 325,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 312,
											"end": 334,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 274,
											"end": 276,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 274,
											"end": 276,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 355,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 376,
											"end": 385,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 355,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 397,
											"end": 671,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 397,
											"end": 671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 397,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 397,
											"end": 671,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 526,
											"end": 528,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 514,
											"end": 523,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 505,
											"end": 512,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 501,
											"end": 524,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 497,
											"end": 529,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 494,
											"end": 496,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 494,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 494,
											"end": 496,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 547,
											"end": 553,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 539,
											"end": 545,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 532,
											"end": 554,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 494,
											"end": 496,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 494,
											"end": 496,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 575,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 596,
											"end": 605,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 575,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 575,
											"end": 606,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 575,
											"end": 606,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 575,
											"end": 606,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 565,
											"end": 606,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 565,
											"end": 606,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 625,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 661,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 650,
											"end": 659,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 646,
											"end": 664,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 625,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 625,
											"end": 665,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 625,
											"end": 665,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 625,
											"end": 665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 615,
											"end": 665,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 615,
											"end": 665,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 484,
											"end": 671,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 484,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 484,
											"end": 671,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 484,
											"end": 671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 484,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 484,
											"end": 671,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 676,
											"end": 1018,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 676,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 676,
											"end": 1018,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 676,
											"end": 1018,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 676,
											"end": 1018,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 824,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 810,
											"end": 819,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 801,
											"end": 808,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 797,
											"end": 820,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 793,
											"end": 825,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 790,
											"end": 792,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 790,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 790,
											"end": 792,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 843,
											"end": 849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 835,
											"end": 841,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 828,
											"end": 850,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 790,
											"end": 792,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 790,
											"end": 792,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 871,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 892,
											"end": 901,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 871,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 871,
											"end": 902,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 871,
											"end": 902,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 871,
											"end": 902,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 861,
											"end": 902,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 861,
											"end": 902,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 921,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 957,
											"end": 959,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 946,
											"end": 955,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 942,
											"end": 960,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 921,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 921,
											"end": 961,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 921,
											"end": 961,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 921,
											"end": 961,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 911,
											"end": 961,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 911,
											"end": 961,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1010,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 997,
											"end": 1006,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1011,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 980,
											"end": 1012,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 970,
											"end": 1012,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 970,
											"end": 1012,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 780,
											"end": 1018,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 780,
											"end": 1018,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 780,
											"end": 1018,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 780,
											"end": 1018,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 780,
											"end": 1018,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 780,
											"end": 1018,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1023,
											"end": 1289,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1023,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1023,
											"end": 1289,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1023,
											"end": 1289,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1152,
											"end": 1154,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1140,
											"end": 1149,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1131,
											"end": 1138,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1150,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1120,
											"end": 1122,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1120,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 1120,
											"end": 1122,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1173,
											"end": 1179,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1165,
											"end": 1171,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1180,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1120,
											"end": 1122,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 1120,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 1222,
											"end": 1231,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1279,
											"end": 1281,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1282,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1264,
											"end": 1282,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1264,
											"end": 1282,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1264,
											"end": 1282,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1283,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1283,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1110,
											"end": 1289,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1294,
											"end": 1689,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1294,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1294,
											"end": 1689,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1294,
											"end": 1689,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1294,
											"end": 1689,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1294,
											"end": 1689,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1457,
											"end": 1460,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1445,
											"end": 1454,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 1443,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1432,
											"end": 1455,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1428,
											"end": 1461,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1425,
											"end": 1427,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1425,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 1425,
											"end": 1427,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1479,
											"end": 1485,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1464,
											"end": 1486,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1425,
											"end": 1427,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 1425,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1507,
											"end": 1530,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1507,
											"end": 1530,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1507,
											"end": 1530,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1579,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1562,
											"end": 1580,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1562,
											"end": 1580,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1549,
											"end": 1581,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1549,
											"end": 1581,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1628,
											"end": 1630,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1613,
											"end": 1631,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1613,
											"end": 1631,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1632,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1632,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1679,
											"end": 1681,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1664,
											"end": 1682,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1651,
											"end": 1683,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1651,
											"end": 1683,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1415,
											"end": 1689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1415,
											"end": 1689,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1694,
											"end": 1897,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1694,
											"end": 1897,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1858,
											"end": 1890,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1858,
											"end": 1890,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1858,
											"end": 1890,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1858,
											"end": 1890,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1840,
											"end": 1891,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1840,
											"end": 1891,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1828,
											"end": 1830,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1813,
											"end": 1831,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1813,
											"end": 1831,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1897,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1902,
											"end": 2089,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1902,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2067,
											"end": 2081,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2067,
											"end": 2081,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2082,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2042,
											"end": 2083,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2042,
											"end": 2083,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2030,
											"end": 2032,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2015,
											"end": 2033,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2033,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1997,
											"end": 2089,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2094,
											"end": 2697,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 2094,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2094,
											"end": 2697,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2237,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2264,
											"end": 2266,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2253,
											"end": 2262,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2267,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2302,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2290,
											"end": 2303,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2345,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2336,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2323,
											"end": 2332,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2319,
											"end": 2337,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2312,
											"end": 2346,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2364,
											"end": 2368,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2517,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 2377,
											"end": 2517,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2391,
											"end": 2397,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2389,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2385,
											"end": 2398,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2517,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 2377,
											"end": 2517,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2486,
											"end": 2500,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2486,
											"end": 2500,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2486,
											"end": 2500,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2482,
											"end": 2505,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2482,
											"end": 2505,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2506,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2452,
											"end": 2469,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2452,
											"end": 2469,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2452,
											"end": 2469,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2471,
											"end": 2473,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2448,
											"end": 2474,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2441,
											"end": 2507,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2416,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2416,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 2377,
											"end": 2517,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2517,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 2377,
											"end": 2517,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2535,
											"end": 2541,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2533,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2529,
											"end": 2542,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2528,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 2526,
											"end": 2528,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2609,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2600,
											"end": 2602,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2591,
											"end": 2597,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2580,
											"end": 2589,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2576,
											"end": 2598,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2603,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2610,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2528,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 2526,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2681,
											"end": 2683,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2660,
											"end": 2675,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2656,
											"end": 2685,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2641,
											"end": 2686,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2641,
											"end": 2686,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2641,
											"end": 2686,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2641,
											"end": 2686,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2688,
											"end": 2690,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2637,
											"end": 2691,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2637,
											"end": 2691,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2215,
											"end": 2697,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2215,
											"end": 2697,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2702,
											"end": 3101,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 2702,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2904,
											"end": 2906,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2886,
											"end": 2907,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2886,
											"end": 2907,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2886,
											"end": 2907,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 2945,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2923,
											"end": 2941,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2923,
											"end": 2941,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2923,
											"end": 2941,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 2946,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2982,
											"end": 3016,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2977,
											"end": 2979,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2955,
											"end": 3017,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3048,
											"end": 3050,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3033,
											"end": 3051,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3033,
											"end": 3051,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3059,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3094,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3076,
											"end": 3095,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3076,
											"end": 3095,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2876,
											"end": 3101,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3106,
											"end": 3504,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 3106,
											"end": 3504,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3308,
											"end": 3310,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3290,
											"end": 3311,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3290,
											"end": 3311,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3290,
											"end": 3311,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3349,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 3327,
											"end": 3345,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3327,
											"end": 3345,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3327,
											"end": 3345,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3320,
											"end": 3350,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3386,
											"end": 3420,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
										},
										{
											"begin": 3381,
											"end": 3383,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3366,
											"end": 3384,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3366,
											"end": 3384,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3421,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3452,
											"end": 3454,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3437,
											"end": 3455,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3455,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3462,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3494,
											"end": 3497,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3479,
											"end": 3498,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3498,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3280,
											"end": 3504,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3509,
											"end": 3911,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 3509,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3711,
											"end": 3713,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3693,
											"end": 3714,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3693,
											"end": 3714,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3693,
											"end": 3714,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3730,
											"end": 3748,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3748,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3748,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3723,
											"end": 3753,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3789,
											"end": 3823,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 3784,
											"end": 3786,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3769,
											"end": 3787,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3769,
											"end": 3787,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 3824,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3855,
											"end": 3857,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3840,
											"end": 3858,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3840,
											"end": 3858,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3833,
											"end": 3869,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3901,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3886,
											"end": 3905,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3886,
											"end": 3905,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3683,
											"end": 3911,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3916,
											"end": 4314,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 3916,
											"end": 4314,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4118,
											"end": 4120,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4100,
											"end": 4121,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4100,
											"end": 4121,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4100,
											"end": 4121,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4157,
											"end": 4159,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 4137,
											"end": 4155,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4137,
											"end": 4155,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4137,
											"end": 4155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4160,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4196,
											"end": 4230,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4191,
											"end": 4193,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4176,
											"end": 4194,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4176,
											"end": 4194,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4169,
											"end": 4231,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4262,
											"end": 4264,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4247,
											"end": 4265,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4265,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4272,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4304,
											"end": 4307,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 4289,
											"end": 4308,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4289,
											"end": 4308,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4090,
											"end": 4314,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4319,
											"end": 4672,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 4319,
											"end": 4672,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4521,
											"end": 4523,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4503,
											"end": 4524,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4524,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4524,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4560,
											"end": 4562,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 4540,
											"end": 4558,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4540,
											"end": 4558,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4540,
											"end": 4558,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4533,
											"end": 4563,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4599,
											"end": 4630,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4594,
											"end": 4596,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4579,
											"end": 4597,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4579,
											"end": 4597,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4572,
											"end": 4631,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4663,
											"end": 4665,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4648,
											"end": 4666,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4648,
											"end": 4666,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4493,
											"end": 4672,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4677,
											"end": 5079,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 4677,
											"end": 5079,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4879,
											"end": 4881,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4861,
											"end": 4882,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4861,
											"end": 4882,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4861,
											"end": 4882,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4918,
											"end": 4920,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 4898,
											"end": 4916,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4898,
											"end": 4916,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4898,
											"end": 4916,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4891,
											"end": 4921,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4957,
											"end": 4991,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 4952,
											"end": 4954,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4937,
											"end": 4955,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4937,
											"end": 4955,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4930,
											"end": 4992,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5023,
											"end": 5025,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5008,
											"end": 5026,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5008,
											"end": 5026,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5001,
											"end": 5037,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5069,
											"end": 5072,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 5054,
											"end": 5073,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5054,
											"end": 5073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4851,
											"end": 5079,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5084,
											"end": 5440,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 5084,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5286,
											"end": 5288,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5268,
											"end": 5289,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5268,
											"end": 5289,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5268,
											"end": 5289,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5305,
											"end": 5323,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5305,
											"end": 5323,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5305,
											"end": 5323,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5298,
											"end": 5328,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5364,
											"end": 5398,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 5359,
											"end": 5361,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5344,
											"end": 5362,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5344,
											"end": 5362,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5337,
											"end": 5399,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5431,
											"end": 5433,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5416,
											"end": 5434,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5416,
											"end": 5434,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5258,
											"end": 5440,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5445,
											"end": 5842,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 5445,
											"end": 5842,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5647,
											"end": 5649,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5629,
											"end": 5650,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5629,
											"end": 5650,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5629,
											"end": 5650,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5686,
											"end": 5688,
											"name": "PUSH",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 5666,
											"end": 5684,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5666,
											"end": 5684,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5666,
											"end": 5684,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5659,
											"end": 5689,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 5720,
											"end": 5722,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5705,
											"end": 5723,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5705,
											"end": 5723,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5698,
											"end": 5760,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5791,
											"end": 5793,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5776,
											"end": 5794,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5776,
											"end": 5794,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5769,
											"end": 5800,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5832,
											"end": 5835,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 5817,
											"end": 5836,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5817,
											"end": 5836,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5619,
											"end": 5842,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5847,
											"end": 6248,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 5847,
											"end": 6248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6049,
											"end": 6051,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6031,
											"end": 6052,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6031,
											"end": 6052,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6031,
											"end": 6052,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6088,
											"end": 6090,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 6068,
											"end": 6086,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6068,
											"end": 6086,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6068,
											"end": 6086,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6061,
											"end": 6091,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6127,
											"end": 6161,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 6122,
											"end": 6124,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6107,
											"end": 6125,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6107,
											"end": 6125,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6100,
											"end": 6162,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6193,
											"end": 6195,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6178,
											"end": 6196,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6178,
											"end": 6196,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6171,
											"end": 6206,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6238,
											"end": 6241,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 6223,
											"end": 6242,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6223,
											"end": 6242,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6021,
											"end": 6248,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6253,
											"end": 6653,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 6253,
											"end": 6653,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6455,
											"end": 6457,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6437,
											"end": 6458,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6437,
											"end": 6458,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6437,
											"end": 6458,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6496,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6474,
											"end": 6492,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6474,
											"end": 6492,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6474,
											"end": 6492,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6467,
											"end": 6497,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6533,
											"end": 6567,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 6528,
											"end": 6530,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6513,
											"end": 6531,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6513,
											"end": 6531,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6506,
											"end": 6568,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6599,
											"end": 6601,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6584,
											"end": 6602,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6584,
											"end": 6602,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6577,
											"end": 6611,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6643,
											"end": 6646,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 6628,
											"end": 6647,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6628,
											"end": 6647,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6653,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6658,
											"end": 7059,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 6658,
											"end": 7059,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6860,
											"end": 6862,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6842,
											"end": 6863,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6842,
											"end": 6863,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6842,
											"end": 6863,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6899,
											"end": 6901,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 6879,
											"end": 6897,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6879,
											"end": 6897,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6879,
											"end": 6897,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6872,
											"end": 6902,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6938,
											"end": 6972,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 6933,
											"end": 6935,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6918,
											"end": 6936,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6918,
											"end": 6936,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6911,
											"end": 6973,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7004,
											"end": 7006,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6989,
											"end": 7007,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6989,
											"end": 7007,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6982,
											"end": 7017,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7049,
											"end": 7052,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 7034,
											"end": 7053,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7034,
											"end": 7053,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6832,
											"end": 7059,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7064,
											"end": 7241,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 7064,
											"end": 7241,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7210,
											"end": 7235,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7210,
											"end": 7235,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7210,
											"end": 7235,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7198,
											"end": 7200,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7183,
											"end": 7201,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7183,
											"end": 7201,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7165,
											"end": 7241,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7246,
											"end": 7430,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 7246,
											"end": 7430,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7418,
											"end": 7422,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 7406,
											"end": 7423,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7406,
											"end": 7423,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7406,
											"end": 7423,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7406,
											"end": 7423,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7388,
											"end": 7424,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7388,
											"end": 7424,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7376,
											"end": 7378,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7361,
											"end": 7379,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7361,
											"end": 7379,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7343,
											"end": 7430,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7435,
											"end": 7563,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 7435,
											"end": 7563,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7435,
											"end": 7563,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7506,
											"end": 7507,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7502,
											"end": 7508,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7499,
											"end": 7500,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7496,
											"end": 7509,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7493,
											"end": 7495,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7493,
											"end": 7495,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 7493,
											"end": 7495,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7512,
											"end": 7530,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 7512,
											"end": 7530,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 7512,
											"end": 7530,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7512,
											"end": 7530,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 7512,
											"end": 7530,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7548,
											"end": 7557,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7548,
											"end": 7557,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7483,
											"end": 7563,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7568,
											"end": 7785,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 7568,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7568,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7634,
											"end": 7635,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7624,
											"end": 7626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 7624,
											"end": 7626,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7659,
											"end": 7690,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7659,
											"end": 7690,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7713,
											"end": 7717,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 7710,
											"end": 7711,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7703,
											"end": 7718,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7741,
											"end": 7745,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7666,
											"end": 7667,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7731,
											"end": 7746,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7624,
											"end": 7626,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 7624,
											"end": 7626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7770,
											"end": 7779,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 7770,
											"end": 7779,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7614,
											"end": 7785,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7790,
											"end": 7958,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 7790,
											"end": 7958,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7790,
											"end": 7958,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7892,
											"end": 7893,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7888,
											"end": 7894,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7884,
											"end": 7898,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 7881,
											"end": 7882,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7878,
											"end": 7899,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7873,
											"end": 7874,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7866,
											"end": 7875,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7859,
											"end": 7876,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7855,
											"end": 7900,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7852,
											"end": 7854,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7852,
											"end": 7854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 7852,
											"end": 7854,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7903,
											"end": 7921,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 7903,
											"end": 7921,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 7903,
											"end": 7921,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7903,
											"end": 7921,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 7903,
											"end": 7921,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7943,
											"end": 7952,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7943,
											"end": 7952,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7842,
											"end": 7958,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7963,
											"end": 8088,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 7963,
											"end": 8088,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7963,
											"end": 8088,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8031,
											"end": 8032,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8028,
											"end": 8029,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8025,
											"end": 8033,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8022,
											"end": 8024,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8022,
											"end": 8024,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 8022,
											"end": 8024,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8036,
											"end": 8054,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 8036,
											"end": 8054,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 8036,
											"end": 8054,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8036,
											"end": 8054,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 8036,
											"end": 8054,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8073,
											"end": 8082,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8073,
											"end": 8082,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8012,
											"end": 8088,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8093,
											"end": 8473,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 8093,
											"end": 8473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8178,
											"end": 8179,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 8168,
											"end": 8180,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8168,
											"end": 8180,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 8225,
											"end": 8226,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8215,
											"end": 8227,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8215,
											"end": 8227,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8215,
											"end": 8227,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8236,
											"end": 8238,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 8236,
											"end": 8238,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8290,
											"end": 8294,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 8282,
											"end": 8288,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8278,
											"end": 8295,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8268,
											"end": 8295,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8268,
											"end": 8295,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8236,
											"end": 8238,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 8236,
											"end": 8238,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8343,
											"end": 8345,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8335,
											"end": 8341,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8332,
											"end": 8346,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8312,
											"end": 8330,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8309,
											"end": 8347,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8306,
											"end": 8308,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8306,
											"end": 8308,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 8306,
											"end": 8308,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8389,
											"end": 8399,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 8384,
											"end": 8387,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 8380,
											"end": 8400,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 8377,
											"end": 8378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8370,
											"end": 8401,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8424,
											"end": 8428,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 8421,
											"end": 8422,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8414,
											"end": 8429,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8452,
											"end": 8456,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8449,
											"end": 8450,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8442,
											"end": 8457,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8306,
											"end": 8308,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 8306,
											"end": 8308,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8306,
											"end": 8308,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8148,
											"end": 8473,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8148,
											"end": 8473,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8148,
											"end": 8473,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8148,
											"end": 8473,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8478,
											"end": 8605,
											"name": "tag",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 8478,
											"end": 8605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8539,
											"end": 8549,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 8534,
											"end": 8537,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 8530,
											"end": 8550,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 8527,
											"end": 8528,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8520,
											"end": 8551,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8570,
											"end": 8574,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 8567,
											"end": 8568,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8560,
											"end": 8575,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8594,
											"end": 8598,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8591,
											"end": 8592,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8584,
											"end": 8599,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"DEAD()": "03fd2a45",
							"INITIAL_SUPPLY()": "2ff2e9dc",
							"ZERO()": "58fa63ca",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burnRate()": "bed99850",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"liquidityFee()": "98118cb4",
							"liquidityWallet()": "d4698016",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"sellFee()": "2b14ca56",
							"setFees(uint256,uint256,uint256,uint256)": "6fcba377",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"treasuryFee()": "cc32d176",
							"treasuryWallet()": "4626402b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_liquidityWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_treasuryWallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEAD\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZERO\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_liquidityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_treasuryFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sellFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_burnRate\",\"type\":\"uint256\"}],\"name\":\"setFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MemeTokenBase/memetoken.sol\":\"MemeTokenTest\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/MemeTokenBase/memetoken.sol\":{\"keccak256\":\"0x8c19e8f42a28a41fd5886b9afcd0afe725fcc288c871112b3a875c742930fc0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6fafbce65761e4b1922a40d4f751695b4ff03a60cd279903036ee19f749cb98\",\"dweb:/ipfs/Qme2J5sqsdy7rJBBA57j22qcjiHevQHaFz29E4v2aFWNhH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 128,
								"contract": "contracts/MemeTokenBase/memetoken.sol:MemeTokenTest",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 134,
								"contract": "contracts/MemeTokenBase/memetoken.sol:MemeTokenTest",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 136,
								"contract": "contracts/MemeTokenBase/memetoken.sol:MemeTokenTest",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 138,
								"contract": "contracts/MemeTokenBase/memetoken.sol:MemeTokenTest",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 140,
								"contract": "contracts/MemeTokenBase/memetoken.sol:MemeTokenTest",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 7,
								"contract": "contracts/MemeTokenBase/memetoken.sol:MemeTokenTest",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 834,
								"contract": "contracts/MemeTokenBase/memetoken.sol:MemeTokenTest",
								"label": "liquidityWallet",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 836,
								"contract": "contracts/MemeTokenBase/memetoken.sol:MemeTokenTest",
								"label": "treasuryWallet",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 853,
								"contract": "contracts/MemeTokenBase/memetoken.sol:MemeTokenTest",
								"label": "liquidityFee",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 856,
								"contract": "contracts/MemeTokenBase/memetoken.sol:MemeTokenTest",
								"label": "treasuryFee",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 859,
								"contract": "contracts/MemeTokenBase/memetoken.sol:MemeTokenTest",
								"label": "sellFee",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 862,
								"contract": "contracts/MemeTokenBase/memetoken.sol:MemeTokenTest",
								"label": "burnRate",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							824
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 825,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 824,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"contractDependencies": [
								824
							],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								824
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 814,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 814,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1878:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1907:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1907:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1907:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1888:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1888:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1888:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1868:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1868:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:0:0"
									},
									"scope": 112,
									"src": "1824:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2144:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2162:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2182:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2174:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2174:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2174:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2162:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2186:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2154:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2154:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2256:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2237:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2237:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1931:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2134:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2101:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:0"
									},
									"scope": 112,
									"src": "2074:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2489:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2499:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2499:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2518:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2499:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2534:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2543:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2534:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2534:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2587:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2597:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2566:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2561:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2278:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2454:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2453:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:0"
									},
									"scope": 112,
									"src": "2426:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1961:0"
						}
					],
					"src": "102:2514:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							824
						],
						"ERC20": [
							699
						],
						"IERC20": [
							777
						],
						"IERC20Metadata": [
							802
						]
					},
					"id": 700,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 115,
							"nodeType": "ImportDirective",
							"scope": 700,
							"sourceUnit": 778,
							"src": "130:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 116,
							"nodeType": "ImportDirective",
							"scope": 700,
							"sourceUnit": 803,
							"src": "153:41:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 117,
							"nodeType": "ImportDirective",
							"scope": 700,
							"sourceUnit": 825,
							"src": "195:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 119,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 824,
										"src": "1550:7:1"
									},
									"id": 120,
									"nodeType": "InheritanceSpecifier",
									"src": "1550:7:1"
								},
								{
									"baseName": {
										"id": 121,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 777,
										"src": "1559:6:1"
									},
									"id": 122,
									"nodeType": "InheritanceSpecifier",
									"src": "1559:6:1"
								},
								{
									"baseName": {
										"id": 123,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 802,
										"src": "1567:14:1"
									},
									"id": 124,
									"nodeType": "InheritanceSpecifier",
									"src": "1567:14:1"
								}
							],
							"contractDependencies": [
								777,
								802,
								824
							],
							"contractKind": "contract",
							"documentation": {
								"id": 118,
								"nodeType": "StructuredDocumentation",
								"src": "230:1301:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 699,
							"linearizedBaseContracts": [
								699,
								802,
								777,
								824
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 128,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 699,
									"src": "1588:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 127,
										"keyType": {
											"id": 125,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1596:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1588:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 126,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1607:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 134,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 699,
									"src": "1640:67:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 133,
										"keyType": {
											"id": 129,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1648:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1640:47:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 132,
											"keyType": {
												"id": 130,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1667:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1659:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 131,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 136,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 699,
									"src": "1714:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 135,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1714:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 138,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 699,
									"src": "1749:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 137,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1749:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 140,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 699,
									"src": "1775:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 139,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1775:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "2036:57:1",
										"statements": [
											{
												"expression": {
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 148,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "2046:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 149,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "2054:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2046:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "2046:13:1"
											},
											{
												"expression": {
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 152,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "2069:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 153,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "2079:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2069:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "2069:17:1"
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "1804:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 157,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "name_",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1992:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 142,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1992:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "symbol_",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "2013:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 144,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2013:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1991:44:1"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2036:0:1"
									},
									"scope": 699,
									"src": "1980:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										789
									],
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "2227:29:1",
										"statements": [
											{
												"expression": {
													"id": 164,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 138,
													"src": "2244:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 163,
												"id": 165,
												"nodeType": "Return",
												"src": "2237:12:1"
											}
										]
									},
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "2099:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 160,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2194:8:1"
									},
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2171:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "2212:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 161,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2212:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2211:15:1"
									},
									"scope": 699,
									"src": "2158:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										795
									],
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "2440:31:1",
										"statements": [
											{
												"expression": {
													"id": 174,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 140,
													"src": "2457:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 173,
												"id": 175,
												"nodeType": "Return",
												"src": "2450:14:1"
											}
										]
									},
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "2262:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 170,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2407:8:1"
									},
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2384:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2425:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 171,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2425:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2424:15:1"
									},
									"scope": 699,
									"src": "2369:102:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										801
									],
									"body": {
										"id": 186,
										"nodeType": "Block",
										"src": "3169:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3186:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 183,
												"id": 185,
												"nodeType": "Return",
												"src": "3179:9:1"
											}
										]
									},
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "2477:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 180,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3144:8:1"
									},
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3121:2:1"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "3162:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 181,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3162:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3161:7:1"
									},
									"scope": 699,
									"src": "3104:91:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										726
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "3325:36:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 136,
													"src": "3342:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "3335:19:1"
											}
										]
									},
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "3201:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 190,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3298:8:1"
									},
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3275:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "3316:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3316:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3315:9:1"
									},
									"scope": 699,
									"src": "3255:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										734
									],
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "3502:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 206,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "3519:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 208,
													"indexExpression": {
														"id": 207,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "3529:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3519:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 205,
												"id": 209,
												"nodeType": "Return",
												"src": "3512:25:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "3367:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 202,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3475:8:1"
									},
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "3438:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3438:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3437:17:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "3493:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3493:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3492:9:1"
									},
									"scope": 699,
									"src": "3419:125:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										744
									],
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "3825:104:1",
										"statements": [
											{
												"assignments": [
													223
												],
												"declarations": [
													{
														"constant": false,
														"id": 223,
														"mutability": "mutable",
														"name": "owner",
														"nodeType": "VariableDeclaration",
														"scope": 235,
														"src": "3835:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 222,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3835:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 226,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 224,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "3851:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3851:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3835:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 228,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "3883:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 229,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "3890:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 230,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "3894:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 227,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "3873:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3873:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "3873:28:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3918:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 221,
												"id": 234,
												"nodeType": "Return",
												"src": "3911:11:1"
											}
										]
									},
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3550:185:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 218,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3801:8:1"
									},
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "3758:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3758:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "3770:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3770:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3757:28:1"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "3819:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 219,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3819:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:6:1"
									},
									"scope": 699,
									"src": "3740:189:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "4085:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 247,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "4102:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 249,
														"indexExpression": {
															"id": 248,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "4114:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4102:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 251,
													"indexExpression": {
														"id": 250,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "4121:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4102:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 246,
												"id": 252,
												"nodeType": "Return",
												"src": "4095:34:1"
											}
										]
									},
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "3935:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 243,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4058:8:1"
									},
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "4006:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "4021:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4021:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:32:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "4076:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4076:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4075:9:1"
									},
									"scope": 699,
									"src": "3987:149:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										764
									],
									"body": {
										"id": 278,
										"nodeType": "Block",
										"src": "4533:108:1",
										"statements": [
											{
												"assignments": [
													266
												],
												"declarations": [
													{
														"constant": false,
														"id": 266,
														"mutability": "mutable",
														"name": "owner",
														"nodeType": "VariableDeclaration",
														"scope": 278,
														"src": "4543:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 265,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4543:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 269,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 267,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "4559:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4559:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4543:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 271,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "4590:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 272,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "4597:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 273,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "4606:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 270,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "4581:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4581:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "4581:32:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4630:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 264,
												"id": 277,
												"nodeType": "Return",
												"src": "4623:11:1"
											}
										]
									},
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "4142:297:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 261,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4509:8:1"
									},
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "4461:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4461:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "4478:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4478:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4460:33:1"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "4527:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 262,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4527:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4526:6:1"
									},
									"scope": 699,
									"src": "4444:197:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										776
									],
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "5306:153:1",
										"statements": [
											{
												"assignments": [
													293
												],
												"declarations": [
													{
														"constant": false,
														"id": 293,
														"mutability": "mutable",
														"name": "spender",
														"nodeType": "VariableDeclaration",
														"scope": 311,
														"src": "5316:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 292,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5316:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 296,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 294,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "5334:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5334:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5316:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 298,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "5372:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 299,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "5378:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 300,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "5387:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 297,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 676,
														"src": "5356:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5356:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "5356:38:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 304,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "5414:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 305,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "5420:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 306,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "5424:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 303,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "5404:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5404:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "5404:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5448:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 291,
												"id": 310,
												"nodeType": "Return",
												"src": "5441:11:1"
											}
										]
									},
									"documentation": {
										"id": 280,
										"nodeType": "StructuredDocumentation",
										"src": "4647:551:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 288,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5282:8:1"
									},
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "5225:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5225:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "5239:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5239:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "5251:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5251:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5224:42:1"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "5300:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 289,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5300:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5299:6:1"
									},
									"scope": 699,
									"src": "5203:256:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "5948:140:1",
										"statements": [
											{
												"assignments": [
													323
												],
												"declarations": [
													{
														"constant": false,
														"id": 323,
														"mutability": "mutable",
														"name": "owner",
														"nodeType": "VariableDeclaration",
														"scope": 340,
														"src": "5958:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 322,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5958:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 326,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 324,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "5974:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5974:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5958:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 328,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "6005:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 329,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "6012:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 331,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 323,
																		"src": "6031:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 332,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 315,
																		"src": "6038:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 330,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "6021:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6021:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 334,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 317,
																"src": "6049:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6021:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 327,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "5996:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5996:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 337,
												"nodeType": "ExpressionStatement",
												"src": "5996:64:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6077:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 321,
												"id": 339,
												"nodeType": "Return",
												"src": "6070:11:1"
											}
										]
									},
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "5465:384:1",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5881:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5881:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5898:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5880:37:1"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5942:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 319,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5942:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5941:6:1"
									},
									"scope": 699,
									"src": "5854:234:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "6674:328:1",
										"statements": [
											{
												"assignments": [
													352
												],
												"declarations": [
													{
														"constant": false,
														"id": 352,
														"mutability": "mutable",
														"name": "owner",
														"nodeType": "VariableDeclaration",
														"scope": 381,
														"src": "6684:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 351,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6684:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 355,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 353,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "6700:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6700:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6684:28:1"
											},
											{
												"assignments": [
													357
												],
												"declarations": [
													{
														"constant": false,
														"id": 357,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 381,
														"src": "6722:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 356,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6722:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 362,
												"initialValue": {
													"arguments": [
														{
															"id": 359,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "6759:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 360,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "6766:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 358,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "6749:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6749:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6722:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 364,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "6792:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 365,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 346,
																"src": "6812:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6792:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6829:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 363,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6784:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6784:85:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 369,
												"nodeType": "ExpressionStatement",
												"src": "6784:85:1"
											},
											{
												"id": 378,
												"nodeType": "UncheckedBlock",
												"src": "6879:95:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 371,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 352,
																	"src": "6912:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 372,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 344,
																	"src": "6919:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 373,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 357,
																		"src": "6928:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 374,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 346,
																		"src": "6947:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6928:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 370,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 633,
																"src": "6903:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6903:60:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 377,
														"nodeType": "ExpressionStatement",
														"src": "6903:60:1"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6991:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 350,
												"id": 380,
												"nodeType": "Return",
												"src": "6984:11:1"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "6094:476:1",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "6602:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6602:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "6619:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6619:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6601:42:1"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "6668:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 348,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6668:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6667:6:1"
									},
									"scope": 699,
									"src": "6575:427:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "7534:710:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 393,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 385,
																"src": "7552:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7568:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7560:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 394,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7560:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 397,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7560:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7552:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7572:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 392,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7544:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7544:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "7544:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 403,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 387,
																"src": "7630:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7644:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7636:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 404,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7636:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7636:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7630:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7648:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 402,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7622:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7622:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "7622:64:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 413,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "7718:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 414,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "7724:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 415,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "7728:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 412,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 687,
														"src": "7697:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7697:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "7697:38:1"
											},
											{
												"assignments": [
													419
												],
												"declarations": [
													{
														"constant": false,
														"id": 419,
														"mutability": "mutable",
														"name": "fromBalance",
														"nodeType": "VariableDeclaration",
														"scope": 458,
														"src": "7746:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 418,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7746:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 423,
												"initialValue": {
													"baseExpression": {
														"id": 420,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "7768:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 422,
													"indexExpression": {
														"id": 421,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "7778:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7768:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7746:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 425,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 419,
																"src": "7801:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 426,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "7816:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7801:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7824:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 424,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7793:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7793:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "7793:72:1"
											},
											{
												"id": 445,
												"nodeType": "UncheckedBlock",
												"src": "7875:273:1",
												"statements": [
													{
														"expression": {
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 431,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "7899:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 433,
																"indexExpression": {
																	"id": 432,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "7909:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7899:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 434,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "7917:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 435,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 389,
																	"src": "7931:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7917:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7899:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 438,
														"nodeType": "ExpressionStatement",
														"src": "7899:38:1"
													},
													{
														"expression": {
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 439,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "8114:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 441,
																"indexExpression": {
																	"id": 440,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "8124:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8114:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 442,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "8131:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8114:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 444,
														"nodeType": "ExpressionStatement",
														"src": "8114:23:1"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 447,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "8172:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "8178:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 449,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "8182:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 446,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "8163:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8163:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 451,
												"nodeType": "EmitStatement",
												"src": "8158:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 453,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "8220:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "8226:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 455,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "8230:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 452,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "8200:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8200:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "8200:37:1"
											}
										]
									},
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "7008:443:1",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "7475:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7475:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "7489:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7489:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "7501:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7501:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7474:42:1"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7534:0:1"
									},
									"scope": 699,
									"src": "7456:788:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "8585:470:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 468,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "8603:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8622:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8614:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 469,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8614:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8614:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8603:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8626:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 467,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8595:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8595:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 476,
												"nodeType": "ExpressionStatement",
												"src": "8595:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8700:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8692:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 478,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8692:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8692:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 482,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "8704:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 483,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "8713:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 477,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 687,
														"src": "8671:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8671:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 485,
												"nodeType": "ExpressionStatement",
												"src": "8671:49:1"
											},
											{
												"expression": {
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 486,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "8731:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 487,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "8747:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8731:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "8731:22:1"
											},
											{
												"id": 496,
												"nodeType": "UncheckedBlock",
												"src": "8763:175:1",
												"statements": [
													{
														"expression": {
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 490,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "8899:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 492,
																"indexExpression": {
																	"id": 491,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "8909:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8899:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 493,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "8921:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8899:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 495,
														"nodeType": "ExpressionStatement",
														"src": "8899:28:1"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8969:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8961:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 498,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8961:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8961:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 502,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "8973:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 503,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "8982:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 497,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "8952:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8952:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 505,
												"nodeType": "EmitStatement",
												"src": "8947:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9028:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 508,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9020:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 507,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9020:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9020:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 511,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "9032:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 512,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "9041:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 506,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "9000:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9000:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "9000:48:1"
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "8250:265:1",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "8535:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8535:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "8552:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8552:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8534:33:1"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8585:0:1"
									},
									"scope": 699,
									"src": "8520:535:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 587,
										"nodeType": "Block",
										"src": "9440:594:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 525,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "9458:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9477:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9469:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 526,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9469:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9469:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9458:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9481:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 524,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9450:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9450:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "9450:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "9549:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9566:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9558:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 536,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9558:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9558:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 540,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "9570:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 534,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 687,
														"src": "9528:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9528:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "9528:49:1"
											},
											{
												"assignments": [
													544
												],
												"declarations": [
													{
														"constant": false,
														"id": 544,
														"mutability": "mutable",
														"name": "accountBalance",
														"nodeType": "VariableDeclaration",
														"scope": 587,
														"src": "9588:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 543,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9588:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 548,
												"initialValue": {
													"baseExpression": {
														"id": 545,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "9613:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 547,
													"indexExpression": {
														"id": 546,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "9623:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9613:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9588:43:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 550,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 544,
																"src": "9649:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 551,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 521,
																"src": "9667:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9649:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9675:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 549,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9641:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9641:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 555,
												"nodeType": "ExpressionStatement",
												"src": "9641:71:1"
											},
											{
												"id": 568,
												"nodeType": "UncheckedBlock",
												"src": "9722:194:1",
												"statements": [
													{
														"expression": {
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 556,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "9746:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 558,
																"indexExpression": {
																	"id": 557,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 519,
																	"src": "9756:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9746:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 561,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 559,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "9767:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 560,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 521,
																	"src": "9784:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9767:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9746:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 563,
														"nodeType": "ExpressionStatement",
														"src": "9746:44:1"
													},
													{
														"expression": {
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 564,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 136,
																"src": "9883:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 565,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 521,
																"src": "9899:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9883:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 567,
														"nodeType": "ExpressionStatement",
														"src": "9883:22:1"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 570,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "9940:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9957:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9949:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 571,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9949:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9949:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 575,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "9961:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 569,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "9931:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9931:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 577,
												"nodeType": "EmitStatement",
												"src": "9926:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 579,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "9999:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10016:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10008:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 580,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10008:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10008:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 584,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "10020:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 578,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "9979:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9979:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "9979:48:1"
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "9061:309:1",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "9390:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9390:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "9407:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9407:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9389:33:1"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9440:0:1"
									},
									"scope": 699,
									"src": "9375:659:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "10540:257:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 599,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 591,
																"src": "10558:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 602,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10575:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10567:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 600,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10567:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10567:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10558:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10579:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 598,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10550:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10550:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 607,
												"nodeType": "ExpressionStatement",
												"src": "10550:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 609,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "10636:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10655:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10647:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 610,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10647:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 613,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10647:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10636:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10659:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 608,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10628:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10628:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "10628:68:1"
											},
											{
												"expression": {
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 618,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 134,
																"src": "10707:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 621,
															"indexExpression": {
																"id": 619,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 591,
																"src": "10719:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10707:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 622,
														"indexExpression": {
															"id": 620,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "10726:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10707:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 623,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "10737:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10707:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 625,
												"nodeType": "ExpressionStatement",
												"src": "10707:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 627,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "10767:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 628,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "10774:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 629,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "10783:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 626,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "10758:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10758:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 631,
												"nodeType": "EmitStatement",
												"src": "10753:37:1"
											}
										]
									},
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "10040:412:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "10475:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10475:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "10490:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10490:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "10507:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10474:48:1"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10540:0:1"
									},
									"scope": 699,
									"src": "10457:340:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 675,
										"nodeType": "Block",
										"src": "11168:321:1",
										"statements": [
											{
												"assignments": [
													644
												],
												"declarations": [
													{
														"constant": false,
														"id": 644,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 675,
														"src": "11178:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 643,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11178:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 649,
												"initialValue": {
													"arguments": [
														{
															"id": 646,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "11215:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 647,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "11222:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 645,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "11205:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11205:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11178:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 650,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "11244:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11269:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 652,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11269:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 651,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11264:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 654,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11264:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 655,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11264:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11244:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 674,
												"nodeType": "IfStatement",
												"src": "11240:243:1",
												"trueBody": {
													"id": 673,
													"nodeType": "Block",
													"src": "11283:200:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 658,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 644,
																			"src": "11305:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 659,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 640,
																			"src": "11325:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11305:26:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11333:31:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 657,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11297:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11297:68:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 663,
															"nodeType": "ExpressionStatement",
															"src": "11297:68:1"
														},
														{
															"id": 672,
															"nodeType": "UncheckedBlock",
															"src": "11379:94:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 665,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 636,
																				"src": "11416:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 666,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 638,
																				"src": "11423:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 669,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 667,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 644,
																					"src": "11432:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 668,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 640,
																					"src": "11451:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11432:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 664,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 633,
																			"src": "11407:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11407:51:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 671,
																	"nodeType": "ExpressionStatement",
																	"src": "11407:51:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "10803:270:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "11103:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11103:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "11118:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11118:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "11135:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11102:48:1"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11168:0:1"
									},
									"scope": 699,
									"src": "11078:411:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 686,
										"nodeType": "Block",
										"src": "12162:2:1",
										"statements": []
									},
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "11495:573:1",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "12103:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12103:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "12117:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12117:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "12129:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12129:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12102:42:1"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12162:0:1"
									},
									"scope": 699,
									"src": "12073:91:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 697,
										"nodeType": "Block",
										"src": "12840:2:1",
										"statements": []
									},
									"documentation": {
										"id": 688,
										"nodeType": "StructuredDocumentation",
										"src": "12170:577:1",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "12781:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12781:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "12795:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12795:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "12807:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12807:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12780:42:1"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12840:0:1"
									},
									"scope": 699,
									"src": "12752:90:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 700,
							"src": "1532:11312:1"
						}
					],
					"src": "105:12740:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							777
						]
					},
					"id": 778,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 701,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 702,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 777,
							"linearizedBaseContracts": [
								777
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 711,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "403:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "425:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "445:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:2"
									},
									"src": "388:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 712,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 720,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "634:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "657:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "682:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:2"
									},
									"src": "619:78:2"
								},
								{
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 726,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 777,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 727,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 734,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 777,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 735,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 744,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "1211:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "1223:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:2"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "1257:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 741,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:2"
									},
									"scope": 777,
									"src": "1193:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "1557:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "1572:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:2"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "1612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:2"
									},
									"scope": 777,
									"src": "1538:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 755,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 764,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "2291:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "2308:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:2"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "2342:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 761,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:2"
									},
									"scope": 777,
									"src": "2274:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 765,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 776,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "2668:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "2682:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "2694:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:2"
									},
									"returnParameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "2728:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 773,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:2"
									},
									"scope": 777,
									"src": "2646:88:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 778,
							"src": "202:2534:2"
						}
					],
					"src": "106:2631:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							777
						],
						"IERC20Metadata": [
							802
						]
					},
					"id": 803,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 779,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 780,
							"nodeType": "ImportDirective",
							"scope": 803,
							"sourceUnit": 778,
							"src": "135:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 782,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 777,
										"src": "305:6:3"
									},
									"id": 783,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:3"
								}
							],
							"contractDependencies": [
								777
							],
							"contractKind": "interface",
							"documentation": {
								"id": 781,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 802,
							"linearizedBaseContracts": [
								802,
								777
							],
							"name": "IERC20Metadata",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 784,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 789,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:3"
									},
									"returnParameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "416:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 786,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:3"
									},
									"scope": 802,
									"src": "377:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 790,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 795,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:3"
									},
									"returnParameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "539:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 792,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:3"
									},
									"scope": 802,
									"src": "498:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 796,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 801,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:3"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "673:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 798,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:3"
									},
									"scope": 802,
									"src": "630:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 803,
							"src": "277:405:3"
						}
					],
					"src": "110:573:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							824
						]
					},
					"id": 825,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 804,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 805,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 824,
							"linearizedBaseContracts": [
								824
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 813,
										"nodeType": "Block",
										"src": "702:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 810,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 809,
												"id": 812,
												"nodeType": "Return",
												"src": "712:17:4"
											}
										]
									},
									"id": 814,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:4"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:4"
									},
									"scope": 824,
									"src": "640:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 822,
										"nodeType": "Block",
										"src": "809:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 819,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 818,
												"id": 821,
												"nodeType": "Return",
												"src": "819:15:4"
											}
										]
									},
									"id": 823,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:4"
									},
									"returnParameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "793:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 816,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:4"
									},
									"scope": 824,
									"src": "742:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 825,
							"src": "608:235:4"
						}
					],
					"src": "86:758:4"
				},
				"id": 4
			},
			"contracts/MemeTokenBase/memetoken.sol": {
				"ast": {
					"absolutePath": "contracts/MemeTokenBase/memetoken.sol",
					"exportedSymbols": {
						"Context": [
							824
						],
						"ERC20": [
							699
						],
						"IERC20": [
							777
						],
						"IERC20Metadata": [
							802
						],
						"MemeTokenTest": [
							1086
						],
						"Ownable": [
							112
						]
					},
					"id": 1087,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 826,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 827,
							"nodeType": "ImportDirective",
							"scope": 1087,
							"sourceUnit": 700,
							"src": "60:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 828,
							"nodeType": "ImportDirective",
							"scope": 1087,
							"sourceUnit": 113,
							"src": "117:52:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 829,
										"name": "ERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 699,
										"src": "199:5:5"
									},
									"id": 830,
									"nodeType": "InheritanceSpecifier",
									"src": "199:5:5"
								},
								{
									"baseName": {
										"id": 831,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "206:7:5"
									},
									"id": 832,
									"nodeType": "InheritanceSpecifier",
									"src": "206:7:5"
								}
							],
							"contractDependencies": [
								112,
								699,
								777,
								802,
								824
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1086,
							"linearizedBaseContracts": [
								1086,
								112,
								699,
								802,
								777,
								824
							],
							"name": "MemeTokenTest",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "d4698016",
									"id": 834,
									"mutability": "mutable",
									"name": "liquidityWallet",
									"nodeType": "VariableDeclaration",
									"scope": 1086,
									"src": "221:30:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 833,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "221:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4626402b",
									"id": 836,
									"mutability": "mutable",
									"name": "treasuryWallet",
									"nodeType": "VariableDeclaration",
									"scope": 1086,
									"src": "258:29:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 835,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "258:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "03fd2a45",
									"id": 839,
									"mutability": "constant",
									"name": "DEAD",
									"nodeType": "VariableDeclaration",
									"scope": 1086,
									"src": "300:73:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 837,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "300:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303064456144",
										"id": 838,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "331:42:5",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x000000000000000000000000000000000000dEaD"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "58fa63ca",
									"id": 842,
									"mutability": "constant",
									"name": "ZERO",
									"nodeType": "VariableDeclaration",
									"scope": 1086,
									"src": "380:73:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 840,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "380:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
										"id": 841,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "411:42:5",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x0000000000000000000000000000000000000000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "2ff2e9dc",
									"id": 850,
									"mutability": "constant",
									"name": "INITIAL_SUPPLY",
									"nodeType": "VariableDeclaration",
									"scope": 1086,
									"src": "462:64:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 843,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "462:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										},
										"id": 849,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31303030303030303030",
											"id": 844,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "503:10:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											},
											"value": "1000000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 845,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "517:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "3138",
														"id": 846,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "523:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "517:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													}
												}
											],
											"id": 848,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "516:10:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "503:23:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "98118cb4",
									"id": 853,
									"mutability": "mutable",
									"name": "liquidityFee",
									"nodeType": "VariableDeclaration",
									"scope": 1086,
									"src": "574:32:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 851,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "574:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3235",
										"id": 852,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "604:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_25_by_1",
											"typeString": "int_const 25"
										},
										"value": "25"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cc32d176",
									"id": 856,
									"mutability": "mutable",
									"name": "treasuryFee",
									"nodeType": "VariableDeclaration",
									"scope": 1086,
									"src": "622:31:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 854,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "622:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3530",
										"id": 855,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "651:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "50"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2b14ca56",
									"id": 859,
									"mutability": "mutable",
									"name": "sellFee",
									"nodeType": "VariableDeclaration",
									"scope": 1086,
									"src": "668:26:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 857,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "668:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 858,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "693:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bed99850",
									"id": 862,
									"mutability": "mutable",
									"name": "burnRate",
									"nodeType": "VariableDeclaration",
									"scope": 1086,
									"src": "710:28:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 860,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "710:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 861,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "736:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 886,
										"nodeType": "Block",
										"src": "869:145:5",
										"statements": [
											{
												"expression": {
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 873,
														"name": "liquidityWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "880:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 874,
														"name": "_liquidityWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "898:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "880:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 876,
												"nodeType": "ExpressionStatement",
												"src": "880:34:5"
											},
											{
												"expression": {
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 877,
														"name": "treasuryWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "925:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 878,
														"name": "_treasuryWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "942:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "925:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 880,
												"nodeType": "ExpressionStatement",
												"src": "925:32:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 882,
															"name": "liquidityWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "974:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 883,
															"name": "INITIAL_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "991:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 881,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "968:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "968:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 885,
												"nodeType": "ExpressionStatement",
												"src": "968:38:5"
											}
										]
									},
									"id": 887,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5b544553545d204465666c6174696f6e617279204d656d6520546f6b656e5d",
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "825:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_06a03c6a94f62f6099c33e40e2f644169f2a458226c8f13e269c15cb536468bd",
														"typeString": "literal_string \"[TEST] Deflationary Meme Token]\""
													},
													"value": "[TEST] Deflationary Meme Token]"
												},
												{
													"hexValue": "444d543032",
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "860:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_52ad25466b583936c82a31d5c7d0127253ab937aeeeba56b6115eb69320826a3",
														"typeString": "literal_string \"DMT02\""
													},
													"value": "DMT02"
												}
											],
											"id": 871,
											"modifierName": {
												"id": 868,
												"name": "ERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 699,
												"src": "819:5:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "819:49:5"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "_liquidityWallet",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "768:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "768:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "_treasuryWallet",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "794:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "794:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "767:51:5"
									},
									"returnParameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "869:0:5"
									},
									"scope": 1086,
									"src": "756:258:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										236
									],
									"body": {
										"id": 908,
										"nodeType": "Block",
										"src": "1106:93:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 899,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "1139:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 901,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1160:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 902,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1160:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 903,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 889,
																	"src": "1172:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 904,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 891,
																	"src": "1183:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 900,
																"name": "applyFees",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1055,
																"src": "1150:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (address,address,uint256) returns (uint256)"
																}
															},
															"id": 905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1150:40:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 897,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1124:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_MemeTokenTest_$1086_$",
																"typeString": "type(contract super MemeTokenTest)"
															}
														},
														"id": 898,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 236,
														"src": "1124:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1124:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 896,
												"id": 907,
												"nodeType": "Return",
												"src": "1117:74:5"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 893,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1082:8:5"
									},
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1040:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1040:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1059:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1059:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:35:5"
									},
									"returnParameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1100:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 894,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1100:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1099:6:5"
									},
									"scope": 1086,
									"src": "1022:177:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										312
									],
									"body": {
										"id": 932,
										"nodeType": "Block",
										"src": "1311:101:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 923,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "1348:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 924,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "1356:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 926,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "1377:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 927,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "1385:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 928,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 915,
																	"src": "1396:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 925,
																"name": "applyFees",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1055,
																"src": "1367:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (address,address,uint256) returns (uint256)"
																}
															},
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1367:36:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 921,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1329:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_MemeTokenTest_$1086_$",
																"typeString": "type(contract super MemeTokenTest)"
															}
														},
														"id": 922,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 312,
														"src": "1329:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1329:75:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 920,
												"id": 931,
												"nodeType": "Return",
												"src": "1322:82:5"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 933,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 917,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1287:8:5"
									},
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "1229:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1229:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "1245:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1245:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "1264:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1264:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1228:51:5"
									},
									"returnParameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "1305:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 918,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1305:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1304:6:5"
									},
									"scope": 1086,
									"src": "1207:205:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1054,
										"nodeType": "Block",
										"src": "1517:968:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 954,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 944,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 937,
																	"src": "1532:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 945,
																	"name": "DEAD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 839,
																	"src": "1545:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1532:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 947,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 937,
																	"src": "1553:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 948,
																	"name": "ZERO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 842,
																	"src": "1566:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1553:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1532:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 951,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 935,
																"src": "1574:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 952,
																"name": "liquidityWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 834,
																"src": "1584:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1574:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1532:67:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 957,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 955,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "1603:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 956,
															"name": "treasuryWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "1613:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "1603:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1532:95:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 962,
												"nodeType": "IfStatement",
												"src": "1528:141:5",
												"trueBody": {
													"id": 961,
													"nodeType": "Block",
													"src": "1629:40:5",
													"statements": [
														{
															"expression": {
																"id": 959,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 939,
																"src": "1651:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 943,
															"id": 960,
															"nodeType": "Return",
															"src": "1644:13:5"
														}
													]
												}
											},
											{
												"assignments": [
													964
												],
												"declarations": [
													{
														"constant": false,
														"id": 964,
														"mutability": "mutable",
														"name": "liquidityFeeAmount",
														"nodeType": "VariableDeclaration",
														"scope": 1054,
														"src": "1681:26:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 963,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1681:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 970,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 967,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 965,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "1710:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 966,
															"name": "liquidityFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "1719:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1710:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 968,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1734:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "1710:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1681:58:5"
											},
											{
												"assignments": [
													972
												],
												"declarations": [
													{
														"constant": false,
														"id": 972,
														"mutability": "mutable",
														"name": "treasuryFeeAmount",
														"nodeType": "VariableDeclaration",
														"scope": 1054,
														"src": "1750:25:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 971,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1750:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 978,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 975,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 973,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "1778:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 974,
															"name": "treasuryFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "1787:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1778:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 976,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1801:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "1778:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1750:56:5"
											},
											{
												"assignments": [
													980
												],
												"declarations": [
													{
														"constant": false,
														"id": 980,
														"mutability": "mutable",
														"name": "burnAmount",
														"nodeType": "VariableDeclaration",
														"scope": 1054,
														"src": "1817:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 979,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1817:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 986,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 983,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 981,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "1838:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 982,
															"name": "burnRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 862,
															"src": "1847:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1838:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 984,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1858:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "1838:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1817:46:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 987,
														"name": "recipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "1880:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 988,
														"name": "liquidityWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "1893:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1880:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 998,
												"nodeType": "IfStatement",
												"src": "1876:112:5",
												"trueBody": {
													"id": 997,
													"nodeType": "Block",
													"src": "1910:78:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 993,
																		"name": "liquidityWallet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 834,
																		"src": "1940:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 994,
																		"name": "liquidityFeeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 964,
																		"src": "1957:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 990,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "1925:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_MemeTokenTest_$1086_$",
																			"typeString": "type(contract super MemeTokenTest)"
																		}
																	},
																	"id": 992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 236,
																	"src": "1925:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) returns (bool)"
																	}
																},
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1925:51:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 996,
															"nodeType": "ExpressionStatement",
															"src": "1925:51:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 999,
														"name": "recipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "2004:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1000,
														"name": "treasuryWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "2017:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2004:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1010,
												"nodeType": "IfStatement",
												"src": "2000:109:5",
												"trueBody": {
													"id": 1009,
													"nodeType": "Block",
													"src": "2033:76:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1005,
																		"name": "treasuryWallet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 836,
																		"src": "2063:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1006,
																		"name": "treasuryFeeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 972,
																		"src": "2079:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1002,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "2048:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_MemeTokenTest_$1086_$",
																			"typeString": "type(contract super MemeTokenTest)"
																		}
																	},
																	"id": 1004,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 236,
																	"src": "2048:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) returns (bool)"
																	}
																},
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:49:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1008,
															"nodeType": "ExpressionStatement",
															"src": "2048:49:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1012,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "2127:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1013,
															"name": "burnAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "2135:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1011,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "2121:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2121:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1015,
												"nodeType": "ExpressionStatement",
												"src": "2121:25:5"
											},
											{
												"assignments": [
													1017
												],
												"declarations": [
													{
														"constant": false,
														"id": 1017,
														"mutability": "mutable",
														"name": "sellFeeAmount",
														"nodeType": "VariableDeclaration",
														"scope": 1054,
														"src": "2159:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1016,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2159:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1019,
												"initialValue": {
													"hexValue": "30",
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2183:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2159:25:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1022,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1020,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "2199:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1021,
															"name": "liquidityWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "2209:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2199:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1025,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1023,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "2228:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1024,
															"name": "treasuryWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "2238:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2228:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2199:53:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1043,
												"nodeType": "IfStatement",
												"src": "2195:187:5",
												"trueBody": {
													"id": 1042,
													"nodeType": "Block",
													"src": "2254:128:5",
													"statements": [
														{
															"expression": {
																"id": 1033,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1027,
																	"name": "sellFeeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1017,
																	"src": "2269:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1030,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1028,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 939,
																			"src": "2285:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1029,
																			"name": "sellFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 859,
																			"src": "2294:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2285:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "3130303030",
																		"id": 1031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2304:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "10000"
																	},
																	"src": "2285:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2269:40:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1034,
															"nodeType": "ExpressionStatement",
															"src": "2269:40:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1038,
																		"name": "liquidityWallet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 834,
																		"src": "2339:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1039,
																		"name": "sellFeeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1017,
																		"src": "2356:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1035,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "2324:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_MemeTokenTest_$1086_$",
																			"typeString": "type(contract super MemeTokenTest)"
																		}
																	},
																	"id": 1037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 236,
																	"src": "2324:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) returns (bool)"
																	}
																},
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2324:46:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1041,
															"nodeType": "ExpressionStatement",
															"src": "2324:46:5"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1050,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1046,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1044,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 939,
																	"src": "2401:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1045,
																	"name": "liquidityFeeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 964,
																	"src": "2410:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2401:27:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1047,
																"name": "treasuryFeeAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 972,
																"src": "2431:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2401:47:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1049,
															"name": "burnAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "2451:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2401:60:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1051,
														"name": "sellFeeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "2464:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2401:76:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 943,
												"id": 1053,
												"nodeType": "Return",
												"src": "2394:83:5"
											}
										]
									},
									"id": 1055,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "applyFees",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "1439:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1439:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "1455:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1455:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "1474:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1474:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1438:51:5"
									},
									"returnParameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "1508:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1508:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1507:9:5"
									},
									"scope": 1086,
									"src": "1420:1065:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1084,
										"nodeType": "Block",
										"src": "2611:144:5",
										"statements": [
											{
												"expression": {
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1068,
														"name": "liquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "2622:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1069,
														"name": "_liquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1057,
														"src": "2637:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2622:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1071,
												"nodeType": "ExpressionStatement",
												"src": "2622:28:5"
											},
											{
												"expression": {
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1072,
														"name": "treasuryFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "2661:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1073,
														"name": "_treasuryFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1059,
														"src": "2675:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2661:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1075,
												"nodeType": "ExpressionStatement",
												"src": "2661:26:5"
											},
											{
												"expression": {
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1076,
														"name": "sellFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 859,
														"src": "2698:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1077,
														"name": "_sellFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "2708:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2698:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1079,
												"nodeType": "ExpressionStatement",
												"src": "2698:18:5"
											},
											{
												"expression": {
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1080,
														"name": "burnRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "2727:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1081,
														"name": "_burnRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1063,
														"src": "2738:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2727:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1083,
												"nodeType": "ExpressionStatement",
												"src": "2727:20:5"
											}
										]
									},
									"functionSelector": "6fcba377",
									"id": 1085,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1066,
											"modifierName": {
												"id": 1065,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2601:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2601:9:5"
										}
									],
									"name": "setFees",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "_liquidityFee",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "2510:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2510:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "_treasuryFee",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "2533:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2533:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "_sellFee",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "2555:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2555:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "_burnRate",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "2573:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2573:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2509:82:5"
									},
									"returnParameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2611:0:5"
									},
									"scope": 1086,
									"src": "2493:262:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1087,
							"src": "173:2585:5"
						}
					],
					"src": "33:2727:5"
				},
				"id": 5
			}
		}
	}
}