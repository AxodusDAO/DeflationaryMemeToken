{
	"id": "7e24e1d16d97499d146ef17b07581d2c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.2",
	"solcLongVersion": "0.8.2+commit.661d1103",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/memetoken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.2;\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/utils/Address.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ncontract DeflationaryToken is IERC20 {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    string public constant name = \"[TEST] Deflationary Token\";\r\n    string public constant symbol = \"DFT04\";\r\n    uint8 public constant decimals = 18;\r\n\r\n    mapping(address => uint256) private _balances;\r\n    mapping(address => mapping (address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply = 1000000000 * 10**18;\r\n\r\n    address public constant burnAddress1 = 0x000000000000000000000000000000000000dEaD;\r\n    address public constant burnAddress2 = 0x0000000000000000000000000000000000000000;\r\n    address public constant liquidityWallet = 0x2C604d9E15e6524F0bB2a2A22F63a7Ca041e84C3;\r\n    address public constant treasuryWallet = 0xcC5e043C5142033a800A72286356317dAcb57A77;\r\n\r\n    uint256 public constant liquidityFee = 50;\r\n    uint256 public constant treasuryFee = 90;\r\n    uint256 public constant sellFee = 30;\r\n    uint256 public constant burnRate = 30;\r\n\r\n    constructor () {\r\n        _balances[liquidityWallet] = _totalSupply;\r\n        emit Transfer(address(0), liquidityWallet, _totalSupply);\r\n    }\r\n\r\n    function totalSupply() public view override returns (uint256) {\r\n        return _totalSupply.sub(_balances[burnAddress1]).sub(_balances[burnAddress2]);\r\n    }\r\n\r\n    function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount));\r\n        return true;\r\n    }\r\n\r\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\r\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        uint256 senderBalance = _balances[sender];\r\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\r\n\r\n        uint256 liquidityAmount = amount.mul(liquidityFee).div(100);\r\n        uint256 treasuryAmount = amount.mul(treasuryFee).div(100);\r\n        uint256 sellAmount = recipient == burnAddress1 || recipient == burnAddress2 ? amount.mul(sellFee).div(100) : 0;\r\n        uint256 burnAmount = amount.mul(burnRate).div(100);\r\n\r\n        uint256 totalFee = liquidityAmount.add(treasuryAmount).add(sellAmount);\r\n        uint256 receiveAmount = amount.sub(totalFee).sub(burnAmount);\r\n\r\n        _balances[sender] = senderBalance.sub(amount);\r\n        _balances[recipient] = _balances[recipient].add(receiveAmount);\r\n        _balances[liquidityWallet] = _balances[liquidityWallet].add(liquidityAmount);\r\n        _balances[treasuryWallet] = _balances[treasuryWallet].add(treasuryAmount);\r\n\r\n        if (sellAmount > 0) {\r\n            _balances[burnAddress1] = _balances[burnAddress1].add(sellAmount.div(2));\r\n            _balances[burnAddress2] = _balances[burnAddress2].add(sellAmount.div(2));\r\n        }\r\n\r\n        emit Transfer(sender, recipient, receiveAmount);\r\n        if (totalFee > 0) {\r\n            emit Transfer(sender, liquidityWallet, liquidityAmount);\r\n            emit Transfer(sender, treasuryWallet, treasuryAmount);\r\n        }\r\n        if (burnAmount > 0) {\r\n            emit Transfer(sender, burnAddress1, burnAmount);\r\n        }\r\n    }\r\n\r\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122015ea83ba7f41266de43ca67a32204b912fee03671d72f845e27a29702b97aa1f64736f6c63430008020033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122015ea83ba7f41266de43ca67a32204b912fee03671d72f845e27a29702b97aa1f64736f6c63430008020033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO 0xEA DUP4 0xBA PUSH32 0x41266DE43CA67A32204B912FEE03671D72F845E27A29702B97AA1F64736F6C63 NUMBER STOP ADDMOD MUL STOP CALLER ",
							"sourceMap": "194:9169:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9169:1;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122015ea83ba7f41266de43ca67a32204b912fee03671d72f845e27a29702b97aa1f64736f6c63430008020033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO 0xEA DUP4 0xBA PUSH32 0x41266DE43CA67A32204B912FEE03671D72F845E27A29702B97AA1F64736F6C63 NUMBER STOP ADDMOD MUL STOP CALLER ",
							"sourceMap": "194:9169:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122015ea83ba7f41266de43ca67a32204b912fee03671d72f845e27a29702b97aa1f64736f6c63430008020033",
									".code": [
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122092a700132f41bd952ad8c97e423e9b4d824f15cacba7d413703fd8dc2c085f4c64736f6c63430008020033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122092a700132f41bd952ad8c97e423e9b4d824f15cacba7d413703fd8dc2c085f4c64736f6c63430008020033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 0xA7 STOP SGT 0x2F COINBASE 0xBD SWAP6 0x2A 0xD8 0xC9 PUSH31 0x423E9B4D824F15CACBA7D413703FD8DC2C085F4C64736F6C63430008020033 ",
							"sourceMap": "482:6210:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6210:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122092a700132f41bd952ad8c97e423e9b4d824f15cacba7d413703fd8dc2c085f4c64736f6c63430008020033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 0xA7 STOP SGT 0x2F COINBASE 0xBD SWAP6 0x2A 0xD8 0xC9 PUSH31 0x423E9B4D824F15CACBA7D413703FD8DC2C085F4C64736F6C63430008020033 ",
							"sourceMap": "482:6210:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122092a700132f41bd952ad8c97e423e9b4d824f15cacba7d413703fd8dc2c085f4c64736f6c63430008020033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/memetoken.sol": {
				"DeflationaryToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "burnAddress1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "burnAddress2",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "burnRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidityFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidityWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sellFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasuryFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasuryWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/memetoken.sol\":233:4593  contract DeflationaryToken is IERC20 {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/memetoken.sol\":658:677  1000000000 * 10**18 */\n  0x033b2e3c9fd0803ce8000000\n    /* \"contracts/memetoken.sol\":627:677  uint256 private _totalSupply = 1000000000 * 10**18 */\n  0x02\n  sstore\n    /* \"contracts/memetoken.sol\":1229:1371  constructor () {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/memetoken.sol\":1284:1296  _totalSupply */\n  sload(0x02)\n    /* \"contracts/memetoken.sol\":904:946  0x2C604d9E15e6524F0bB2a2A22F63a7Ca041e84C3 */\n  0x2c604d9e15e6524f0bb2a2a22f63a7ca041e84c3\n    /* \"contracts/memetoken.sol\":1255:1264  _balances */\n  0x00\n    /* \"contracts/memetoken.sol\":1255:1281  _balances[liquidityWallet] */\n  dup2\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0xb7a07c5f0332c350d219d103c30b3f8d55a382aeeef7f1ba4f6d049e5d945968\n    /* \"contracts/memetoken.sol\":1255:1296  _balances[liquidityWallet] = _totalSupply */\n  dup5\n  swap1\n  sstore\n    /* \"contracts/memetoken.sol\":1255:1281  _balances[liquidityWallet] */\n  0x40\n    /* \"contracts/memetoken.sol\":1312:1363  Transfer(address(0), liquidityWallet, _totalSupply) */\n  mload\n    /* \"#utility.yul\":160:185   */\n  swap4\n  dup5\n  mstore\n    /* \"contracts/memetoken.sol\":904:946  0x2C604d9E15e6524F0bB2a2A22F63a7Ca041e84C3 */\n  swap2\n  swap3\n    /* \"contracts/memetoken.sol\":1255:1264  _balances */\n  swap1\n  swap2\n    /* \"contracts/memetoken.sol\":1312:1363  Transfer(address(0), liquidityWallet, _totalSupply) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap2\n    /* \"#utility.yul\":133:151   */\n  add\n    /* \"contracts/memetoken.sol\":1312:1363  Transfer(address(0), liquidityWallet, _totalSupply) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/memetoken.sol\":233:4593  contract DeflationaryToken is IERC20 {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/memetoken.sol\":233:4593  contract DeflationaryToken is IERC20 {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x472a0b2a\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xbed99850\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xcc32d176\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xd4698016\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x472a0b2a\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x98118cb4\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x2b14ca56\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x2b14ca56\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x311e6703\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4626402b\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/memetoken.sol\":344:401  string public constant name = \"[TEST] Deflationary Token\" */\n    tag_3:\n      tag_23\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x19\n      dup2\n      mstore\n      0x20\n      add\n      0x5b544553545d204465666c6174696f6e61727920546f6b656e00000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/memetoken.sol\":2014:2183  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_4:\n      tag_27\n      tag_28\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n        /* \"#utility.yul\":1653:1667   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1646:1668   */\n      iszero\n        /* \"#utility.yul\":1628:1669   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1616:1618   */\n      0x20\n        /* \"#utility.yul\":1601:1619   */\n      add\n        /* \"contracts/memetoken.sol\":2014:2183  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n      tag_25\n        /* \"#utility.yul\":1583:1675   */\n      jump\n        /* \"contracts/memetoken.sol\":1379:1537  function totalSupply() public view override returns (uint256) {\r... */\n    tag_5:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n        /* \"#utility.yul\":4053:4078   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":4041:4043   */\n      0x20\n        /* \"#utility.yul\":4026:4044   */\n      add\n        /* \"contracts/memetoken.sol\":1379:1537  function totalSupply() public view override returns (uint256) {\r... */\n      tag_25\n        /* \"#utility.yul\":4008:4084   */\n      jump\n        /* \"contracts/memetoken.sol\":2191:2468  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_6:\n      tag_27\n      tag_38\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n        /* \"contracts/memetoken.sol\":1140:1176  uint256 public constant sellFee = 30 */\n    tag_7:\n      tag_33\n        /* \"contracts/memetoken.sol\":1174:1176  30 */\n      0x1e\n        /* \"contracts/memetoken.sol\":1140:1176  uint256 public constant sellFee = 30 */\n      dup2\n      jump\n        /* \"contracts/memetoken.sol\":774:855  address public constant burnAddress2 = 0x0000000000000000000000000000000000000000 */\n    tag_8:\n      tag_45\n        /* \"contracts/memetoken.sol\":813:855  0x0000000000000000000000000000000000000000 */\n      0x00\n        /* \"contracts/memetoken.sol\":774:855  address public constant burnAddress2 = 0x0000000000000000000000000000000000000000 */\n      dup2\n      jump\n    tag_45:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1444:1476   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1426:1477   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1414:1416   */\n      0x20\n        /* \"#utility.yul\":1399:1417   */\n      add\n        /* \"contracts/memetoken.sol\":774:855  address public constant burnAddress2 = 0x0000000000000000000000000000000000000000 */\n      tag_25\n        /* \"#utility.yul\":1381:1483   */\n      jump\n        /* \"contracts/memetoken.sol\":454:489  uint8 public constant decimals = 18 */\n    tag_9:\n      tag_49\n        /* \"contracts/memetoken.sol\":487:489  18 */\n      0x12\n        /* \"contracts/memetoken.sol\":454:489  uint8 public constant decimals = 18 */\n      dup2\n      jump\n    tag_49:\n      mload(0x40)\n        /* \"#utility.yul\":4261:4265   */\n      0xff\n        /* \"#utility.yul\":4249:4266   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4231:4267   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4219:4221   */\n      0x20\n        /* \"#utility.yul\":4204:4222   */\n      add\n        /* \"contracts/memetoken.sol\":454:489  uint8 public constant decimals = 18 */\n      tag_25\n        /* \"#utility.yul\":4186:4273   */\n      jump\n        /* \"contracts/memetoken.sol\":953:1036  address public constant treasuryWallet = 0xcC5e043C5142033a800A72286356317dAcb57A77 */\n    tag_10:\n      tag_45\n        /* \"contracts/memetoken.sol\":994:1036  0xcC5e043C5142033a800A72286356317dAcb57A77 */\n      0xcc5e043c5142033a800a72286356317dacb57a77\n        /* \"contracts/memetoken.sol\":953:1036  address public constant treasuryWallet = 0xcC5e043C5142033a800A72286356317dAcb57A77 */\n      dup2\n      jump\n        /* \"contracts/memetoken.sol\":686:767  address public constant burnAddress1 = 0x000000000000000000000000000000000000dEaD */\n    tag_11:\n      tag_45\n        /* \"contracts/memetoken.sol\":725:767  0x000000000000000000000000000000000000dEaD */\n      0xdead\n        /* \"contracts/memetoken.sol\":686:767  address public constant burnAddress1 = 0x000000000000000000000000000000000000dEaD */\n      dup2\n      jump\n        /* \"contracts/memetoken.sol\":1545:1664  function balanceOf(address account) public view override returns (uint256) {\r... */\n    tag_12:\n      tag_33\n      tag_60\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n        /* \"contracts/memetoken.sol\":408:447  string public constant symbol = \"DFT04\" */\n    tag_13:\n      tag_23\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xda, 0x1111950c0d)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\n        /* \"contracts/memetoken.sol\":1045:1086  uint256 public constant liquidityFee = 50 */\n    tag_14:\n      tag_33\n        /* \"contracts/memetoken.sol\":1084:1086  50 */\n      0x32\n        /* \"contracts/memetoken.sol\":1045:1086  uint256 public constant liquidityFee = 50 */\n      dup2\n      jump\n        /* \"contracts/memetoken.sol\":1672:1847  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_15:\n      tag_27\n      tag_71\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n        /* \"contracts/memetoken.sol\":1093:1133  uint256 public constant treasuryFee = 90 */\n    tag_17:\n      tag_33\n        /* \"contracts/memetoken.sol\":1131:1133  90 */\n      0x5a\n        /* \"contracts/memetoken.sol\":1093:1133  uint256 public constant treasuryFee = 90 */\n      dup2\n      jump\n        /* \"contracts/memetoken.sol\":862:946  address public constant liquidityWallet = 0x2C604d9E15e6524F0bB2a2A22F63a7Ca041e84C3 */\n    tag_18:\n      tag_45\n        /* \"contracts/memetoken.sol\":904:946  0x2C604d9E15e6524F0bB2a2A22F63a7Ca041e84C3 */\n      0x2c604d9e15e6524f0bb2a2a22f63a7ca041e84c3\n        /* \"contracts/memetoken.sol\":862:946  address public constant liquidityWallet = 0x2C604d9E15e6524F0bB2a2A22F63a7Ca041e84C3 */\n      dup2\n      jump\n        /* \"contracts/memetoken.sol\":1855:2006  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n    tag_19:\n      tag_33\n      tag_84\n      calldatasize\n      0x04\n      tag_85\n      jump\t// in\n    tag_84:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/memetoken.sol\":1971:1989  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/memetoken.sol\":1944:1951  uint256 */\n      0x00\n        /* \"contracts/memetoken.sol\":1971:1989  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/memetoken.sol\":1971:1982  _allowances */\n      0x01\n        /* \"contracts/memetoken.sol\":1971:1989  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/memetoken.sol\":1971:1998  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/memetoken.sol\":1855:2006  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n      jump\n        /* \"contracts/memetoken.sol\":2014:2183  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_30:\n        /* \"contracts/memetoken.sol\":2097:2101  bool */\n      0x00\n        /* \"contracts/memetoken.sol\":2114:2153  _approve(_msgSender(), spender, amount) */\n      tag_89\n        /* \"contracts/memetoken.sol\":4572:4582  msg.sender */\n      caller\n        /* \"contracts/memetoken.sol\":2137:2144  spender */\n      dup5\n        /* \"contracts/memetoken.sol\":2146:2152  amount */\n      dup5\n        /* \"contracts/memetoken.sol\":2114:2122  _approve */\n      tag_92\n        /* \"contracts/memetoken.sol\":2114:2153  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_89:\n      pop\n        /* \"contracts/memetoken.sol\":2171:2175  true */\n      0x01\n        /* \"contracts/memetoken.sol\":2014:2183  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/memetoken.sol\":1379:1537  function totalSupply() public view override returns (uint256) {\r... */\n    tag_34:\n        /* \"contracts/memetoken.sol\":1432:1439  uint256 */\n      0x00\n        /* \"contracts/memetoken.sol\":1505:1528  _balances[burnAddress2] */\n      0x20\n      dup2\n      swap1\n      mstore\n      sload(0xad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5)\n        /* \"contracts/memetoken.sol\":725:767  0x000000000000000000000000000000000000dEaD */\n      0xdead\n        /* \"contracts/memetoken.sol\":1476:1499  _balances[burnAddress1] */\n      dup3\n      mstore\n      sload(0x44ad89ba62b98ff34f51403ac22759b55759460c0bb5521eb4b6ee3cff49cf83)\n        /* \"contracts/memetoken.sol\":1459:1471  _totalSupply */\n      sload(0x02)\n        /* \"contracts/memetoken.sol\":1459:1529  _totalSupply.sub(_balances[burnAddress1]).sub(_balances[burnAddress2]) */\n      tag_94\n      swap3\n        /* \"contracts/memetoken.sol\":1505:1528  _balances[burnAddress2] */\n      swap2\n        /* \"contracts/memetoken.sol\":1459:1500  _totalSupply.sub(_balances[burnAddress1]) */\n      tag_95\n      swap2\n        /* \"contracts/memetoken.sol\":1459:1471  _totalSupply */\n      swap1\n        /* \"contracts/memetoken.sol\":1459:1475  _totalSupply.sub */\n      tag_96\n        /* \"contracts/memetoken.sol\":1459:1500  _totalSupply.sub(_balances[burnAddress1]) */\n      jump\t// in\n    tag_95:\n        /* \"contracts/memetoken.sol\":1459:1504  _totalSupply.sub(_balances[burnAddress1]).sub */\n      swap1\n      tag_96\n        /* \"contracts/memetoken.sol\":1459:1529  _totalSupply.sub(_balances[burnAddress1]).sub(_balances[burnAddress2]) */\n      jump\t// in\n    tag_94:\n        /* \"contracts/memetoken.sol\":1452:1529  return _totalSupply.sub(_balances[burnAddress1]).sub(_balances[burnAddress2]) */\n      swap1\n      pop\n        /* \"contracts/memetoken.sol\":1379:1537  function totalSupply() public view override returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/memetoken.sol\":2191:2468  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_40:\n        /* \"contracts/memetoken.sol\":2297:2301  bool */\n      0x00\n        /* \"contracts/memetoken.sol\":2314:2350  _transfer(sender, recipient, amount) */\n      tag_98\n        /* \"contracts/memetoken.sol\":2324:2330  sender */\n      dup5\n        /* \"contracts/memetoken.sol\":2332:2341  recipient */\n      dup5\n        /* \"contracts/memetoken.sol\":2343:2349  amount */\n      dup5\n        /* \"contracts/memetoken.sol\":2314:2323  _transfer */\n      tag_99\n        /* \"contracts/memetoken.sol\":2314:2350  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_98:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/memetoken.sol\":2392:2411  _allowances[sender] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/memetoken.sol\":2392:2403  _allowances */\n      0x01\n        /* \"contracts/memetoken.sol\":2392:2411  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/memetoken.sol\":4572:4582  msg.sender */\n      caller\n        /* \"contracts/memetoken.sol\":2392:2425  _allowances[sender][_msgSender()] */\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"contracts/memetoken.sol\":2361:2438  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount)) */\n      tag_100\n      swap2\n        /* \"contracts/memetoken.sol\":2370:2376  sender */\n      dup7\n      swap2\n        /* \"contracts/memetoken.sol\":2392:2437  _allowances[sender][_msgSender()].sub(amount) */\n      tag_102\n      swap1\n        /* \"contracts/memetoken.sol\":2430:2436  amount */\n      dup7\n        /* \"contracts/memetoken.sol\":2392:2429  _allowances[sender][_msgSender()].sub */\n      tag_96\n        /* \"contracts/memetoken.sol\":2392:2437  _allowances[sender][_msgSender()].sub(amount) */\n      jump\t// in\n    tag_102:\n        /* \"contracts/memetoken.sol\":2361:2369  _approve */\n      tag_92\n        /* \"contracts/memetoken.sol\":2361:2438  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount)) */\n      jump\t// in\n    tag_100:\n      pop\n        /* \"contracts/memetoken.sol\":2456:2460  true */\n      0x01\n        /* \"contracts/memetoken.sol\":2191:2468  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/memetoken.sol\":1545:1664  function balanceOf(address account) public view override returns (uint256) {\r... */\n    tag_62:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/memetoken.sol\":1638:1656  _balances[account] */\n      dup2\n      and\n        /* \"contracts/memetoken.sol\":1611:1618  uint256 */\n      0x00\n        /* \"contracts/memetoken.sol\":1638:1656  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/memetoken.sol\":1545:1664  function balanceOf(address account) public view override returns (uint256) {\r... */\n    tag_104:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/memetoken.sol\":1672:1847  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_72:\n        /* \"contracts/memetoken.sol\":1758:1762  bool */\n      0x00\n        /* \"contracts/memetoken.sol\":1775:1817  _transfer(_msgSender(), recipient, amount) */\n      tag_89\n        /* \"contracts/memetoken.sol\":4572:4582  msg.sender */\n      caller\n        /* \"contracts/memetoken.sol\":1799:1808  recipient */\n      dup5\n        /* \"contracts/memetoken.sol\":1810:1816  amount */\n      dup5\n        /* \"contracts/memetoken.sol\":1775:1784  _transfer */\n      tag_99\n        /* \"contracts/memetoken.sol\":1775:1817  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"contracts/memetoken.sol\":4138:4484  function _approve(address owner, address spender, uint256 amount) internal virtual {\r... */\n    tag_92:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/memetoken.sol\":4240:4259  owner != address(0) */\n      dup4\n      and\n        /* \"contracts/memetoken.sol\":4232:4300  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3704:3706   */\n      0x20\n        /* \"contracts/memetoken.sol\":4232:4300  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3686:3707   */\n      mstore\n        /* \"#utility.yul\":3743:3745   */\n      0x24\n        /* \"#utility.yul\":3723:3741   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3716:3746   */\n      mstore\n        /* \"#utility.yul\":3782:3816   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3762:3780   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3755:3817   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3833:3851   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3826:3860   */\n      mstore\n        /* \"#utility.yul\":3877:3896   */\n      0x84\n      add\n        /* \"contracts/memetoken.sol\":4232:4300  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/memetoken.sol\":4319:4340  spender != address(0) */\n      dup3\n      and\n        /* \"contracts/memetoken.sol\":4311:4379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2894:2896   */\n      0x20\n        /* \"contracts/memetoken.sol\":4311:4379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2876:2897   */\n      mstore\n        /* \"#utility.yul\":2933:2935   */\n      0x22\n        /* \"#utility.yul\":2913:2931   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2906:2936   */\n      mstore\n        /* \"#utility.yul\":2972:3006   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":2952:2970   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2945:3007   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":3023:3041   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3016:3048   */\n      mstore\n        /* \"#utility.yul\":3065:3084   */\n      0x84\n      add\n        /* \"contracts/memetoken.sol\":4311:4379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n        /* \"#utility.yul\":2866:3090   */\n      jump\n        /* \"contracts/memetoken.sol\":4311:4379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_114:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/memetoken.sol\":4392:4410  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/memetoken.sol\":4392:4403  _allowances */\n      0x01\n        /* \"contracts/memetoken.sol\":4392:4410  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/memetoken.sol\":4392:4419  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/memetoken.sol\":4392:4428  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/memetoken.sol\":4444:4476  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":4053:4078   */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/memetoken.sol\":4444:4476  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":4026:4044   */\n      add\n        /* \"contracts/memetoken.sol\":4444:4476  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/memetoken.sol\":4138:4484  function _approve(address owner, address spender, uint256 amount) internal virtual {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_119\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_120\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/memetoken.sol\":2476:4130  function _transfer(address sender, address recipient, uint256 amount) internal virtual {\r... */\n    tag_99:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/memetoken.sol\":2582:2605  recipient != address(0) */\n      dup3\n      and\n        /* \"contracts/memetoken.sol\":2574:2645  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2490:2492   */\n      0x20\n        /* \"contracts/memetoken.sol\":2574:2645  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2472:2493   */\n      mstore\n        /* \"#utility.yul\":2529:2531   */\n      0x23\n        /* \"#utility.yul\":2509:2527   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2502:2532   */\n      mstore\n        /* \"#utility.yul\":2568:2602   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2548:2566   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2541:2603   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":2619:2637   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2612:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2681   */\n      0x84\n      add\n        /* \"contracts/memetoken.sol\":2574:2645  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_112\n        /* \"#utility.yul\":2462:2687   */\n      jump\n        /* \"contracts/memetoken.sol\":2574:2645  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n    tag_122:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/memetoken.sol\":2682:2699  _balances[sender] */\n      dup4\n      and\n        /* \"contracts/memetoken.sol\":2658:2679  uint256 senderBalance */\n      0x00\n        /* \"contracts/memetoken.sol\":2682:2699  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/memetoken.sol\":2718:2741  senderBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"contracts/memetoken.sol\":2710:2784  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3297:3299   */\n      0x20\n        /* \"contracts/memetoken.sol\":2710:2784  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3279:3300   */\n      mstore\n        /* \"#utility.yul\":3336:3338   */\n      0x26\n        /* \"#utility.yul\":3316:3334   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3309:3339   */\n      mstore\n        /* \"#utility.yul\":3375:3409   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":3355:3373   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3348:3410   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":3426:3444   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3419:3455   */\n      mstore\n        /* \"#utility.yul\":3472:3491   */\n      0x84\n      add\n        /* \"contracts/memetoken.sol\":2710:2784  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_112\n        /* \"#utility.yul\":3269:3497   */\n      jump\n        /* \"contracts/memetoken.sol\":2710:2784  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_125:\n        /* \"contracts/memetoken.sol\":2797:2820  uint256 liquidityAmount */\n      0x00\n        /* \"contracts/memetoken.sol\":2823:2856  amount.mul(liquidityFee).div(100) */\n      tag_128\n        /* \"contracts/memetoken.sol\":2852:2855  100 */\n      0x64\n        /* \"contracts/memetoken.sol\":2823:2847  amount.mul(liquidityFee) */\n      tag_129\n        /* \"contracts/memetoken.sol\":2823:2829  amount */\n      dup6\n        /* \"contracts/memetoken.sol\":1084:1086  50 */\n      0x32\n        /* \"contracts/memetoken.sol\":2823:2833  amount.mul */\n      tag_130\n        /* \"contracts/memetoken.sol\":2823:2847  amount.mul(liquidityFee) */\n      jump\t// in\n    tag_129:\n        /* \"contracts/memetoken.sol\":2823:2851  amount.mul(liquidityFee).div */\n      swap1\n      tag_131\n        /* \"contracts/memetoken.sol\":2823:2856  amount.mul(liquidityFee).div(100) */\n      jump\t// in\n    tag_128:\n        /* \"contracts/memetoken.sol\":2797:2856  uint256 liquidityAmount = amount.mul(liquidityFee).div(100) */\n      swap1\n      pop\n        /* \"contracts/memetoken.sol\":2867:2889  uint256 treasuryAmount */\n      0x00\n        /* \"contracts/memetoken.sol\":2892:2924  amount.mul(treasuryFee).div(100) */\n      tag_132\n        /* \"contracts/memetoken.sol\":2920:2923  100 */\n      0x64\n        /* \"contracts/memetoken.sol\":2892:2915  amount.mul(treasuryFee) */\n      tag_129\n        /* \"contracts/memetoken.sol\":2892:2898  amount */\n      dup7\n        /* \"contracts/memetoken.sol\":1131:1133  90 */\n      0x5a\n        /* \"contracts/memetoken.sol\":2892:2902  amount.mul */\n      tag_130\n        /* \"contracts/memetoken.sol\":2892:2915  amount.mul(treasuryFee) */\n      jump\t// in\n        /* \"contracts/memetoken.sol\":2892:2924  amount.mul(treasuryFee).div(100) */\n    tag_132:\n        /* \"contracts/memetoken.sol\":2867:2924  uint256 treasuryAmount = amount.mul(treasuryFee).div(100) */\n      swap1\n      pop\n        /* \"contracts/memetoken.sol\":2935:2953  uint256 sellAmount */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/memetoken.sol\":2956:2981  recipient == burnAddress1 */\n      dup7\n      and\n        /* \"contracts/memetoken.sol\":725:767  0x000000000000000000000000000000000000dEaD */\n      0xdead\n        /* \"contracts/memetoken.sol\":2956:2981  recipient == burnAddress1 */\n      eq\n      dup1\n        /* \"contracts/memetoken.sol\":2956:3010  recipient == burnAddress1 || recipient == burnAddress2 */\n      tag_134\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/memetoken.sol\":2985:3010  recipient == burnAddress2 */\n      dup7\n      and\n      iszero\n        /* \"contracts/memetoken.sol\":2956:3010  recipient == burnAddress1 || recipient == burnAddress2 */\n    tag_134:\n        /* \"contracts/memetoken.sol\":2956:3045  recipient == burnAddress1 || recipient == burnAddress2 ? amount.mul(sellFee).div(100) : 0 */\n      tag_135\n      jumpi\n        /* \"contracts/memetoken.sol\":3044:3045  0 */\n      0x00\n        /* \"contracts/memetoken.sol\":2956:3045  recipient == burnAddress1 || recipient == burnAddress2 ? amount.mul(sellFee).div(100) : 0 */\n      jump(tag_137)\n    tag_135:\n        /* \"contracts/memetoken.sol\":3013:3041  amount.mul(sellFee).div(100) */\n      tag_137\n        /* \"contracts/memetoken.sol\":3037:3040  100 */\n      0x64\n        /* \"contracts/memetoken.sol\":3013:3032  amount.mul(sellFee) */\n      tag_129\n        /* \"contracts/memetoken.sol\":3013:3019  amount */\n      dup8\n        /* \"contracts/memetoken.sol\":1174:1176  30 */\n      0x1e\n        /* \"contracts/memetoken.sol\":3013:3023  amount.mul */\n      tag_130\n        /* \"contracts/memetoken.sol\":3013:3032  amount.mul(sellFee) */\n      jump\t// in\n        /* \"contracts/memetoken.sol\":3013:3041  amount.mul(sellFee).div(100) */\n    tag_137:\n        /* \"contracts/memetoken.sol\":2935:3045  uint256 sellAmount = recipient == burnAddress1 || recipient == burnAddress2 ? amount.mul(sellFee).div(100) : 0 */\n      swap1\n      pop\n        /* \"contracts/memetoken.sol\":3056:3074  uint256 burnAmount */\n      0x00\n        /* \"contracts/memetoken.sol\":3077:3106  amount.mul(burnRate).div(100) */\n      tag_139\n        /* \"contracts/memetoken.sol\":3102:3105  100 */\n      0x64\n        /* \"contracts/memetoken.sol\":3077:3097  amount.mul(burnRate) */\n      tag_129\n        /* \"contracts/memetoken.sol\":3077:3083  amount */\n      dup9\n        /* \"contracts/memetoken.sol\":1218:1220  30 */\n      0x1e\n        /* \"contracts/memetoken.sol\":3077:3087  amount.mul */\n      tag_130\n        /* \"contracts/memetoken.sol\":3077:3097  amount.mul(burnRate) */\n      jump\t// in\n        /* \"contracts/memetoken.sol\":3077:3106  amount.mul(burnRate).div(100) */\n    tag_139:\n        /* \"contracts/memetoken.sol\":3056:3106  uint256 burnAmount = amount.mul(burnRate).div(100) */\n      swap1\n      pop\n        /* \"contracts/memetoken.sol\":3119:3135  uint256 totalFee */\n      0x00\n        /* \"contracts/memetoken.sol\":3138:3189  liquidityAmount.add(treasuryAmount).add(sellAmount) */\n      tag_141\n        /* \"contracts/memetoken.sol\":3178:3188  sellAmount */\n      dup4\n        /* \"contracts/memetoken.sol\":3138:3173  liquidityAmount.add(treasuryAmount) */\n      tag_142\n        /* \"contracts/memetoken.sol\":3138:3153  liquidityAmount */\n      dup8\n        /* \"contracts/memetoken.sol\":3158:3172  treasuryAmount */\n      dup8\n        /* \"contracts/memetoken.sol\":3138:3157  liquidityAmount.add */\n      tag_143\n        /* \"contracts/memetoken.sol\":3138:3173  liquidityAmount.add(treasuryAmount) */\n      jump\t// in\n    tag_142:\n        /* \"contracts/memetoken.sol\":3138:3177  liquidityAmount.add(treasuryAmount).add */\n      swap1\n      tag_143\n        /* \"contracts/memetoken.sol\":3138:3189  liquidityAmount.add(treasuryAmount).add(sellAmount) */\n      jump\t// in\n    tag_141:\n        /* \"contracts/memetoken.sol\":3119:3189  uint256 totalFee = liquidityAmount.add(treasuryAmount).add(sellAmount) */\n      swap1\n      pop\n        /* \"contracts/memetoken.sol\":3200:3221  uint256 receiveAmount */\n      0x00\n        /* \"contracts/memetoken.sol\":3224:3260  amount.sub(totalFee).sub(burnAmount) */\n      tag_144\n        /* \"contracts/memetoken.sol\":3249:3259  burnAmount */\n      dup4\n        /* \"contracts/memetoken.sol\":3224:3244  amount.sub(totalFee) */\n      tag_95\n        /* \"contracts/memetoken.sol\":3224:3230  amount */\n      dup11\n        /* \"contracts/memetoken.sol\":3119:3189  uint256 totalFee = liquidityAmount.add(treasuryAmount).add(sellAmount) */\n      dup6\n        /* \"contracts/memetoken.sol\":3224:3234  amount.sub */\n      tag_96\n        /* \"contracts/memetoken.sol\":3224:3244  amount.sub(totalFee) */\n      jump\t// in\n        /* \"contracts/memetoken.sol\":3224:3260  amount.sub(totalFee).sub(burnAmount) */\n    tag_144:\n        /* \"contracts/memetoken.sol\":3200:3260  uint256 receiveAmount = amount.sub(totalFee).sub(burnAmount) */\n      swap1\n      pop\n        /* \"contracts/memetoken.sol\":3293:3318  senderBalance.sub(amount) */\n      tag_146\n        /* \"contracts/memetoken.sol\":3293:3306  senderBalance */\n      dup8\n        /* \"contracts/memetoken.sol\":3311:3317  amount */\n      dup10\n        /* \"contracts/memetoken.sol\":3293:3310  senderBalance.sub */\n      tag_96\n        /* \"contracts/memetoken.sol\":3293:3318  senderBalance.sub(amount) */\n      jump\t// in\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/memetoken.sol\":3273:3290  _balances[sender] */\n      dup1\n      dup13\n      and\n        /* \"contracts/memetoken.sol\":3273:3282  _balances */\n      0x00\n        /* \"contracts/memetoken.sol\":3273:3290  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/memetoken.sol\":3273:3318  _balances[sender] = senderBalance.sub(amount) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/memetoken.sol\":3352:3372  _balances[recipient] */\n      swap1\n      dup12\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/memetoken.sol\":3352:3391  _balances[recipient].add(receiveAmount) */\n      tag_147\n      swap1\n        /* \"contracts/memetoken.sol\":3377:3390  receiveAmount */\n      dup3\n        /* \"contracts/memetoken.sol\":3352:3376  _balances[recipient].add */\n      tag_143\n        /* \"contracts/memetoken.sol\":3352:3391  _balances[recipient].add(receiveAmount) */\n      jump\t// in\n    tag_147:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/memetoken.sol\":3329:3349  _balances[recipient] */\n      dup11\n      and\n        /* \"contracts/memetoken.sol\":3329:3338  _balances */\n      0x00\n        /* \"contracts/memetoken.sol\":3329:3349  _balances[recipient] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/memetoken.sol\":3329:3391  _balances[recipient] = _balances[recipient].add(receiveAmount) */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/memetoken.sol\":904:946  0x2C604d9E15e6524F0bB2a2A22F63a7Ca041e84C3 */\n      0x2c604d9e15e6524f0bb2a2a22f63a7ca041e84c3\n        /* \"contracts/memetoken.sol\":3431:3457  _balances[liquidityWallet] */\n      swap1\n      mstore\n      sload(0xb7a07c5f0332c350d219d103c30b3f8d55a382aeeef7f1ba4f6d049e5d945968)\n        /* \"contracts/memetoken.sol\":3431:3478  _balances[liquidityWallet].add(liquidityAmount) */\n      tag_148\n      swap1\n        /* \"contracts/memetoken.sol\":3462:3477  liquidityAmount */\n      dup8\n        /* \"contracts/memetoken.sol\":3431:3461  _balances[liquidityWallet].add */\n      tag_143\n        /* \"contracts/memetoken.sol\":3431:3478  _balances[liquidityWallet].add(liquidityAmount) */\n      jump\t// in\n    tag_148:\n        /* \"contracts/memetoken.sol\":3402:3411  _balances */\n      0x00\n        /* \"contracts/memetoken.sol\":3402:3428  _balances[liquidityWallet] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0xb7a07c5f0332c350d219d103c30b3f8d55a382aeeef7f1ba4f6d049e5d945968\n        /* \"contracts/memetoken.sol\":3402:3478  _balances[liquidityWallet] = _balances[liquidityWallet].add(liquidityAmount) */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/memetoken.sol\":994:1036  0xcC5e043C5142033a800A72286356317dAcb57A77 */\n      0xcc5e043c5142033a800a72286356317dacb57a77\n        /* \"contracts/memetoken.sol\":3517:3542  _balances[treasuryWallet] */\n      swap1\n      mstore\n      sload(0xa4a619a332312f3b10535105aaba4faa19a71ab9d685b400ddc4b24e4c7fcb2e)\n        /* \"contracts/memetoken.sol\":3517:3562  _balances[treasuryWallet].add(treasuryAmount) */\n      tag_149\n      swap1\n        /* \"contracts/memetoken.sol\":3547:3561  treasuryAmount */\n      dup7\n        /* \"contracts/memetoken.sol\":3517:3546  _balances[treasuryWallet].add */\n      tag_143\n        /* \"contracts/memetoken.sol\":3517:3562  _balances[treasuryWallet].add(treasuryAmount) */\n      jump\t// in\n    tag_149:\n        /* \"contracts/memetoken.sol\":994:1036  0xcC5e043C5142033a800A72286356317dAcb57A77 */\n      0xcc5e043c5142033a800a72286356317dacb57a77\n        /* \"contracts/memetoken.sol\":3489:3498  _balances */\n      0x00\n        /* \"contracts/memetoken.sol\":3489:3514  _balances[treasuryWallet] */\n      swap1\n      dup2\n      mstore\n      0x20\n      mstore\n      0xa4a619a332312f3b10535105aaba4faa19a71ab9d685b400ddc4b24e4c7fcb2e\n        /* \"contracts/memetoken.sol\":3489:3562  _balances[treasuryWallet] = _balances[treasuryWallet].add(treasuryAmount) */\n      sstore\n        /* \"contracts/memetoken.sol\":3579:3593  sellAmount > 0 */\n      dup4\n      iszero\n        /* \"contracts/memetoken.sol\":3575:3781  if (sellAmount > 0) {\r... */\n      tag_150\n      jumpi\n        /* \"contracts/memetoken.sol\":3636:3682  _balances[burnAddress1].add(sellAmount.div(2)) */\n      tag_151\n        /* \"contracts/memetoken.sol\":3664:3681  sellAmount.div(2) */\n      tag_152\n        /* \"contracts/memetoken.sol\":3664:3674  sellAmount */\n      dup6\n        /* \"contracts/memetoken.sol\":3679:3680  2 */\n      0x02\n        /* \"contracts/memetoken.sol\":3664:3678  sellAmount.div */\n      tag_131\n        /* \"contracts/memetoken.sol\":3664:3681  sellAmount.div(2) */\n      jump\t// in\n    tag_152:\n        /* \"contracts/memetoken.sol\":725:767  0x000000000000000000000000000000000000dEaD */\n      0xdead\n        /* \"contracts/memetoken.sol\":3636:3645  _balances */\n      0x00\n        /* \"contracts/memetoken.sol\":3636:3659  _balances[burnAddress1] */\n      swap1\n      dup2\n      mstore\n      0x20\n      mstore\n      sload(0x44ad89ba62b98ff34f51403ac22759b55759460c0bb5521eb4b6ee3cff49cf83)\n      swap1\n        /* \"contracts/memetoken.sol\":3636:3663  _balances[burnAddress1].add */\n      tag_143\n        /* \"contracts/memetoken.sol\":3636:3682  _balances[burnAddress1].add(sellAmount.div(2)) */\n      jump\t// in\n    tag_151:\n        /* \"contracts/memetoken.sol\":725:767  0x000000000000000000000000000000000000dEaD */\n      0xdead\n        /* \"contracts/memetoken.sol\":3610:3619  _balances */\n      0x00\n        /* \"contracts/memetoken.sol\":3610:3633  _balances[burnAddress1] */\n      swap1\n      dup2\n      mstore\n      0x20\n      mstore\n      0x44ad89ba62b98ff34f51403ac22759b55759460c0bb5521eb4b6ee3cff49cf83\n        /* \"contracts/memetoken.sol\":3610:3682  _balances[burnAddress1] = _balances[burnAddress1].add(sellAmount.div(2)) */\n      sstore\n        /* \"contracts/memetoken.sol\":3723:3769  _balances[burnAddress2].add(sellAmount.div(2)) */\n      tag_153\n        /* \"contracts/memetoken.sol\":3751:3768  sellAmount.div(2) */\n      tag_154\n        /* \"contracts/memetoken.sol\":3751:3761  sellAmount */\n      dup6\n        /* \"contracts/memetoken.sol\":3766:3767  2 */\n      0x02\n        /* \"contracts/memetoken.sol\":3751:3765  sellAmount.div */\n      tag_131\n        /* \"contracts/memetoken.sol\":3751:3768  sellAmount.div(2) */\n      jump\t// in\n    tag_154:\n        /* \"contracts/memetoken.sol\":3723:3732  _balances */\n      0x00\n        /* \"contracts/memetoken.sol\":3723:3746  _balances[burnAddress2] */\n      dup1\n      dup1\n      mstore\n      0x20\n      mstore\n      sload(0xad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5)\n      swap1\n        /* \"contracts/memetoken.sol\":3723:3750  _balances[burnAddress2].add */\n      tag_143\n        /* \"contracts/memetoken.sol\":3723:3769  _balances[burnAddress2].add(sellAmount.div(2)) */\n      jump\t// in\n    tag_153:\n        /* \"contracts/memetoken.sol\":3697:3706  _balances */\n      0x00\n        /* \"contracts/memetoken.sol\":3697:3720  _balances[burnAddress2] */\n      dup1\n      dup1\n      mstore\n      0x20\n      mstore\n      0xad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5\n        /* \"contracts/memetoken.sol\":3697:3769  _balances[burnAddress2] = _balances[burnAddress2].add(sellAmount.div(2)) */\n      sstore\n        /* \"contracts/memetoken.sol\":3575:3781  if (sellAmount > 0) {\r... */\n    tag_150:\n        /* \"contracts/memetoken.sol\":3815:3824  recipient */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/memetoken.sol\":3798:3840  Transfer(sender, recipient, receiveAmount) */\n      and\n        /* \"contracts/memetoken.sol\":3807:3813  sender */\n      dup11\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/memetoken.sol\":3798:3840  Transfer(sender, recipient, receiveAmount) */\n      and\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/memetoken.sol\":3826:3839  receiveAmount */\n      dup4\n        /* \"contracts/memetoken.sol\":3798:3840  Transfer(sender, recipient, receiveAmount) */\n      mload(0x40)\n      tag_155\n      swap2\n        /* \"#utility.yul\":4053:4078   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4041:4043   */\n      0x20\n        /* \"#utility.yul\":4026:4044   */\n      add\n      swap1\n        /* \"#utility.yul\":4008:4084   */\n      jump\n        /* \"contracts/memetoken.sol\":3798:3840  Transfer(sender, recipient, receiveAmount) */\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/memetoken.sol\":3855:3867  totalFee > 0 */\n      dup2\n      iszero\n        /* \"contracts/memetoken.sol\":3851:4019  if (totalFee > 0) {\r... */\n      tag_156\n      jumpi\n        /* \"contracts/memetoken.sol\":3889:3939  Transfer(sender, liquidityWallet, liquidityAmount) */\n      mload(0x40)\n        /* \"#utility.yul\":4053:4078   */\n      dup7\n      dup2\n      mstore\n        /* \"contracts/memetoken.sol\":904:946  0x2C604d9E15e6524F0bB2a2A22F63a7Ca041e84C3 */\n      0x2c604d9e15e6524f0bb2a2a22f63a7ca041e84c3\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/memetoken.sol\":3889:3939  Transfer(sender, liquidityWallet, liquidityAmount) */\n      dup13\n      and\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap1\n        /* \"#utility.yul\":4041:4043   */\n      0x20\n        /* \"#utility.yul\":4026:4044   */\n      add\n        /* \"contracts/memetoken.sol\":3889:3939  Transfer(sender, liquidityWallet, liquidityAmount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/memetoken.sol\":3959:4007  Transfer(sender, treasuryWallet, treasuryAmount) */\n      mload(0x40)\n        /* \"#utility.yul\":4053:4078   */\n      dup6\n      dup2\n      mstore\n        /* \"contracts/memetoken.sol\":994:1036  0xcC5e043C5142033a800A72286356317dAcb57A77 */\n      0xcc5e043c5142033a800a72286356317dacb57a77\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/memetoken.sol\":3959:4007  Transfer(sender, treasuryWallet, treasuryAmount) */\n      dup13\n      and\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap1\n        /* \"#utility.yul\":4041:4043   */\n      0x20\n        /* \"#utility.yul\":4026:4044   */\n      add\n        /* \"contracts/memetoken.sol\":3959:4007  Transfer(sender, treasuryWallet, treasuryAmount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/memetoken.sol\":3851:4019  if (totalFee > 0) {\r... */\n    tag_156:\n        /* \"contracts/memetoken.sol\":4033:4047  burnAmount > 0 */\n      dup3\n      iszero\n        /* \"contracts/memetoken.sol\":4029:4123  if (burnAmount > 0) {\r... */\n      tag_159\n      jumpi\n        /* \"contracts/memetoken.sol\":4069:4111  Transfer(sender, burnAddress1, burnAmount) */\n      mload(0x40)\n        /* \"#utility.yul\":4053:4078   */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/memetoken.sol\":725:767  0x000000000000000000000000000000000000dEaD */\n      0xdead\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/memetoken.sol\":4069:4111  Transfer(sender, burnAddress1, burnAmount) */\n      dup13\n      and\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap1\n        /* \"#utility.yul\":4041:4043   */\n      0x20\n        /* \"#utility.yul\":4026:4044   */\n      add\n        /* \"contracts/memetoken.sol\":4069:4111  Transfer(sender, burnAddress1, burnAmount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/memetoken.sol\":4029:4123  if (burnAmount > 0) {\r... */\n    tag_159:\n        /* \"contracts/memetoken.sol\":2476:4130  function _transfer(address sender, address recipient, uint256 amount) internal virtual {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_119\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_163\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_119\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_166\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_119\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_169\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_171:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:113   */\n      tag_104\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":192:388   */\n    tag_61:\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:274   */\n      iszero\n      tag_175\n      jumpi\n        /* \"#utility.yul\":325:331   */\n      dup1\n        /* \"#utility.yul\":317:323   */\n      dup2\n        /* \"#utility.yul\":310:332   */\n      revert\n        /* \"#utility.yul\":272:274   */\n    tag_175:\n        /* \"#utility.yul\":353:382   */\n      tag_119\n        /* \"#utility.yul\":372:381   */\n      dup3\n        /* \"#utility.yul\":353:382   */\n      tag_171\n      jump\t// in\n        /* \"#utility.yul\":393:663   */\n    tag_85:\n      0x00\n      dup1\n        /* \"#utility.yul\":522:524   */\n      0x40\n        /* \"#utility.yul\":510:519   */\n      dup4\n        /* \"#utility.yul\":501:508   */\n      dup6\n        /* \"#utility.yul\":497:520   */\n      sub\n        /* \"#utility.yul\":493:525   */\n      slt\n        /* \"#utility.yul\":490:492   */\n      iszero\n      tag_178\n      jumpi\n        /* \"#utility.yul\":543:549   */\n      dup1\n        /* \"#utility.yul\":535:541   */\n      dup2\n        /* \"#utility.yul\":528:550   */\n      revert\n        /* \"#utility.yul\":490:492   */\n    tag_178:\n        /* \"#utility.yul\":571:600   */\n      tag_179\n        /* \"#utility.yul\":590:599   */\n      dup4\n        /* \"#utility.yul\":571:600   */\n      tag_171\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":561:600   */\n      swap2\n      pop\n        /* \"#utility.yul\":619:657   */\n      tag_180\n        /* \"#utility.yul\":653:655   */\n      0x20\n        /* \"#utility.yul\":642:651   */\n      dup5\n        /* \"#utility.yul\":638:656   */\n      add\n        /* \"#utility.yul\":619:657   */\n      tag_171\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":609:657   */\n      swap1\n      pop\n        /* \"#utility.yul\":480:663   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":668:1006   */\n    tag_39:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":814:816   */\n      0x60\n        /* \"#utility.yul\":802:811   */\n      dup5\n        /* \"#utility.yul\":793:800   */\n      dup7\n        /* \"#utility.yul\":789:812   */\n      sub\n        /* \"#utility.yul\":785:817   */\n      slt\n        /* \"#utility.yul\":782:784   */\n      iszero\n      tag_182\n      jumpi\n        /* \"#utility.yul\":835:841   */\n      dup1\n        /* \"#utility.yul\":827:833   */\n      dup2\n        /* \"#utility.yul\":820:842   */\n      revert\n        /* \"#utility.yul\":782:784   */\n    tag_182:\n        /* \"#utility.yul\":863:892   */\n      tag_183\n        /* \"#utility.yul\":882:891   */\n      dup5\n        /* \"#utility.yul\":863:892   */\n      tag_171\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":853:892   */\n      swap3\n      pop\n        /* \"#utility.yul\":911:949   */\n      tag_184\n        /* \"#utility.yul\":945:947   */\n      0x20\n        /* \"#utility.yul\":934:943   */\n      dup6\n        /* \"#utility.yul\":930:948   */\n      add\n        /* \"#utility.yul\":911:949   */\n      tag_171\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":901:949   */\n      swap2\n      pop\n        /* \"#utility.yul\":996:998   */\n      0x40\n        /* \"#utility.yul\":985:994   */\n      dup5\n        /* \"#utility.yul\":981:999   */\n      add\n        /* \"#utility.yul\":968:1000   */\n      calldataload\n        /* \"#utility.yul\":958:1000   */\n      swap1\n      pop\n        /* \"#utility.yul\":772:1006   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1011:1275   */\n    tag_29:\n      0x00\n      dup1\n        /* \"#utility.yul\":1140:1142   */\n      0x40\n        /* \"#utility.yul\":1128:1137   */\n      dup4\n        /* \"#utility.yul\":1119:1126   */\n      dup6\n        /* \"#utility.yul\":1115:1138   */\n      sub\n        /* \"#utility.yul\":1111:1143   */\n      slt\n        /* \"#utility.yul\":1108:1110   */\n      iszero\n      tag_186\n      jumpi\n        /* \"#utility.yul\":1161:1167   */\n      dup2\n        /* \"#utility.yul\":1153:1159   */\n      dup3\n        /* \"#utility.yul\":1146:1168   */\n      revert\n        /* \"#utility.yul\":1108:1110   */\n    tag_186:\n        /* \"#utility.yul\":1189:1218   */\n      tag_187\n        /* \"#utility.yul\":1208:1217   */\n      dup4\n        /* \"#utility.yul\":1189:1218   */\n      tag_171\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":1179:1218   */\n      swap5\n        /* \"#utility.yul\":1265:1267   */\n      0x20\n        /* \"#utility.yul\":1250:1268   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1237:1269   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1098:1275   */\n      jump\t// out\n        /* \"#utility.yul\":1680:2283   */\n    tag_26:\n      0x00\n        /* \"#utility.yul\":1821:1823   */\n      0x20\n        /* \"#utility.yul\":1850:1852   */\n      dup1\n        /* \"#utility.yul\":1839:1848   */\n      dup4\n        /* \"#utility.yul\":1832:1853   */\n      mstore\n        /* \"#utility.yul\":1882:1888   */\n      dup4\n        /* \"#utility.yul\":1876:1889   */\n      mload\n        /* \"#utility.yul\":1925:1931   */\n      dup1\n        /* \"#utility.yul\":1920:1922   */\n      dup3\n        /* \"#utility.yul\":1909:1918   */\n      dup6\n        /* \"#utility.yul\":1905:1923   */\n      add\n        /* \"#utility.yul\":1898:1932   */\n      mstore\n        /* \"#utility.yul\":1950:1954   */\n      dup3\n        /* \"#utility.yul\":1963:2103   */\n    tag_191:\n        /* \"#utility.yul\":1977:1983   */\n      dup2\n        /* \"#utility.yul\":1974:1975   */\n      dup2\n        /* \"#utility.yul\":1971:1984   */\n      lt\n        /* \"#utility.yul\":1963:2103   */\n      iszero\n      tag_193\n      jumpi\n        /* \"#utility.yul\":2072:2086   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":2068:2091   */\n      dup4\n      add\n        /* \"#utility.yul\":2062:2092   */\n      mload\n        /* \"#utility.yul\":2038:2055   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":2057:2059   */\n      0x40\n        /* \"#utility.yul\":2034:2060   */\n      add\n        /* \"#utility.yul\":2027:2093   */\n      mstore\n        /* \"#utility.yul\":1992:2002   */\n      dup3\n      add\n        /* \"#utility.yul\":1963:2103   */\n      jump(tag_191)\n    tag_193:\n        /* \"#utility.yul\":2121:2127   */\n      dup2\n        /* \"#utility.yul\":2118:2119   */\n      dup2\n        /* \"#utility.yul\":2115:2128   */\n      gt\n        /* \"#utility.yul\":2112:2114   */\n      iszero\n      tag_194\n      jumpi\n        /* \"#utility.yul\":2191:2195   */\n      dup4\n        /* \"#utility.yul\":2186:2188   */\n      0x40\n        /* \"#utility.yul\":2177:2183   */\n      dup4\n        /* \"#utility.yul\":2166:2175   */\n      dup8\n        /* \"#utility.yul\":2162:2184   */\n      add\n        /* \"#utility.yul\":2158:2189   */\n      add\n        /* \"#utility.yul\":2151:2196   */\n      mstore\n        /* \"#utility.yul\":2112:2114   */\n    tag_194:\n      pop\n        /* \"#utility.yul\":2267:2269   */\n      0x1f\n        /* \"#utility.yul\":2246:2261   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2242:2271   */\n      and\n        /* \"#utility.yul\":2227:2272   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2274:2276   */\n      0x40\n        /* \"#utility.yul\":2223:2277   */\n      add\n      swap4\n        /* \"#utility.yul\":1801:2283   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4278:4406   */\n    tag_169:\n      0x00\n        /* \"#utility.yul\":4349:4350   */\n      dup3\n        /* \"#utility.yul\":4345:4351   */\n      not\n        /* \"#utility.yul\":4342:4343   */\n      dup3\n        /* \"#utility.yul\":4339:4352   */\n      gt\n        /* \"#utility.yul\":4336:4338   */\n      iszero\n      tag_203\n      jumpi\n        /* \"#utility.yul\":4355:4373   */\n      tag_203\n      tag_204\n      jump\t// in\n    tag_203:\n      pop\n        /* \"#utility.yul\":4391:4400   */\n      add\n      swap1\n        /* \"#utility.yul\":4326:4406   */\n      jump\t// out\n        /* \"#utility.yul\":4411:4628   */\n    tag_166:\n      0x00\n        /* \"#utility.yul\":4477:4478   */\n      dup3\n        /* \"#utility.yul\":4467:4469   */\n      tag_206\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":4502:4533   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4556:4560   */\n      0x12\n        /* \"#utility.yul\":4553:4554   */\n      0x04\n        /* \"#utility.yul\":4546:4561   */\n      mstore\n        /* \"#utility.yul\":4584:4588   */\n      0x24\n        /* \"#utility.yul\":4509:4510   */\n      dup2\n        /* \"#utility.yul\":4574:4589   */\n      revert\n        /* \"#utility.yul\":4467:4469   */\n    tag_206:\n      pop\n        /* \"#utility.yul\":4613:4622   */\n      div\n      swap1\n        /* \"#utility.yul\":4457:4628   */\n      jump\t// out\n        /* \"#utility.yul\":4633:4801   */\n    tag_163:\n      0x00\n        /* \"#utility.yul\":4739:4740   */\n      dup2\n        /* \"#utility.yul\":4735:4736   */\n      0x00\n        /* \"#utility.yul\":4731:4737   */\n      not\n        /* \"#utility.yul\":4727:4741   */\n      div\n        /* \"#utility.yul\":4724:4725   */\n      dup4\n        /* \"#utility.yul\":4721:4742   */\n      gt\n        /* \"#utility.yul\":4716:4717   */\n      dup3\n        /* \"#utility.yul\":4709:4718   */\n      iszero\n        /* \"#utility.yul\":4702:4719   */\n      iszero\n        /* \"#utility.yul\":4698:4743   */\n      and\n        /* \"#utility.yul\":4695:4697   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":4746:4764   */\n      tag_209\n      tag_204\n      jump\t// in\n    tag_209:\n      pop\n        /* \"#utility.yul\":4786:4795   */\n      mul\n      swap1\n        /* \"#utility.yul\":4685:4801   */\n      jump\t// out\n        /* \"#utility.yul\":4806:4931   */\n    tag_120:\n      0x00\n        /* \"#utility.yul\":4874:4875   */\n      dup3\n        /* \"#utility.yul\":4871:4872   */\n      dup3\n        /* \"#utility.yul\":4868:4876   */\n      lt\n        /* \"#utility.yul\":4865:4867   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":4879:4897   */\n      tag_212\n      tag_204\n      jump\t// in\n    tag_212:\n      pop\n        /* \"#utility.yul\":4916:4925   */\n      sub\n      swap1\n        /* \"#utility.yul\":4855:4931   */\n      jump\t// out\n        /* \"#utility.yul\":4936:5063   */\n    tag_204:\n        /* \"#utility.yul\":4997:5007   */\n      0x4e487b71\n        /* \"#utility.yul\":4992:4995   */\n      0xe0\n        /* \"#utility.yul\":4988:5008   */\n      shl\n        /* \"#utility.yul\":4985:4986   */\n      0x00\n        /* \"#utility.yul\":4978:5009   */\n      mstore\n        /* \"#utility.yul\":5028:5032   */\n      0x11\n        /* \"#utility.yul\":5025:5026   */\n      0x04\n        /* \"#utility.yul\":5018:5033   */\n      mstore\n        /* \"#utility.yul\":5052:5056   */\n      0x24\n        /* \"#utility.yul\":5049:5050   */\n      0x00\n        /* \"#utility.yul\":5042:5057   */\n      revert\n    stop\n    data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n\n    auxdata: 0xa2646970667358221220f682344e59441764ccb8a3ce59d6706caa54aa9d2bdd9ebf73908896afd7155964736f6c63430008020033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:193:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:4"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:4",
														"type": ""
													}
												],
												"src": "14:177:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526b033b2e3c9fd0803ce800000060025534801561002057600080fd5b50600254732c604d9e15e6524f0bb2a2a22f63a7ca041e84c3600081815260208181527fb7a07c5f0332c350d219d103c30b3f8d55a382aeeef7f1ba4f6d049e5d945968849055604051938452919290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610bc7806100ab6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063472a0b2a116100a2578063a9059cbb11610071578063a9059cbb14610253578063bed99850146101ae578063cc32d17614610266578063d46980161461026e578063dd62ed3e146102895761010b565b8063472a0b2a1461020b57806370a082311461021457806395d89b411461022757806398118cb41461024b5761010b565b80632b14ca56116100de5780632b14ca56146101ae578063311e6703146101b6578063313ce567146101d65780634626402b146101f05761010b565b806306fdde0314610110578063095ea7b31461016257806318160ddd1461018557806323b872dd1461019b575b600080fd5b61014c6040518060400160405280601981526020017f5b544553545d204465666c6174696f6e61727920546f6b656e0000000000000081525081565b6040516101599190610a9a565b60405180910390f35b610175610170366004610a71565b6102c2565b6040519015158152602001610159565b61018d6102d8565b604051908152602001610159565b6101756101a9366004610a36565b610345565b61018d601e81565b6101be600081565b6040516001600160a01b039091168152602001610159565b6101de601281565b60405160ff9091168152602001610159565b6101be73cc5e043c5142033a800a72286356317dacb57a7781565b6101be61dead81565b61018d6102223660046109ea565b610396565b61014c604051806040016040528060058152602001641111950c0d60da1b81525081565b61018d603281565b610175610261366004610a71565b6103b5565b61018d605a81565b6101be732c604d9e15e6524f0bb2a2a22f63a7ca041e84c381565b61018d610297366004610a04565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60006102cf3384846103c2565b50600192915050565b600060208190527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb55461dead82527f44ad89ba62b98ff34f51403ac22759b55759460c0bb5521eb4b6ee3cff49cf8354600254610340929161033a91906104eb565b906104eb565b905090565b60006103528484846104fe565b6001600160a01b03841660009081526001602090815260408083203380855292529091205461038c91869161038790866104eb565b6103c2565b5060019392505050565b6001600160a01b0381166000908152602081905260409020545b919050565b60006102cf3384846104fe565b6001600160a01b0383166104295760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084015b60405180910390fd5b6001600160a01b03821661048a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610420565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104f78284610b44565b9392505050565b6001600160a01b0382166105605760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610420565b6001600160a01b038316600090815260208190526040902054818110156105d85760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610420565b60006105f060646105ea8560326109af565b906109bb565b9050600061060460646105ea86605a6109af565b905060006001600160a01b03861661dead148061062857506001600160a01b038616155b610633576000610643565b61064360646105ea87601e6109af565b9050600061065760646105ea88601e6109af565b9050600061066f8361066987876109c7565b906109c7565b905060006106818361033a8a856104eb565b905061068d87896104eb565b6001600160a01b03808c1660009081526020819052604080822093909355908b16815220546106bc90826109c7565b6001600160a01b038a16600090815260208190526040812091909155732c604d9e15e6524f0bb2a2a22f63a7ca041e84c390527fb7a07c5f0332c350d219d103c30b3f8d55a382aeeef7f1ba4f6d049e5d9459685461071b90876109c7565b600060208190527fb7a07c5f0332c350d219d103c30b3f8d55a382aeeef7f1ba4f6d049e5d9459689190915573cc5e043c5142033a800a72286356317dacb57a7790527fa4a619a332312f3b10535105aaba4faa19a71ab9d685b400ddc4b24e4c7fcb2e5461078a90866109c7565b73cc5e043c5142033a800a72286356317dacb57a7760009081526020527fa4a619a332312f3b10535105aaba4faa19a71ab9d685b400ddc4b24e4c7fcb2e5583156108a6576108106107dd8560026109bb565b61dead60009081526020527f44ad89ba62b98ff34f51403ac22759b55759460c0bb5521eb4b6ee3cff49cf8354906109c7565b61dead60009081526020527f44ad89ba62b98ff34f51403ac22759b55759460c0bb5521eb4b6ee3cff49cf835561087b61084b8560026109bb565b60008080526020527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb554906109c7565b60008080526020527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5555b886001600160a01b03168a6001600160a01b0316600080516020610b72833981519152836040516108d991815260200190565b60405180910390a3811561096c57604051868152732c604d9e15e6524f0bb2a2a22f63a7ca041e84c3906001600160a01b038c1690600080516020610b728339815191529060200160405180910390a360405185815273cc5e043c5142033a800a72286356317dacb57a77906001600160a01b038c1690600080516020610b728339815191529060200160405180910390a35b82156109a35760405183815261dead906001600160a01b038c1690600080516020610b728339815191529060200160405180910390a35b50505050505050505050565b60006104f78284610b25565b60006104f78284610b05565b60006104f78284610aed565b80356001600160a01b03811681146103b057600080fd5b6000602082840312156109fb578081fd5b6104f7826109d3565b60008060408385031215610a16578081fd5b610a1f836109d3565b9150610a2d602084016109d3565b90509250929050565b600080600060608486031215610a4a578081fd5b610a53846109d3565b9250610a61602085016109d3565b9150604084013590509250925092565b60008060408385031215610a83578182fd5b610a8c836109d3565b946020939093013593505050565b6000602080835283518082850152825b81811015610ac657858101830151858201604001528201610aaa565b81811115610ad75783604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610b0057610b00610b5b565b500190565b600082610b2057634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610b3f57610b3f610b5b565b500290565b600082821015610b5657610b56610b5b565b500390565b634e487b7160e01b600052601160045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220f682344e59441764ccb8a3ce59d6706caa54aa9d2bdd9ebf73908896afd7155964736f6c63430008020033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH12 0x33B2E3C9FD0803CE8000000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH20 0x2C604D9E15E6524F0BB2A2A22F63A7CA041E84C3 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH32 0xB7A07C5F0332C350D219D103C30B3F8D55A382AEEEF7F1BA4F6D049E5D945968 DUP5 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xBC7 DUP1 PUSH2 0xAB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x472A0B2A GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0xBED99850 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0xCC32D176 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0xD4698016 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x289 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x472A0B2A EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x98118CB4 EQ PUSH2 0x24B JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x2B14CA56 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x2B14CA56 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x311E6703 EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x4626402B EQ PUSH2 0x1F0 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14C PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5B544553545D204465666C6174696F6E61727920546F6B656E00000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0xA9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0xA71 JUMP JUMPDEST PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x159 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x2D8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x159 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x1A9 CALLDATASIZE PUSH1 0x4 PUSH2 0xA36 JUMP JUMPDEST PUSH2 0x345 JUMP JUMPDEST PUSH2 0x18D PUSH1 0x1E DUP2 JUMP JUMPDEST PUSH2 0x1BE PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x159 JUMP JUMPDEST PUSH2 0x1DE PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x159 JUMP JUMPDEST PUSH2 0x1BE PUSH20 0xCC5E043C5142033A800A72286356317DACB57A77 DUP2 JUMP JUMPDEST PUSH2 0x1BE PUSH2 0xDEAD DUP2 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x222 CALLDATASIZE PUSH1 0x4 PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x396 JUMP JUMPDEST PUSH2 0x14C PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x1111950C0D PUSH1 0xDA SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x18D PUSH1 0x32 DUP2 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x261 CALLDATASIZE PUSH1 0x4 PUSH2 0xA71 JUMP JUMPDEST PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0x18D PUSH1 0x5A DUP2 JUMP JUMPDEST PUSH2 0x1BE PUSH20 0x2C604D9E15E6524F0BB2A2A22F63A7CA041E84C3 DUP2 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x297 CALLDATASIZE PUSH1 0x4 PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CF CALLER DUP5 DUP5 PUSH2 0x3C2 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 SLOAD PUSH2 0xDEAD DUP3 MSTORE PUSH32 0x44AD89BA62B98FF34F51403AC22759B55759460C0BB5521EB4B6EE3CFF49CF83 SLOAD PUSH1 0x2 SLOAD PUSH2 0x340 SWAP3 SWAP2 PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x4EB JUMP JUMPDEST SWAP1 PUSH2 0x4EB JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x352 DUP5 DUP5 DUP5 PUSH2 0x4FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x38C SWAP2 DUP7 SWAP2 PUSH2 0x387 SWAP1 DUP7 PUSH2 0x4EB JUMP JUMPDEST PUSH2 0x3C2 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CF CALLER DUP5 DUP5 PUSH2 0x4FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x429 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x48A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x420 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F7 DUP3 DUP5 PUSH2 0xB44 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x560 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x420 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x5D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x420 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F0 PUSH1 0x64 PUSH2 0x5EA DUP6 PUSH1 0x32 PUSH2 0x9AF JUMP JUMPDEST SWAP1 PUSH2 0x9BB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x604 PUSH1 0x64 PUSH2 0x5EA DUP7 PUSH1 0x5A PUSH2 0x9AF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0xDEAD EQ DUP1 PUSH2 0x628 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND ISZERO JUMPDEST PUSH2 0x633 JUMPI PUSH1 0x0 PUSH2 0x643 JUMP JUMPDEST PUSH2 0x643 PUSH1 0x64 PUSH2 0x5EA DUP8 PUSH1 0x1E PUSH2 0x9AF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x657 PUSH1 0x64 PUSH2 0x5EA DUP9 PUSH1 0x1E PUSH2 0x9AF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x66F DUP4 PUSH2 0x669 DUP8 DUP8 PUSH2 0x9C7 JUMP JUMPDEST SWAP1 PUSH2 0x9C7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x681 DUP4 PUSH2 0x33A DUP11 DUP6 PUSH2 0x4EB JUMP JUMPDEST SWAP1 POP PUSH2 0x68D DUP8 DUP10 PUSH2 0x4EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP13 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP12 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x6BC SWAP1 DUP3 PUSH2 0x9C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH20 0x2C604D9E15E6524F0BB2A2A22F63A7CA041E84C3 SWAP1 MSTORE PUSH32 0xB7A07C5F0332C350D219D103C30B3F8D55A382AEEEF7F1BA4F6D049E5D945968 SLOAD PUSH2 0x71B SWAP1 DUP8 PUSH2 0x9C7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH32 0xB7A07C5F0332C350D219D103C30B3F8D55A382AEEEF7F1BA4F6D049E5D945968 SWAP2 SWAP1 SWAP2 SSTORE PUSH20 0xCC5E043C5142033A800A72286356317DACB57A77 SWAP1 MSTORE PUSH32 0xA4A619A332312F3B10535105AABA4FAA19A71AB9D685B400DDC4B24E4C7FCB2E SLOAD PUSH2 0x78A SWAP1 DUP7 PUSH2 0x9C7 JUMP JUMPDEST PUSH20 0xCC5E043C5142033A800A72286356317DACB57A77 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 MSTORE PUSH32 0xA4A619A332312F3B10535105AABA4FAA19A71AB9D685B400DDC4B24E4C7FCB2E SSTORE DUP4 ISZERO PUSH2 0x8A6 JUMPI PUSH2 0x810 PUSH2 0x7DD DUP6 PUSH1 0x2 PUSH2 0x9BB JUMP JUMPDEST PUSH2 0xDEAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 MSTORE PUSH32 0x44AD89BA62B98FF34F51403AC22759B55759460C0BB5521EB4B6EE3CFF49CF83 SLOAD SWAP1 PUSH2 0x9C7 JUMP JUMPDEST PUSH2 0xDEAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 MSTORE PUSH32 0x44AD89BA62B98FF34F51403AC22759B55759460C0BB5521EB4B6EE3CFF49CF83 SSTORE PUSH2 0x87B PUSH2 0x84B DUP6 PUSH1 0x2 PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 SLOAD SWAP1 PUSH2 0x9C7 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 SSTORE JUMPDEST DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB72 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH1 0x40 MLOAD PUSH2 0x8D9 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP2 ISZERO PUSH2 0x96C JUMPI PUSH1 0x40 MLOAD DUP7 DUP2 MSTORE PUSH20 0x2C604D9E15E6524F0BB2A2A22F63A7CA041E84C3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB72 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH20 0xCC5E043C5142033A800A72286356317DACB57A77 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB72 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP3 ISZERO PUSH2 0x9A3 JUMPI PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH2 0xDEAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB72 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F7 DUP3 DUP5 PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F7 DUP3 DUP5 PUSH2 0xB05 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F7 DUP3 DUP5 PUSH2 0xAED JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9FB JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x4F7 DUP3 PUSH2 0x9D3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA16 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xA1F DUP4 PUSH2 0x9D3 JUMP JUMPDEST SWAP2 POP PUSH2 0xA2D PUSH1 0x20 DUP5 ADD PUSH2 0x9D3 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA4A JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xA53 DUP5 PUSH2 0x9D3 JUMP JUMPDEST SWAP3 POP PUSH2 0xA61 PUSH1 0x20 DUP6 ADD PUSH2 0x9D3 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA83 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xA8C DUP4 PUSH2 0x9D3 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAC6 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xAAA JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xAD7 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xB00 JUMPI PUSH2 0xB00 PUSH2 0xB5B JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xB20 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xB3F JUMPI PUSH2 0xB3F PUSH2 0xB5B JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xB56 JUMPI PUSH2 0xB56 PUSH2 0xB5B JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 DUP3 CALLVALUE 0x4E MSIZE DIFFICULTY OR PUSH5 0xCCB8A3CE59 0xD6 PUSH17 0x6CAA54AA9D2BDD9EBF73908896AFD71559 PUSH5 0x736F6C6343 STOP ADDMOD MUL STOP CALLER ",
							"sourceMap": "233:4360:3:-:0;;;658:19;627:50;;1229:142;;;;;;;;;-1:-1:-1;1284:12:3;;904:42;1255:9;:26;;;;;;;;:41;;;:26;1312:51;160:25:4;;;904:42:3;;1255:9;;1312:51;;133:18:4;1312:51:3;;;;;;;233:4360;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5065:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:4"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:4",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:4"
															},
															"nodeType": "YulIf",
															"src": "111:2:4"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:4",
														"type": ""
													}
												],
												"src": "14:173:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:126:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:26:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "317:6:4"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "325:6:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:22:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:22:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:4"
															},
															"nodeType": "YulIf",
															"src": "272:2:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "343:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "372:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "353:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "343:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:4",
														"type": ""
													}
												],
												"src": "192:196:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "480:183:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "526:26:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "535:6:4"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "543:6:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "528:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "528:22:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "528:22:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "501:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "497:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "497:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "522:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "493:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "493:32:4"
															},
															"nodeType": "YulIf",
															"src": "490:2:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "561:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "590:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "571:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "571:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "561:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "609:48:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "642:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "653:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "638:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "638:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "619:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "619:38:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "609:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "438:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "449:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "461:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "469:6:4",
														"type": ""
													}
												],
												"src": "393:270:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "772:234:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "818:26:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "827:6:4"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "835:6:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "820:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "820:22:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "820:22:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "793:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "802:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "789:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "789:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "814:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "785:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "785:32:4"
															},
															"nodeType": "YulIf",
															"src": "782:2:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "853:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "882:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "863:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "863:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "853:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "901:48:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "934:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "945:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "930:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "930:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "911:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "911:38:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "901:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "958:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "985:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "996:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "981:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "981:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "968:32:4"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "958:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "722:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "733:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "745:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "753:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "761:6:4",
														"type": ""
													}
												],
												"src": "668:338:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1098:177:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1144:26:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1153:6:4"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1161:6:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1146:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1146:22:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1146:22:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1119:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1128:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1115:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1140:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1111:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1111:32:4"
															},
															"nodeType": "YulIf",
															"src": "1108:2:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1179:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1208:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1189:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1189:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1179:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1227:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1254:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1265:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1250:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1250:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1237:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1237:32:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1227:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1056:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1067:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1087:6:4",
														"type": ""
													}
												],
												"src": "1011:264:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1381:102:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1391:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1403:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1414:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1399:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1399:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1391:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1433:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1448:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1464:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1469:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1460:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1460:11:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1473:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1456:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1456:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1444:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1444:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1426:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1426:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1426:51:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1350:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1361:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1372:4:4",
														"type": ""
													}
												],
												"src": "1280:203:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1583:92:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1593:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1605:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1616:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1601:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1601:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1593:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1635:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1660:6:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1653:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1653:14:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1646:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1646:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:41:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1628:41:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1552:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1563:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1574:4:4",
														"type": ""
													}
												],
												"src": "1488:187:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1801:482:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1811:12:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1821:2:4",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1815:2:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1839:9:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1850:2:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1832:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1832:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1832:21:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1862:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1882:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1876:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1876:13:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1866:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1909:9:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1920:2:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1905:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1905:18:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1925:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1898:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1898:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1898:34:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1941:13:4",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "1950:4:4"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1945:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2013:90:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "2042:9:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2053:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2038:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2038:17:4"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2057:2:4",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2034:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2034:26:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "2076:6:4"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "2084:1:4"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "2072:3:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2072:14:4"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "2088:2:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2068:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2068:23:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2062:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2062:30:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2027:66:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2027:66:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1974:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1977:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1971:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1971:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1985:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1987:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1996:1:4"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1999:2:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1992:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1992:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1987:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1967:3:4",
																"statements": []
															},
															"src": "1963:140:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2137:69:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "2166:9:4"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "2177:6:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2162:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2162:22:4"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2186:2:4",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2158:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2158:31:4"
																				},
																				{
																					"name": "tail",
																					"nodeType": "YulIdentifier",
																					"src": "2191:4:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2151:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2151:45:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2151:45:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2118:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2121:6:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2115:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2115:13:4"
															},
															"nodeType": "YulIf",
															"src": "2112:2:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2215:62:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2231:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2250:6:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2258:2:4",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2246:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2246:15:4"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2267:2:4",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2263:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2263:7:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2242:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2242:29:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2227:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2227:45:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2274:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2223:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2223:54:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2215:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1770:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1781:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1792:4:4",
														"type": ""
													}
												],
												"src": "1680:603:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2462:225:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2479:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2490:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2472:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2472:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2472:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2513:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2524:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2509:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2509:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2529:2:4",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2502:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2502:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2502:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2552:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2563:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2548:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2548:18:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2568:34:4",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2541:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2541:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2541:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2623:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2634:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2619:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2619:18:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2639:5:4",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2612:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2612:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2612:33:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2654:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2666:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2677:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2662:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2662:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2439:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2453:4:4",
														"type": ""
													}
												],
												"src": "2288:399:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2866:224:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2883:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2894:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2876:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2876:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2876:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2917:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2928:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2913:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2913:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2933:2:4",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2906:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2906:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2906:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2956:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2967:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2952:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2952:18:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2972:34:4",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2945:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2945:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2945:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3027:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3038:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3023:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3023:18:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3043:4:4",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3016:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3016:32:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3016:32:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3057:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3069:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3080:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3065:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3065:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3057:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2843:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2857:4:4",
														"type": ""
													}
												],
												"src": "2692:398:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3269:228:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3286:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3297:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3279:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3279:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3279:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3320:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3331:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3316:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3316:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3336:2:4",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3309:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3309:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3309:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3359:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3370:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3355:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3355:18:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3375:34:4",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3348:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3348:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3348:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3430:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3441:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3426:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3426:18:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3446:8:4",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3419:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3419:36:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3419:36:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3464:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3476:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3487:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3472:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3472:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3464:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3246:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3260:4:4",
														"type": ""
													}
												],
												"src": "3095:402:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3676:226:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3693:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3704:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3686:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3686:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3727:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3738:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3723:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3723:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3743:2:4",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3716:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3716:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3716:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3766:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3777:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3762:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3762:18:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3782:34:4",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3755:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3755:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3755:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3837:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3848:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3833:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3833:18:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3853:6:4",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3826:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3826:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3826:34:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3869:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3881:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3892:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3877:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3877:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3869:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3653:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3667:4:4",
														"type": ""
													}
												],
												"src": "3502:400:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4008:76:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4018:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4030:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4041:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4026:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4026:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4018:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4060:9:4"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4071:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4053:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4053:25:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4053:25:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3977:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3988:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3999:4:4",
														"type": ""
													}
												],
												"src": "3907:177:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4186:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4196:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4208:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4219:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4204:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4204:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4196:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4238:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4253:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4261:4:4",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4249:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4249:17:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4231:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4231:36:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4231:36:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4155:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4166:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4177:4:4",
														"type": ""
													}
												],
												"src": "4089:184:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4326:80:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4353:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4355:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4355:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4355:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4342:1:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4349:1:4"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4345:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4345:6:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4339:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4339:13:4"
															},
															"nodeType": "YulIf",
															"src": "4336:2:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4384:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4395:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4398:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4391:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4391:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4384:3:4"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4309:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4312:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4318:3:4",
														"type": ""
													}
												],
												"src": "4278:128:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4457:171:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4488:111:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "4509:1:4"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4516:3:4",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4521:10:4",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "4512:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4512:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4502:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4502:31:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4502:31:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4553:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4556:4:4",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4546:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4546:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4546:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "4581:1:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4584:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4574:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4574:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4574:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4477:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4470:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4470:9:4"
															},
															"nodeType": "YulIf",
															"src": "4467:2:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4608:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4617:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4620:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4613:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4613:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4608:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4442:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4445:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "4451:1:4",
														"type": ""
													}
												],
												"src": "4411:217:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4685:116:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4744:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4746:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4746:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4746:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4716:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4709:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4709:9:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4702:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4702:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4724:1:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4735:1:4",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "4731:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4731:6:4"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4739:1:4"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4727:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4727:14:4"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4721:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4721:21:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4698:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4698:45:4"
															},
															"nodeType": "YulIf",
															"src": "4695:2:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4775:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4790:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4793:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4786:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4786:9:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "4775:7:4"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4664:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4667:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "4673:7:4",
														"type": ""
													}
												],
												"src": "4633:168:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4855:76:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4877:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4879:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4879:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4879:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4871:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4874:1:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4868:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4868:8:4"
															},
															"nodeType": "YulIf",
															"src": "4865:2:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4908:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4920:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4923:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4916:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4916:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "4908:4:4"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4837:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4840:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4846:4:4",
														"type": ""
													}
												],
												"src": "4806:125:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4968:95:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4985:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4992:3:4",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4997:10:4",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4988:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4988:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4978:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4978:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4978:31:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5025:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5028:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5018:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5018:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5018:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5049:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5052:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5042:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5042:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5042:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4936:127:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061010b5760003560e01c8063472a0b2a116100a2578063a9059cbb11610071578063a9059cbb14610253578063bed99850146101ae578063cc32d17614610266578063d46980161461026e578063dd62ed3e146102895761010b565b8063472a0b2a1461020b57806370a082311461021457806395d89b411461022757806398118cb41461024b5761010b565b80632b14ca56116100de5780632b14ca56146101ae578063311e6703146101b6578063313ce567146101d65780634626402b146101f05761010b565b806306fdde0314610110578063095ea7b31461016257806318160ddd1461018557806323b872dd1461019b575b600080fd5b61014c6040518060400160405280601981526020017f5b544553545d204465666c6174696f6e61727920546f6b656e0000000000000081525081565b6040516101599190610a9a565b60405180910390f35b610175610170366004610a71565b6102c2565b6040519015158152602001610159565b61018d6102d8565b604051908152602001610159565b6101756101a9366004610a36565b610345565b61018d601e81565b6101be600081565b6040516001600160a01b039091168152602001610159565b6101de601281565b60405160ff9091168152602001610159565b6101be73cc5e043c5142033a800a72286356317dacb57a7781565b6101be61dead81565b61018d6102223660046109ea565b610396565b61014c604051806040016040528060058152602001641111950c0d60da1b81525081565b61018d603281565b610175610261366004610a71565b6103b5565b61018d605a81565b6101be732c604d9e15e6524f0bb2a2a22f63a7ca041e84c381565b61018d610297366004610a04565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60006102cf3384846103c2565b50600192915050565b600060208190527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb55461dead82527f44ad89ba62b98ff34f51403ac22759b55759460c0bb5521eb4b6ee3cff49cf8354600254610340929161033a91906104eb565b906104eb565b905090565b60006103528484846104fe565b6001600160a01b03841660009081526001602090815260408083203380855292529091205461038c91869161038790866104eb565b6103c2565b5060019392505050565b6001600160a01b0381166000908152602081905260409020545b919050565b60006102cf3384846104fe565b6001600160a01b0383166104295760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084015b60405180910390fd5b6001600160a01b03821661048a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610420565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104f78284610b44565b9392505050565b6001600160a01b0382166105605760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610420565b6001600160a01b038316600090815260208190526040902054818110156105d85760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610420565b60006105f060646105ea8560326109af565b906109bb565b9050600061060460646105ea86605a6109af565b905060006001600160a01b03861661dead148061062857506001600160a01b038616155b610633576000610643565b61064360646105ea87601e6109af565b9050600061065760646105ea88601e6109af565b9050600061066f8361066987876109c7565b906109c7565b905060006106818361033a8a856104eb565b905061068d87896104eb565b6001600160a01b03808c1660009081526020819052604080822093909355908b16815220546106bc90826109c7565b6001600160a01b038a16600090815260208190526040812091909155732c604d9e15e6524f0bb2a2a22f63a7ca041e84c390527fb7a07c5f0332c350d219d103c30b3f8d55a382aeeef7f1ba4f6d049e5d9459685461071b90876109c7565b600060208190527fb7a07c5f0332c350d219d103c30b3f8d55a382aeeef7f1ba4f6d049e5d9459689190915573cc5e043c5142033a800a72286356317dacb57a7790527fa4a619a332312f3b10535105aaba4faa19a71ab9d685b400ddc4b24e4c7fcb2e5461078a90866109c7565b73cc5e043c5142033a800a72286356317dacb57a7760009081526020527fa4a619a332312f3b10535105aaba4faa19a71ab9d685b400ddc4b24e4c7fcb2e5583156108a6576108106107dd8560026109bb565b61dead60009081526020527f44ad89ba62b98ff34f51403ac22759b55759460c0bb5521eb4b6ee3cff49cf8354906109c7565b61dead60009081526020527f44ad89ba62b98ff34f51403ac22759b55759460c0bb5521eb4b6ee3cff49cf835561087b61084b8560026109bb565b60008080526020527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb554906109c7565b60008080526020527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5555b886001600160a01b03168a6001600160a01b0316600080516020610b72833981519152836040516108d991815260200190565b60405180910390a3811561096c57604051868152732c604d9e15e6524f0bb2a2a22f63a7ca041e84c3906001600160a01b038c1690600080516020610b728339815191529060200160405180910390a360405185815273cc5e043c5142033a800a72286356317dacb57a77906001600160a01b038c1690600080516020610b728339815191529060200160405180910390a35b82156109a35760405183815261dead906001600160a01b038c1690600080516020610b728339815191529060200160405180910390a35b50505050505050505050565b60006104f78284610b25565b60006104f78284610b05565b60006104f78284610aed565b80356001600160a01b03811681146103b057600080fd5b6000602082840312156109fb578081fd5b6104f7826109d3565b60008060408385031215610a16578081fd5b610a1f836109d3565b9150610a2d602084016109d3565b90509250929050565b600080600060608486031215610a4a578081fd5b610a53846109d3565b9250610a61602085016109d3565b9150604084013590509250925092565b60008060408385031215610a83578182fd5b610a8c836109d3565b946020939093013593505050565b6000602080835283518082850152825b81811015610ac657858101830151858201604001528201610aaa565b81811115610ad75783604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610b0057610b00610b5b565b500190565b600082610b2057634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610b3f57610b3f610b5b565b500290565b600082821015610b5657610b56610b5b565b500390565b634e487b7160e01b600052601160045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220f682344e59441764ccb8a3ce59d6706caa54aa9d2bdd9ebf73908896afd7155964736f6c63430008020033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x472A0B2A GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0xBED99850 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0xCC32D176 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0xD4698016 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x289 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x472A0B2A EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x98118CB4 EQ PUSH2 0x24B JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x2B14CA56 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x2B14CA56 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x311E6703 EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x4626402B EQ PUSH2 0x1F0 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14C PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5B544553545D204465666C6174696F6E61727920546F6B656E00000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0xA9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0xA71 JUMP JUMPDEST PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x159 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x2D8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x159 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x1A9 CALLDATASIZE PUSH1 0x4 PUSH2 0xA36 JUMP JUMPDEST PUSH2 0x345 JUMP JUMPDEST PUSH2 0x18D PUSH1 0x1E DUP2 JUMP JUMPDEST PUSH2 0x1BE PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x159 JUMP JUMPDEST PUSH2 0x1DE PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x159 JUMP JUMPDEST PUSH2 0x1BE PUSH20 0xCC5E043C5142033A800A72286356317DACB57A77 DUP2 JUMP JUMPDEST PUSH2 0x1BE PUSH2 0xDEAD DUP2 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x222 CALLDATASIZE PUSH1 0x4 PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x396 JUMP JUMPDEST PUSH2 0x14C PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x1111950C0D PUSH1 0xDA SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x18D PUSH1 0x32 DUP2 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x261 CALLDATASIZE PUSH1 0x4 PUSH2 0xA71 JUMP JUMPDEST PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0x18D PUSH1 0x5A DUP2 JUMP JUMPDEST PUSH2 0x1BE PUSH20 0x2C604D9E15E6524F0BB2A2A22F63A7CA041E84C3 DUP2 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x297 CALLDATASIZE PUSH1 0x4 PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CF CALLER DUP5 DUP5 PUSH2 0x3C2 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 SLOAD PUSH2 0xDEAD DUP3 MSTORE PUSH32 0x44AD89BA62B98FF34F51403AC22759B55759460C0BB5521EB4B6EE3CFF49CF83 SLOAD PUSH1 0x2 SLOAD PUSH2 0x340 SWAP3 SWAP2 PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x4EB JUMP JUMPDEST SWAP1 PUSH2 0x4EB JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x352 DUP5 DUP5 DUP5 PUSH2 0x4FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x38C SWAP2 DUP7 SWAP2 PUSH2 0x387 SWAP1 DUP7 PUSH2 0x4EB JUMP JUMPDEST PUSH2 0x3C2 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CF CALLER DUP5 DUP5 PUSH2 0x4FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x429 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x48A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x420 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F7 DUP3 DUP5 PUSH2 0xB44 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x560 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x420 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x5D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x420 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F0 PUSH1 0x64 PUSH2 0x5EA DUP6 PUSH1 0x32 PUSH2 0x9AF JUMP JUMPDEST SWAP1 PUSH2 0x9BB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x604 PUSH1 0x64 PUSH2 0x5EA DUP7 PUSH1 0x5A PUSH2 0x9AF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0xDEAD EQ DUP1 PUSH2 0x628 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND ISZERO JUMPDEST PUSH2 0x633 JUMPI PUSH1 0x0 PUSH2 0x643 JUMP JUMPDEST PUSH2 0x643 PUSH1 0x64 PUSH2 0x5EA DUP8 PUSH1 0x1E PUSH2 0x9AF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x657 PUSH1 0x64 PUSH2 0x5EA DUP9 PUSH1 0x1E PUSH2 0x9AF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x66F DUP4 PUSH2 0x669 DUP8 DUP8 PUSH2 0x9C7 JUMP JUMPDEST SWAP1 PUSH2 0x9C7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x681 DUP4 PUSH2 0x33A DUP11 DUP6 PUSH2 0x4EB JUMP JUMPDEST SWAP1 POP PUSH2 0x68D DUP8 DUP10 PUSH2 0x4EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP13 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP12 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x6BC SWAP1 DUP3 PUSH2 0x9C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH20 0x2C604D9E15E6524F0BB2A2A22F63A7CA041E84C3 SWAP1 MSTORE PUSH32 0xB7A07C5F0332C350D219D103C30B3F8D55A382AEEEF7F1BA4F6D049E5D945968 SLOAD PUSH2 0x71B SWAP1 DUP8 PUSH2 0x9C7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH32 0xB7A07C5F0332C350D219D103C30B3F8D55A382AEEEF7F1BA4F6D049E5D945968 SWAP2 SWAP1 SWAP2 SSTORE PUSH20 0xCC5E043C5142033A800A72286356317DACB57A77 SWAP1 MSTORE PUSH32 0xA4A619A332312F3B10535105AABA4FAA19A71AB9D685B400DDC4B24E4C7FCB2E SLOAD PUSH2 0x78A SWAP1 DUP7 PUSH2 0x9C7 JUMP JUMPDEST PUSH20 0xCC5E043C5142033A800A72286356317DACB57A77 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 MSTORE PUSH32 0xA4A619A332312F3B10535105AABA4FAA19A71AB9D685B400DDC4B24E4C7FCB2E SSTORE DUP4 ISZERO PUSH2 0x8A6 JUMPI PUSH2 0x810 PUSH2 0x7DD DUP6 PUSH1 0x2 PUSH2 0x9BB JUMP JUMPDEST PUSH2 0xDEAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 MSTORE PUSH32 0x44AD89BA62B98FF34F51403AC22759B55759460C0BB5521EB4B6EE3CFF49CF83 SLOAD SWAP1 PUSH2 0x9C7 JUMP JUMPDEST PUSH2 0xDEAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 MSTORE PUSH32 0x44AD89BA62B98FF34F51403AC22759B55759460C0BB5521EB4B6EE3CFF49CF83 SSTORE PUSH2 0x87B PUSH2 0x84B DUP6 PUSH1 0x2 PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 SLOAD SWAP1 PUSH2 0x9C7 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 SSTORE JUMPDEST DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB72 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH1 0x40 MLOAD PUSH2 0x8D9 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP2 ISZERO PUSH2 0x96C JUMPI PUSH1 0x40 MLOAD DUP7 DUP2 MSTORE PUSH20 0x2C604D9E15E6524F0BB2A2A22F63A7CA041E84C3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB72 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH20 0xCC5E043C5142033A800A72286356317DACB57A77 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB72 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP3 ISZERO PUSH2 0x9A3 JUMPI PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH2 0xDEAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB72 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F7 DUP3 DUP5 PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F7 DUP3 DUP5 PUSH2 0xB05 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F7 DUP3 DUP5 PUSH2 0xAED JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9FB JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x4F7 DUP3 PUSH2 0x9D3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA16 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xA1F DUP4 PUSH2 0x9D3 JUMP JUMPDEST SWAP2 POP PUSH2 0xA2D PUSH1 0x20 DUP5 ADD PUSH2 0x9D3 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA4A JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xA53 DUP5 PUSH2 0x9D3 JUMP JUMPDEST SWAP3 POP PUSH2 0xA61 PUSH1 0x20 DUP6 ADD PUSH2 0x9D3 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA83 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xA8C DUP4 PUSH2 0x9D3 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAC6 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xAAA JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xAD7 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xB00 JUMPI PUSH2 0xB00 PUSH2 0xB5B JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xB20 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xB3F JUMPI PUSH2 0xB3F PUSH2 0xB5B JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xB56 JUMPI PUSH2 0xB56 PUSH2 0xB5B JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 DUP3 CALLVALUE 0x4E MSIZE DIFFICULTY OR PUSH5 0xCCB8A3CE59 0xD6 PUSH17 0x6CAA54AA9D2BDD9EBF73908896AFD71559 PUSH5 0x736F6C6343 STOP ADDMOD MUL STOP CALLER ",
							"sourceMap": "233:4360:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;344:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;2014:169;;;;;;:::i;:::-;;:::i;:::-;;;1653:14:4;;1646:22;1628:41;;1616:2;1601:18;2014:169:3;1583:92:4;1379:158:3;;;:::i;:::-;;;4053:25:4;;;4041:2;4026:18;1379:158:3;4008:76:4;2191:277:3;;;;;;:::i;:::-;;:::i;1140:36::-;;1174:2;1140:36;;774:81;;813:42;774:81;;;;;-1:-1:-1;;;;;1444:32:4;;;1426:51;;1414:2;1399:18;774:81:3;1381:102:4;454:35:3;;487:2;454:35;;;;;4261:4:4;4249:17;;;4231:36;;4219:2;4204:18;454:35:3;4186:87:4;953:83:3;;994:42;953:83;;686:81;;725:42;686:81;;1545:119;;;;;;:::i;:::-;;:::i;408:39::-;;;;;;;;;;;;;;;-1:-1:-1;;;408:39:3;;;;;1045:41;;1084:2;1045:41;;1672:175;;;;;;:::i;:::-;;:::i;1093:40::-;;1131:2;1093:40;;862:84;;904:42;862:84;;1855:151;;;;;;:::i;:::-;-1:-1:-1;;;;;1971:18:3;;;1944:7;1971:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;1855:151;2014:169;2097:4;2114:39;4572:10;2137:7;2146:6;2114:8;:39::i;:::-;-1:-1:-1;2171:4:3;2014:169;;;;:::o;1379:158::-;1432:7;1505:23;;;;;;725:42;1476:23;;;;1459:12;;:70;;1505:23;1459:41;;:12;:16;:41::i;:::-;:45;;:70::i;:::-;1452:77;;1379:158;:::o;2191:277::-;2297:4;2314:36;2324:6;2332:9;2343:6;2314:9;:36::i;:::-;-1:-1:-1;;;;;2392:19:3;;;;;;:11;:19;;;;;;;;4572:10;2392:33;;;;;;;;;2361:77;;2370:6;;2392:45;;2430:6;2392:37;:45::i;:::-;2361:8;:77::i;:::-;-1:-1:-1;2456:4:3;2191:277;;;;;:::o;1545:119::-;-1:-1:-1;;;;;1638:18:3;;1611:7;1638:18;;;;;;;;;;;1545:119;;;;:::o;1672:175::-;1758:4;1775:42;4572:10;1799:9;1810:6;1775:9;:42::i;4138:346::-;-1:-1:-1;;;;;4240:19:3;;4232:68;;;;-1:-1:-1;;;4232:68:3;;3704:2:4;4232:68:3;;;3686:21:4;3743:2;3723:18;;;3716:30;3782:34;3762:18;;;3755:62;-1:-1:-1;;;3833:18:4;;;3826:34;3877:19;;4232:68:3;;;;;;;;;-1:-1:-1;;;;;4319:21:3;;4311:68;;;;-1:-1:-1;;;4311:68:3;;2894:2:4;4311:68:3;;;2876:21:4;2933:2;2913:18;;;2906:30;2972:34;2952:18;;;2945:62;-1:-1:-1;;;3023:18:4;;;3016:32;3065:19;;4311:68:3;2866:224:4;4311:68:3;-1:-1:-1;;;;;4392:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;4444:32;;4053:25:4;;;4444:32:3;;4026:18:4;4444:32:3;;;;;;;4138:346;;;:::o;3122:96:2:-;3180:7;3206:5;3210:1;3206;:5;:::i;:::-;3199:12;3122:96;-1:-1:-1;;;3122:96:2:o;2476:1654:3:-;-1:-1:-1;;;;;2582:23:3;;2574:71;;;;-1:-1:-1;;;2574:71:3;;2490:2:4;2574:71:3;;;2472:21:4;2529:2;2509:18;;;2502:30;2568:34;2548:18;;;2541:62;-1:-1:-1;;;2619:18:4;;;2612:33;2662:19;;2574:71:3;2462:225:4;2574:71:3;-1:-1:-1;;;;;2682:17:3;;2658:21;2682:17;;;;;;;;;;;2718:23;;;;2710:74;;;;-1:-1:-1;;;2710:74:3;;3297:2:4;2710:74:3;;;3279:21:4;3336:2;3316:18;;;3309:30;3375:34;3355:18;;;3348:62;-1:-1:-1;;;3426:18:4;;;3419:36;3472:19;;2710:74:3;3269:228:4;2710:74:3;2797:23;2823:33;2852:3;2823:24;:6;1084:2;2823:10;:24::i;:::-;:28;;:33::i;:::-;2797:59;-1:-1:-1;2867:22:3;2892:32;2920:3;2892:23;:6;1131:2;2892:10;:23::i;:32::-;2867:57;-1:-1:-1;2935:18:3;-1:-1:-1;;;;;2956:25:3;;725:42;2956:25;;:54;;-1:-1:-1;;;;;;2985:25:3;;;2956:54;:89;;3044:1;2956:89;;;3013:28;3037:3;3013:19;:6;1174:2;3013:10;:19::i;:28::-;2935:110;-1:-1:-1;3056:18:3;3077:29;3102:3;3077:20;:6;1218:2;3077:10;:20::i;:29::-;3056:50;-1:-1:-1;3119:16:3;3138:51;3178:10;3138:35;:15;3158:14;3138:19;:35::i;:::-;:39;;:51::i;:::-;3119:70;-1:-1:-1;3200:21:3;3224:36;3249:10;3224:20;:6;3119:70;3224:10;:20::i;:36::-;3200:60;-1:-1:-1;3293:25:3;:13;3311:6;3293:17;:25::i;:::-;-1:-1:-1;;;;;3273:17:3;;;:9;:17;;;;;;;;;;;:45;;;;3352:20;;;;;;;:39;;3377:13;3352:24;:39::i;:::-;-1:-1:-1;;;;;3329:20:3;;:9;:20;;;;;;;;;;:62;;;;904:42;3431:26;;;;:47;;3462:15;3431:30;:47::i;:::-;3402:9;:26;;;;;:76;;;;994:42;3517:25;;;;:45;;3547:14;3517:29;:45::i;:::-;994:42;3489:9;:25;;;;;;:73;3579:14;;3575:206;;3636:46;3664:17;:10;3679:1;3664:14;:17::i;:::-;725:42;3636:9;:23;;;;;;;;:27;:46::i;:::-;725:42;3610:9;:23;;;;;;:72;3723:46;3751:17;:10;3766:1;3751:14;:17::i;:::-;3723:9;:23;;;;;;;;:27;:46::i;:::-;3697:9;:23;;;;;;:72;3575:206;3815:9;-1:-1:-1;;;;;3798:42:3;3807:6;-1:-1:-1;;;;;3798:42:3;-1:-1:-1;;;;;;;;;;;3826:13:3;3798:42;;;;4053:25:4;;4041:2;4026:18;;4008:76;3798:42:3;;;;;;;;3855:12;;3851:168;;3889:50;;4053:25:4;;;904:42:3;;-1:-1:-1;;;;;3889:50:3;;;-1:-1:-1;;;;;;;;;;;3889:50:3;4041:2:4;4026:18;3889:50:3;;;;;;;3959:48;;4053:25:4;;;994:42:3;;-1:-1:-1;;;;;3959:48:3;;;-1:-1:-1;;;;;;;;;;;3959:48:3;4041:2:4;4026:18;3959:48:3;;;;;;;3851:168;4033:14;;4029:94;;4069:42;;4053:25:4;;;725:42:3;;-1:-1:-1;;;;;4069:42:3;;;-1:-1:-1;;;;;;;;;;;4069:42:3;4041:2:4;4026:18;4069:42:3;;;;;;;4029:94;2476:1654;;;;;;;;;;:::o;3465:96:2:-;3523:7;3549:5;3553:1;3549;:5;:::i;3850:96::-;3908:7;3934:5;3938:1;3934;:5;:::i;2755:96::-;2813:7;2839:5;2843:1;2839;:5;:::i;14:173:4:-;82:20;;-1:-1:-1;;;;;131:31:4;;121:42;;111:2;;177:1;174;167:12;192:196;;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;353:29;372:9;353:29;:::i;393:270::-;;;522:2;510:9;501:7;497:23;493:32;490:2;;;543:6;535;528:22;490:2;571:29;590:9;571:29;:::i;:::-;561:39;;619:38;653:2;642:9;638:18;619:38;:::i;:::-;609:48;;480:183;;;;;:::o;668:338::-;;;;814:2;802:9;793:7;789:23;785:32;782:2;;;835:6;827;820:22;782:2;863:29;882:9;863:29;:::i;:::-;853:39;;911:38;945:2;934:9;930:18;911:38;:::i;:::-;901:48;;996:2;985:9;981:18;968:32;958:42;;772:234;;;;;:::o;1011:264::-;;;1140:2;1128:9;1119:7;1115:23;1111:32;1108:2;;;1161:6;1153;1146:22;1108:2;1189:29;1208:9;1189:29;:::i;:::-;1179:39;1265:2;1250:18;;;;1237:32;;-1:-1:-1;;;1098:177:4:o;1680:603::-;;1821:2;1850;1839:9;1832:21;1882:6;1876:13;1925:6;1920:2;1909:9;1905:18;1898:34;1950:4;1963:140;1977:6;1974:1;1971:13;1963:140;;;2072:14;;;2068:23;;2062:30;2038:17;;;2057:2;2034:26;2027:66;1992:10;;1963:140;;;2121:6;2118:1;2115:13;2112:2;;;2191:4;2186:2;2177:6;2166:9;2162:22;2158:31;2151:45;2112:2;-1:-1:-1;2267:2:4;2246:15;-1:-1:-1;;2242:29:4;2227:45;;;;2274:2;2223:54;;1801:482;-1:-1:-1;;;1801:482:4:o;4278:128::-;;4349:1;4345:6;4342:1;4339:13;4336:2;;;4355:18;;:::i;:::-;-1:-1:-1;4391:9:4;;4326:80::o;4411:217::-;;4477:1;4467:2;;-1:-1:-1;;;4502:31:4;;4556:4;4553:1;4546:15;4584:4;4509:1;4574:15;4467:2;-1:-1:-1;4613:9:4;;4457:171::o;4633:168::-;;4739:1;4735;4731:6;4727:14;4724:1;4721:21;4716:1;4709:9;4702:17;4698:45;4695:2;;;4746:18;;:::i;:::-;-1:-1:-1;4786:9:4;;4685:116::o;4806:125::-;;4874:1;4871;4868:8;4865:2;;;4879:18;;:::i;:::-;-1:-1:-1;4916:9:4;;4855:76::o;4936:127::-;4997:10;4992:3;4988:20;4985:1;4978:31;5028:4;5025:1;5018:15;5052:4;5049:1;5042:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "603000",
								"executionCost": "43293",
								"totalCost": "646293"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "22542",
								"balanceOf(address)": "infinite",
								"burnAddress1()": "239",
								"burnAddress2()": "261",
								"burnRate()": "239",
								"decimals()": "271",
								"liquidityFee()": "284",
								"liquidityWallet()": "304",
								"name()": "infinite",
								"sellFee()": "218",
								"symbol()": "infinite",
								"totalSupply()": "infinite",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"treasuryFee()": "261",
								"treasuryWallet()": "305"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_msgSender()": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 4593,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 233,
									"end": 4593,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 233,
									"end": 4593,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 658,
									"end": 677,
									"name": "PUSH",
									"source": 3,
									"value": "33B2E3C9FD0803CE8000000"
								},
								{
									"begin": 627,
									"end": 677,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 627,
									"end": 677,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1229,
									"end": 1371,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 1229,
									"end": 1371,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1229,
									"end": 1371,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1229,
									"end": 1371,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1229,
									"end": 1371,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1229,
									"end": 1371,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1229,
									"end": 1371,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1229,
									"end": 1371,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1229,
									"end": 1371,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1229,
									"end": 1371,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1284,
									"end": 1296,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1284,
									"end": 1296,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 904,
									"end": 946,
									"name": "PUSH",
									"source": 3,
									"value": "2C604D9E15E6524F0BB2A2A22F63A7CA041E84C3"
								},
								{
									"begin": 1255,
									"end": 1264,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 1281,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1255,
									"end": 1281,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1255,
									"end": 1281,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1255,
									"end": 1281,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1255,
									"end": 1281,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1255,
									"end": 1281,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1255,
									"end": 1281,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1255,
									"end": 1281,
									"name": "PUSH",
									"source": 3,
									"value": "B7A07C5F0332C350D219D103C30B3F8D55A382AEEEF7F1BA4F6D049E5D945968"
								},
								{
									"begin": 1255,
									"end": 1296,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1255,
									"end": 1296,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1255,
									"end": 1296,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1255,
									"end": 1281,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1312,
									"end": 1363,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 160,
									"end": 185,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 160,
									"end": 185,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 160,
									"end": 185,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 904,
									"end": 946,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 904,
									"end": 946,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1255,
									"end": 1264,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1255,
									"end": 1264,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1312,
									"end": 1363,
									"name": "PUSH",
									"source": 3,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 1312,
									"end": 1363,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 133,
									"end": 151,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1312,
									"end": 1363,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1312,
									"end": 1363,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1312,
									"end": 1363,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1312,
									"end": 1363,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1312,
									"end": 1363,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1312,
									"end": 1363,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1312,
									"end": 1363,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 233,
									"end": 4593,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 4593,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 233,
									"end": 4593,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 4593,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 4593,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 233,
									"end": 4593,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 4593,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f682344e59441764ccb8a3ce59d6706caa54aa9d2bdd9ebf73908896afd7155964736f6c63430008020033",
									".code": [
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH",
											"source": 3,
											"value": "472A0B2A"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH",
											"source": 3,
											"value": "BED99850"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH",
											"source": 3,
											"value": "CC32D176"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH",
											"source": 3,
											"value": "D4698016"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH",
											"source": 3,
											"value": "DD62ED3E"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH",
											"source": 3,
											"value": "472A0B2A"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH",
											"source": 3,
											"value": "95D89B41"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH",
											"source": 3,
											"value": "98118CB4"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH",
											"source": 3,
											"value": "2B14CA56"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH",
											"source": 3,
											"value": "2B14CA56"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH",
											"source": 3,
											"value": "311E6703"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH",
											"source": 3,
											"value": "313CE567"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH",
											"source": 3,
											"value": "4626402B"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH",
											"source": 3,
											"value": "6FDDE03"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH",
											"source": 3,
											"value": "18160DDD"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 233,
											"end": 4593,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 344,
											"end": 401,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 344,
											"end": 401,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 344,
											"end": 401,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 344,
											"end": 401,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 401,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 344,
											"end": 401,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 344,
											"end": 401,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 401,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 344,
											"end": 401,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 401,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 344,
											"end": 401,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 344,
											"end": 401,
											"name": "PUSH",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 344,
											"end": 401,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 344,
											"end": 401,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 344,
											"end": 401,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 344,
											"end": 401,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 344,
											"end": 401,
											"name": "PUSH",
											"source": 3,
											"value": "5B544553545D204465666C6174696F6E61727920546F6B656E00000000000000"
										},
										{
											"begin": 344,
											"end": 401,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 344,
											"end": 401,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 344,
											"end": 401,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 344,
											"end": 401,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 344,
											"end": 401,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 344,
											"end": 401,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 344,
											"end": 401,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 344,
											"end": 401,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 401,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 344,
											"end": 401,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 344,
											"end": 401,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 344,
											"end": 401,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 344,
											"end": 401,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 344,
											"end": 401,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 344,
											"end": 401,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 344,
											"end": 401,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 344,
											"end": 401,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 401,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 344,
											"end": 401,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 344,
											"end": 401,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 344,
											"end": 401,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 344,
											"end": 401,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 344,
											"end": 401,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2183,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2014,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 2014,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2014,
											"end": 2183,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2183,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2014,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2014,
											"end": 2183,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2014,
											"end": 2183,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2014,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2014,
											"end": 2183,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2014,
											"end": 2183,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 2014,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2183,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2014,
											"end": 2183,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1653,
											"end": 1667,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1653,
											"end": 1667,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1646,
											"end": 1668,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1628,
											"end": 1669,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1628,
											"end": 1669,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1616,
											"end": 1618,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1619,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2014,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1583,
											"end": 1675,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1379,
											"end": 1537,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1379,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1379,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1379,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1379,
											"end": 1537,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1379,
											"end": 1537,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1379,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1379,
											"end": 1537,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1379,
											"end": 1537,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4053,
											"end": 4078,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4053,
											"end": 4078,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4053,
											"end": 4078,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4041,
											"end": 4043,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4026,
											"end": 4044,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1379,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 4008,
											"end": 4084,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2191,
											"end": 2468,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2191,
											"end": 2468,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 2191,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2191,
											"end": 2468,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2468,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2191,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2191,
											"end": 2468,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2191,
											"end": 2468,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2191,
											"end": 2468,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2191,
											"end": 2468,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1140,
											"end": 1176,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1140,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1140,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1174,
											"end": 1176,
											"name": "PUSH",
											"source": 3,
											"value": "1E"
										},
										{
											"begin": 1140,
											"end": 1176,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1140,
											"end": 1176,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 774,
											"end": 855,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 774,
											"end": 855,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 774,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 813,
											"end": 855,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 774,
											"end": 855,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 774,
											"end": 855,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 774,
											"end": 855,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 774,
											"end": 855,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 774,
											"end": 855,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 774,
											"end": 855,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1426,
											"end": 1477,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1426,
											"end": 1477,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1414,
											"end": 1416,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1399,
											"end": 1417,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 774,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1381,
											"end": 1483,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 454,
											"end": 489,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 454,
											"end": 489,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 454,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 487,
											"end": 489,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 454,
											"end": 489,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 454,
											"end": 489,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 454,
											"end": 489,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 454,
											"end": 489,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 454,
											"end": 489,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 489,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4261,
											"end": 4265,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 4249,
											"end": 4266,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4266,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4266,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4231,
											"end": 4267,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4231,
											"end": 4267,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4219,
											"end": 4221,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4204,
											"end": 4222,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 454,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 4186,
											"end": 4273,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 953,
											"end": 1036,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 953,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 953,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 994,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "CC5E043C5142033A800A72286356317DACB57A77"
										},
										{
											"begin": 953,
											"end": 1036,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 953,
											"end": 1036,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 686,
											"end": 767,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 686,
											"end": 767,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 686,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 725,
											"end": 767,
											"name": "PUSH",
											"source": 3,
											"value": "DEAD"
										},
										{
											"begin": 686,
											"end": 767,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 686,
											"end": 767,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 1664,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1545,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1545,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1545,
											"end": 1664,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 1664,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1545,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1545,
											"end": 1664,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1545,
											"end": 1664,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1545,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1545,
											"end": 1664,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 408,
											"end": 447,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 408,
											"end": 447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 408,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 408,
											"end": 447,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 408,
											"end": 447,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 408,
											"end": 447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 408,
											"end": 447,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 408,
											"end": 447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 408,
											"end": 447,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 408,
											"end": 447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 408,
											"end": 447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 408,
											"end": 447,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 408,
											"end": 447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 408,
											"end": 447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 408,
											"end": 447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 408,
											"end": 447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1111950C0D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 408,
											"end": 447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 408,
											"end": 447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 408,
											"end": 447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 408,
											"end": 447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 408,
											"end": 447,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1045,
											"end": 1086,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1045,
											"end": 1086,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1045,
											"end": 1086,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1084,
											"end": 1086,
											"name": "PUSH",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1045,
											"end": 1086,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1045,
											"end": 1086,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1672,
											"end": 1847,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1672,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1672,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1672,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1672,
											"end": 1847,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1672,
											"end": 1847,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1672,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1672,
											"end": 1847,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1672,
											"end": 1847,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1672,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1672,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1672,
											"end": 1847,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1093,
											"end": 1133,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1093,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1093,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1131,
											"end": 1133,
											"name": "PUSH",
											"source": 3,
											"value": "5A"
										},
										{
											"begin": 1093,
											"end": 1133,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1093,
											"end": 1133,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 862,
											"end": 946,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 862,
											"end": 946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 862,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 904,
											"end": 946,
											"name": "PUSH",
											"source": 3,
											"value": "2C604D9E15E6524F0BB2A2A22F63A7CA041E84C3"
										},
										{
											"begin": 862,
											"end": 946,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 862,
											"end": 946,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 2006,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1855,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1855,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1855,
											"end": 2006,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 2006,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1855,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1855,
											"end": 2006,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1855,
											"end": 2006,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1855,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1971,
											"end": 1989,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1971,
											"end": 1989,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1971,
											"end": 1989,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1944,
											"end": 1951,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 1989,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1971,
											"end": 1989,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1971,
											"end": 1989,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1971,
											"end": 1982,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1971,
											"end": 1989,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1971,
											"end": 1989,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1971,
											"end": 1989,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1971,
											"end": 1989,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1971,
											"end": 1989,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1971,
											"end": 1989,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1971,
											"end": 1989,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1971,
											"end": 1989,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1971,
											"end": 1998,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1971,
											"end": 1998,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1971,
											"end": 1998,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1971,
											"end": 1998,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1971,
											"end": 1998,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1971,
											"end": 1998,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1971,
											"end": 1998,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1971,
											"end": 1998,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1971,
											"end": 1998,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1971,
											"end": 1998,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1971,
											"end": 1998,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1971,
											"end": 1998,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1971,
											"end": 1998,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 2006,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2183,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2014,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2097,
											"end": 2101,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2114,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 4572,
											"end": 4582,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2137,
											"end": 2144,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2146,
											"end": 2152,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2114,
											"end": 2153,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2114,
											"end": 2153,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2114,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2171,
											"end": 2175,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2014,
											"end": 2183,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2183,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2183,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2183,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2183,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1379,
											"end": 1537,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1379,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1439,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1505,
											"end": 1528,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1505,
											"end": 1528,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1528,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1528,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1528,
											"name": "PUSH",
											"source": 3,
											"value": "AD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5"
										},
										{
											"begin": 1505,
											"end": 1528,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 725,
											"end": 767,
											"name": "PUSH",
											"source": 3,
											"value": "DEAD"
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "PUSH",
											"source": 3,
											"value": "44AD89BA62B98FF34F51403AC22759B55759460C0BB5521EB4B6EE3CFF49CF83"
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1459,
											"end": 1471,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1459,
											"end": 1471,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1459,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1459,
											"end": 1529,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1528,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1459,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1459,
											"end": 1500,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1459,
											"end": 1471,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1459,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1459,
											"end": 1500,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1459,
											"end": 1500,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1459,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1459,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1459,
											"end": 1529,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1459,
											"end": 1529,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1459,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1529,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1529,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1379,
											"end": 1537,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1379,
											"end": 1537,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2191,
											"end": 2468,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2191,
											"end": 2468,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2297,
											"end": 2301,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2314,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2332,
											"end": 2341,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2343,
											"end": 2349,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 2314,
											"end": 2350,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2314,
											"end": 2350,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2314,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2392,
											"end": 2403,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4572,
											"end": 4582,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2392,
											"end": 2425,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2392,
											"end": 2425,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2392,
											"end": 2425,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2392,
											"end": 2425,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2392,
											"end": 2425,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2392,
											"end": 2425,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2392,
											"end": 2425,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2392,
											"end": 2425,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2392,
											"end": 2425,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2361,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2361,
											"end": 2438,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2376,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2376,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2392,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 2392,
											"end": 2437,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2430,
											"end": 2436,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2392,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 2392,
											"end": 2437,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2392,
											"end": 2437,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 2392,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2361,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2361,
											"end": 2438,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2361,
											"end": 2438,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2361,
											"end": 2438,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2456,
											"end": 2460,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2191,
											"end": 2468,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2468,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2468,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2468,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2468,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2468,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1545,
											"end": 1664,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1545,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1638,
											"end": 1656,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1656,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1618,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1656,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1656,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1656,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1656,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1638,
											"end": 1656,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1656,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1656,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1656,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1656,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1656,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1656,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 1664,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1545,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 1664,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 1664,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 1664,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 1664,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1672,
											"end": 1847,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1672,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1758,
											"end": 1762,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1775,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 4572,
											"end": 4582,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1799,
											"end": 1808,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1810,
											"end": 1816,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1775,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1775,
											"end": 1817,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4138,
											"end": 4484,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 4138,
											"end": 4484,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4240,
											"end": 4259,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4240,
											"end": 4259,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4232,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 4232,
											"end": 4300,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4232,
											"end": 4300,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4232,
											"end": 4300,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4232,
											"end": 4300,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4232,
											"end": 4300,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3704,
											"end": 3706,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4232,
											"end": 4300,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4232,
											"end": 4300,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4232,
											"end": 4300,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3743,
											"end": 3745,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3723,
											"end": 3741,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3723,
											"end": 3741,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3723,
											"end": 3741,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3716,
											"end": 3746,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3782,
											"end": 3816,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3762,
											"end": 3780,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3762,
											"end": 3780,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3762,
											"end": 3780,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3755,
											"end": 3817,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3833,
											"end": 3851,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3833,
											"end": 3851,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3833,
											"end": 3851,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3826,
											"end": 3860,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3877,
											"end": 3896,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3877,
											"end": 3896,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4232,
											"end": 4300,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 4232,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4232,
											"end": 4300,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4232,
											"end": 4300,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4232,
											"end": 4300,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4232,
											"end": 4300,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4232,
											"end": 4300,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4232,
											"end": 4300,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4232,
											"end": 4300,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4232,
											"end": 4300,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 4232,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4319,
											"end": 4340,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4319,
											"end": 4340,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4311,
											"end": 4379,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 4311,
											"end": 4379,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4311,
											"end": 4379,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4311,
											"end": 4379,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4311,
											"end": 4379,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4311,
											"end": 4379,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2894,
											"end": 2896,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4311,
											"end": 4379,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4311,
											"end": 4379,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4311,
											"end": 4379,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2876,
											"end": 2897,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 2935,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2913,
											"end": 2931,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2913,
											"end": 2931,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2913,
											"end": 2931,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2906,
											"end": 2936,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2972,
											"end": 3006,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 2952,
											"end": 2970,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2952,
											"end": 2970,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2952,
											"end": 2970,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2945,
											"end": 3007,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3023,
											"end": 3041,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3023,
											"end": 3041,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3023,
											"end": 3041,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3016,
											"end": 3048,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3065,
											"end": 3084,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3065,
											"end": 3084,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4311,
											"end": 4379,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2866,
											"end": 3090,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4311,
											"end": 4379,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 4311,
											"end": 4379,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4392,
											"end": 4410,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4392,
											"end": 4410,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4392,
											"end": 4410,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4392,
											"end": 4410,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4392,
											"end": 4410,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4392,
											"end": 4410,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4392,
											"end": 4410,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4392,
											"end": 4403,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4392,
											"end": 4410,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4392,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4392,
											"end": 4410,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4392,
											"end": 4410,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4392,
											"end": 4410,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4392,
											"end": 4410,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4392,
											"end": 4410,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4392,
											"end": 4410,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4392,
											"end": 4419,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4392,
											"end": 4419,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4392,
											"end": 4419,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4392,
											"end": 4419,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4392,
											"end": 4419,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4392,
											"end": 4419,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4392,
											"end": 4419,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4392,
											"end": 4419,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4392,
											"end": 4419,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4392,
											"end": 4419,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4392,
											"end": 4419,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4392,
											"end": 4419,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4392,
											"end": 4419,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4392,
											"end": 4428,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4392,
											"end": 4428,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4392,
											"end": 4428,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4444,
											"end": 4476,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4444,
											"end": 4476,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4053,
											"end": 4078,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4053,
											"end": 4078,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4053,
											"end": 4078,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4444,
											"end": 4476,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 4444,
											"end": 4476,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4026,
											"end": 4044,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4444,
											"end": 4476,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4444,
											"end": 4476,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4444,
											"end": 4476,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4444,
											"end": 4476,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4444,
											"end": 4476,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4444,
											"end": 4476,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4444,
											"end": 4476,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 4138,
											"end": 4484,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4138,
											"end": 4484,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4138,
											"end": 4484,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4138,
											"end": 4484,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2476,
											"end": 4130,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 2476,
											"end": 4130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2582,
											"end": 2605,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2582,
											"end": 2605,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2574,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2574,
											"end": 2645,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2574,
											"end": 2645,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2574,
											"end": 2645,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2574,
											"end": 2645,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2574,
											"end": 2645,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2490,
											"end": 2492,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2645,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2574,
											"end": 2645,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2574,
											"end": 2645,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2472,
											"end": 2493,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2529,
											"end": 2531,
											"name": "PUSH",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2532,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2568,
											"end": 2602,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2548,
											"end": 2566,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2548,
											"end": 2566,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2548,
											"end": 2566,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2603,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2619,
											"end": 2637,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2619,
											"end": 2637,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2619,
											"end": 2637,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2612,
											"end": 2645,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2681,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2662,
											"end": 2681,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2574,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2462,
											"end": 2687,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2574,
											"end": 2645,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2574,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2682,
											"end": 2699,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2682,
											"end": 2699,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2658,
											"end": 2679,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2682,
											"end": 2699,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2682,
											"end": 2699,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2682,
											"end": 2699,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2682,
											"end": 2699,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2682,
											"end": 2699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2682,
											"end": 2699,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2682,
											"end": 2699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2682,
											"end": 2699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2682,
											"end": 2699,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2682,
											"end": 2699,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2718,
											"end": 2741,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2718,
											"end": 2741,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2718,
											"end": 2741,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2718,
											"end": 2741,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2710,
											"end": 2784,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2784,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2710,
											"end": 2784,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2710,
											"end": 2784,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2784,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3297,
											"end": 3299,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2784,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2710,
											"end": 2784,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2784,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3300,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3336,
											"end": 3338,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 3316,
											"end": 3334,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3316,
											"end": 3334,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3316,
											"end": 3334,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3309,
											"end": 3339,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3375,
											"end": 3409,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 3355,
											"end": 3373,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3355,
											"end": 3373,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3355,
											"end": 3373,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3348,
											"end": 3410,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3419,
											"end": 3455,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3472,
											"end": 3491,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3472,
											"end": 3491,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 3269,
											"end": 3497,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2784,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2710,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 2820,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 2852,
											"end": 2855,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2823,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2823,
											"end": 2829,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1086,
											"name": "PUSH",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2823,
											"end": 2847,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2823,
											"end": 2847,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2823,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2823,
											"end": 2851,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2823,
											"end": 2851,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2823,
											"end": 2856,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2823,
											"end": 2856,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 2823,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 2856,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2892,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2920,
											"end": 2923,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2892,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2892,
											"end": 2898,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1131,
											"end": 1133,
											"name": "PUSH",
											"source": 3,
											"value": "5A"
										},
										{
											"begin": 2892,
											"end": 2902,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2892,
											"end": 2915,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2892,
											"end": 2924,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2892,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2867,
											"end": 2924,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2935,
											"end": 2953,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2956,
											"end": 2981,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2956,
											"end": 2981,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 725,
											"end": 767,
											"name": "PUSH",
											"source": 3,
											"value": "DEAD"
										},
										{
											"begin": 2956,
											"end": 2981,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2956,
											"end": 2981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2956,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2956,
											"end": 3010,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2956,
											"end": 3010,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2956,
											"end": 3010,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2956,
											"end": 3045,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 2956,
											"end": 3045,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3045,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2956,
											"end": 3045,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 2956,
											"end": 3045,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2956,
											"end": 3045,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 2956,
											"end": 3045,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3013,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3037,
											"end": 3040,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3013,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 3013,
											"end": 3019,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1174,
											"end": 1176,
											"name": "PUSH",
											"source": 3,
											"value": "1E"
										},
										{
											"begin": 3013,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 3013,
											"end": 3032,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3013,
											"end": 3041,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3013,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2935,
											"end": 3045,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3056,
											"end": 3074,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3077,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 3102,
											"end": 3105,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3077,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 3077,
											"end": 3083,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1220,
											"name": "PUSH",
											"source": 3,
											"value": "1E"
										},
										{
											"begin": 3077,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 3077,
											"end": 3097,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3077,
											"end": 3106,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 3077,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3056,
											"end": 3106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3119,
											"end": 3135,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3138,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 3178,
											"end": 3188,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3138,
											"end": 3173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 3138,
											"end": 3153,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3158,
											"end": 3172,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3138,
											"end": 3157,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 3138,
											"end": 3173,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3138,
											"end": 3173,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 3138,
											"end": 3173,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3138,
											"end": 3177,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3138,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 3138,
											"end": 3189,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3138,
											"end": 3189,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 3138,
											"end": 3189,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3119,
											"end": 3189,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3200,
											"end": 3221,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3224,
											"end": 3260,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 3249,
											"end": 3259,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3224,
											"end": 3244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 3224,
											"end": 3230,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 3119,
											"end": 3189,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3224,
											"end": 3234,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 3224,
											"end": 3244,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3224,
											"end": 3260,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 3224,
											"end": 3260,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3200,
											"end": 3260,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3293,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 3293,
											"end": 3306,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3311,
											"end": 3317,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 3293,
											"end": 3310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 3293,
											"end": 3318,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3293,
											"end": 3318,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 3293,
											"end": 3318,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3273,
											"end": 3290,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3273,
											"end": 3290,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 3273,
											"end": 3290,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3273,
											"end": 3282,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3273,
											"end": 3290,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3273,
											"end": 3290,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3273,
											"end": 3290,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3273,
											"end": 3290,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3273,
											"end": 3290,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3273,
											"end": 3290,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3273,
											"end": 3290,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3273,
											"end": 3290,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3273,
											"end": 3290,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3273,
											"end": 3290,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3273,
											"end": 3290,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3273,
											"end": 3318,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3273,
											"end": 3318,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3273,
											"end": 3318,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3273,
											"end": 3318,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3352,
											"end": 3372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3352,
											"end": 3372,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 3352,
											"end": 3372,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3352,
											"end": 3372,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3352,
											"end": 3372,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3352,
											"end": 3372,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3352,
											"end": 3372,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3352,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 3352,
											"end": 3391,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3377,
											"end": 3390,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3352,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 3352,
											"end": 3391,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3352,
											"end": 3391,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 3352,
											"end": 3391,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3329,
											"end": 3349,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 3329,
											"end": 3349,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3329,
											"end": 3338,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3349,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3329,
											"end": 3349,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3329,
											"end": 3349,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3329,
											"end": 3349,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3329,
											"end": 3349,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3329,
											"end": 3349,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3329,
											"end": 3349,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3329,
											"end": 3349,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3329,
											"end": 3349,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3329,
											"end": 3349,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3329,
											"end": 3391,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3329,
											"end": 3391,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3329,
											"end": 3391,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3329,
											"end": 3391,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 904,
											"end": 946,
											"name": "PUSH",
											"source": 3,
											"value": "2C604D9E15E6524F0BB2A2A22F63A7CA041E84C3"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "PUSH",
											"source": 3,
											"value": "B7A07C5F0332C350D219D103C30B3F8D55A382AEEEF7F1BA4F6D049E5D945968"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3431,
											"end": 3478,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 3431,
											"end": 3478,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3477,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3431,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 3431,
											"end": 3478,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3431,
											"end": 3478,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 3431,
											"end": 3478,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3402,
											"end": 3411,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3402,
											"end": 3428,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3402,
											"end": 3428,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3402,
											"end": 3428,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3402,
											"end": 3428,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3402,
											"end": 3428,
											"name": "PUSH",
											"source": 3,
											"value": "B7A07C5F0332C350D219D103C30B3F8D55A382AEEEF7F1BA4F6D049E5D945968"
										},
										{
											"begin": 3402,
											"end": 3478,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3402,
											"end": 3478,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3402,
											"end": 3478,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3402,
											"end": 3478,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 994,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "CC5E043C5142033A800A72286356317DACB57A77"
										},
										{
											"begin": 3517,
											"end": 3542,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3517,
											"end": 3542,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3517,
											"end": 3542,
											"name": "PUSH",
											"source": 3,
											"value": "A4A619A332312F3B10535105AABA4FAA19A71AB9D685B400DDC4B24E4C7FCB2E"
										},
										{
											"begin": 3517,
											"end": 3542,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3517,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 3517,
											"end": 3562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3547,
											"end": 3561,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3517,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 3517,
											"end": 3562,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3517,
											"end": 3562,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 3517,
											"end": 3562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 994,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "CC5E043C5142033A800A72286356317DACB57A77"
										},
										{
											"begin": 3489,
											"end": 3498,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3514,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3489,
											"end": 3514,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3489,
											"end": 3514,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3489,
											"end": 3514,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3489,
											"end": 3514,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3489,
											"end": 3514,
											"name": "PUSH",
											"source": 3,
											"value": "A4A619A332312F3B10535105AABA4FAA19A71AB9D685B400DDC4B24E4C7FCB2E"
										},
										{
											"begin": 3489,
											"end": 3562,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3579,
											"end": 3593,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3579,
											"end": 3593,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3575,
											"end": 3781,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 3575,
											"end": 3781,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3636,
											"end": 3682,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 3664,
											"end": 3681,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 3664,
											"end": 3674,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3679,
											"end": 3680,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3664,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 3664,
											"end": 3681,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3664,
											"end": 3681,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 3664,
											"end": 3681,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 725,
											"end": 767,
											"name": "PUSH",
											"source": 3,
											"value": "DEAD"
										},
										{
											"begin": 3636,
											"end": 3645,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3636,
											"end": 3659,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3636,
											"end": 3659,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3636,
											"end": 3659,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3636,
											"end": 3659,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3636,
											"end": 3659,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3636,
											"end": 3659,
											"name": "PUSH",
											"source": 3,
											"value": "44AD89BA62B98FF34F51403AC22759B55759460C0BB5521EB4B6EE3CFF49CF83"
										},
										{
											"begin": 3636,
											"end": 3659,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3636,
											"end": 3659,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3636,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 3636,
											"end": 3682,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3636,
											"end": 3682,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 3636,
											"end": 3682,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 725,
											"end": 767,
											"name": "PUSH",
											"source": 3,
											"value": "DEAD"
										},
										{
											"begin": 3610,
											"end": 3619,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3610,
											"end": 3633,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3633,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3633,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3633,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3610,
											"end": 3633,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3633,
											"name": "PUSH",
											"source": 3,
											"value": "44AD89BA62B98FF34F51403AC22759B55759460C0BB5521EB4B6EE3CFF49CF83"
										},
										{
											"begin": 3610,
											"end": 3682,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3723,
											"end": 3769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 3751,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 3751,
											"end": 3761,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3766,
											"end": 3767,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3751,
											"end": 3765,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 3751,
											"end": 3768,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3751,
											"end": 3768,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 3751,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3723,
											"end": 3732,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3723,
											"end": 3746,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3723,
											"end": 3746,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3723,
											"end": 3746,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3723,
											"end": 3746,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3723,
											"end": 3746,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3723,
											"end": 3746,
											"name": "PUSH",
											"source": 3,
											"value": "AD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5"
										},
										{
											"begin": 3723,
											"end": 3746,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3723,
											"end": 3746,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3723,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 3723,
											"end": 3769,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3723,
											"end": 3769,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 3723,
											"end": 3769,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3706,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3697,
											"end": 3720,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3720,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3720,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3720,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3697,
											"end": 3720,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3720,
											"name": "PUSH",
											"source": 3,
											"value": "AD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5"
										},
										{
											"begin": 3697,
											"end": 3769,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3575,
											"end": 3781,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 3575,
											"end": 3781,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3815,
											"end": 3824,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3798,
											"end": 3840,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3807,
											"end": 3813,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3798,
											"end": 3840,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3826,
											"end": 3839,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3798,
											"end": 3840,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3798,
											"end": 3840,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3798,
											"end": 3840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 3798,
											"end": 3840,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4053,
											"end": 4078,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4053,
											"end": 4078,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4041,
											"end": 4043,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4026,
											"end": 4044,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4026,
											"end": 4044,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4008,
											"end": 4084,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3798,
											"end": 3840,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 3798,
											"end": 3840,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3798,
											"end": 3840,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3798,
											"end": 3840,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3798,
											"end": 3840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3798,
											"end": 3840,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3798,
											"end": 3840,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3798,
											"end": 3840,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3798,
											"end": 3840,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 3855,
											"end": 3867,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3855,
											"end": 3867,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3851,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 3851,
											"end": 4019,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3889,
											"end": 3939,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3889,
											"end": 3939,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4053,
											"end": 4078,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4053,
											"end": 4078,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4053,
											"end": 4078,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 904,
											"end": 946,
											"name": "PUSH",
											"source": 3,
											"value": "2C604D9E15E6524F0BB2A2A22F63A7CA041E84C3"
										},
										{
											"begin": 904,
											"end": 946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3889,
											"end": 3939,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 3889,
											"end": 3939,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3889,
											"end": 3939,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3889,
											"end": 3939,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4041,
											"end": 4043,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4026,
											"end": 4044,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3889,
											"end": 3939,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3889,
											"end": 3939,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3889,
											"end": 3939,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3889,
											"end": 3939,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3889,
											"end": 3939,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3889,
											"end": 3939,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3889,
											"end": 3939,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 3959,
											"end": 4007,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3959,
											"end": 4007,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4053,
											"end": 4078,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4053,
											"end": 4078,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4053,
											"end": 4078,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 994,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "CC5E043C5142033A800A72286356317DACB57A77"
										},
										{
											"begin": 994,
											"end": 1036,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3959,
											"end": 4007,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 3959,
											"end": 4007,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3959,
											"end": 4007,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3959,
											"end": 4007,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4041,
											"end": 4043,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4026,
											"end": 4044,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3959,
											"end": 4007,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3959,
											"end": 4007,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3959,
											"end": 4007,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3959,
											"end": 4007,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3959,
											"end": 4007,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3959,
											"end": 4007,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3959,
											"end": 4007,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 3851,
											"end": 4019,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 3851,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4033,
											"end": 4047,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4033,
											"end": 4047,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4029,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 4029,
											"end": 4123,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4069,
											"end": 4111,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4069,
											"end": 4111,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4053,
											"end": 4078,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4053,
											"end": 4078,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4053,
											"end": 4078,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 725,
											"end": 767,
											"name": "PUSH",
											"source": 3,
											"value": "DEAD"
										},
										{
											"begin": 725,
											"end": 767,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4069,
											"end": 4111,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 4069,
											"end": 4111,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4069,
											"end": 4111,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4069,
											"end": 4111,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4041,
											"end": 4043,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4026,
											"end": 4044,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4069,
											"end": 4111,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4069,
											"end": 4111,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4069,
											"end": 4111,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4069,
											"end": 4111,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4069,
											"end": 4111,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4069,
											"end": 4111,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4069,
											"end": 4111,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 4029,
											"end": 4123,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 4029,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 4130,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 4130,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 4130,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 4130,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 4130,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 4130,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 4130,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 4130,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 4130,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 4130,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 4130,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 111,
											"end": 113,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 192,
											"end": 388,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 192,
											"end": 388,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 192,
											"end": 388,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 272,
											"end": 274,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 272,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 272,
											"end": 274,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 325,
											"end": 331,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 317,
											"end": 323,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 310,
											"end": 332,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 272,
											"end": 274,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 272,
											"end": 274,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 353,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 372,
											"end": 381,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 353,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 353,
											"end": 382,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 393,
											"end": 663,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 393,
											"end": 663,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 393,
											"end": 663,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 393,
											"end": 663,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 522,
											"end": 524,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 501,
											"end": 508,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 497,
											"end": 520,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 493,
											"end": 525,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 490,
											"end": 492,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 490,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 490,
											"end": 492,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 543,
											"end": 549,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 535,
											"end": 541,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 528,
											"end": 550,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 490,
											"end": 492,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 490,
											"end": 492,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 571,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 590,
											"end": 599,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 571,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 571,
											"end": 600,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 571,
											"end": 600,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 571,
											"end": 600,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 561,
											"end": 600,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 561,
											"end": 600,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 619,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 653,
											"end": 655,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 642,
											"end": 651,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 638,
											"end": 656,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 619,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 619,
											"end": 657,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 619,
											"end": 657,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 619,
											"end": 657,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 609,
											"end": 657,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 609,
											"end": 657,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 480,
											"end": 663,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 480,
											"end": 663,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 480,
											"end": 663,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 480,
											"end": 663,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 480,
											"end": 663,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 480,
											"end": 663,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 668,
											"end": 1006,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 668,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 668,
											"end": 1006,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 668,
											"end": 1006,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 668,
											"end": 1006,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 814,
											"end": 816,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 793,
											"end": 800,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 789,
											"end": 812,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 785,
											"end": 817,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 782,
											"end": 784,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 782,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 782,
											"end": 784,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 835,
											"end": 841,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 827,
											"end": 833,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 820,
											"end": 842,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 782,
											"end": 784,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 782,
											"end": 784,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 863,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 882,
											"end": 891,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 863,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 863,
											"end": 892,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 863,
											"end": 892,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 863,
											"end": 892,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 853,
											"end": 892,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 853,
											"end": 892,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 911,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 945,
											"end": 947,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 934,
											"end": 943,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 930,
											"end": 948,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 911,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 911,
											"end": 949,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 911,
											"end": 949,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 911,
											"end": 949,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 901,
											"end": 949,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 901,
											"end": 949,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 996,
											"end": 998,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 994,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 981,
											"end": 999,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 968,
											"end": 1000,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 958,
											"end": 1000,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 958,
											"end": 1000,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1011,
											"end": 1275,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1011,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1011,
											"end": 1275,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1011,
											"end": 1275,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1140,
											"end": 1142,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1128,
											"end": 1137,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1119,
											"end": 1126,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1115,
											"end": 1138,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1161,
											"end": 1167,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1159,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1168,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1179,
											"end": 1218,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1265,
											"end": 1267,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1237,
											"end": 1269,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1237,
											"end": 1269,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1098,
											"end": 1275,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1680,
											"end": 2283,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1680,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2283,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1821,
											"end": 1823,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1850,
											"end": 1852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1839,
											"end": 1848,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1882,
											"end": 1888,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1876,
											"end": 1889,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1925,
											"end": 1931,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 1922,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1918,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1905,
											"end": 1923,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1898,
											"end": 1932,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1950,
											"end": 1954,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1977,
											"end": 1983,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 1975,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 1984,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2072,
											"end": 2086,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2072,
											"end": 2086,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2072,
											"end": 2086,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2068,
											"end": 2091,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2068,
											"end": 2091,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2062,
											"end": 2092,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2038,
											"end": 2055,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2038,
											"end": 2055,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2038,
											"end": 2055,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2057,
											"end": 2059,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2060,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2093,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2121,
											"end": 2127,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2115,
											"end": 2128,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2112,
											"end": 2114,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2112,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 2112,
											"end": 2114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2191,
											"end": 2195,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2186,
											"end": 2188,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2177,
											"end": 2183,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2166,
											"end": 2175,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2151,
											"end": 2196,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2112,
											"end": 2114,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 2112,
											"end": 2114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2267,
											"end": 2269,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2246,
											"end": 2261,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2242,
											"end": 2271,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2227,
											"end": 2272,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2227,
											"end": 2272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2227,
											"end": 2272,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2227,
											"end": 2272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2276,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2223,
											"end": 2277,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2223,
											"end": 2277,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 2283,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1801,
											"end": 2283,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4278,
											"end": 4406,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 4278,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4278,
											"end": 4406,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4350,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4345,
											"end": 4351,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 4342,
											"end": 4343,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4339,
											"end": 4352,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4336,
											"end": 4338,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4336,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 4336,
											"end": 4338,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4355,
											"end": 4373,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 4355,
											"end": 4373,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 4355,
											"end": 4373,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4355,
											"end": 4373,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 4355,
											"end": 4373,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4391,
											"end": 4400,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4391,
											"end": 4400,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4326,
											"end": 4406,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4411,
											"end": 4628,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 4411,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4411,
											"end": 4628,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4477,
											"end": 4478,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4467,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 4467,
											"end": 4469,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4502,
											"end": 4533,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4502,
											"end": 4533,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4556,
											"end": 4560,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 4553,
											"end": 4554,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4546,
											"end": 4561,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4584,
											"end": 4588,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4509,
											"end": 4510,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4574,
											"end": 4589,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4467,
											"end": 4469,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 4467,
											"end": 4469,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4613,
											"end": 4622,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4613,
											"end": 4622,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4457,
											"end": 4628,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4633,
											"end": 4801,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 4633,
											"end": 4801,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4633,
											"end": 4801,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4739,
											"end": 4740,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4735,
											"end": 4736,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4731,
											"end": 4737,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 4727,
											"end": 4741,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4724,
											"end": 4725,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4721,
											"end": 4742,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4716,
											"end": 4717,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4709,
											"end": 4718,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4702,
											"end": 4719,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4698,
											"end": 4743,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4695,
											"end": 4697,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4695,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 4695,
											"end": 4697,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4746,
											"end": 4764,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 4746,
											"end": 4764,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 4746,
											"end": 4764,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4746,
											"end": 4764,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 4746,
											"end": 4764,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4786,
											"end": 4795,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4786,
											"end": 4795,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4685,
											"end": 4801,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4806,
											"end": 4931,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 4806,
											"end": 4931,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4806,
											"end": 4931,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4874,
											"end": 4875,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4871,
											"end": 4872,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4868,
											"end": 4876,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4865,
											"end": 4867,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4865,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 4865,
											"end": 4867,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4879,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 4879,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 4879,
											"end": 4897,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4879,
											"end": 4897,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 4879,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4916,
											"end": 4925,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4916,
											"end": 4925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4855,
											"end": 4931,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4936,
											"end": 5063,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 4936,
											"end": 5063,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4997,
											"end": 5007,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 4992,
											"end": 4995,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 4988,
											"end": 5008,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 4986,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4978,
											"end": 5009,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5028,
											"end": 5032,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 5025,
											"end": 5026,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5018,
											"end": 5033,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5052,
											"end": 5056,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5049,
											"end": 5050,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5042,
											"end": 5057,
											"name": "REVERT",
											"source": 4
										}
									],
									".data": {
										"ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burnAddress1()": "472a0b2a",
							"burnAddress2()": "311e6703",
							"burnRate()": "bed99850",
							"decimals()": "313ce567",
							"liquidityFee()": "98118cb4",
							"liquidityWallet()": "d4698016",
							"name()": "06fdde03",
							"sellFee()": "2b14ca56",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"treasuryFee()": "cc32d176",
							"treasuryWallet()": "4626402b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnAddress1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnAddress2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/memetoken.sol\":\"DeflationaryToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"contracts/memetoken.sol\":{\"keccak256\":\"0x7bfa7d4d1c4823a1a99468bdc938598a6f6ab14368d80c22b5c2f4fc2e60664c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc95c159adf0d3463a6c3f7c810aaa1965a0ab41980b6a5d7a8cac241ad1d0be\",\"dweb:/ipfs/QmNhfA8SCyjGQaeUHGXLa5zdEF8nJQMLhKpZMdqvVZaNrX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 745,
								"contract": "contracts/memetoken.sol:DeflationaryToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 751,
								"contract": "contracts/memetoken.sol:DeflationaryToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 758,
								"contract": "contracts/memetoken.sol:DeflationaryToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n   --> @openzeppelin/contracts/utils/Address.sol:200:30:\n    |\n200 |     ) internal view returns (bytes memory) {\n    |                              ^^^^^^^^^^^^\n\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 7863,
					"file": "@openzeppelin/contracts/utils/Address.sol",
					"start": 7851
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n   --> @openzeppelin/contracts/utils/Address.sol:223:30:\n    |\n223 |     ) internal pure returns (bytes memory) {\n    |                              ^^^^^^^^^^^^\n\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 8678,
					"file": "@openzeppelin/contracts/utils/Address.sol",
					"start": 8666
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2668:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2682:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2694:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2728:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:0"
									},
									"scope": 77,
									"src": "2646:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2534:0"
						}
					],
					"src": "106:2631:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							407
						]
					},
					"id": 408,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:1",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 407,
							"linearizedBaseContracts": [
								407
							],
							"name": "Address",
							"nameLocation": "202:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 94,
										"nodeType": "Block",
										"src": "1478:254:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 88,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "1702:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1702:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 90,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1702:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 91,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1724:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1702:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 87,
												"id": 93,
												"nodeType": "Return",
												"src": "1695:30:1"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "216:1191:1",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 95,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1421:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1440:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "1432:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:17:1"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "1472:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 85,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1472:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:6:1"
									},
									"scope": 407,
									"src": "1412:320:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "2718:241:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 106,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2744:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$407",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$407",
																				"typeString": "library Address"
																			}
																		],
																		"id": 105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2736:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 104,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2736:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2736:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2736:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 109,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 100,
																"src": "2761:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2736:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2769:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 103,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2728:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2728:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "2728:73:1"
											},
											{
												"assignments": [
													115,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 115,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2818:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 128,
														"src": "2813:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 114,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2813:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 122,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2861:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 116,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "2831:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2831:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 118,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 100,
																"src": "2853:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2831:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2831:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2812:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 124,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "2882:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2891:60:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 123,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2874:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2874:78:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "2874:78:1"
											}
										]
									},
									"documentation": {
										"id": 96,
										"nodeType": "StructuredDocumentation",
										"src": "1738:904:1",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2656:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2682:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2666:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2666:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2701:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2693:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:43:1"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2718:0:1"
									},
									"scope": 407,
									"src": "2647:312:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "3790:96:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 140,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "3829:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 141,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "3837:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 142,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3843:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3846:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 139,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															187,
															231
														],
														"referencedDeclaration": 231,
														"src": "3807:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3807:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 138,
												"id": 145,
												"nodeType": "Return",
												"src": "3800:79:1"
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "2965:731:1",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3710:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3731:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "3723:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3723:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3752:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "3739:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 133,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3739:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3722:35:1"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "3776:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 136,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3776:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:14:1"
									},
									"scope": 407,
									"src": "3701:185:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "4255:76:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 160,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4294:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 161,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4302:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 162,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4308:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 163,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "4311:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 159,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															187,
															231
														],
														"referencedDeclaration": 231,
														"src": "4272:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4272:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 158,
												"id": 165,
												"nodeType": "Return",
												"src": "4265:59:1"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "3892:211:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4117:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4139:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4163:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 151,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4204:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4190:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 153,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4190:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:93:1"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4241:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 156,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4241:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4240:14:1"
									},
									"scope": 407,
									"src": "4108:223:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 186,
										"nodeType": "Block",
										"src": "4806:111:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 180,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "4845:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 181,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "4853:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 182,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "4859:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4866:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 179,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															187,
															231
														],
														"referencedDeclaration": 231,
														"src": "4823:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:87:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 178,
												"id": 185,
												"nodeType": "Return",
												"src": "4816:94:1"
											}
										]
									},
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "4337:351:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4702:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4732:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "4724:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4724:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4753:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "4740:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 171,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4740:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4767:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "4759:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4759:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4723:50:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "4792:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 176,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4792:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4791:14:1"
									},
									"scope": 407,
									"src": "4693:224:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "5344:267:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 204,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5370:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$407",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$407",
																				"typeString": "library Address"
																			}
																		],
																		"id": 203,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5362:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 202,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5362:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5362:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5362:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 207,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 194,
																"src": "5387:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5362:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5394:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 201,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5354:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5354:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "5354:81:1"
											},
											{
												"assignments": [
													213,
													215
												],
												"declarations": [
													{
														"constant": false,
														"id": 213,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5451:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 230,
														"src": "5446:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 212,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5446:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 215,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5473:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 230,
														"src": "5460:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 214,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5460:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 222,
												"initialValue": {
													"arguments": [
														{
															"id": 220,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5513:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 216,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "5487:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5487:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 218,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 194,
																"src": "5506:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5487:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5487:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5445:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 224,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "5562:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 225,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "5570:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 226,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "5579:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 227,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "5591:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 223,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "5535:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5535:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 200,
												"id": 229,
												"nodeType": "Return",
												"src": "5528:76:1"
											}
										]
									},
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "4923:237:1",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5174:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5213:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "5205:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5242:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "5229:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 191,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5229:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5264:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "5256:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5256:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5293:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "5279:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 195,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5279:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5195:116:1"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "5330:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 198,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5330:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5329:14:1"
									},
									"scope": 407,
									"src": "5165:446:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 247,
										"nodeType": "Block",
										"src": "5888:97:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 242,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "5924:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 243,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "5932:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5938:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 241,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															248,
															277
														],
														"referencedDeclaration": 277,
														"src": "5905:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5905:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 240,
												"id": 246,
												"nodeType": "Return",
												"src": "5898:80:1"
											}
										]
									},
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "5617:166:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5797:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5824:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "5816:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5816:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5845:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "5832:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 235,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5832:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5815:35:1"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "5874:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5874:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5873:14:1"
									},
									"scope": 407,
									"src": "5788:197:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "6327:168:1",
										"statements": [
											{
												"assignments": [
													261,
													263
												],
												"declarations": [
													{
														"constant": false,
														"id": 261,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6343:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 276,
														"src": "6338:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 260,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6338:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 263,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6365:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 276,
														"src": "6352:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 262,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6352:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 268,
												"initialValue": {
													"arguments": [
														{
															"id": 266,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "6397:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 264,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "6379:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6379:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6379:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6337:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 270,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "6446:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 271,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6454:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 272,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "6463:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 273,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "6475:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 269,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "6419:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6419:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 259,
												"id": 275,
												"nodeType": "Return",
												"src": "6412:76:1"
											}
										]
									},
									"documentation": {
										"id": 249,
										"nodeType": "StructuredDocumentation",
										"src": "5991:173:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6178:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6214:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "6206:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6206:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6243:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "6230:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 252,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6230:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6271:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "6257:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 254,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6196:93:1"
									},
									"returnParameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "6313:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 257,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6313:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6312:14:1"
									},
									"scope": 407,
									"src": "6169:326:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6771:101:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 288,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "6809:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 289,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "6817:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6823:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 287,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															294,
															323
														],
														"referencedDeclaration": 323,
														"src": "6788:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6788:77:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 286,
												"id": 292,
												"nodeType": "Return",
												"src": "6781:84:1"
											}
										]
									},
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "6501:168:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6683:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6712:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6704:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6704:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6720:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 281,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6720:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6703:35:1"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6757:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 284,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6757:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6756:14:1"
									},
									"scope": 407,
									"src": "6674:198:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "7213:170:1",
										"statements": [
											{
												"assignments": [
													307,
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 307,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7229:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 322,
														"src": "7224:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 306,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7224:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7251:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 322,
														"src": "7238:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 308,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7238:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 314,
												"initialValue": {
													"arguments": [
														{
															"id": 312,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "7285:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 310,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "7265:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7265:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7265:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7223:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 316,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "7334:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 317,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "7342:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 318,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "7351:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 319,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "7363:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 315,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "7307:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7307:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 305,
												"id": 321,
												"nodeType": "Return",
												"src": "7300:76:1"
											}
										]
									},
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "6878:175:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7067:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7105:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "7097:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7097:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7134:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "7121:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 298,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7121:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7162:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "7148:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 300,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7148:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7087:93:1"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "7199:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 303,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7199:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7198:14:1"
									},
									"scope": 407,
									"src": "7058:325:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 361,
										"nodeType": "Block",
										"src": "7865:434:1",
										"statements": [
											{
												"condition": {
													"id": 337,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 328,
													"src": "7879:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 359,
													"nodeType": "Block",
													"src": "8235:58:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 355,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 330,
																		"src": "8257:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 356,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 332,
																		"src": "8269:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 354,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "8249:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8249:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 358,
															"nodeType": "ExpressionStatement",
															"src": "8249:33:1"
														}
													]
												},
												"id": 360,
												"nodeType": "IfStatement",
												"src": "7875:418:1",
												"trueBody": {
													"id": 353,
													"nodeType": "Block",
													"src": "7888:341:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 338,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 330,
																		"src": "7906:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7906:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 340,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7927:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7906:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 350,
															"nodeType": "IfStatement",
															"src": "7902:286:1",
															"trueBody": {
																"id": 349,
																"nodeType": "Block",
																"src": "7930:258:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 344,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 326,
																							"src": "8132:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 343,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 95,
																						"src": "8121:10:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 345,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8121:18:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 346,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8141:31:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 342,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8113:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 347,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8113:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 348,
																		"nodeType": "ExpressionStatement",
																		"src": "8113:60:1"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 351,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 330,
																"src": "8208:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 336,
															"id": 352,
															"nodeType": "Return",
															"src": "8201:17:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "7389:277:1",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7680:26:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7724:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "7716:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7716:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7745:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "7740:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 327,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7740:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7775:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "7762:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 329,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7762:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7809:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "7795:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 331,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7795:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:121:1"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "7851:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 334,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7851:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7850:14:1"
									},
									"scope": 407,
									"src": "7671:628:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "8680:135:1",
										"statements": [
											{
												"condition": {
													"id": 374,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 365,
													"src": "8694:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 383,
													"nodeType": "Block",
													"src": "8751:58:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 379,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 367,
																		"src": "8773:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 380,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 369,
																		"src": "8785:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 378,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "8765:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8765:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 382,
															"nodeType": "ExpressionStatement",
															"src": "8765:33:1"
														}
													]
												},
												"id": 384,
												"nodeType": "IfStatement",
												"src": "8690:119:1",
												"trueBody": {
													"id": 377,
													"nodeType": "Block",
													"src": "8703:42:1",
													"statements": [
														{
															"expression": {
																"id": 375,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 367,
																"src": "8724:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 373,
															"id": 376,
															"nodeType": "Return",
															"src": "8717:17:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "8305:210:1",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8529:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8560:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "8555:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8555:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8590:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "8577:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 366,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8577:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8624:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "8610:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 368,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8610:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8545:97:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "8666:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 371,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8666:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8665:14:1"
									},
									"scope": 407,
									"src": "8520:295:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 405,
										"nodeType": "Block",
										"src": "8904:457:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 393,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "8980:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8980:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9000:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8980:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 403,
													"nodeType": "Block",
													"src": "9310:45:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 400,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 390,
																		"src": "9331:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 399,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9324:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9324:20:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 402,
															"nodeType": "ExpressionStatement",
															"src": "9324:20:1"
														}
													]
												},
												"id": 404,
												"nodeType": "IfStatement",
												"src": "8976:379:1",
												"trueBody": {
													"id": 398,
													"nodeType": "Block",
													"src": "9003:301:1",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9161:133:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9179:40:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9208:10:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9202:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9202:17:1"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "9183:15:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9247:2:1",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9251:10:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9243:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9243:19:1"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9264:15:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9236:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9236:44:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9236:44:1"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 388,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9208:10:1",
																	"valueSize": 1
																},
																{
																	"declaration": 388,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9251:10:1",
																	"valueSize": 1
																}
															],
															"id": 397,
															"nodeType": "InlineAssembly",
															"src": "9152:142:1"
														}
													]
												}
											}
										]
									},
									"id": 406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8830:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8851:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "8838:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 387,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8838:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8877:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "8863:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 389,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8863:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8837:53:1"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8904:0:1"
									},
									"scope": 407,
									"src": "8821:540:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 408,
							"src": "194:9169:1"
						}
					],
					"src": "101:9263:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							719
						]
					},
					"id": 720,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 409,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 410,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:2",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 719,
							"linearizedBaseContracts": [
								719
							],
							"name": "SafeMath",
							"nameLocation": "490:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "717:140:2",
										"statements": [
											{
												"id": 440,
												"nodeType": "UncheckedBlock",
												"src": "727:124:2",
												"statements": [
													{
														"assignments": [
															423
														],
														"declarations": [
															{
																"constant": false,
																"id": 423,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 440,
																"src": "751:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 422,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 427,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 424,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 413,
																"src": "763:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 425,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "767:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 428,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "786:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 429,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 413,
																"src": "790:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 435,
														"nodeType": "IfStatement",
														"src": "782:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 432,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 433,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 421,
															"id": 434,
															"nodeType": "Return",
															"src": "793:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 437,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 423,
																	"src": "838:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 438,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 421,
														"id": 439,
														"nodeType": "Return",
														"src": "824:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:2",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "657:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "668:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:2"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "702:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 417,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "708:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:2"
									},
									"scope": 719,
									"src": "641:216:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 469,
										"nodeType": "Block",
										"src": "1078:113:2",
										"statements": [
											{
												"id": 468,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 454,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "1116:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 455,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "1120:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 461,
														"nodeType": "IfStatement",
														"src": "1112:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 459,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 453,
															"id": 460,
															"nodeType": "Return",
															"src": "1123:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 463,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 445,
																		"src": "1168:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 464,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 447,
																		"src": "1172:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 466,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 453,
														"id": 467,
														"nodeType": "Return",
														"src": "1154:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:2",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 470,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "1018:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "1029:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:2"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "1063:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 449,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "1069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:2"
									},
									"scope": 719,
									"src": "1002:189:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "1415:417:2",
										"statements": [
											{
												"id": 510,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 482,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 473,
																"src": "1683:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 489,
														"nodeType": "IfStatement",
														"src": "1679:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 485,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 486,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 487,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 481,
															"id": 488,
															"nodeType": "Return",
															"src": "1691:16:2"
														}
													},
													{
														"assignments": [
															491
														],
														"declarations": [
															{
																"constant": false,
																"id": 491,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 510,
																"src": "1721:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 490,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 495,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 492,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 473,
																"src": "1733:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 493,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 475,
																"src": "1737:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 496,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 491,
																	"src": "1756:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 497,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 473,
																	"src": "1760:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 499,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 475,
																"src": "1765:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 505,
														"nodeType": "IfStatement",
														"src": "1752:33:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 503,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 481,
															"id": 504,
															"nodeType": "Return",
															"src": "1768:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 507,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 491,
																	"src": "1813:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 508,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 481,
														"id": 509,
														"nodeType": "Return",
														"src": "1799:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:2",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "1355:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "1366:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:2"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "1400:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 477,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "1406:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:2"
									},
									"scope": 719,
									"src": "1339:493:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "2057:114:2",
										"statements": [
											{
												"id": 538,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 524,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 517,
																"src": "2095:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 525,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 531,
														"nodeType": "IfStatement",
														"src": "2091:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 529,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 523,
															"id": 530,
															"nodeType": "Return",
															"src": "2103:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 533,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 515,
																		"src": "2148:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 534,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 517,
																		"src": "2152:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 536,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 523,
														"id": 537,
														"nodeType": "Return",
														"src": "2134:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:2",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "1997:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "2008:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:2"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "2042:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 519,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "2048:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:2"
									},
									"scope": 719,
									"src": "1981:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 567,
										"nodeType": "Block",
										"src": "2406:114:2",
										"statements": [
											{
												"id": 566,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 552,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "2444:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 559,
														"nodeType": "IfStatement",
														"src": "2440:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 557,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 551,
															"id": 558,
															"nodeType": "Return",
															"src": "2452:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 560,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 561,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 543,
																		"src": "2497:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 562,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "2501:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 564,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 551,
														"id": 565,
														"nodeType": "Return",
														"src": "2483:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2346:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2357:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:2"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2391:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 547,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2397:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:2"
									},
									"scope": 719,
									"src": "2330:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 582,
										"nodeType": "Block",
										"src": "2822:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 571,
														"src": "2839:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 579,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "2843:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 577,
												"id": 581,
												"nodeType": "Return",
												"src": "2832:12:2"
											}
										]
									},
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:2",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "2768:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "2779:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:2"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "2813:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:2"
									},
									"scope": 719,
									"src": "2755:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 597,
										"nodeType": "Block",
										"src": "3189:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 593,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 586,
														"src": "3206:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 594,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "3210:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 592,
												"id": 596,
												"nodeType": "Return",
												"src": "3199:12:2"
											}
										]
									},
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "3135:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "3146:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:2"
									},
									"returnParameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "3180:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:2"
									},
									"scope": 719,
									"src": "3122:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 612,
										"nodeType": "Block",
										"src": "3532:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 608,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "3549:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 609,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "3553:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 607,
												"id": 611,
												"nodeType": "Return",
												"src": "3542:12:2"
											}
										]
									},
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:2",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "3478:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "3489:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:2"
									},
									"returnParameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "3523:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:2"
									},
									"scope": 719,
									"src": "3465:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "3917:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 623,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 616,
														"src": "3934:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 624,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "3938:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 622,
												"id": 626,
												"nodeType": "Return",
												"src": "3927:12:2"
											}
										]
									},
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "3863:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "3874:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:2"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "3908:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:2"
									},
									"scope": 719,
									"src": "3850:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 642,
										"nodeType": "Block",
										"src": "4466:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 638,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "4483:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 639,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "4487:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 637,
												"id": 641,
												"nodeType": "Return",
												"src": "4476:12:2"
											}
										]
									},
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "4412:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "4423:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:2"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "4457:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:2"
									},
									"scope": 719,
									"src": "4399:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 667,
										"nodeType": "Block",
										"src": "5054:106:2",
										"statements": [
											{
												"id": 666,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 656,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 648,
																		"src": "5096:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 657,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 646,
																		"src": "5101:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 659,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 650,
																	"src": "5104:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 655,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 661,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 662,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 646,
																"src": "5138:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 663,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 648,
																"src": "5142:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 654,
														"id": 665,
														"nodeType": "Return",
														"src": "5131:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 644,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "4972:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "4983:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "4994:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 649,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:2"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "5045:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:2"
									},
									"scope": 719,
									"src": "4959:201:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 692,
										"nodeType": "Block",
										"src": "5739:105:2",
										"statements": [
											{
												"id": 691,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 681,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 673,
																		"src": "5781:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 684,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "5788:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 680,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 686,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 687,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 671,
																"src": "5822:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 688,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 673,
																"src": "5826:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 679,
														"id": 690,
														"nodeType": "Return",
														"src": "5815:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 669,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "5657:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "5668:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "5679:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 674,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:2"
									},
									"returnParameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "5730:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:2"
									},
									"scope": 719,
									"src": "5644:200:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "6585:105:2",
										"statements": [
											{
												"id": 716,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 706,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 698,
																		"src": "6627:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 709,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 700,
																	"src": "6634:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 705,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 711,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 712,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 696,
																"src": "6668:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 713,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 698,
																"src": "6672:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 704,
														"id": 715,
														"nodeType": "Return",
														"src": "6661:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6503:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6514:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6525:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 699,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:2"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6576:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:2"
									},
									"scope": 719,
									"src": "6490:200:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 720,
							"src": "482:6210:2"
						}
					],
					"src": "107:6586:2"
				},
				"id": 2
			},
			"contracts/memetoken.sol": {
				"ast": {
					"absolutePath": "contracts/memetoken.sol",
					"exportedSymbols": {
						"Address": [
							407
						],
						"DeflationaryToken": [
							1191
						],
						"IERC20": [
							77
						],
						"SafeMath": [
							719
						]
					},
					"id": 1192,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 721,
							"literals": [
								"solidity",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "35:22:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 722,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1192,
							"sourceUnit": 720,
							"src": "61:57:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 723,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1192,
							"sourceUnit": 408,
							"src": "120:51:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 724,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1192,
							"sourceUnit": 78,
							"src": "173:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 725,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "263:6:3"
									},
									"id": 726,
									"nodeType": "InheritanceSpecifier",
									"src": "263:6:3"
								}
							],
							"contractDependencies": [
								77
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1191,
							"linearizedBaseContracts": [
								1191,
								77
							],
							"name": "DeflationaryToken",
							"nameLocation": "242:17:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 729,
									"libraryName": {
										"id": 727,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 719,
										"src": "283:8:3"
									},
									"nodeType": "UsingForDirective",
									"src": "277:27:3",
									"typeName": {
										"id": 728,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "296:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 732,
									"libraryName": {
										"id": 730,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 407,
										"src": "316:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "310:26:3",
									"typeName": {
										"id": 731,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "328:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "06fdde03",
									"id": 735,
									"mutability": "constant",
									"name": "name",
									"nameLocation": "367:4:3",
									"nodeType": "VariableDeclaration",
									"scope": 1191,
									"src": "344:57:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 733,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "344:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "5b544553545d204465666c6174696f6e61727920546f6b656e",
										"id": 734,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "374:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_e4bcde43d8ff98a4dff5e493e39c594a2941d0731b0e22f56bb657571a34f339",
											"typeString": "literal_string \"[TEST] Deflationary Token\""
										},
										"value": "[TEST] Deflationary Token"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "95d89b41",
									"id": 738,
									"mutability": "constant",
									"name": "symbol",
									"nameLocation": "431:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 1191,
									"src": "408:39:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 736,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "408:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4446543034",
										"id": 737,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "440:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_02fcf642dce579201ecb59e604044b6f63d12a26322c9fa2c958fd8b381c392a",
											"typeString": "literal_string \"DFT04\""
										},
										"value": "DFT04"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "313ce567",
									"id": 741,
									"mutability": "constant",
									"name": "decimals",
									"nameLocation": "476:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 1191,
									"src": "454:35:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 739,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "454:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 740,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "487:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 745,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "534:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1191,
									"src": "498:45:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 744,
										"keyType": {
											"id": 742,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "506:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "498:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 743,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "517:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 751,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "607:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 1191,
									"src": "550:68:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 750,
										"keyType": {
											"id": 746,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "558:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "550:48:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 749,
											"keyType": {
												"id": 747,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "578:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "569:28:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 748,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "589:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 758,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "643:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 1191,
									"src": "627:50:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 752,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "627:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										},
										"id": 757,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31303030303030303030",
											"id": 753,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "658:10:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											},
											"value": "1000000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 756,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 754,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "671:2:3",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 755,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "675:2:3",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "671:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "658:19:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "472a0b2a",
									"id": 761,
									"mutability": "constant",
									"name": "burnAddress1",
									"nameLocation": "710:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 1191,
									"src": "686:81:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 759,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "686:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303064456144",
										"id": 760,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "725:42:3",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x000000000000000000000000000000000000dEaD"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "311e6703",
									"id": 764,
									"mutability": "constant",
									"name": "burnAddress2",
									"nameLocation": "798:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 1191,
									"src": "774:81:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 762,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "774:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
										"id": 763,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "813:42:3",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x0000000000000000000000000000000000000000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "d4698016",
									"id": 767,
									"mutability": "constant",
									"name": "liquidityWallet",
									"nameLocation": "886:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 1191,
									"src": "862:84:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 765,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "862:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307832433630346439453135653635323446306242326132413232463633613743613034316538344333",
										"id": 766,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "904:42:3",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x2C604d9E15e6524F0bB2a2A22F63a7Ca041e84C3"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "4626402b",
									"id": 770,
									"mutability": "constant",
									"name": "treasuryWallet",
									"nameLocation": "977:14:3",
									"nodeType": "VariableDeclaration",
									"scope": 1191,
									"src": "953:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 768,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "953:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307863433565303433433531343230333361383030413732323836333536333137644163623537413737",
										"id": 769,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "994:42:3",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xcC5e043C5142033a800A72286356317dAcb57A77"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "98118cb4",
									"id": 773,
									"mutability": "constant",
									"name": "liquidityFee",
									"nameLocation": "1069:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 1191,
									"src": "1045:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 771,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1045:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3530",
										"id": 772,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1084:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "50"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "cc32d176",
									"id": 776,
									"mutability": "constant",
									"name": "treasuryFee",
									"nameLocation": "1117:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 1191,
									"src": "1093:40:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 774,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1093:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3930",
										"id": 775,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1131:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_90_by_1",
											"typeString": "int_const 90"
										},
										"value": "90"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "2b14ca56",
									"id": 779,
									"mutability": "constant",
									"name": "sellFee",
									"nameLocation": "1164:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1191,
									"src": "1140:36:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 777,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1140:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3330",
										"id": 778,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1174:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_30_by_1",
											"typeString": "int_const 30"
										},
										"value": "30"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "bed99850",
									"id": 782,
									"mutability": "constant",
									"name": "burnRate",
									"nameLocation": "1207:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 1191,
									"src": "1183:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 780,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1183:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3330",
										"id": 781,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1218:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_30_by_1",
											"typeString": "int_const 30"
										},
										"value": "30"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 800,
										"nodeType": "Block",
										"src": "1244:127:3",
										"statements": [
											{
												"expression": {
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 785,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "1255:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 787,
														"indexExpression": {
															"id": 786,
															"name": "liquidityWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "1265:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1255:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 788,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "1284:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1255:41:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 790,
												"nodeType": "ExpressionStatement",
												"src": "1255:41:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1329:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1321:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 792,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1321:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1321:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 796,
															"name": "liquidityWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "1333:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 797,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "1350:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 791,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "1312:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1312:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 799,
												"nodeType": "EmitStatement",
												"src": "1307:56:3"
											}
										]
									},
									"id": 801,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1241:2:3"
									},
									"returnParameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1244:0:3"
									},
									"scope": 1191,
									"src": "1229:142:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 819,
										"nodeType": "Block",
										"src": "1441:96:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 814,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 745,
																"src": "1505:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 816,
															"indexExpression": {
																"id": 815,
																"name": "burnAddress2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 764,
																"src": "1515:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1505:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"baseExpression": {
																		"id": 809,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 745,
																		"src": "1476:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 811,
																	"indexExpression": {
																		"id": 810,
																		"name": "burnAddress1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 761,
																		"src": "1486:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1476:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 807,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 758,
																	"src": "1459:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 598,
																"src": "1459:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1459:41:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 598,
														"src": "1459:45:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1459:70:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 806,
												"id": 818,
												"nodeType": "Return",
												"src": "1452:77:3"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 820,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1388:11:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 803,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1414:8:3"
									},
									"parameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1399:2:3"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "1432:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:9:3"
									},
									"scope": 1191,
									"src": "1379:158:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										34
									],
									"body": {
										"id": 832,
										"nodeType": "Block",
										"src": "1620:44:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 828,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 745,
														"src": "1638:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 830,
													"indexExpression": {
														"id": 829,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "1648:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1638:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 827,
												"id": 831,
												"nodeType": "Return",
												"src": "1631:25:3"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 833,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1554:9:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 824,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1593:8:3"
									},
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1572:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "1564:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1564:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1563:17:3"
									},
									"returnParameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "1611:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1611:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1610:9:3"
									},
									"scope": 1191,
									"src": "1545:119:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "1764:83:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 844,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1190,
																"src": "1785:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1785:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 846,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "1799:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 847,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "1810:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 843,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "1775:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1775:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 849,
												"nodeType": "ExpressionStatement",
												"src": "1775:42:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1835:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 842,
												"id": 851,
												"nodeType": "Return",
												"src": "1828:11:3"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1681:8:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 839,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1740:8:3"
									},
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1698:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "1690:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1690:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1717:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "1709:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1709:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1689:35:3"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "1758:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 840,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1758:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1757:6:3"
									},
									"scope": 1191,
									"src": "1672:175:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										54
									],
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "1953:53:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 863,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "1971:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 865,
														"indexExpression": {
															"id": 864,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "1983:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1971:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 867,
													"indexExpression": {
														"id": 866,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 857,
														"src": "1990:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1971:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 862,
												"id": 868,
												"nodeType": "Return",
												"src": "1964:34:3"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1864:9:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 859,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1926:8:3"
									},
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1882:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "1874:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1897:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "1889:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1889:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1873:32:3"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "1944:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1944:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1943:9:3"
									},
									"scope": 1191,
									"src": "1855:151:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										64
									],
									"body": {
										"id": 889,
										"nodeType": "Block",
										"src": "2103:80:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 881,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1190,
																"src": "2123:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2123:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 883,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "2137:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 884,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "2146:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 880,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1181,
														"src": "2114:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2114:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 886,
												"nodeType": "ExpressionStatement",
												"src": "2114:39:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2171:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 879,
												"id": 888,
												"nodeType": "Return",
												"src": "2164:11:3"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2023:7:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 876,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2079:8:3"
									},
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2039:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "2031:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2031:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2056:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "2048:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2030:33:3"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "2097:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 877,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2097:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2096:6:3"
									},
									"scope": 1191,
									"src": "2014:169:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										76
									],
									"body": {
										"id": 925,
										"nodeType": "Block",
										"src": "2303:165:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 903,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "2324:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 904,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "2332:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 905,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "2343:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 902,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "2314:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2314:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 907,
												"nodeType": "ExpressionStatement",
												"src": "2314:36:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 909,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "2370:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 910,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1190,
																"src": "2378:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2378:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 919,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 896,
																	"src": "2430:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 912,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 751,
																			"src": "2392:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 914,
																		"indexExpression": {
																			"id": 913,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 892,
																			"src": "2404:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2392:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 917,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 915,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1190,
																			"src": "2412:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 916,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2412:12:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2392:33:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 598,
																"src": "2392:37:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2392:45:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 908,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1181,
														"src": "2361:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2361:77:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 922,
												"nodeType": "ExpressionStatement",
												"src": "2361:77:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2456:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 901,
												"id": 924,
												"nodeType": "Return",
												"src": "2449:11:3"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 926,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2200:12:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 898,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2279:8:3"
									},
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2221:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "2213:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2213:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2237:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "2229:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2229:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2256:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "2248:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2212:51:3"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "2297:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 899,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2297:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2296:6:3"
									},
									"scope": 1191,
									"src": "2191:277:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1136,
										"nodeType": "Block",
										"src": "2563:1567:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 936,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 930,
																"src": "2582:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2603:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2595:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 937,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2595:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 940,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2595:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2582:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2607:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 935,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2574:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2574:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 944,
												"nodeType": "ExpressionStatement",
												"src": "2574:71:3"
											},
											{
												"assignments": [
													946
												],
												"declarations": [
													{
														"constant": false,
														"id": 946,
														"mutability": "mutable",
														"name": "senderBalance",
														"nameLocation": "2666:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 1136,
														"src": "2658:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 945,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2658:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 950,
												"initialValue": {
													"baseExpression": {
														"id": 947,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 745,
														"src": "2682:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 949,
													"indexExpression": {
														"id": 948,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "2692:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2682:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2658:41:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 952,
																"name": "senderBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 946,
																"src": "2718:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 953,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 932,
																"src": "2735:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2718:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2743:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 951,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2710:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2710:74:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 957,
												"nodeType": "ExpressionStatement",
												"src": "2710:74:3"
											},
											{
												"assignments": [
													959
												],
												"declarations": [
													{
														"constant": false,
														"id": 959,
														"mutability": "mutable",
														"name": "liquidityAmount",
														"nameLocation": "2805:15:3",
														"nodeType": "VariableDeclaration",
														"scope": 1136,
														"src": "2797:23:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 958,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2797:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 967,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "313030",
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2852:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 962,
																	"name": "liquidityFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 773,
																	"src": "2834:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 960,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 932,
																	"src": "2823:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 613,
																"src": "2823:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2823:24:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 964,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 628,
														"src": "2823:28:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2797:59:3"
											},
											{
												"assignments": [
													969
												],
												"declarations": [
													{
														"constant": false,
														"id": 969,
														"mutability": "mutable",
														"name": "treasuryAmount",
														"nameLocation": "2875:14:3",
														"nodeType": "VariableDeclaration",
														"scope": 1136,
														"src": "2867:22:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 968,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2867:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 977,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "313030",
															"id": 975,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2920:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 972,
																	"name": "treasuryFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "2903:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 970,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 932,
																	"src": "2892:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 971,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 613,
																"src": "2892:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2892:23:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 974,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 628,
														"src": "2892:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2892:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2867:57:3"
											},
											{
												"assignments": [
													979
												],
												"declarations": [
													{
														"constant": false,
														"id": 979,
														"mutability": "mutable",
														"name": "sellAmount",
														"nameLocation": "2943:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 1136,
														"src": "2935:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 978,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2935:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 996,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 986,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 980,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 930,
																"src": "2956:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 981,
																"name": "burnAddress1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 761,
																"src": "2969:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2956:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 983,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 930,
																"src": "2985:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 984,
																"name": "burnAddress2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 764,
																"src": "2998:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2985:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "2956:54:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "30",
														"id": 994,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3044:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2956:89:3",
													"trueExpression": {
														"arguments": [
															{
																"hexValue": "313030",
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3037:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 989,
																		"name": "sellFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 779,
																		"src": "3024:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 987,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 932,
																		"src": "3013:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 613,
																	"src": "3013:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 990,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3013:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 628,
															"src": "3013:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 993,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3013:28:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2935:110:3"
											},
											{
												"assignments": [
													998
												],
												"declarations": [
													{
														"constant": false,
														"id": 998,
														"mutability": "mutable",
														"name": "burnAmount",
														"nameLocation": "3064:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 1136,
														"src": "3056:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 997,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3056:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1006,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "313030",
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3102:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1001,
																	"name": "burnRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "3088:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 999,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 932,
																	"src": "3077:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1000,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 613,
																"src": "3077:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3077:20:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1003,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 628,
														"src": "3077:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3077:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3056:50:3"
											},
											{
												"assignments": [
													1008
												],
												"declarations": [
													{
														"constant": false,
														"id": 1008,
														"mutability": "mutable",
														"name": "totalFee",
														"nameLocation": "3127:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 1136,
														"src": "3119:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1007,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3119:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1016,
												"initialValue": {
													"arguments": [
														{
															"id": 1014,
															"name": "sellAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "3178:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1011,
																	"name": "treasuryAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 969,
																	"src": "3158:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1009,
																	"name": "liquidityAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 959,
																	"src": "3138:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 583,
																"src": "3138:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3138:35:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1013,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 583,
														"src": "3138:39:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3138:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3119:70:3"
											},
											{
												"assignments": [
													1018
												],
												"declarations": [
													{
														"constant": false,
														"id": 1018,
														"mutability": "mutable",
														"name": "receiveAmount",
														"nameLocation": "3208:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 1136,
														"src": "3200:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1017,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3200:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1026,
												"initialValue": {
													"arguments": [
														{
															"id": 1024,
															"name": "burnAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "3249:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1021,
																	"name": "totalFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1008,
																	"src": "3235:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1019,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 932,
																	"src": "3224:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1020,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 598,
																"src": "3224:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3224:20:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1023,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 598,
														"src": "3224:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3224:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3200:60:3"
											},
											{
												"expression": {
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1027,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "3273:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1029,
														"indexExpression": {
															"id": 1028,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "3283:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3273:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1032,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 932,
																"src": "3311:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1030,
																"name": "senderBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 946,
																"src": "3293:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 598,
															"src": "3293:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1033,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3293:25:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3273:45:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1035,
												"nodeType": "ExpressionStatement",
												"src": "3273:45:3"
											},
											{
												"expression": {
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1036,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "3329:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1038,
														"indexExpression": {
															"id": 1037,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 930,
															"src": "3339:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3329:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1043,
																"name": "receiveAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1018,
																"src": "3377:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1039,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 745,
																	"src": "3352:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1041,
																"indexExpression": {
																	"id": 1040,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "3362:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3352:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 583,
															"src": "3352:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1044,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3352:39:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3329:62:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1046,
												"nodeType": "ExpressionStatement",
												"src": "3329:62:3"
											},
											{
												"expression": {
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1047,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "3402:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1049,
														"indexExpression": {
															"id": 1048,
															"name": "liquidityWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "3412:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3402:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1054,
																"name": "liquidityAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 959,
																"src": "3462:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1050,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 745,
																	"src": "3431:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1052,
																"indexExpression": {
																	"id": 1051,
																	"name": "liquidityWallet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "3441:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3431:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 583,
															"src": "3431:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1055,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3431:47:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3402:76:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1057,
												"nodeType": "ExpressionStatement",
												"src": "3402:76:3"
											},
											{
												"expression": {
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1058,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "3489:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1060,
														"indexExpression": {
															"id": 1059,
															"name": "treasuryWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "3499:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3489:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1065,
																"name": "treasuryAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 969,
																"src": "3547:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1061,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 745,
																	"src": "3517:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1063,
																"indexExpression": {
																	"id": 1062,
																	"name": "treasuryWallet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 770,
																	"src": "3527:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3517:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 583,
															"src": "3517:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1066,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3517:45:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3489:73:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1068,
												"nodeType": "ExpressionStatement",
												"src": "3489:73:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1069,
														"name": "sellAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "3579:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1070,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3592:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3579:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1101,
												"nodeType": "IfStatement",
												"src": "3575:206:3",
												"trueBody": {
													"id": 1100,
													"nodeType": "Block",
													"src": "3595:186:3",
													"statements": [
														{
															"expression": {
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1072,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 745,
																		"src": "3610:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1074,
																	"indexExpression": {
																		"id": 1073,
																		"name": "burnAddress1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 761,
																		"src": "3620:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3610:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"hexValue": "32",
																					"id": 1081,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3679:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					}
																				],
																				"expression": {
																					"id": 1079,
																					"name": "sellAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 979,
																					"src": "3664:10:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1080,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 628,
																				"src": "3664:14:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1082,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3664:17:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 1075,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 745,
																				"src": "3636:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1077,
																			"indexExpression": {
																				"id": 1076,
																				"name": "burnAddress1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 761,
																				"src": "3646:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3636:23:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1078,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 583,
																		"src": "3636:27:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1083,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3636:46:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3610:72:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1085,
															"nodeType": "ExpressionStatement",
															"src": "3610:72:3"
														},
														{
															"expression": {
																"id": 1098,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1086,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 745,
																		"src": "3697:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1088,
																	"indexExpression": {
																		"id": 1087,
																		"name": "burnAddress2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 764,
																		"src": "3707:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3697:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"hexValue": "32",
																					"id": 1095,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3766:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					}
																				],
																				"expression": {
																					"id": 1093,
																					"name": "sellAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 979,
																					"src": "3751:10:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1094,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 628,
																				"src": "3751:14:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1096,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3751:17:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 1089,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 745,
																				"src": "3723:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1091,
																			"indexExpression": {
																				"id": 1090,
																				"name": "burnAddress2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 764,
																				"src": "3733:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3723:23:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1092,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 583,
																		"src": "3723:27:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3723:46:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3697:72:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1099,
															"nodeType": "ExpressionStatement",
															"src": "3697:72:3"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1103,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "3807:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1104,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 930,
															"src": "3815:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1105,
															"name": "receiveAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1018,
															"src": "3826:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1102,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "3798:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3798:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1107,
												"nodeType": "EmitStatement",
												"src": "3793:47:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1108,
														"name": "totalFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "3855:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1109,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3866:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3855:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1124,
												"nodeType": "IfStatement",
												"src": "3851:168:3",
												"trueBody": {
													"id": 1123,
													"nodeType": "Block",
													"src": "3869:150:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1112,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 928,
																		"src": "3898:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1113,
																		"name": "liquidityWallet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 767,
																		"src": "3906:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1114,
																		"name": "liquidityAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 959,
																		"src": "3923:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1111,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "3889:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3889:50:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1116,
															"nodeType": "EmitStatement",
															"src": "3884:55:3"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1118,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 928,
																		"src": "3968:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1119,
																		"name": "treasuryWallet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 770,
																		"src": "3976:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1120,
																		"name": "treasuryAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 969,
																		"src": "3992:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1117,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "3959:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3959:48:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1122,
															"nodeType": "EmitStatement",
															"src": "3954:53:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1125,
														"name": "burnAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 998,
														"src": "4033:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1126,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4046:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4033:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1135,
												"nodeType": "IfStatement",
												"src": "4029:94:3",
												"trueBody": {
													"id": 1134,
													"nodeType": "Block",
													"src": "4049:74:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1129,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 928,
																		"src": "4078:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1130,
																		"name": "burnAddress1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 761,
																		"src": "4086:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1131,
																		"name": "burnAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 998,
																		"src": "4100:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1128,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "4069:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4069:42:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1133,
															"nodeType": "EmitStatement",
															"src": "4064:47:3"
														}
													]
												}
											}
										]
									},
									"id": 1137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "2485:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2503:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "2495:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2495:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2519:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "2511:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2511:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2538:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "2530:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2530:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2494:51:3"
									},
									"returnParameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2563:0:3"
									},
									"scope": 1191,
									"src": "2476:1654:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1180,
										"nodeType": "Block",
										"src": "4221:263:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1147,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1139,
																"src": "4240:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4257:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4249:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1148,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4249:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1151,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4249:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4240:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4261:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 1146,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4232:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4232:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1155,
												"nodeType": "ExpressionStatement",
												"src": "4232:68:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1157,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1141,
																"src": "4319:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4338:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4330:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1158,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4330:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4330:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4319:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4342:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 1156,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4311:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4311:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1165,
												"nodeType": "ExpressionStatement",
												"src": "4311:68:3"
											},
											{
												"expression": {
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1166,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 751,
																"src": "4392:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1169,
															"indexExpression": {
																"id": 1167,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1139,
																"src": "4404:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4392:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1170,
														"indexExpression": {
															"id": 1168,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "4411:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4392:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1171,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1143,
														"src": "4422:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4392:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1173,
												"nodeType": "ExpressionStatement",
												"src": "4392:36:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1175,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1139,
															"src": "4453:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1176,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "4460:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1177,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "4469:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1174,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "4444:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4444:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1179,
												"nodeType": "EmitStatement",
												"src": "4439:37:3"
											}
										]
									},
									"id": 1181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "4147:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4164:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "4156:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4156:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4179:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "4171:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4171:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4196:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "4188:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4188:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4155:48:3"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4221:0:3"
									},
									"scope": 1191,
									"src": "4138:346:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1189,
										"nodeType": "Block",
										"src": "4554:36:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1186,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4572:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4572:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1185,
												"id": 1188,
												"nodeType": "Return",
												"src": "4565:17:3"
											}
										]
									},
									"id": 1190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "4501:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4511:2:3"
									},
									"returnParameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "4545:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4545:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4544:9:3"
									},
									"scope": 1191,
									"src": "4492:98:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1192,
							"src": "233:4360:3"
						}
					],
					"src": "35:4560:3"
				},
				"id": 3
			}
		}
	}
}